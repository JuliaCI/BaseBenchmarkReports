cset: moving following pidspec: 18838
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.345011898 seconds)
loading group "string"... done (took 0.559083089 seconds)
loading group "linalg"... done (took 7.707721999 seconds)
loading group "parallel"... done (took 0.172817539 seconds)
loading group "find"... done (took 1.182419156 seconds)
loading group "tuple"... done (took 1.844080151 seconds)
loading group "dates"... done (took 1.271089595 seconds)
loading group "micro"... done (took 0.234389055 seconds)
loading group "io"... done (took 1.109068088 seconds)
loading group "scalar"... done (took 41.386625207 seconds)
loading group "sparse"... done (took 13.697247732 seconds)
loading group "broadcast"... done (took 1.043276466 seconds)
loading group "union"... done (took 14.493509953 seconds)
loading group "simd"... done (took 4.810057766 seconds)
loading group "random"... done (took 9.807822555 seconds)
loading group "problem"... done (took 2.007709187 seconds)
loading group "array"... done (took 22.839478645 seconds)
loading group "misc"... done (took 2.059020212 seconds)
loading group "sort"... done (took 3.465557299 seconds)
loading group "collection"... done (took 19.825729538 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.587935338 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144995205 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.15457024 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.133918496 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.212844414 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.160062143 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160109151 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.09955358 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.009982757 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.184448595 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.158184515 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.539838396 seconds)
done (took 5.321684431 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.224197231 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.098456936 seconds)
    (2/2) benchmarking "String"...
    done (took 0.107052598 seconds)
  done (took 0.9187534 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078652953 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.149303315 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09734568 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079596978 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098092796 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079383249 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097941345 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079455959 seconds)
  done (took 1.405736379 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.089374463 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.101069927 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08367637 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.100312455 seconds)
  done (took 1.099038145 seconds)
done (took 4.455725068 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.75231824 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.277569226 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205963079 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464465474 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.197695778 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.218554866 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677006622 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.356827354 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.263244208 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099944062 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144248677 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391097418 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138241347 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68967981 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.09023776 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125718735 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178652484 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.466177777 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082963742 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111234141 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.120231585 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144699282 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.134750892 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094114743 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.188675886 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082206883 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.195853773 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109081089 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.08067708 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.279901746 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.203085982 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.6968187 seconds)
  done (took 11.02875873 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.117051778 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139294408 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.101011826 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138134936 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135989285 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100825469 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084986615 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.0988263 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126174312 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178463156 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115241069 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.137786786 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096232385 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082835489 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11857278 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.25012647 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123836823 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101911985 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.104170981 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090459502 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142698597 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113904523 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109613156 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095227586 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167922974 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223516028 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113837522 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12904864 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098414788 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114985081 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145335295 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144353367 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095153152 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08066919 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174983119 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125416603 seconds)
  done (took 5.252386252 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.113035784 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190880285 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122203372 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.172223749 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080785621 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143762259 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095292338 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114129173 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258716796 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.117894721 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.50072941 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140608462 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100029408 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099357377 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082577965 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098242756 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.592415081 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.157369786 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.135414546 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096398957 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104669451 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.101481657 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.371443568 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085091312 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097681722 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084342465 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083615381 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16606624 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083919373 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.162527908 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12221966 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099989492 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117636054 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.216270764 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126209157 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117626634 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097204283 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078162455 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.192823812 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088620389 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.15799408 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098723461 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103797598 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137916492 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137149651 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094545472 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.082431624 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220468429 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081405414 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095898416 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098101997 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.953876705 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18112305 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078466446 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.104797465 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.079634143 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.313614237 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117851259 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081796871 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.097163439 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.273033534 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.211608201 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099771711 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082707294 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098869911 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083251541 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.389974484 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101325665 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.734783346 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085800003 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10806345 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084042624 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098740953 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104597154 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087210513 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116448647 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079695643 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099778308 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079783204 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097644469 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081164362 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108466329 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.2160925 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098479726 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079821791 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096575716 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11651187 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111576818 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100396276 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09618481 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115741592 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102888832 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098089375 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.117957587 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100251576 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107761317 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08398427 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144664946 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097316109 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.139733477 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.097273501 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126124439 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100663135 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115159247 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112384954 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099804516 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.168531098 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.077972904 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096713451 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078851413 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098639715 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078968449 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099858585 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081580263 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111190174 seconds)
  done (took 22.96708734 seconds)
done (took 41.081813914 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.339876798 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10836948 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.109130702 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108339335 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105614701 seconds)
  done (took 1.570545067 seconds)
done (took 2.335648167 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.297636208 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.177209177 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096815495 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.169393773 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094592698 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.166093297 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162236517 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094617038 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.222933733 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095263 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162906416 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077217214 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096236461 seconds)
  done (took 2.711717107 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097636856 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119143739 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085326152 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112391095 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076829936 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112144004 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093063263 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117829969 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111314749 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08616879 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094846973 seconds)
  done (took 1.869927679 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097581124 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11717862 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08510731 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113686274 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078847281 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111743039 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093404905 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119606798 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111987246 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087094388 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094259311 seconds)
  done (took 1.87264352 seconds)
done (took 7.210697509 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.093928558 seconds)
  done (took 0.854460482 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.953864256 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.903307954 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113570294 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.1509376 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.299808999 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.193533938 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.485584184 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126010608 seconds)
  done (took 11.200966634 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.118742834 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.118671906 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.104082301 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087843585 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.106130364 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082509908 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101126428 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100666067 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086523424 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102994113 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082640346 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.1045169 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102009461 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084731911 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103345508 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083445539 seconds)
  done (took 2.397654695 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121500571 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120237825 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108882214 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108792798 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087429692 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106087948 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10665828 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088830207 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103226748 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104239899 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091519283 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106994035 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104639071 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079413947 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107331034 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10928036 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086525984 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107650027 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106978594 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089857672 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107878197 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096086634 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087587858 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107123496 seconds)
  done (took 3.327727089 seconds)
done (took 18.542432539 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.165322541 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113126986 seconds)
  done (took 1.046251901 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.099264534 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116892533 seconds)
  done (took 0.990291072 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.102412654 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09996302 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.126748861 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113406724 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082483711 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09874374 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.123654669 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082834284 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098562058 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08070124 seconds)
  done (took 1.78550714 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086626961 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.114481001 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10345234 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095767725 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106815903 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095176387 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089375198 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099863104 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109850927 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.0781746 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103295627 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114901344 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087039021 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116994454 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.1063254 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083435177 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103819168 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099779003 seconds)
  done (took 2.571745201 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08359892 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.1010628 seconds)
  done (took 0.958338484 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085273898 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098003267 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083645816 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099809854 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094469687 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077911745 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095181193 seconds)
  done (took 1.410343528 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.491967628 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.13611963 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.264399894 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101636426 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103626247 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.30435363 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099161078 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084403496 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105218394 seconds)
  done (took 2.5230522 seconds)
done (took 12.0555861 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.096952521 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.11890807 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115500431 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.475915261 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.110812397 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.102468039 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.149421977 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.259024315 seconds)
done (took 2.208034991 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.148449607 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.620824169 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.434993863 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.232390907 seconds)
  done (took 2.07142363 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.416765151 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.101668057 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085421952 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084402897 seconds)
  done (took 1.474899154 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083249356 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102541954 seconds)
  done (took 0.972141738 seconds)
done (took 5.455155814 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084218555 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099905091 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.112273741 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097901566 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079747435 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097204695 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.076962171 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.097756127 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079113529 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098669781 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096092094 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081579781 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.097271808 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081802042 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095572654 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079083525 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097704645 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078851287 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095090357 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081619945 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095274758 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08144306 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095700329 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078720219 seconds)
  done (took 2.985208241 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.104325253 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.102759463 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105946759 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089322767 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105443341 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088373871 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105396178 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098775247 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086776777 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102324722 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101397118 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086986709 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101022849 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085794558 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102971943 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104178956 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088942817 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100755091 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08463454 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.106982658 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105922918 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083627081 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.106180123 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106044833 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08802869 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105248277 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084991546 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.102527014 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105455986 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087698784 seconds)
  done (took 3.71745375 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088357894 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.097484528 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081350023 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105959827 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080571449 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.10072086 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080075491 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.099641419 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081112233 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097531986 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079148786 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096119509 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077900787 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098111109 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078810253 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100017471 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112774099 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07953935 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096348381 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078990036 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099796731 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078433862 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096692094 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078670378 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09627447 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078739208 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096433036 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078461909 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097286357 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078381287 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.09994471 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081645661 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09654171 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085257609 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101519152 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078395085 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.10114784 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077488335 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098066665 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.078564548 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.096119235 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096368274 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081042227 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104154214 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081162213 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100774139 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080668985 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099075695 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07946132 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100923165 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078309428 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.098332445 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082054739 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.100909468 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08324843 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.099026204 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098518652 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.081687713 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099753013 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.081558929 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.098630154 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080884616 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100511014 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081782938 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114907255 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086830882 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.099457708 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08215701 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.1012203 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082587639 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101964115 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094436757 seconds)
  done (took 7.331114476 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087169229 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110910095 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082504385 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102508591 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078351434 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099732939 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100604001 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080437219 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100023753 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085801644 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097643633 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079813779 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099413317 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108042827 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080540346 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099082677 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085584153 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095569991 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078824308 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101881787 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078879786 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101362437 seconds)
  done (took 2.833504436 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.21747671 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106451398 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143608562 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107380277 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084065702 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108844448 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102866534 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08899473 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.213680422 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083876669 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103197557 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103078831 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084168141 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102689262 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101156461 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086761081 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104230882 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085460942 seconds)
  done (took 2.826636501 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.097366193 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.102826322 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104429685 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103689421 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.102199649 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086717644 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109439113 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110141142 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085374325 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100492726 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091165469 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103756567 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102114609 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082518367 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103331745 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082689829 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102666575 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081639991 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110269305 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105748448 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087204994 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109981534 seconds)
  done (took 2.967163475 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100168236 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105018945 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.121786563 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087702905 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098549421 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082686321 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109832288 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082599796 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110177053 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101135569 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081745242 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099376938 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088542136 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101366229 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105326703 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082314279 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102013528 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081137153 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10284397 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07723356 seconds)
  done (took 2.722214885 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106939281 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105328672 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.103117718 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094962577 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104638526 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084586309 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111232418 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101339087 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08337418 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127888893 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101736697 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082667388 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110814065 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108515927 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100083191 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093278055 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111446691 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109936942 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082429966 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102324729 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126903011 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082727482 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111432434 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101525458 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082809747 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102686232 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100136478 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08936383 seconds)
  done (took 3.626025508 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085247262 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102306873 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.084961017 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099908667 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082065674 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099402599 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080692535 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097501876 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082411233 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097883112 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082370005 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099273961 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081696948 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099862212 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082176543 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099878909 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081893307 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098505872 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07970097 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098062221 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082053943 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100260675 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081210934 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098367181 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079548841 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101567017 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079341 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098433575 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081333743 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097984145 seconds)
  done (took 3.521732863 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.095417186 seconds)
    (2/2) benchmarking "in"...
    done (took 0.110577667 seconds)
  done (took 1.010146093 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.082356683 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119900774 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081139814 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104817227 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085832388 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.10179704 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109383605 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086877076 seconds)
  done (took 1.576606262 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.101207753 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115106847 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085734324 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115214639 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111253099 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098716939 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.173474248 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10407726 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087786169 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.101017447 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114705007 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081974611 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107702428 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082355707 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107747032 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088553205 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.102959361 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107600085 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085771874 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098987074 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084141038 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110511106 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084304184 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098912618 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102093995 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091835485 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114385759 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082675222 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105634551 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107918228 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088902533 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095074473 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082208811 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102707019 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080706069 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110783354 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118905832 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085831256 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112418535 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083351745 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113394833 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096824242 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087023066 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107400051 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110003067 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084230287 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101383472 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077958283 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098990492 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084536079 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096983772 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082215204 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096755642 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08951916 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105798362 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111602248 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081706858 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102828123 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085488479 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105529 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088972676 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104725491 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103411072 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083388271 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108785332 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087062692 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11333794 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077395393 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09660941 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098209162 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093794304 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125547708 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088070838 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102758443 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102840043 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081035911 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104714065 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084294887 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108504538 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106245415 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083440057 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109617145 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090439552 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102560547 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084658411 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111372893 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098975214 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084778321 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099462125 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118410148 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082417441 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098499386 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081182098 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112990862 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085989974 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102191796 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079542875 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109855466 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094099601 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08466335 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102303047 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083582528 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113561977 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107303632 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089954656 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110916394 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089393448 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102941345 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103998796 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080019013 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102756003 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08644152 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10901415 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076635484 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105626938 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082730314 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102490329 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110110467 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081285318 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102213302 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09063365 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108476696 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08064138 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098901875 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.10380004 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083868756 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10576524 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091479044 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100950159 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078369149 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098269534 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.10415341 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08377442 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.105381226 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089669004 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106999132 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077192166 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101431362 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106103746 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092846005 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101913625 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083151975 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10817981 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082940082 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102308507 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107866945 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086141457 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101513239 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088939863 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103463821 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077355613 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106111944 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103699564 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082447478 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104877788 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087661593 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104924462 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083520225 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100637663 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106500892 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084798826 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100987879 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082274285 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100890968 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093744088 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104678827 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096047008 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.081233125 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.111232713 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080300723 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10206978 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081283886 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105269354 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083418994 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100669537 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100341575 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085633471 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115133559 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087193919 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104106176 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107267496 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094504336 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101670412 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085140397 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102825047 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083674881 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104377544 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112972064 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.09162113 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111766326 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087714911 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.1038288 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111446385 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094785507 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.105675361 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.084006519 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.104520872 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090714356 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.112622565 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.10958456 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.088205278 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103692919 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086484121 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109663967 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087609126 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.106192928 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.103262918 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.091712312 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105058625 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093165199 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104282159 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112017652 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087641061 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097642223 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087050572 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100884057 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090294007 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099463067 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082679919 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.10403418 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.106464827 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085030958 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.108773676 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079627185 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11328 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093824686 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106554309 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084110204 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.107259966 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111907111 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088027175 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110416282 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089452752 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.113567888 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116899663 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085844794 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.109175579 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.098160477 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.10653404 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078948264 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.112645393 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.103848131 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.086654765 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.104067033 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084269569 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110094899 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095883265 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.113962373 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.0992211 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089024547 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.104247574 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084763611 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.101566008 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090901252 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109704236 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085834442 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113284644 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106602352 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.090258237 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110051048 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086331097 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10790402 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087383933 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107646557 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103574663 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086819629 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101348157 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086471072 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101880198 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081049972 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.10490785 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083315776 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.104268742 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108199754 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08410023 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102076525 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086367459 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104144565 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08323661 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103904258 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083684531 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109554554 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105268824 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.086433539 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.10828063 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.082512588 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113506448 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086275981 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114304621 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084201382 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100981364 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108405834 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086848165 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108647655 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084566657 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104554201 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.103487391 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083771864 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105462314 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090640325 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101220182 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094167119 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112851997 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103248328 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086830399 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103391167 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085558165 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102103788 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083869437 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10464568 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083755388 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104718122 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107090782 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087513947 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102849488 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08598494 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104362546 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084209824 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10533175 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077710129 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.10317375 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082617675 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.103867837 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113509509 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084797795 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106218137 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081589269 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104796108 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100239022 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080587547 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.112537367 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093815036 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.10478642 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110387183 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.083169185 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104640583 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094226866 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097847483 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.08012434 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.101399574 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.079933661 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.119932927 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103248473 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093930001 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104121716 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083167253 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100402438 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084256662 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102396231 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076787054 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.101931078 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106510908 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08680032 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10107866 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084509915 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106648787 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083655709 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114718506 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101552101 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085360069 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103383752 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080534308 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102095701 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081809923 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107363394 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084633787 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101669603 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080332986 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103791995 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102888147 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085572223 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.103069245 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085553192 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110029322 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083074874 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106484245 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106186474 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079425409 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104965915 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084151332 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103152601 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08295363 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107540371 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085873585 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105237426 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111927087 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083798664 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104046472 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08358863 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102153118 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08271642 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104403631 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102795062 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.083986454 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103507514 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09265157 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101370128 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086680971 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103980828 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083344625 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111523675 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103623441 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087096197 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112130775 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086238638 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105443673 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.11016191 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.08872056 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107121141 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084424845 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105666187 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108155046 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084482533 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108700693 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084543132 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10385591 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08513417 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.10188705 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083558329 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.10396301 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081521513 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.110489682 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104386076 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083515874 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102463918 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082451536 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.104368625 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087409837 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112899794 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105712434 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088499122 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098496566 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081085151 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105179619 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081699569 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105674518 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.087424618 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11104295 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104920198 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.08575897 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10290651 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093959813 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110580259 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087041577 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.102744907 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106955962 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.086764805 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.106014926 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085026865 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104905403 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085745801 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.109031875 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084903488 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.105016819 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110839392 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08847497 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10578978 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085643986 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.106190259 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084673071 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099877459 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084494144 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.107776268 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109423901 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086641242 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10438558 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095247145 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.104119582 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083574018 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109167551 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103180139 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.089006054 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099470576 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08562521 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106822554 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085523533 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100216112 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101570097 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08306491 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106248494 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083818472 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098914041 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095584544 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114251866 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106088897 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083727032 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102054083 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079872109 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099531666 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083409128 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105571116 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085950986 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11640388 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101669542 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085155579 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098814401 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084344618 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108110164 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.087661229 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.102477269 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.079579734 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.104046134 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086673501 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.111271405 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102508602 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.08462397 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108530715 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08781165 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102154871 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087704526 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.103033754 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106800946 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098808201 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105595828 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085322116 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111732269 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111827394 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.08646816 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099756746 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085659406 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107812933 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084707715 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106321656 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084519489 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121365264 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107606088 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083185276 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104394943 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086854669 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104352299 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111805928 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086466328 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105474227 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088607449 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.107792448 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113103624 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088856666 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113263825 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.087367574 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.108402225 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.082295197 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105705856 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101450151 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.08428439 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104736653 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086117404 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109732005 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112418972 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084343028 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115981979 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.093476085 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110659038 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080095368 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.104887581 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082932582 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.101769037 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107531534 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084049671 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102165138 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08311932 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103876619 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085477804 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111376654 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085366497 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107250555 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102672549 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079931951 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105390726 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088350042 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106117394 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.081962628 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105166629 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085772018 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.109404098 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10730253 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086655797 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105653222 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087424167 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104952974 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079934976 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.11170037 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083789404 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.10845348 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083154496 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106407073 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104841682 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089212309 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111369911 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086669037 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.10798083 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116878455 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088948452 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102265677 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083434898 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.110308043 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.083510159 seconds)
  done (took 58.826534362 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.153096224 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082666885 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10012752 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079815518 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11524934 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099942863 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081731795 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101143613 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081817444 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103947468 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080077887 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100648337 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109747353 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127048506 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094322807 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106127906 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078761396 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102093167 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099656213 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082328711 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111728547 seconds)
  done (took 2.950161788 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.110424716 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121069635 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117485121 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120384131 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091373949 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117602469 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116511907 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116468836 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100926753 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114289339 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120152426 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11665436 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092963334 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.114018656 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112001014 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093758092 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.121346604 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111867432 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118074451 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097092992 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115532192 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116956307 seconds)
  done (took 3.309346682 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.089736371 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106372612 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086853341 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099766839 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084101279 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.100085631 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088668825 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.103849832 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087042308 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.104701398 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082957831 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10461231 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.105237412 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080449421 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.104166644 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082979375 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154032332 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109430969 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083212231 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107339315 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078387832 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.108709946 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099417898 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081436381 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102893836 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089708684 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106667578 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.08205713 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105564663 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08294986 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104941647 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081242684 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.107379169 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104219644 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084622335 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102476781 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085132381 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104255743 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080548469 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102415848 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084892913 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.101440455 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085262011 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106909049 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082448817 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.104139808 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085834478 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.106674465 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.078835216 seconds)
  done (took 5.552876444 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.1096494 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162929512 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088131021 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144614519 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122868219 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114068226 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089004733 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144264649 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104998418 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083032133 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126109281 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123918803 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104778021 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090489695 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110314365 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104667692 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087293268 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105118239 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.089030323 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106593821 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110112556 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090932489 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122391254 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.121019512 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109735908 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084364656 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10581913 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.08861723 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.120354793 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111866292 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111160662 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092138068 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123370764 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.111603278 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08400742 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10988089 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123965015 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084435695 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10948822 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103174506 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087262432 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110883066 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111763073 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103956116 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108224411 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110373517 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08586764 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103446618 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119235819 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088711997 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116013988 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12336269 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088728399 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106893404 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110640887 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122156038 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086445588 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104656433 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088393237 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.12044421 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103043595 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08882829 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.122154435 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108071051 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092153857 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.122708859 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.112018336 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109081413 seconds)
  done (took 8.290262538 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099958443 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.116056732 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123052617 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122340986 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092862444 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.114161924 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113240783 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.092058932 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113574332 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119308231 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11180193 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13590023 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087753768 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117921727 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112074527 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091580737 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113406671 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112853945 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09213523 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11284725 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113070702 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121490665 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091708013 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122533001 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144865929 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107556582 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091281102 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113493685 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121787382 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111953408 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124153052 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092709077 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11340549 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122931922 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124318794 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091559696 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105830816 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112065576 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09290896 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113452762 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107094177 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102230347 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114968655 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10692554 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092228366 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113949367 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12240482 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12517102 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116224157 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097832009 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113254021 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123116043 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112463693 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092409537 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.12278696 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149723042 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123574214 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123178328 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112217707 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102523716 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123148509 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.13012514 seconds)
  done (took 7.821164673 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113671737 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.120947201 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119924976 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101095328 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084374138 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110565615 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083064511 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104155217 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11568867 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09632923 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120765342 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110852181 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093199623 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119677793 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110739386 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115107263 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089403144 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.11120466 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11568737 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089485652 seconds)
  done (took 2.996671748 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.098992347 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126876524 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085179864 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11451407 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109697823 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092574888 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.110121599 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108500675 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088122206 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109856349 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096700202 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118758012 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107863562 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092088606 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118730516 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114342901 seconds)
  done (took 2.567769824 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.105268166 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.122506065 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.122194334 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084836977 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.107247253 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081131135 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.108424397 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102046389 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082585557 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.123624415 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085015645 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111656584 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106300018 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084032077 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103000629 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088542423 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103501325 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083088495 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107502521 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121100764 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09707445 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106030301 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.085663786 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.109772473 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107102256 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091138975 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108275501 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104092434 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08486512 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107625302 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08660488 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114890282 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102597022 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085434188 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104799036 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08441738 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.107599234 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086235151 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110658149 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10523418 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085138689 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106425062 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085574407 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108717579 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080645077 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108283086 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080787842 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.113570587 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104029008 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086233281 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107202494 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087056567 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.109656085 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117341624 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089153529 seconds)
  done (took 6.366997119 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105432218 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11492214 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081093879 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105216225 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087990141 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109916527 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110256457 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089319301 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108790161 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083540124 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.11007271 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090808345 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109891844 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109977475 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088666772 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11078551 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081421145 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108927191 seconds)
  done (took 2.686723659 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096459956 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109791212 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093250022 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108488283 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085402318 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111268457 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080806781 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106570081 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104283651 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086336565 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106535901 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088111253 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105694443 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087838575 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108055402 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08594817 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110839131 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104166216 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086922581 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102629368 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088645075 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106023428 seconds)
  done (took 3.041117426 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.124700622 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.13309307 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093981396 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.236047006 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.105215195 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.134442683 seconds)
  done (took 1.704929495 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11505566 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123087192 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107416308 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108054639 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116766271 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086978327 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110313402 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110401976 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1190236 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103319598 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110316572 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119922843 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120223472 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098253725 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117019373 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11670393 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108171098 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090025262 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108167087 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129297137 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088833615 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120599571 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109675571 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088011295 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110546538 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119334569 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12006474 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102815762 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109880623 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119660326 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115163638 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089552866 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120177018 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125308292 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088952446 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121438112 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110271955 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130299256 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115276925 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098884979 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111171583 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116233485 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099591759 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116307072 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12070709 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108795948 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094896039 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111086987 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109205091 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136926391 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094791556 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120267069 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117221383 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118830702 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098812264 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137055872 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125870483 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119161703 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116839839 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124774031 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118200787 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096118884 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119577226 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12443124 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11632218 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098357768 seconds)
  done (took 8.277356526 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109231692 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12880086 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110312462 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12433602 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098013121 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110551907 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109154147 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088651937 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110903866 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10793137 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154018942 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089441713 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119932635 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11992783 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088028496 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110699883 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11002581 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118473885 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087523415 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13763006 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110784011 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119540109 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097053355 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119704835 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125416327 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116890291 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108239199 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090268917 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11035365 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087766653 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11632467 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110581738 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119937925 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087879278 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119869725 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11049103 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088446792 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116899764 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110413191 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11560542 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097826248 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131407376 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110709688 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108595431 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10327083 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111136778 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110547299 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08825472 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110740861 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107393606 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103981005 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12543506 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124982027 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119598668 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109495003 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089360494 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110968459 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109530676 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089636768 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11710985 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119571285 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087818531 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13708589 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111225613 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109896628 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119395613 seconds)
  done (took 8.170703642 seconds)
done (took 158.461815242 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.231323089 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.204879644 seconds)
  done (took 1.32052459 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.093247147 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.140306429 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095968634 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170899956 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085464434 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142418767 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139534605 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.099304333 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.109138223 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085979341 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108945985 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087761426 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173810398 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086203313 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.109830164 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108310877 seconds)
  done (took 2.725583638 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.124625476 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.236405419 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.127250115 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107124158 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091046589 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112304098 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084819263 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113917247 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089527523 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.10818266 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088695774 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.109052576 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084814153 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.108783511 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110827001 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089320532 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107188324 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089405897 seconds)
  done (took 2.87219341 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119553334 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15108174 seconds)
  done (took 1.166512342 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.250130593 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.164408512 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.23439537 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.480257698 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.281198204 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.369883402 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.206443849 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.217118358 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.167936271 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.212607975 seconds)
  done (took 3.472182222 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.125469216 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.186087505 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.320831149 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157222294 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.10730304 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.13185589 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158725521 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132844099 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.124173605 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.10155784 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.124313664 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.120129277 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139571906 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094696296 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116817938 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118010358 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121594008 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.116419761 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115863427 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096875552 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140500667 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085376275 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.118095547 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115496104 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098745916 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121720736 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10746871 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086417417 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.119021693 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094716613 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115442885 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.12756179 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119865563 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.158524606 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123561067 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.158236178 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119457983 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092749199 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116645559 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091412254 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120479711 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.121044694 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125178676 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098544253 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.107468979 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097548061 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107760011 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084765128 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117445562 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.120326909 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094010698 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115786824 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155691754 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121013662 seconds)
  done (took 7.503742707 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.798816533 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157765984 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090671265 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.886379584 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111979341 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127331841 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.776874093 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111926539 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256377826 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.754904267 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134191287 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096955234 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232523588 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259921238 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.959058541 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315243339 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.636880579 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126465609 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152279637 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155612535 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117722811 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116557193 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132538125 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.451809335 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117900914 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089688604 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119236669 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120186447 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161327879 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125477831 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092559645 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200467722 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251393559 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205277215 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095055784 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112128908 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088795748 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.192470139 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246185393 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217945836 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180449339 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109044616 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089524302 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123225826 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132402593 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08755717 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.186347901 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.176510522 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170543435 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116408625 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096620246 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121689835 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122425338 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164958087 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.123981744 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.32274057 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.315961447 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090822016 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12267208 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126361917 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242240723 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124422802 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228255137 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139347791 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191176326 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112748891 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783852533 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.171684271 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.0885713 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119158157 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120953508 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093589121 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122977587 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168076154 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.394092345 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124923433 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092629316 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112791292 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227840159 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104162579 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113560066 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163596611 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116882459 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098757121 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125616784 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123705752 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168968424 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.228415946 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123764258 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121127211 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092645263 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125893253 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117173688 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214094504 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221006025 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163681736 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209175095 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123474853 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163861673 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.193821883 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097846722 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196484622 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098229912 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126148225 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123058938 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219534005 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146151049 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102797241 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116934575 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119467057 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14944507 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105044439 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120233814 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.171761242 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.506361103 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170824912 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109760744 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106353285 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122013524 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161953007 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118967706 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265084204 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100739697 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.194288782 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097958802 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110861787 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120464328 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165300524 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121507925 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10060858 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123177238 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119042979 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.23750998 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218638382 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099381968 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244741302 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184998304 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118191622 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173035066 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122075887 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169066515 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119692478 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100087569 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11868647 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784088837 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102471654 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122480614 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115796844 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.196446428 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090985053 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125920294 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124761706 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087191428 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780211581 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127294731 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099750452 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.126411094 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118086054 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.09882369 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120128613 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117048834 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163706457 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232722301 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11907796 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099742485 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.127073184 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.162851363 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118198821 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125388952 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.104686697 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.127182099 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122793943 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092897044 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126268657 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169227309 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.186505781 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.198157838 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.600378971 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112010326 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103596362 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230614769 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113771672 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287907045 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098562618 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.227409402 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164319164 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122598208 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314282863 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166019516 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.19786189 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128573726 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173838112 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110593367 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.095794127 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.18895002 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089614807 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119378459 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164116671 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126636645 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123026057 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.935723488 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114260574 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226455886 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110928083 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171915118 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118782759 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098206947 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.299265522 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114029448 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127522897 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.166461447 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092651058 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.12659821 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.726104776 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101771048 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123837428 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11949295 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223430303 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16631285 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120669366 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097665919 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120516438 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163284402 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.231802081 seconds)
  done (took 44.243526795 seconds)
done (took 64.191104706 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.288004148 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219037576 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.272634609 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173074485 seconds)
  done (took 1.954186368 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.180668822 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151575368 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122908926 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109562749 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.152619641 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084532183 seconds)
  done (took 1.721617421 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.372856923 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.281903949 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24918995 seconds)
  done (took 1.827650886 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.329887589 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.252291076 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.476522831 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.32805896 seconds)
  done (took 2.414093345 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.221922544 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134944282 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112956081 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103692139 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.201362567 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248658357 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14413278 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203895622 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098645214 seconds)
  done (took 2.442416651 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.200519692 seconds)
done (took 11.480634438 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.25470283 seconds)
    (2/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.247709948 seconds)
    (3/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.255305867 seconds)
    (4/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.13185077 seconds)
    (5/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.215746575 seconds)
    (6/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.236905264 seconds)
    (7/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.122240826 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.101706353 seconds)
    (9/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.229226473 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.127857271 seconds)
    (11/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.126292457 seconds)
    (12/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.10472916 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122711197 seconds)
    (14/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.098441339 seconds)
    (15/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.182878854 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117043053 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.168925585 seconds)
    (18/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.164489088 seconds)
    (19/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.156063417 seconds)
    (20/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.18103597 seconds)
    (21/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.110139201 seconds)
    (22/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.117977605 seconds)
    (23/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.094493201 seconds)
    (24/309) benchmarking ("sort", Float64, false)...
    done (took 0.17231668 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.182141774 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.185199602 seconds)
    (27/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.092763839 seconds)
    (28/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.210119029 seconds)
    (29/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.229017241 seconds)
    (30/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.09042457 seconds)
    (31/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.12233449 seconds)
    (32/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.202654953 seconds)
    (33/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.199019301 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.257457682 seconds)
    (35/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.141209218 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093284503 seconds)
    (37/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.219362782 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.140871484 seconds)
    (39/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.202078952 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.174798893 seconds)
    (41/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.170952165 seconds)
    (42/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.182523073 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.149429615 seconds)
    (44/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.198867299 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.138476444 seconds)
    (46/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.09734571 seconds)
    (47/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.09621965 seconds)
    (48/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.0913595 seconds)
    (49/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.096210312 seconds)
    (50/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098525536 seconds)
    (51/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.106280434 seconds)
    (52/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.218804269 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094896792 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.116336986 seconds)
    (55/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.079049308 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.193815357 seconds)
    (57/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.20495778 seconds)
    (58/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.162293384 seconds)
    (59/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.124449238 seconds)
    (60/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.184052558 seconds)
    (61/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.092491475 seconds)
    (62/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.124890958 seconds)
    (63/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.076165158 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112676525 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.136654222 seconds)
    (66/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.06734347 seconds)
    (67/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065947199 seconds)
    (68/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.17441133 seconds)
    (69/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.159169413 seconds)
    (70/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.231326056 seconds)
    (71/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.175409665 seconds)
    (72/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.172298265 seconds)
    (73/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.096354411 seconds)
    (74/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.148461723 seconds)
    (75/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.088829674 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.118777184 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.137017741 seconds)
    (78/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.086971171 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.139639116 seconds)
    (80/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.093133914 seconds)
    (81/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.092697377 seconds)
    (82/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103805643 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.134779375 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.139702263 seconds)
    (85/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.192320053 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.1861579 seconds)
    (87/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.089525629 seconds)
    (88/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.175424445 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.08701592 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.152271752 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.152174567 seconds)
    (92/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.1318646 seconds)
    (93/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.121587585 seconds)
    (94/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067784629 seconds)
    (95/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.201611997 seconds)
    (96/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.175458119 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122425526 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.120602669 seconds)
    (99/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094567479 seconds)
    (100/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.11953534 seconds)
    (101/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.096942291 seconds)
    (102/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.117515454 seconds)
    (103/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.182957494 seconds)
    (104/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09425874 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.117391361 seconds)
    (106/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.097873235 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.139020811 seconds)
    (108/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.065712795 seconds)
    (109/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.142975343 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.134380437 seconds)
    (111/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.085550715 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136080949 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.110572774 seconds)
    (114/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.175171702 seconds)
    (115/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136778394 seconds)
    (116/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.097169475 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.333105232 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094772724 seconds)
    (119/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.106495884 seconds)
    (120/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.094621984 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.182108554 seconds)
    (122/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085033928 seconds)
    (123/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.175179982 seconds)
    (124/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.163957062 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.128243675 seconds)
    (126/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.20047229 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.195190128 seconds)
    (128/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.101795851 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.118442543 seconds)
    (130/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.118230212 seconds)
    (131/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107219955 seconds)
    (132/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.207971987 seconds)
    (133/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.176264408 seconds)
    (134/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.111660554 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087324973 seconds)
    (136/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116131608 seconds)
    (137/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.198788354 seconds)
    (138/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094496132 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.135213161 seconds)
    (140/309) benchmarking ("sort", Bool, false)...
    done (took 0.182066981 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095559952 seconds)
    (142/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.187580875 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093430254 seconds)
    (144/309) benchmarking ("sort", Int8, false)...
    done (took 0.214497532 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.109271817 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.112080245 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091980056 seconds)
    (148/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.113084264 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.092900852 seconds)
    (150/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.093292823 seconds)
    (151/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089189689 seconds)
    (152/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.091219464 seconds)
    (153/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069469531 seconds)
    (154/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137925456 seconds)
    (155/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100599244 seconds)
    (156/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.091023464 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.114315826 seconds)
    (158/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.1204115 seconds)
    (159/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066492762 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.11148631 seconds)
    (161/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066294251 seconds)
    (162/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.118088833 seconds)
    (163/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067580709 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.130542194 seconds)
    (165/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.10572752 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110844993 seconds)
    (167/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094361824 seconds)
    (168/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119194736 seconds)
    (169/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077405214 seconds)
    (170/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.091848733 seconds)
    (171/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.175581114 seconds)
    (172/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.094194758 seconds)
    (173/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095109721 seconds)
    (174/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.122602732 seconds)
    (175/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.092452906 seconds)
    (176/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136578402 seconds)
    (177/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.219201497 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067826037 seconds)
    (179/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.137573734 seconds)
    (180/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.141204013 seconds)
    (181/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100746741 seconds)
    (182/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.111463934 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.179326616 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.117877352 seconds)
    (185/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.139785132 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085651178 seconds)
    (187/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.10872181 seconds)
    (188/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067727563 seconds)
    (189/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.112070869 seconds)
    (190/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.078330518 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.197902984 seconds)
    (192/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.121616443 seconds)
    (193/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068974911 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093058599 seconds)
    (195/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.117612388 seconds)
    (196/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066536937 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.163049773 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119119902 seconds)
    (199/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.139259221 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.138107904 seconds)
    (201/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.100291977 seconds)
    (202/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.093064923 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08687744 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.215828909 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.158589762 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109890185 seconds)
    (207/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094588275 seconds)
    (208/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.12289639 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087084206 seconds)
    (210/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.090651328 seconds)
    (211/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.092457584 seconds)
    (212/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116875592 seconds)
    (213/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.069111078 seconds)
    (214/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.099779047 seconds)
    (215/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.149730525 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119649894 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.096385382 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.116997686 seconds)
    (219/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069105445 seconds)
    (220/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089032833 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.226430764 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.139882078 seconds)
    (223/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066153184 seconds)
    (224/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.093681277 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.183079093 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.164998736 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.118320846 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086953493 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.197658181 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.1106558 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068564792 seconds)
    (232/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067834791 seconds)
    (233/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.093105686 seconds)
    (234/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068796977 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.143866388 seconds)
    (236/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069220212 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.11073759 seconds)
    (238/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.06962208 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.190744106 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.113398927 seconds)
    (241/309) benchmarking ("sort", BigInt, false)...
    done (took 0.247629352 seconds)
    (242/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.06888597 seconds)
    (243/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085079292 seconds)
    (244/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.112270415 seconds)
    (245/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.088280902 seconds)
    (246/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.142588759 seconds)
    (247/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.120525018 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.090903111 seconds)
    (249/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.124449059 seconds)
    (250/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087177195 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.215948251 seconds)
    (252/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.115099647 seconds)
    (253/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.068168605 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.140194841 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086586771 seconds)
    (256/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.114567374 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.085903472 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.112619576 seconds)
    (259/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.06765385 seconds)
    (260/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.090719948 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.070192175 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086839854 seconds)
    (263/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.092631841 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093674583 seconds)
    (265/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.102218013 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.112289345 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.111693898 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086971941 seconds)
    (269/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.09324981 seconds)
    (270/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.089631489 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.122505924 seconds)
    (272/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.088245257 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.112825595 seconds)
    (274/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.077366861 seconds)
    (275/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.119508835 seconds)
    (276/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069926963 seconds)
    (277/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.075214373 seconds)
    (278/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.094279617 seconds)
    (279/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069046996 seconds)
    (280/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067461303 seconds)
    (281/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126693643 seconds)
    (282/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067880836 seconds)
    (283/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.092331837 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094983758 seconds)
    (285/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.101821496 seconds)
    (286/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.087585901 seconds)
    (287/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138103747 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085780928 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.135615012 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111323139 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.087288939 seconds)
    (292/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.113109944 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.131081639 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122556317 seconds)
    (295/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066807494 seconds)
    (296/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.112808375 seconds)
    (297/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.219606027 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093687885 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.112050235 seconds)
    (300/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068574805 seconds)
    (301/309) benchmarking ("sort", Float32, false)...
    done (took 0.176450736 seconds)
    (302/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.192057036 seconds)
    (303/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088895413 seconds)
    (304/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.092756577 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.094865448 seconds)
    (306/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067053198 seconds)
    (307/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.113557397 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.087546614 seconds)
    (309/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.094287612 seconds)
  done (took 40.06269745 seconds)
done (took 40.990250205 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.105898783 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150508608 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096212721 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138753443 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.126130862 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091766859 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120932643 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09752928 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125807248 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.127088467 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098933537 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094869286 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097902344 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123015999 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097864392 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141893435 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124918028 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094728289 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120832939 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086784715 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121318968 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086180882 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114570211 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069412538 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123688708 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094236883 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118558075 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120701365 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087888 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111079309 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091923978 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118389517 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087998933 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125551223 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093881884 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120932063 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097571508 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.123027247 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087900705 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113415653 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118747545 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.089209612 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118743682 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096142994 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117615226 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093987739 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120933084 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100452907 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.142162441 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116407925 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09707542 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122238755 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097145452 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119882197 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090800819 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121465929 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092781646 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.142529561 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.123238355 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093552463 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.122496151 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095771252 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.12028627 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095678981 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121997715 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122228222 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.10042694 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117784579 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097928346 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117930173 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087045787 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.121289716 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090510351 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.113515973 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096064277 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.124166646 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085892604 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.119107512 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117653221 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093563059 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.11104294 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090931291 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113851757 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09453324 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114042846 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071376189 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090274306 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118893637 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110558538 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097690899 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118734746 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09447671 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114202352 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099432813 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112134949 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092396361 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.114188522 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087424939 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115340709 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.09173487 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112560125 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08936906 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.122859997 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089200711 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.12002069 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123723802 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.08912826 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11839655 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088068443 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111163954 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10307943 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.123429846 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087688614 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119269408 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085711574 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.121512833 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086285683 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112963055 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086784404 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.113142671 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092991661 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.114109689 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089577562 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.122055295 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125900236 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088448832 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115226035 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09152909 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.11163762 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094610875 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.113287244 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087845073 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113984794 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079328527 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114227873 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088729347 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119794855 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090971705 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.121134312 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089808726 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121428108 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091785092 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.119423998 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092958123 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112521189 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075094428 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117731028 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09075881 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11463645 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087114853 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.115772457 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087559996 seconds)
done (took 17.18096635 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.093564377 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187652496 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153158754 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14473849 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108247312 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113976284 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122763573 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120057531 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115369962 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144296121 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.11191415 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134288633 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.150866717 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087310582 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113354716 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092001232 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115205392 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102988498 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.148308834 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134556297 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.167107941 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086776732 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148933374 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137455041 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122440982 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.107078539 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113590513 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092488088 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.117315195 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112994331 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135063899 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090523804 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.115590779 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135708729 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105698707 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121941951 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087863395 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121622079 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087163122 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.114936967 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143701343 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.109400093 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.119246661 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118859578 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092345225 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115425063 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090722275 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122936828 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098190201 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.119051862 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127450309 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157065663 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091903374 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124211506 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086856808 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124977302 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122666366 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091442435 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113180827 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091796639 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112703648 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092144075 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127999907 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143345937 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09285347 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123329564 seconds)
  done (took 8.749799456 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.111482045 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141569164 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.123177021 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.133197297 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112828592 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089212996 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114656996 seconds)
  done (took 1.82028872 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095887145 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135241081 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11257647 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137858565 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132945835 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110059901 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125033385 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088402878 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13379542 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089091052 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136670786 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.154452602 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089883672 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122656626 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139256636 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089115765 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.139055768 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088675986 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118689755 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112333403 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11830036 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136453788 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091021768 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115411875 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103632274 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116262794 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16412593 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09481989 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116378144 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092161818 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113427817 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.168207485 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105169424 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.1275964 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088292846 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130365807 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129627875 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087989154 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131397332 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094294207 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.130534345 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088651532 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117235904 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087004064 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120788407 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124551199 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091385649 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115921001 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092558572 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136310665 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090317014 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129192416 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089156418 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119979031 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090210086 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121711385 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122878833 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091718672 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134409293 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090910656 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132611162 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106123866 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.130206532 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132231517 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093248197 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129284677 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103136342 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119258733 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090112157 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118918971 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131003086 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088804098 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11638824 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101094364 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117135206 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113202414 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139331227 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11511223 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101962089 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114665805 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090311265 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11526793 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113393714 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119833982 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089143211 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121079031 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091997994 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114901813 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088097434 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11989209 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.08760336 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.118363867 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091291971 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116342502 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116758142 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107653748 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116489588 seconds)
  done (took 11.971648978 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.09743502 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115019481 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09361282 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115911123 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092164511 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116311556 seconds)
  done (took 1.637703994 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.121522175 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119617866 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104567217 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.123370634 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158827265 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.129207329 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.106100354 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125093919 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108283278 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.1301866 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130911711 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106274912 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.139069134 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122306978 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105025438 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122159645 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129864518 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102246398 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129464188 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096823124 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138605629 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122492715 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097265325 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133962589 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118673062 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097953836 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126483547 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103664659 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129969655 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124193968 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096809596 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119741395 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09580564 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125817739 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.132397524 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09676428 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123511287 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119761849 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102867261 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119720062 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105652742 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124535071 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129595722 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094901132 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125505009 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121945732 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095299292 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126631196 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104403011 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121873394 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121252827 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096797569 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119794557 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094474856 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124761084 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124180916 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095178974 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131098677 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096199962 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123909873 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120052387 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095227253 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125308153 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118292965 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.1063881 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121317663 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096522494 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12478071 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122241135 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097329008 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121700826 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093705612 seconds)
  done (took 9.36493755 seconds)
done (took 34.5327843 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.706662042 seconds)
  done (took 1.709279901 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.721644439 seconds)
  done (took 1.726307796 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.606770282 seconds)
  done (took 18.609919114 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.516001432 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.600456951 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.894050891 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.182102244 seconds)
  done (took 3.19938334 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.972664973 seconds)
  done (took 1.995879567 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.305120022 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.260055877 seconds)
  done (took 1.572657629 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.79008901 seconds)
  done (took 1.805205019 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.371435346 seconds)
  done (took 2.379294033 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.340623926 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.187286942 seconds)
  done (took 1.546936571 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.552505611 seconds)
  done (took 1.572153316 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.979878441 seconds)
  done (took 8.004974989 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.273606642 seconds)
  done (took 1.304618083 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.309388312 seconds)
  done (took 1.328098878 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.619118079 seconds)
  done (took 4.643032134 seconds)
done (took 52.410377609 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.10457396 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12754636 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104052644 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125442858 seconds)
  done (took 1.47801012 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.107167978 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12183277 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10000866 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123004325 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126013636 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097410513 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124198064 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101908189 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122809771 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096119462 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123702076 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120098526 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100167754 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123592001 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093671639 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125557392 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.09981275 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.123912379 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125169235 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09688618 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120420604 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098258185 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.127088518 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093840391 seconds)
  done (took 3.719310623 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106838681 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120022261 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097967804 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119452185 seconds)
  done (took 1.474459344 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.106101206 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.144076878 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.140030521 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101745151 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144904519 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137151641 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093447844 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118065283 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095023602 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126267817 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091506286 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150405401 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138866923 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100466982 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129243402 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089346162 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119684326 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137973564 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100461177 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128203277 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.096544745 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127564176 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091112441 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141622557 seconds)
  done (took 3.874839332 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.176171484 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129625427 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140549599 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096518456 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162339299 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141873532 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089481541 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142711842 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088704595 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13375469 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118158485 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134798446 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131576787 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088485713 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115457641 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087857716 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131787057 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129789886 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091731928 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129978798 seconds)
  done (took 3.493229152 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103829518 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118365567 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089345384 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117537705 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100160483 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122227363 seconds)
  done (took 1.682766623 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097462737 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114813047 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091316987 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11513861 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095431707 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115415481 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089475911 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11597433 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091339416 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11630816 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090754209 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114691075 seconds)
  done (took 2.280119867 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.471036782 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094596 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121916308 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11455899 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097159774 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.116590666 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103853624 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119984883 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140227611 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089996362 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116010445 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092310926 seconds)
  done (took 2.709017454 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240263864 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127177888 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289912861 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.370530423 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159369411 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178999351 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.285400175 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166054034 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.226782641 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169602747 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205903489 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22728079 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153526931 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192140494 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139500339 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119476927 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234441693 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249616922 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154979452 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210289634 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23116331 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168889431 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181244515 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153033216 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139107174 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175279651 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094793752 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131838716 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236577068 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178732978 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216609812 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163562802 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147613676 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213175921 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256634701 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221977692 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287182343 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110394557 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.177837461 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170514746 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268754611 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139395259 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205450753 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157152406 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133058668 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193415744 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193969637 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178645015 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.154051931 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113221809 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225097004 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240565409 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.195381616 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139468532 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307075416 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153602517 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.176524882 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221977381 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227006929 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230304817 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188628329 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12252761 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189932893 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221489492 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187403384 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.177164243 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182061739 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14915965 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228592463 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190872096 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166775299 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221705236 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.189517052 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142310091 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172839987 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175212227 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17335075 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260416261 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185404201 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124249829 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171588683 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151260812 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132810742 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.170286042 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126823277 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241143818 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119163557 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165527784 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245802341 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159413869 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16083633 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206690507 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232062794 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121512617 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.113163605 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155449729 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156317135 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196695486 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14134102 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16044655 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164572955 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131059612 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187291345 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096788236 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212683728 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091086853 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174139035 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211585123 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100349367 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16353529 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153309438 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152587162 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174746715 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227295656 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116091165 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135545015 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236815097 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180741423 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.152425618 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180776069 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204438309 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.145610735 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151062177 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201196902 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246740291 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141484965 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204595032 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159629121 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136681744 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131807357 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1833767 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156117325 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162455772 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110004963 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.212679104 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209577116 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126856433 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110957655 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222559717 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134975946 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105354153 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164263825 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148733368 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140278113 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.154425205 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154634908 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184456961 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178412312 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155773222 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165390862 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153764851 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256314303 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144178479 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152661806 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149703389 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09533714 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.221389827 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202596431 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132066093 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208526547 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173442857 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23285896 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175444558 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135334752 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178521332 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103797284 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121948331 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195271575 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169589928 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162011717 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.227302598 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203789971 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.209274999 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.187045939 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175586816 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175642712 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167497773 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158589128 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141053638 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162610798 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174991305 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.095678141 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.146137716 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.136341442 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149297017 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144545276 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107255341 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226441336 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171634399 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220406224 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133180009 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153288164 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182583524 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130499158 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174594509 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.206966048 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121414576 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.230431732 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196562921 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215915478 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117914889 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23265582 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093616575 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12742403 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143670127 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172773886 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134281851 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109497959 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164686111 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183132937 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211166063 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179643469 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240565025 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176077071 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193513416 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.123420738 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143141211 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213957621 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180641408 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.192674087 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118140869 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151893228 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178761944 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160311873 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257175356 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169740581 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176866306 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237620574 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152387781 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104391594 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153380532 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225804106 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15596023 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179870973 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1496902 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114772785 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190079428 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.107245337 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161974591 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213762309 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16398763 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192085941 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.153502492 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18691177 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129648517 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165253899 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161558589 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166854236 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081315589 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204194297 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207338361 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150797379 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170069584 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217170016 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10582487 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307992799 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24662722 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197332661 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139641784 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157904791 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161900211 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166175558 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172726098 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180123636 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161016986 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189578819 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160500466 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13887214 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142782463 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149543151 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123738664 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133163153 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150628934 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177579238 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141649315 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186120648 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165325 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1604437 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174212546 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.153048375 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147287136 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152735022 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217632346 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212820333 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214526395 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152577221 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181433784 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236093987 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098669438 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133488965 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134348463 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18088798 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109093102 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224145389 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.190189395 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235412275 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186075889 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196643476 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141460942 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122007121 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15846017 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177934627 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211697796 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154548572 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161901218 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233407878 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.12015488 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133799913 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180103186 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320678418 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120899238 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228664719 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080488234 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.282477401 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129139152 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133325276 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138299769 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237968465 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138569875 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.19305855 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174746269 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172795962 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166879618 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151660569 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194745541 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247903842 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204044084 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180986779 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.13463262 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157937222 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179273903 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222630756 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158857514 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113215013 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235284278 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198812606 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198704754 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14394697 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173797433 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169997541 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158960635 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218579765 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107394338 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236856933 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13514379 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197158415 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155609089 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146233131 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178303429 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.190916549 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143301512 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218162027 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185316317 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136240977 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106733893 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17062636 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207798674 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158487257 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100866897 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209329016 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.099419033 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22382011 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233741485 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136940002 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157199666 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149075 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10857055 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156202065 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158823788 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14311596 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167642597 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207023085 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137276819 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192411669 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234093904 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170887813 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175626744 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146565161 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694329368 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133097194 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195585478 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16176282 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235542396 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121886576 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202556185 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159264409 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170644232 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199701129 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161869552 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232004598 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194280822 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.208443649 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10561686 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159913772 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165407548 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145998695 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152745456 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170040624 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161451706 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.156412042 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179952787 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201980022 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.10816249 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14184377 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201469599 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162744366 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210942144 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181156148 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112428313 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174698106 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220097767 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132884862 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.18295777 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210315851 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144790874 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154212074 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.136281161 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.15902965 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263566244 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097940456 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237503505 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187762426 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16063403 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170451606 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.149138201 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194098578 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159024935 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216963226 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149906277 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.162121989 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156789473 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111067002 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.132441569 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15767991 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168881562 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151117374 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161122373 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.140809052 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223067347 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.097471547 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147031164 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292754287 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223928371 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216570356 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137918317 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136853127 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1640305 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123969811 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.209386176 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181037404 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137298333 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108895271 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138584179 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.158214145 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.115092966 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158937381 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200119287 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168601027 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238662258 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109809829 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283038874 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142934985 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156789213 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089214417 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.134792483 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152164941 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147722524 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16146498 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193930029 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266191279 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149137689 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106530375 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152673052 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127909771 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10835508 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167060276 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165115919 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208569089 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146664145 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.083403735 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15950202 seconds)
  done (took 84.249067355 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168414241 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.134732356 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149406903 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204780909 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18059824 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271983905 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212547818 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256966328 seconds)
  done (took 2.699004325 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.098314173 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.148753963 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159828923 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.135113642 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092473391 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120103997 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.350829095 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.13437348 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118334126 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122275593 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.176834338 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094900426 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.559894683 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.09153573 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120107202 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.110963862 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.094358447 seconds)
  done (took 3.84248047 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.484978966 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.73547182 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.519114515 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098381209 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.266967261 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.114449217 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.896156512 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.201787583 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.118039572 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.491453695 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.776159314 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.170453368 seconds)
  done (took 18.999035153 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.101878336 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121170766 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108949761 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.137157927 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.097032923 seconds)
  done (took 1.697889773 seconds)
done (took 133.216900563 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.107296759 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.409026124 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072245877 seconds)
  done (took 1.642322426 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.114816885 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138138068 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109705433 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.138557971 seconds)
  done (took 1.637129932 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.104709422 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127436782 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110774058 seconds)
  done (took 1.475001475 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.326026353 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.192325581 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.165227786 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.110108937 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130167867 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104198154 seconds)
  done (took 1.480977124 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.101966718 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128629541 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098251038 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130855367 seconds)
  done (took 1.592695439 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.101802997 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071581929 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104539227 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075981933 seconds)
  done (took 1.485743506 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.120112114 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132543769 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104140123 seconds)
  done (took 1.492538518 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.133962543 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.140532714 seconds)
  done (took 1.410022143 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.110842573 seconds)
  done (took 1.244302873 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.123760542 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170267017 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.191148093 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.166977427 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.231629791 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.16718258 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141651334 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.116427121 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.133567096 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145596754 seconds)
  done (took 2.725650586 seconds)
done (took 18.102991686 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.106726019 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.52014422 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413042318 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118849115 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723533743 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379997134 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.037038852 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147008552 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16599287 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093665991 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140867025 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673218451 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.06480431 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.474720305 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.021631893 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377434007 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676201543 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122554474 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119852004 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095253609 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.017764954 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092523449 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123785553 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093275851 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703863215 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425786567 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095637682 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.374803103 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092963568 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127329435 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384510863 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124372969 seconds)
  done (took 17.255878449 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101968366 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175257193 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098907634 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139347798 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.1251626 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095707258 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12603657 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093902589 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181294263 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124965463 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110565769 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123144849 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126978994 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098179818 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143424546 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093231697 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127035101 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09288943 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123329892 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122392949 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113456539 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12165442 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095178735 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122634453 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094124418 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137231814 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123234983 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.095345723 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121533154 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100374377 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129329992 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095789375 seconds)
  done (took 4.913421909 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146854755 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184102124 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.130171973 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127925724 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170261712 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125946987 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200982312 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118943448 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18395497 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124904235 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140207343 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093603473 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.159342503 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122624608 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116116532 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122429861 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097982006 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124205479 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093139525 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125535086 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139833606 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093772241 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123453533 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094111222 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123892044 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108005152 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125415211 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121159116 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095255702 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128012256 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101069786 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125593641 seconds)
  done (took 5.232744945 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.104839983 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127151414 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11132858 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140439368 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095753711 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127144802 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098144744 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126205933 seconds)
  done (took 2.071119969 seconds)
done (took 30.602653112 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11849026 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128738734 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108129871 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136030039 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10308317 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133501578 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091409832 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136060579 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13418526 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104329718 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139188144 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092671028 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123911679 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093142916 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136537506 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097743945 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133866887 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102248969 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.136125311 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133502387 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095189927 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134452625 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104433216 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134985259 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10472283 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135278821 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138964064 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100850493 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124450502 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095341561 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.12599697 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104875485 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126550356 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106745708 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128721467 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097595439 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125410949 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094625968 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.135337587 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133553222 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101165954 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134548975 seconds)
  done (took 6.102098761 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.111563094 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141046793 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.106123881 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081338833 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.120018501 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080992419 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139970845 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080064899 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111801712 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.109333002 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074254072 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.108610942 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078834755 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102118104 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079155054 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075826401 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109586293 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077529687 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077355549 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10758018 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080908034 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073485721 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109634522 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079626839 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075086259 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111796219 seconds)
  done (took 3.646497231 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.104741118 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.137604646 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113275379 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186672718 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162545074 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100304038 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.134711673 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140554406 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111132183 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121288962 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097786142 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150561259 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111205718 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131273826 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091229516 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138441618 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135893215 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095371172 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129262852 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114132415 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139840061 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102748237 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.14481971 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133986536 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092653015 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124218456 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098027178 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136328953 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098272403 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.133464134 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096667856 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.126797705 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123677494 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106172113 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127083823 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094844355 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143630668 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10292073 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.132740848 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092215715 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.127257636 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122538624 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115948769 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170254588 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092651119 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.133461469 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.099533114 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.134829259 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122191618 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111655596 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132619025 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.093478602 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126574915 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09208377 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122766629 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107331764 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125280223 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094404839 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.133805733 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125704274 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.107148251 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.127051313 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109387404 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123435537 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100799376 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.123092845 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093672685 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12244862 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.114673417 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12505209 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165284124 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093087217 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12482058 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102063648 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132330979 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129082539 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094653492 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138638824 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103220499 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126966219 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.103084628 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127296674 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095450222 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.143005725 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095349128 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125594122 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.093435889 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.130915263 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125394058 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095925881 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138009819 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093829211 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12666324 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11173526 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.1238638 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.094115266 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.131360828 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127426822 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093686058 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136897917 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099880273 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125695332 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103743746 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123984511 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095562428 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.135265243 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127469048 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.093074644 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128470272 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100171134 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124319327 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094347863 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.127075312 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094737315 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134312488 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099506233 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129429255 seconds)
  done (took 15.00604954 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.234834553 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.21711983 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.239961558 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.264287845 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137052933 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115070906 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.21519319 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.157714022 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125461305 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161445125 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163188788 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183231704 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.14052291 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.182086623 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.142633786 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.122450999 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112465427 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.166521818 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216452372 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.293646392 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113221302 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134220856 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.163937483 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.162638926 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.1068227 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134870118 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140644169 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106406341 seconds)
  done (took 5.814489485 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.115915958 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.159222982 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098506662 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.147611887 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.151344497 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093520341 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.130375838 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094954296 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.137602598 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13742448 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093032114 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131361902 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100501251 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134732295 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123610199 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104859961 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133997386 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095075681 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127242169 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097516354 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.131685932 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102118691 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129394646 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.09213468 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.133656122 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122419832 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088046852 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144850446 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092825895 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.147803818 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122869425 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100319675 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134848931 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093989927 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124376207 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095485689 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126787256 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095259179 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126303236 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092099063 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123659928 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078316452 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123360767 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106998356 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.131221662 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080069364 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.131411304 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129094768 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09697593 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120728871 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098247752 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125777997 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.098598432 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131729437 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.100152721 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125180403 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097114922 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116826221 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101387087 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126689527 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085959208 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121481454 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.100690251 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119004578 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.103330473 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129462902 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093088932 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.127142665 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098716122 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.131466664 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095614662 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128042011 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091503321 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.128458159 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.09654468 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129713119 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096635977 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123829144 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093340263 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.125789463 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07569373 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124920894 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074817115 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.128138676 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092796946 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12440015 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096588927 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131531822 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.1386248 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096327566 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133366512 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095922043 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123774792 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097790644 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114674215 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.098069789 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140135488 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141484733 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095281092 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122683303 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.1089256 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127469761 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093814917 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106844121 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102521356 seconds)
  done (took 13.134025752 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.135415173 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155729694 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095703652 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.145994715 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15796233 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158271525 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102687507 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131872236 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096157576 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143207687 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094400339 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133158563 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097820352 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138893611 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157831345 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104039425 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127713535 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108180852 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.134112032 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171082722 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112338296 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144841787 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108683448 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126926896 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098824636 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.143045594 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.163474351 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108451275 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.13936459 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142521575 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109968394 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162914637 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112811283 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129898177 seconds)
  done (took 5.574172943 seconds)
done (took 50.416493628 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.260684318 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.477346261 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.246608022 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.280944552 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.275202631 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.253584742 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.259640508 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.247556245 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.415340917 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.245282829 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.511326477 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.929761077 seconds)
done (took 59.572161134 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.350738463 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.37931604 seconds)
    (2/2) benchmarking "String"...
    done (took 1.516911553 seconds)
  done (took 4.063020854 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.606523074 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.209659235 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.508326837 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.247104176 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.247488536 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.53827712 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.988246047 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.611575104 seconds)
  done (took 28.516423909 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.257640512 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.644847848 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.031246106 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.028011395 seconds)
  done (took 19.129982088 seconds)
done (took 61.837188071 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.231977051 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.246859566 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.255811461 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.226735943 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.364775909 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.269329236 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.604118535 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.294085988 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.260491195 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.23259297 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.263896517 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.264126138 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.259645486 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.608786118 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.257501115 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.249128749 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.28407422 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.754574392 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.663296874 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.260776592 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.267857976 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.287165695 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.247745645 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.266046766 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.307714538 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.245124731 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.271964316 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.253104905 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.945970812 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.247264824 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.268544063 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.823508098 seconds)
  done (took 192.453376538 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.247537323 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.381103719 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.48920485 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.3122226 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.768299124 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.441421847 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.382891205 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.014070003 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.265122523 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.245366345 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.598184557 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.246006519 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.698039823 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.221133898 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.258847913 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.259551909 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.575153836 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.685502823 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.267068222 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.522919599 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.255654711 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.43911145 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.369564011 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.54775068 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.302624892 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.31782842 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.28929447 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.250975243 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.436010002 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.457657612 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.277562858 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.28248276 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.887876113 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.104695792 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.257481816 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.266490076 seconds)
  done (took 152.794965618 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.540843178 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.249729075 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.25043814 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.251730982 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.286355529 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.249480366 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.85485972 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.837734291 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.755189728 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.677524115 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.311920014 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.541349333 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.248927068 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.348942827 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.261670882 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.249128867 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.266803745 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.2952921 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.252610433 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.252190102 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.855176508 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.266613682 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.369331092 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.254828892 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.252700299 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288438833 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.646158966 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.250934756 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286709534 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.589784277 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.302671049 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.249187011 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.650302177 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.069616188 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.367535454 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.252448014 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288016518 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.253563326 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.537647577 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.24923226 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.253894325 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.254554295 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.256992008 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.929529517 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.24940867 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.252572824 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.85736391 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.232579915 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.250175272 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.254643657 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.25428582 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.609353839 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.901959109 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.268668385 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.253358606 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.25217128 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.254564555 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.255652382 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.254455426 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.286739449 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.60813274 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.349706844 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.272883403 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.257708668 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288739485 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.255088942 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.365648268 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.250929175 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.851350758 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.329638035 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.364563062 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.860874836 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.256931335 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.357197983 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.375610821 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.252861874 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.254308975 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.254734163 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.256230215 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.369619385 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.252767452 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.701783235 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.258895248 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.255809874 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.316311529 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.353366083 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.25233038 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.66259646 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.25308621 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.255388257 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.03560878 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.353588146 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.251724022 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.256707992 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.254886151 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.700103907 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.842022022 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.550252384 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.257960913 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.622828647 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.256221241 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.715140425 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.82924001 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.928064238 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.254217823 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.370411294 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.257580189 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.256670988 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.259083259 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.257362959 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.286857969 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.276366635 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.316905262 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.253490831 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.657541687 seconds)
  done (took 353.57832558 seconds)
done (took 701.543193338 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.916460239 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.904104889 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.028341221 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.899456369 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.853804747 seconds)
  done (took 10.780781772 seconds)
done (took 11.964389206 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.463243751 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.458807951 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.320937464 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.463599046 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.285543749 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.483574544 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.438557787 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.275747287 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.368235269 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.346495954 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.36722624 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.314919616 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.288049762 seconds)
  done (took 19.052519271 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.593221724 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.58314831 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.323872142 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.59490536 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.298514812 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.595383934 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.460341047 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.477636957 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.482033062 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.292199772 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.27300859 seconds)
  done (took 17.154555133 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.604077349 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.618324795 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.325569966 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.597449577 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.300746916 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.599354711 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.471167188 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.484059589 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.483008224 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.289107654 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.272617266 seconds)
  done (took 17.225487267 seconds)
done (took 54.617358199 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.268159132 seconds)
  done (took 2.447862838 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.30381541 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.471401453 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.287667249 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.272163737 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.269764698 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.270522833 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.27295255 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.268458987 seconds)
  done (took 11.599046939 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.266622292 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.268327576 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.265590292 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.268908573 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.268910997 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.267168732 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.264517622 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.266629627 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.268825881 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.269564188 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.267455406 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.268003007 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.268917544 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.267101006 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.26971186 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.267178295 seconds)
  done (took 21.466043294 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.268255193 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.264487258 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.268483601 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.264403822 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.266411802 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.26569905 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.267932107 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.267721632 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.268088002 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.267682459 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.268880071 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.268198691 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.268142633 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.268187794 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.26902469 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.267142332 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.26902211 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.268801684 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.271762558 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.267001813 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.270147115 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.265872914 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.268242829 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.268701944 seconds)
  done (took 31.610949947 seconds)
done (took 68.30892238 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.536790062 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.054349868 seconds)
  done (took 9.772249154 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.269109313 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.26996738 seconds)
  done (took 3.721174803 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.270217732 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.268813675 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.269901476 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.268944823 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.271091511 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.269634332 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.270054075 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.270053312 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.2694739 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.270668042 seconds)
  done (took 13.882102138 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.27136932 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.271465214 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.269206358 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.270049533 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.271345629 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.266849162 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.267422214 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.27263281 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.271546822 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.269885149 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.272971345 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.269011223 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.269064997 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.267895557 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.269751411 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.271537245 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.269824401 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.267786294 seconds)
  done (took 24.044615456 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.273263506 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.273060959 seconds)
  done (took 3.731430988 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.27154666 seconds)
    (2/7) benchmarking "second"...
    done (took 1.27059823 seconds)
    (3/7) benchmarking "month"...
    done (took 1.268741136 seconds)
    (4/7) benchmarking "year"...
    done (took 1.269605798 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.268809441 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.267107215 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.270165512 seconds)
  done (took 10.072184454 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.273802083 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.46688854 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.547633421 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.849410928 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.271235882 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.276968992 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.144732503 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.276190853 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.280071565 seconds)
  done (took 14.572137017 seconds)
done (took 80.984362811 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.318603445 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.280595462 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.49704213 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.270831486 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.282837025 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.610550403 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.26586831 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.394217369 seconds)
done (took 38.113594203 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.270026794 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.022288378 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.02509656 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.264201448 seconds)
  done (took 11.498222584 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.254852609 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.251414743 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.262924092 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.319243288 seconds)
  done (took 18.275362222 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.349242733 seconds)
    (2/2) benchmarking "read"...
    done (took 1.605112868 seconds)
  done (took 5.139264205 seconds)
done (took 42.376442355 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.272383049 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.271069921 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.271544095 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.272239703 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.272418891 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.270380016 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.269238472 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.272795182 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.271927774 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.271712657 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.273042411 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.273005573 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.272005993 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272155413 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264640594 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269984372 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271339131 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.270220686 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268460001 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.269145744 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.270502296 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.274044879 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.269594501 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.266086772 seconds)
  done (took 31.68462704 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.272918597 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.269761965 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.272420921 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.272228295 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.269145507 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.271277736 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.27211767 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.269966028 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.271820772 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.273517516 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267555327 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.266393298 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.27039967 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.267782191 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266784244 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.267398608 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.2692571 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268206317 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267254763 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.266761097 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.268651812 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266746278 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.266847082 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.271522449 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.266693644 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271098139 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.268877931 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.267430397 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270418316 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.267932765 seconds)
  done (took 39.263845543 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.274894401 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.277717089 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.272511193 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.270273934 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.270966056 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.269815729 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.270785182 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.271745265 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.269977033 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.269786122 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.271642512 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.268797448 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.270063613 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.270141338 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.270562002 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.270275229 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.271429541 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.270529419 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.27122137 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.269631191 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.268541903 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.269213043 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.268490373 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.270489579 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.269069039 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.270529763 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.270843459 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.270049934 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.269056597 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.269643591 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.271517289 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.270015498 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.270654155 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.270365557 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.271724103 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.272314059 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.276378098 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.278905462 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.270812366 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.271184416 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.271301467 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.271144392 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.271221102 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.273849997 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.270459531 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.271042634 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.27259019 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.273268795 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.271847084 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.270822041 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.271937932 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.272568505 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.272902495 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.27035424 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.271276798 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.270867291 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.270464673 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.272413491 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.271230809 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.271200081 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.273896713 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.271533314 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.271639191 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.273452118 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.272526791 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.273101957 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.274045687 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.27329171 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.272298669 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.273864444 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.272494311 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.273053858 seconds)
  done (took 92.735682126 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.273243821 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.272571373 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.270881158 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.272338413 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270819183 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.271979601 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.271608477 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27374577 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271795505 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.27432991 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27443592 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.271331367 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271665116 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.273993916 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.274495836 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.272146365 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.274769975 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.272062852 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.275017706 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.275424144 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.27559386 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.272593001 seconds)
  done (took 29.193774851 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.275086558 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.277693791 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.273677568 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.27298465 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.272605004 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.274412872 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.280727259 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.278238899 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27389875 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273038833 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272493354 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274501139 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.273672865 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273680413 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.272529803 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.272902485 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.278414521 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.274530407 seconds)
  done (took 24.132478528 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.274093906 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.275048342 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.276562622 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.273078595 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.273083582 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.277051525 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272085294 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.27737625 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.278228401 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.27412685 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.275128495 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278181995 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.277544143 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273275555 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276086057 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.273891925 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.276434911 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273347972 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.277205559 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273175525 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.27561784 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277707336 seconds)
  done (took 29.248338408 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276584208 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.276315744 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.275361287 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.274814084 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.275564823 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.277882502 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.276727968 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.275796011 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.281401466 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.278949122 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273950223 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.278769191 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.277222478 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.277428308 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.277650336 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.274857594 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.275500748 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.278118171 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.278537037 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.276790076 seconds)
  done (took 26.727918407 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28102986 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282142385 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281351543 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280254134 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279961683 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.279927552 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280117862 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.280765569 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.283590272 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28015453 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.279047611 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.28184408 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281648007 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.280586496 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.28220677 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282423377 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281990607 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.280743855 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.280054652 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282655842 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.282837989 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280995238 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.283123971 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.282388277 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.281210116 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.280892672 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283184093 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.282604899 seconds)
  done (took 37.072216386 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281315751 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.280197425 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.277489532 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.277008493 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.277765349 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.278338263 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.278286176 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.275733307 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.280268728 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.278450802 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.282555359 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.279791058 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.280125827 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.283033944 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.284958844 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.28091957 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279744927 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.279098665 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279266744 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280328661 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.281464418 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281523234 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.280618299 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.277855475 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280019852 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.281733332 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280757492 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.28052931 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281757452 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.280756132 seconds)
  done (took 39.594391351 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.301823951 seconds)
    (2/2) benchmarking "in"...
    done (took 1.302298345 seconds)
  done (took 3.797443732 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.279330273 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282282575 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.281943157 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.276851924 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.278581977 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.283157995 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.282334688 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.279050276 seconds)
  done (took 11.436843484 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.280646895 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.281999266 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.281469522 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.2818644 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.280618733 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.280894541 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.287034367 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.300297006 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.280211369 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.282817853 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.289595124 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.290102005 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.284694318 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281809223 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.281391087 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.286579892 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.282049544 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.281892951 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.282970529 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.282472007 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.283215482 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284327008 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.283987891 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.279371584 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.283147662 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.293848277 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.303670144 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.282904607 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.28119561 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.287153759 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.281292595 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.280601623 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.282741291 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.284684974 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.287021426 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.284390076 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.291048918 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.302817076 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.289631199 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.304429683 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.285992163 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.279303551 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.283642731 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.285698789 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.285396375 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.284906613 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.28546729 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.281461724 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.284305637 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.287810732 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.291603462 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.285736261 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.283394737 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.288536506 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.285841382 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.291363796 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.307172278 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.288260943 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.296200026 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.294794271 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.317827269 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.308948424 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.288326691 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.287660765 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.295875895 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.309742639 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.290349838 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.305691893 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.284088503 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.286228524 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.293340777 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.316728837 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.312358244 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.288585971 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.285981445 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.286006804 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.284967146 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.286459066 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.29368217 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.306816332 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.287623574 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.28842638 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.29685995 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.311298508 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.286265016 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.288593404 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.289738755 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.289033296 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.288940598 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.297480983 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.308710491 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.290097164 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.287337421 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.287638327 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.288075883 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.286851737 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.287285382 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.28629018 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.286325961 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.288492291 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.289549726 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291860857 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.295429787 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.288555351 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291103597 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.2961865 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.305965573 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.288567691 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.293220734 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.289275952 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.287392657 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.289958728 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.293800649 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.286325694 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.293091268 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.298226933 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.290932999 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.290574529 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.290425617 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.290143942 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.299520187 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.317818365 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.289451581 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.289310788 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.293209793 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.300883088 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.290347155 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.291001111 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.289857332 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.283337337 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.287310168 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.289940579 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.289917851 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.28914411 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.291372946 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.292771312 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.288851404 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.289952894 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.290298776 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.29254285 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.293192152 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.290652392 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.290423135 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.292107174 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.290677135 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.291223205 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.294811384 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.308449848 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.291184474 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.29000318 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.28957407 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.291175784 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.290374273 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.291927694 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.29045377 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.291389921 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.293236047 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.292744594 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.292633501 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.292562587 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.293940818 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.29369113 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.294754295 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.293218367 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.295882856 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.291657453 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.29012598 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.293321977 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.292628308 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.290948411 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.294877169 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.291959634 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.295451548 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.3026379 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.293734551 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.294297499 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.294108878 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.294022508 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.294697604 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.292243702 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.296087888 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.300472097 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.29224914 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.299504676 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.312898442 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.293750305 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.293727972 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.293255547 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.29341643 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.293540262 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.294884155 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.300909235 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.304554784 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.315914191 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.294895345 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.296068745 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.295454352 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.300027094 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.297216086 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.2960103 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.296479653 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.295581199 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.293028258 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.295938723 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.293954571 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.295061792 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.291472657 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.294196153 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.294234568 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.295167404 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.294251122 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.295744631 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.293256167 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.289570616 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.292254393 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.293322338 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.290512727 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.292236027 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.29365878 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.293721999 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.295183087 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.297088488 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.300465456 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.29095761 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.295678702 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.293682403 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.2929058 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.295305327 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.2979536 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.293525367 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.295861965 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.300428498 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.316695781 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.296070062 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.300100726 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.314646021 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.296129493 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.299278038 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.293273138 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.293616133 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.300163256 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.302909461 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.296657694 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.297827514 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.297566029 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.2981082 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.295944834 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.302795841 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.313192738 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.297327559 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.293234019 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.29746683 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.292409135 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.296976246 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.299906696 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.29615055 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.298800227 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.297574733 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.297739242 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.298731486 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.298064713 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.298288365 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.297352224 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.301349843 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.309215904 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.303059495 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.2989383 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.298407524 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.296780667 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.301227 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.294708296 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.295047781 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.300321214 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.307528295 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.325059366 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.304905104 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.321042769 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.300099907 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.301317156 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.318424288 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.299291108 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.297075909 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.295645474 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.298530487 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.29854221 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.295553265 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.298236939 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.299860565 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.298460208 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.299965383 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.301999565 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.297951922 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.297293867 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.300712847 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.301570325 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.302371926 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.296600311 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.300001539 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.300047236 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.300651262 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.296429523 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.301832179 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.302233288 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.321825278 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.300537723 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.300655843 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.298561723 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.301849445 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.302375081 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.30086209 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.301989107 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.309869376 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.306115928 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.310045913 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.305406031 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.313680404 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.303547469 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.302184818 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.310562718 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.298806859 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.301456366 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.30157044 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.303630119 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.308642932 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.321990563 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.30412971 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.303591198 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.301452202 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.301196848 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.302511234 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.303771444 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.305870512 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.300315846 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.30789952 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.322342744 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.307330752 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.303167371 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.300825045 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.298959168 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.300608302 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.301127899 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.303419123 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.302826626 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.299447124 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.300985328 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.300579645 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.300747421 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.305413929 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.299954562 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.298969182 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.29818376 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.306409397 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.324587512 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.304895775 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.301077586 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.307792634 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.322271094 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.304591835 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.325484906 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.299775743 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.301212722 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.299701418 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.305160212 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.303149673 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.300306092 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.300863528 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.304027414 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.308373039 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.301723729 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.305152432 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.301703714 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.301149879 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.299325412 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.311518114 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.327181946 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.305778105 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.310418248 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.300609103 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.305262585 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.310098004 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.30179734 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.302539349 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.307659343 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.316344113 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.312391512 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.30343856 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.303709865 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.304975612 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.306630636 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.30549086 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.304794993 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.306305689 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.302290025 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.302020228 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.306281123 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.302421348 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.307029958 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.30427011 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.304202935 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.305561928 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.314273211 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.324157656 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.307096434 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.303908584 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.30518042 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.304004711 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.30085682 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.300952204 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.303532982 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.308294391 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.306401996 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.311796136 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.312758494 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.308537664 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.30666062 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.304539917 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.306019456 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.307022833 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.307431793 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.306303006 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.306933048 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.307746712 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.307886828 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.30682836 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.305881291 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.306535256 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.30614409 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.305171205 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.306972361 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.315184888 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.305552716 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.30268191 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.307345137 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.307461763 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.306636949 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.306339298 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.314317381 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.330327981 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.317923814 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.317028523 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.310557345 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.305297206 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.312742744 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.313110019 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.304820456 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.310903019 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.309568459 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.308147934 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.306549562 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.310828814 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.308239748 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.309321512 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.322857946 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.305006786 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.316518759 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.328244542 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.308498419 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.308711537 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.314662634 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.308789262 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.30672153 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.313609112 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.305487136 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.312431101 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.329163199 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.311771216 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.306691673 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.306957785 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.307886099 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.312761603 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.310880341 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.306941256 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.306833915 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.310466447 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.306834257 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.306694499 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.308030977 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.307101516 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.310446232 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.31143088 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.319098121 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.304640392 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.31055462 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.31072356 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.308247509 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.30993254 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.311330967 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.307310325 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.308402791 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.307064927 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.310165 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.309131865 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.311141467 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.309297145 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.312071498 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.310525759 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.313547549 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.315818185 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.322559172 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.317191444 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.306593905 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.307848202 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.312452449 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.314466857 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.310584453 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.315659579 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.311505424 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.311475909 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.309867232 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.312428324 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.310245264 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.316984455 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.329089657 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.333099514 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.312797086 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.309288633 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.310597219 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.31133653 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.309910717 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.3109319 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.314232366 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.313772804 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.321356812 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.311403312 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.315524921 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.32981428 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.31283452 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.319508951 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.312375503 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.316756203 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.317267811 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.309309449 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.312034821 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.315703482 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.328193552 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.311011097 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.323532925 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.342766903 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.332187314 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.311050897 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.312936975 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.310059453 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.312638319 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.311353815 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.311459304 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.315329051 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.310824851 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.309738814 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.310176081 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.315462179 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.310951495 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.313104892 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.311100316 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.314169714 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.309144071 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.307589284 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.307570253 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.309619346 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.309260684 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.310685457 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.313373183 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.311707384 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.319041717 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.337370432 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.308807529 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.308867218 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.302377574 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.307172458 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.310350941 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.322370879 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.320552221 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.310488028 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.308469289 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.310958731 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.305928395 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.30616016 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.306345253 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.308471754 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.309513385 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.308880409 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.317963533 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.334276917 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.314473135 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.311486392 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.305264556 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.307718339 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.309451637 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.312269468 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.306734791 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.309826716 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.313120799 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.31189454 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.310319325 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.305329166 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.311472716 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.315433469 seconds)
  done (took 776.985841266 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.307426411 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.3057344 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.309196378 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.303644122 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304173213 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.308332939 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.309042658 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.3042469 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.307639851 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.305656463 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.305220348 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302563209 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.306136211 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.307498283 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307609517 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.306421608 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.308188612 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.305120478 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.308828704 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.307533816 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.309081759 seconds)
  done (took 28.657416366 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.309225375 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.312645097 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.304030139 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.310539319 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.307281094 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.311997447 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.308551213 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307593367 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.314718402 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307931576 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.313337994 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312640838 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.311620345 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.311099335 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310122918 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311859274 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.306324682 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.308538228 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.312336511 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.310391302 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.313415143 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.310766164 seconds)
  done (took 30.047442874 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.313446026 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.311044767 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.309287304 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.307166254 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.312540852 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.311639818 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.315069433 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.307754618 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.313468356 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.311711625 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.311199705 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.314686092 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.319266939 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.321134176 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.312981086 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.312079255 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.458575157 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.312174787 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.314775662 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.313669205 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.30951502 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.317805943 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.328372049 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.310653412 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.312282365 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.314469274 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.315220621 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.310434476 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.310869743 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.316641822 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.320943559 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.31368309 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.312830343 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.316769726 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.316233612 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.316695489 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.321360883 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.317737897 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.31141536 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.31711995 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.321933062 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.33715349 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.315166099 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.321140392 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.333820591 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.316477897 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.32006308 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.324960326 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.311891696 seconds)
  done (took 65.836073155 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.313610833 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.318349086 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.309360737 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.313907307 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.315104462 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.31673283 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.313704298 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.313697634 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.313905531 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.314200648 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.315188193 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.313403144 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.313122981 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.315975326 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.319589272 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.312069923 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.311454085 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.313288667 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.312904086 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.314369473 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.313643711 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.316738071 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.316532279 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.312217572 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.317202001 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.313990376 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.312648407 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.317241235 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.315281202 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.316722066 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.316503041 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.316282127 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.317692857 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.313515677 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.315402839 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.316075571 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.316271019 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.316485386 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.318511603 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.315925059 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.318185592 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.316796154 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.316440893 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.315006565 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.316608805 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.314997239 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.311980064 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.312641232 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.312877636 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.320326109 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.317442768 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.316208362 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.319199701 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.313763143 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.314341481 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.318477127 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.310982615 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.31607358 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.317514907 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.317950643 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.311709436 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.318509767 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.313047395 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.316853071 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.316360566 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.314900883 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.311772582 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.314787001 seconds)
  done (took 90.660855399 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.317544216 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.318679766 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.319440097 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.315902477 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.315378 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.316226248 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.316691281 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.316036671 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.313949366 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.316819734 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.316470498 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.317542032 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.316491594 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.313821037 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.320162542 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.318339214 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.316916613 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.31757032 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.316194651 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.315660531 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.316985816 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.31657809 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.320806188 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.319993854 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.316685448 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.317463239 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.316768203 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.315408705 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.316009733 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.319987566 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.318751183 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.317472243 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.318303494 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.312823292 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.315668313 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.316191327 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.319220459 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315568059 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.319324182 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.317359875 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.320000688 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.318255373 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.320072813 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.318812919 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.319958354 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.318764399 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.317938954 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.320740863 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.319391205 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.317305489 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.31921204 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.317582862 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.321407252 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.319636872 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.319215405 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.320373551 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.318767056 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.317150021 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.317841967 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.317790444 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.315781946 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.320056303 seconds)
  done (took 82.925721265 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.320085878 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.319018786 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.315781639 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.317474455 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.319929817 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.31829614 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.319964217 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.319480523 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.320313517 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.319811147 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31840807 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.315262922 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317555277 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317966964 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.317042557 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.313978244 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.314698732 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.31737256 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.320995994 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.318150183 seconds)
  done (took 27.593049748 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.317812543 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.318502934 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.312902899 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.317946149 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.320296604 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.314887904 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.320637069 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.318908631 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.319478223 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320624715 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.319614099 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.322873062 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31660219 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.319378449 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.316716659 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.317807485 seconds)
  done (took 22.327984623 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.320839934 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.318903127 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.319895094 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.324013448 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.318692715 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.319513714 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.319322849 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.320249575 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.319976221 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.319898233 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.323006456 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.321635196 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.320555027 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.323774406 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.32058925 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.321462784 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.321359224 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.319253479 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.320098023 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.3224302 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.32315765 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.319801695 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.321393864 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.323335158 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.316632743 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.319739575 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.316730616 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.318388425 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.320535639 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.32411628 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.316778402 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.31788931 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.321278203 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.319920391 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.324942124 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.325419323 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.325185052 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.322349183 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.323848648 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.326737351 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.324833039 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.322565944 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.322249235 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.324981565 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.323183634 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.323949678 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.322595806 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.318308533 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.323120408 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.320355784 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.325142601 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.32325308 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.323833636 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.325552145 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.327845234 seconds)
  done (took 73.927766082 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.32668083 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.326619083 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.320546277 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.325653829 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.326387389 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.322114999 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.326569138 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.323380337 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.323022955 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.326312335 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.321686307 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.324977728 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.319154547 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.325395501 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.322854019 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.327417278 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.325470568 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.324898283 seconds)
  done (took 25.07541686 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.323834579 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.326466503 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.327047583 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.325178622 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.322412563 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.326158555 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.322329456 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.32939235 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326850891 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.325463367 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328157423 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.326046028 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.328854787 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.331242575 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.328712321 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32557768 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.326405151 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.323685709 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.32535226 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.324331475 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.328854187 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.326756207 seconds)
  done (took 30.416224488 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.328157064 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.32835116 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.322824217 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.345547138 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.34260046 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.349347363 seconds)
  done (took 9.250389371 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339403863 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326688169 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.321757093 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330848923 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328309366 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323710659 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322696103 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322415966 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325761988 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32652244 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32488655 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326486476 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324061769 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323477734 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330886561 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324634471 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3238328 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322859619 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327219595 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327284304 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322971704 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327349482 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326463003 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32561121 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326767479 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32569964 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325810431 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327112494 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323306143 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325188189 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329284115 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325776346 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329268932 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325830761 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327643227 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331142045 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326896587 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327759182 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329199725 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323762971 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.330526717 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327878543 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331448712 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328142566 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32860289 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324389088 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325651933 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325469039 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328646205 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330583446 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327738852 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327165497 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331674919 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328289646 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329945003 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330734016 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327197111 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328027309 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328656835 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328512203 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325817797 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330675177 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329246178 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328298653 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331163688 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326899975 seconds)
  done (took 88.861352874 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329406129 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.332500641 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333004736 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331097196 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329690243 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331830304 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332872812 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329178481 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332101078 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326265834 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335600033 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331872516 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327733599 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331623281 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330151488 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326874618 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329713072 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330054615 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325798286 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330112503 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331193127 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32778696 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329714696 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333091723 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326535798 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331127909 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32725668 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329916144 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331319289 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330243726 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329378198 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330258009 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331242144 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.329894402 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3301125 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33034167 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330024631 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332098872 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332113296 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33324396 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331876097 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334872755 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328781351 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333033837 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332660896 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331298036 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332207945 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336050023 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331123895 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329787367 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332136391 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328748228 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333080636 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333781583 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329483981 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333438746 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331881672 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337610262 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33220885 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335483105 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329971741 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330770153 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33464931 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332889324 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331432498 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334347299 seconds)
  done (took 89.103832081 seconds)
done (took 1807.74981001 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.331234427 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.430280028 seconds)
  done (took 14.003795781 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.499689388 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.451158214 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.33567746 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.335784142 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.33224985 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.339588295 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.33017442 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.332715299 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.335687526 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.336130728 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.335877818 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.522989621 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.389054552 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.336138354 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.337232783 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.427400935 seconds)
  done (took 43.233121475 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.362095139 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.343483202 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.453479642 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.353817242 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.364173458 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.529663822 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.393879424 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.34461982 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.515750849 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.377479367 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.920801193 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.36007972 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.342768098 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.466081354 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.358200712 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.534874667 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.588714444 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.921701759 seconds)
  done (took 30.774944756 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.798367255 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.333620994 seconds)
  done (took 9.380947988 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.344579727 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.383831312 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.362464906 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.338588642 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.39622547 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.421245993 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.374615618 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.410649693 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.378252772 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.41183886 seconds)
  done (took 65.080715226 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.362620303 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.343830062 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.340938772 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.340875162 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.34633975 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.33788332 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.340779461 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.336719907 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.065746101 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.476246261 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.347652327 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.349977891 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.361573243 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.342639393 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.342489893 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.374887328 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.54826346 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.344159031 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.338749708 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.346797913 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.344253315 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.479214646 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.383061153 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.344838176 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.471772566 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.076516827 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.350372956 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.349483442 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.525567303 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.344791633 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.340062096 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.341661348 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.346470965 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.958822339 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.787845508 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.355998579 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.368000814 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.353360244 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.34317418 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.562110385 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.348781036 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.348449012 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.33647427 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.795288007 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.478430124 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.46129258 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.647328359 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.367341386 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.348286662 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.405279452 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.348377871 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.342874959 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.37373134 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.125297902 seconds)
  done (took 112.392137403 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.377684068 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.72323741 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.50515928 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.358607596 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.171904232 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.082887155 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.356444541 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.637480559 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.394319928 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.337098526 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.628400753 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.863811931 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.359047506 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.391770357 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.879958927 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.400802334 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.336597247 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.090541279 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.359076007 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.340213218 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.849670973 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.345637699 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.337247296 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.601424775 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.375760454 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.799137974 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.81125877 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.896343228 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.353322359 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.335775804 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.823914762 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.362567321 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.377314974 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.340576632 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.608730378 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.708487336 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.693533601 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.356303255 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.340178321 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.340691395 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.352188887 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.804617358 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.705463154 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.366369611 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.341033194 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.799894107 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.355226288 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.341100761 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.342193838 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.551112997 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.198505856 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.345859207 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.813936059 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.343131825 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.700833249 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.365228725 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.348056497 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.829240743 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.354632309 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.52009072 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.368055596 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.339893747 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.345848716 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.340487853 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.34126274 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.693002813 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.661012541 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.346025266 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.691543384 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.832621405 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.362356879 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.885286407 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.254671638 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.354016757 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.402994343 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.341576011 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.894343497 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.843303892 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.366172004 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.340066916 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.681492744 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.357671307 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.626585234 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.356578923 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.34226711 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861451981 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.351078168 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.384726783 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.340340374 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.347438775 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.105153319 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.348942073 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.635479955 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.368684374 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.343846224 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.341541766 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.35347081 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.341741398 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.341243547 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.34917763 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.883539994 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.363552 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.31319162 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.359633213 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.347759039 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.346813464 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.342028815 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.345329275 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.570650421 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.933933645 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.370934056 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.343401554 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.34320292 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.346453966 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.586944005 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.345574575 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.671794461 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.364890198 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.343322524 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.341402182 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.054279732 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.41504491 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.347946877 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.349126629 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.24447086 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.560020115 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.367277737 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.350288772 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.346527731 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.368067166 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.626658849 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.362661216 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.429641938 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.348123172 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.06777672 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.391666497 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.385431589 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.854725263 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.351734576 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.248297809 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.366015401 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.344535791 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.641161493 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.620685079 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.571810421 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.343651998 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.361498165 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.06333077 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.409639773 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.492065356 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.371466899 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.342331884 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.544672071 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.725207113 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.346654013 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.996956818 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.342846192 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.566771371 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.350753929 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.668726485 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.859259732 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.368097966 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.352642637 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.074705566 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.050615948 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.028180818 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.349276535 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.624603993 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.297667856 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.823861707 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.345727119 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.348663459 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.926111231 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.353760373 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.353973339 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.346138389 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.348373086 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.480063137 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.518128827 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.535117677 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.349921046 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.8053394 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.402241655 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.346820809 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.360619423 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.350625862 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.693013528 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.399893619 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.35179129 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.379835632 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.348235684 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.354624765 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.841866029 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.292625721 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.348228166 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.500696403 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.004982116 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.369225513 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.35047196 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.08618076 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.561283778 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.910303276 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.424176957 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.675865082 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.371603735 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.38821791 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.120972968 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.432574603 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.839955162 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.373126469 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.348320268 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.96568023 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.373698178 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.405837353 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.349986993 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.350200096 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.90064737 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.370993539 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.35129562 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.620935707 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.370407504 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.607788045 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.356240478 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.372656782 seconds)
  done (took 1115.44768063 seconds)
done (took 1391.563265604 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.348852761 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.356876828 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.337292057 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.35718056 seconds)
  done (took 26.664290251 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.358664474 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.35564581 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.358204308 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.358185799 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.359995596 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.355275761 seconds)
  done (took 9.413205455 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.389267979 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.355611799 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.355171101 seconds)
  done (took 19.362143653 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.567271215 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.686938844 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.723662803 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.656967781 seconds)
  done (took 10.899444022 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.357605725 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.358234987 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.360326554 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.360974962 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.365696554 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.362229442 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.36006891 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.362563279 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.363923957 seconds)
  done (took 13.512939892 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.426618358 seconds)
done (took 86.549856199 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.373799976 seconds)
    (2/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.963871707 seconds)
    (3/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.858475761 seconds)
    (4/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.403827317 seconds)
    (5/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.710980065 seconds)
    (6/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.607433907 seconds)
    (7/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.381625519 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.814993068 seconds)
    (9/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.349180848 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.624169115 seconds)
    (11/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.813332516 seconds)
    (12/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.49935261 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.392606438 seconds)
    (14/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.351353023 seconds)
    (15/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.778928344 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.385994027 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.391994297 seconds)
    (18/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.572412717 seconds)
    (19/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.340916652 seconds)
    (20/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.989548869 seconds)
    (21/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.369000777 seconds)
    (22/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.41546283 seconds)
    (23/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.399648616 seconds)
    (24/309) benchmarking ("sort", Float64, false)...
    done (took 5.666966466 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.372560753 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.468464597 seconds)
    (27/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.379449649 seconds)
    (28/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.333274626 seconds)
    (29/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.484989473 seconds)
    (30/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.016095266 seconds)
    (31/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.726736451 seconds)
    (32/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.340100283 seconds)
    (33/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.647108358 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.371513409 seconds)
    (35/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.038288773 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.459988314 seconds)
    (37/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.35348054 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.30492725 seconds)
    (39/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.332710555 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.887308749 seconds)
    (41/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.335220803 seconds)
    (42/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.360463329 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.453360914 seconds)
    (44/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.763005061 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.768747359 seconds)
    (46/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.375024325 seconds)
    (47/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.37515847 seconds)
    (48/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.473321116 seconds)
    (49/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.335795869 seconds)
    (50/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.369198949 seconds)
    (51/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.336853398 seconds)
    (52/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.338429108 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.4707363 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.612265762 seconds)
    (55/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.418028926 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.472142645 seconds)
    (57/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.168482415 seconds)
    (58/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.371622569 seconds)
    (59/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.355665054 seconds)
    (60/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.727128316 seconds)
    (61/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.1932057 seconds)
    (62/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.470319135 seconds)
    (63/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.756128424 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.416844282 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.773854142 seconds)
    (66/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.191190355 seconds)
    (67/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.607866133 seconds)
    (68/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.780878471 seconds)
    (69/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.790369955 seconds)
    (70/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.344499594 seconds)
    (71/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.367936953 seconds)
    (72/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.405731526 seconds)
    (73/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.443684837 seconds)
    (74/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.613507633 seconds)
    (75/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.427244303 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.145350714 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.589082282 seconds)
    (78/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.39699774 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.006045593 seconds)
    (80/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.439548947 seconds)
    (81/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.365111831 seconds)
    (82/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.865489841 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.414830399 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.33465783 seconds)
    (85/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.348699485 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.339644281 seconds)
    (87/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.463160182 seconds)
    (88/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.572362271 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.624679852 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.353802956 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.399620066 seconds)
    (92/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.361089972 seconds)
    (93/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.389359896 seconds)
    (94/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.574901522 seconds)
    (95/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.062557679 seconds)
    (96/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.356121757 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.423968854 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.383467623 seconds)
    (99/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.356371014 seconds)
    (100/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.463195806 seconds)
    (101/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.498050359 seconds)
    (102/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.58279293 seconds)
    (103/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.360667277 seconds)
    (104/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.383808403 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.448234065 seconds)
    (106/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.442284204 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.968395882 seconds)
    (108/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.172818973 seconds)
    (109/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.773348835 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.52096644 seconds)
    (111/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.443970228 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.306065505 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.788536213 seconds)
    (114/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.361977343 seconds)
    (115/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.36645604 seconds)
    (116/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.444871188 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.287495385 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.577016087 seconds)
    (119/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.924480539 seconds)
    (120/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.44669297 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.35621985 seconds)
    (122/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.500340713 seconds)
    (123/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.141831853 seconds)
    (124/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.376849211 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.437615249 seconds)
    (126/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.683877842 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.380716135 seconds)
    (128/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.257092295 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.726821808 seconds)
    (130/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.382726688 seconds)
    (131/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.886528724 seconds)
    (132/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.261510414 seconds)
    (133/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.355231384 seconds)
    (134/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.486502485 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.261073933 seconds)
    (136/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.380243891 seconds)
    (137/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.017088645 seconds)
    (138/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.392209108 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.406377377 seconds)
    (140/309) benchmarking ("sort", Bool, false)...
    done (took 1.87773465 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.40255725 seconds)
    (142/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.852595603 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.621912417 seconds)
    (144/309) benchmarking ("sort", Int8, false)...
    done (took 4.421187145 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.964578253 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.377052016 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.167256251 seconds)
    (148/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.465962796 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.623166476 seconds)
    (150/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.343319366 seconds)
    (151/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.44012169 seconds)
    (152/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.346857473 seconds)
    (153/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.363612501 seconds)
    (154/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.443896181 seconds)
    (155/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.734534323 seconds)
    (156/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.653316825 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.232780721 seconds)
    (158/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.490254681 seconds)
    (159/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.876787458 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.367928623 seconds)
    (161/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.13596717 seconds)
    (162/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.385204604 seconds)
    (163/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.350306995 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.014291354 seconds)
    (165/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.521818653 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.152735218 seconds)
    (167/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.389195065 seconds)
    (168/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.447337108 seconds)
    (169/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.907643945 seconds)
    (170/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.417994375 seconds)
    (171/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.362685773 seconds)
    (172/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.282698261 seconds)
    (173/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.392033119 seconds)
    (174/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.367061625 seconds)
    (175/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.38997126 seconds)
    (176/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.382529526 seconds)
    (177/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.363431289 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.282199424 seconds)
    (179/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.392637627 seconds)
    (180/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.755146786 seconds)
    (181/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.752928023 seconds)
    (182/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.385836613 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.378755373 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.070562662 seconds)
    (185/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.550904965 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.985019569 seconds)
    (187/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.957274332 seconds)
    (188/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.348599885 seconds)
    (189/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.413074204 seconds)
    (190/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.708598645 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.364211486 seconds)
    (192/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.369343793 seconds)
    (193/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.920511289 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.395205424 seconds)
    (195/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.389776128 seconds)
    (196/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.43967639 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.49481683 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.402930999 seconds)
    (199/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.348249986 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.419359898 seconds)
    (201/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.473135352 seconds)
    (202/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.346802897 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.809523309 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.497088895 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.366112751 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.418431993 seconds)
    (207/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.392856888 seconds)
    (208/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.391941063 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.728673292 seconds)
    (210/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.383505596 seconds)
    (211/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.475379362 seconds)
    (212/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.390192347 seconds)
    (213/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.346622826 seconds)
    (214/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.092493496 seconds)
    (215/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.920376727 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.046265874 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.57823184 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.157302154 seconds)
    (219/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.476674922 seconds)
    (220/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.435254945 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.366646386 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.859056606 seconds)
    (223/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.390073677 seconds)
    (224/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.207729428 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.470310279 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.383384727 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.388803569 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.318110971 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.36398634 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.419979132 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.379627531 seconds)
    (232/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.35297582 seconds)
    (233/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.198137336 seconds)
    (234/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.304598065 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.441466814 seconds)
    (236/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.000435429 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.311552653 seconds)
    (238/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.908063557 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.371419554 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.864224654 seconds)
    (241/309) benchmarking ("sort", BigInt, false)...
    done (took 6.371341341 seconds)
    (242/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.574625706 seconds)
    (243/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.489691746 seconds)
    (244/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.247021134 seconds)
    (245/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.457078251 seconds)
    (246/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.011108085 seconds)
    (247/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.374200526 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.36963771 seconds)
    (249/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.382008492 seconds)
    (250/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.646399215 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.389494618 seconds)
    (252/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.390658206 seconds)
    (253/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.351645524 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.235303554 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.750794276 seconds)
    (256/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.385481436 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.215277694 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.594956452 seconds)
    (259/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.374786762 seconds)
    (260/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.361073168 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.348514596 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.06892146 seconds)
    (263/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.35362026 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.399280151 seconds)
    (265/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.19186288 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.998141977 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.18370074 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.801882919 seconds)
    (269/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.371933215 seconds)
    (270/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.499786185 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.747221191 seconds)
    (272/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.438317062 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.023097365 seconds)
    (274/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.179210356 seconds)
    (275/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.398996363 seconds)
    (276/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.36697921 seconds)
    (277/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.737660889 seconds)
    (278/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.352666169 seconds)
    (279/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.905897314 seconds)
    (280/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.373891681 seconds)
    (281/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.106317253 seconds)
    (282/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.372268097 seconds)
    (283/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.358393371 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.466653669 seconds)
    (285/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.699927645 seconds)
    (286/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.219938409 seconds)
    (287/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.382405895 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.450583405 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.792086348 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.396043097 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.493924394 seconds)
    (292/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.480651371 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.427351045 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.197666856 seconds)
    (295/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.605272396 seconds)
    (296/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.392444281 seconds)
    (297/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.38255177 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.42028234 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.87458038 seconds)
    (300/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.062917278 seconds)
    (301/309) benchmarking ("sort", Float32, false)...
    done (took 5.391979168 seconds)
    (302/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.390359373 seconds)
    (303/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.511273406 seconds)
    (304/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.369667183 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.39037455 seconds)
    (306/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.559270001 seconds)
    (307/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.849463665 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.370064563 seconds)
    (309/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.272292394 seconds)
  done (took 1051.83339281 seconds)
done (took 1053.104788283 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.410874056 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.400522935 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.385664355 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.410275194 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.502095342 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.415063287 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.403940252 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.391533897 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.434590562 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.432719757 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.382073399 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.406480786 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.390996188 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.386493359 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.38657602 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.401937102 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.512211322 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.394672254 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.406707312 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.397224761 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.407475529 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.389950913 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.438905802 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.404904206 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.393002798 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.390325293 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.393674047 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.410092672 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.504131109 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.398060839 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.394277705 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.403459719 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.516708838 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.39251048 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.384085344 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.409349405 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.401698846 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.394150875 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.393259108 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.424053951 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.951838185 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.408203142 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.396400258 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.395278229 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.389843376 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.398010442 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.393573122 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.397517373 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.406219986 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.408522793 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.956056536 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.425004489 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.397382097 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.394217934 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.406438159 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.395313667 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.395852652 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.41071271 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.416668509 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.412677033 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.498967078 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.399186898 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.399638111 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.407147686 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.401857685 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.999375629 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.406278776 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.398635434 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.946835875 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.416647143 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.995573729 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.42116819 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.395142325 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.408162211 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.422802155 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.511916835 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.391804071 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.397236225 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.402260647 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.392706843 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.408764299 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.407028408 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.403384304 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.396059144 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.407880072 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.4189407 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.405021599 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.39574792 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.404782987 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.416954332 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.403464473 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.406651142 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.40284572 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.393161703 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.409287593 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.401523708 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.398151519 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.40340068 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.40351824 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.406725296 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.895918524 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.427017263 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.397302818 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.391426672 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.399637757 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.411437105 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.895189242 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.412040263 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.418883972 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.447594776 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.396352113 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.499528835 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.400765712 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.415709133 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.406673765 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.400724071 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.390712812 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.503489436 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.965057492 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.428814908 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.398268658 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.397980861 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.418303184 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.404063808 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.396968154 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.523571608 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.400486497 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.413111873 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.522521923 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.40768058 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.432518702 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.39915133 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.400469002 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.418505698 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.41780749 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.429746409 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.402050502 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.419962163 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.416002857 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.396812876 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.41010583 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.411783134 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.40270242 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.404447835 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.391325754 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.42241018 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.413337632 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.415978112 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.42169242 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.523841489 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.397343847 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.509458658 seconds)
done (took 236.506671879 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.464251547 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.397380347 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.485107636 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.394327894 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.495565446 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.494988531 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.395550358 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.393465594 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.389643607 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.77229255 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.393251362 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.395903436 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.387034529 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.394639883 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.473772038 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.397151343 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.396351551 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.737565523 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.396275835 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.466549688 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.390055824 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.394422974 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.396819798 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.776924987 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.39354509 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.394969693 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.468130665 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.394237335 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.740143548 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.392627707 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.397345015 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.744198128 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.486393214 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.419503534 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.40733532 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.406068912 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.499832581 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.416391781 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.48214857 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.479187897 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.492736597 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.435662416 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.39621905 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.394884709 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.4017378 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.399409908 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.39839249 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.42744557 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.393577883 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.398291776 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.743297076 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.41136854 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.397881316 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.397025848 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.399980697 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.428415233 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.397887376 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.40050429 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.489278658 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.399866484 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.470456962 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.782407262 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.777603723 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.402125726 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.40019404 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.396558399 seconds)
  done (took 152.732718056 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.467906522 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.475396011 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.517210276 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.419806232 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.452864504 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.523674773 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.417655061 seconds)
  done (took 11.576793194 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.408080417 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.401803364 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.457885428 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.458346146 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.403283701 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.565395804 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.405335011 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.41435034 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.40058246 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.456469309 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.404124906 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.404322049 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.409444327 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.405527424 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.455844628 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.414795998 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.515593398 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.404103106 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.401598857 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.561101433 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.401884232 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.41065231 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.455399218 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.413677397 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.404708269 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.411852667 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.985993289 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.403064596 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.398116627 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.402241716 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.401034169 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.440788863 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.403626672 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.402993897 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.40064348 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.537106791 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.40585643 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.404683618 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.406725814 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.399978177 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.402466504 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.404235544 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.404687931 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.403690449 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.40627463 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.426964276 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.405233639 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.404561608 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.406075655 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.405959226 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.456412433 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.405301202 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.40347271 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.402055473 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.460447734 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.414861168 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.406640141 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.402051573 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.407785774 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.404711569 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.563736563 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.459902692 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.403015014 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.456264621 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.408113456 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.406424589 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.407871442 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.405577833 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.460882484 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.407279464 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.460964055 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.403698707 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.559362012 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.430645213 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.40964648 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.411166636 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.410894252 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.409231064 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.403394303 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.413833892 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.402701577 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.404950741 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.412766759 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.404423453 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.407257978 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.524661186 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.514594917 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.407651093 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.421158917 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.414956137 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.407289899 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.460285678 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.405907064 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.4054696 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.468931555 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.522424302 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.462321053 seconds)
  done (took 160.315795596 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.41072545 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.417248793 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.411204444 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.426176523 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.410026237 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.408535486 seconds)
  done (took 9.792199476 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.413675695 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.412217283 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.409834482 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.41094302 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.410070716 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.411884523 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.410425837 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.413682143 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.414616614 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.409563131 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.407299052 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.410487104 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.409746895 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.410333904 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.411406316 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.411622806 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.411007385 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.409944063 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.412809026 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.411300708 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.517369477 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.411521366 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.412548034 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.413467049 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.414779967 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.413884072 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.419794177 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.412670089 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.414445503 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.420027521 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.433994195 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.411385967 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.411678663 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.416839625 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.418064299 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.413036837 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.416997561 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.413706762 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.412798396 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.410767593 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.413949511 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.412770474 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.415411372 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.415056069 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.415707209 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.418426239 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.418443365 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.419080789 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.414624043 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.414224498 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.416974338 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.413856505 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.414578734 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.416601554 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.41464718 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.434833013 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.419525061 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.414997473 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.414052312 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.416485995 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.417261207 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.412402265 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.417635595 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.419815753 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.413915394 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.416318084 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.865545152 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.419935908 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.417177263 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.415419124 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.415333192 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.413964561 seconds)
  done (took 104.724870571 seconds)
done (took 440.44938689 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.41009392 seconds)
  done (took 7.719833186 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.574582007 seconds)
  done (took 7.888386135 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.644085572 seconds)
  done (took 23.964353064 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.494055873 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.440087404 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.436981333 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.418386613 seconds)
  done (took 27.105062365 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.008138211 seconds)
  done (took 8.321428593 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.405861795 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.409725605 seconds)
  done (took 14.128789835 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.56819715 seconds)
  done (took 7.881178275 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.099076401 seconds)
  done (took 8.41562857 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.43236901 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.429102688 seconds)
  done (took 14.448515586 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.389498467 seconds)
  done (took 7.704250245 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.443852206 seconds)
  done (took 8.757485065 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.420926818 seconds)
  done (took 7.73567875 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.490192723 seconds)
  done (took 7.802099185 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.917992577 seconds)
  done (took 10.231194578 seconds)
done (took 163.424615225 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.407693641 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.408440751 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.399093598 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.407240249 seconds)
  done (took 26.935430134 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.469117473 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.447156835 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.450017916 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.460523282 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.451779451 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.449023398 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.438337759 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.440207229 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.459929918 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.450403336 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.450697038 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.452066686 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.449619421 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.457483082 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.450589254 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.452842513 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.462067014 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.452252721 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.442982167 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.451534086 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.417148271 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.457584285 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.452533242 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.418966809 seconds)
  done (took 36.101589138 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.939446348 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.488096454 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.570761541 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.46773939 seconds)
  done (took 7.78029218 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.469227184 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.471710691 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.485625663 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.520886406 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.547754007 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.480223879 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.440216484 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.439648675 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.423573088 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.47375757 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.545993016 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.487530643 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.553969178 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.416841413 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.603834779 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.417053694 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.416753689 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.469939171 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.52367709 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.536590178 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.418626541 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.471736559 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.474000526 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.488847612 seconds)
  done (took 36.8940471 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.419764498 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.435535565 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.419154791 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.417221935 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.426071541 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.418565728 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.41885517 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.420623669 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.41726312 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.422939865 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.418342081 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.430192229 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.417088016 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.417399311 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.42498441 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.418236874 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.426759285 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.418996372 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.418320304 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.426729187 seconds)
  done (took 29.751468179 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.414035172 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.266999149 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.765536406 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.667748356 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.413049086 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.413994884 seconds)
  done (took 28.25751639 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.494185813 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.658616864 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.417905503 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.808869226 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.906860343 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.438229704 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.42066106 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.681686528 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.024542853 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.007430846 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.479568633 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.491838254 seconds)
  done (took 21.150215264 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.419186846 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.416536907 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.41606343 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.429488656 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.479124472 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.441291096 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.428902117 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.413850841 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.480425436 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.501389509 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.442019901 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.479530942 seconds)
  done (took 38.666869883 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503046301 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.457271571 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.392652851 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412783956 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.155745327 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.625187385 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.43531483 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.886710626 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.415144858 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69057514 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430804716 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507258937 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.673475332 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416384068 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.419217436 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.464487853 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.660607224 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924766735 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409940601 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.690803928 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442241197 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.425215419 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.712659844 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.44726726 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.629097718 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.558632329 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.678880095 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.195035883 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.735035332 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.428421013 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430038942 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419877914 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690883851 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122173489 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531834817 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430373021 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4206101 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.985878597 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.40657022 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.629521139 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422502126 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.44227057 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431008616 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418091154 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.354460765 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.42092043 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892454565 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.420119005 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.130218242 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.420118444 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427301934 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515106265 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.424017351 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.987904169 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453295357 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.427245219 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.418952657 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514841846 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007840828 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.163269491 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42866329 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.355416751 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.420706315 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.698512802 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097761304 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.540042366 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.423568266 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.425183362 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356304641 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.671819492 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439634031 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.567935416 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.438671904 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.070767596 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172617454 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.44819784 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.352518906 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976183144 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431326914 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.35686301 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65053058 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.197814253 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357891501 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.371795773 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.355749561 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153464806 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421843336 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.848603219 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430944374 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.907014172 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.426802661 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439898158 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443612084 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.646248742 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.303924765 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422902543 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.429136764 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544615212 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437711106 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.892250333 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350344887 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.419060958 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.680164144 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.635259133 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425437268 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.468959458 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67246171 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417594617 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.446018301 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.422361587 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.433400255 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.03887179 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.453546437 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.164207844 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44076484 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.197055682 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181682692 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421844112 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.525047356 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.440085107 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682534521 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.204608694 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.300587716 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492715129 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427218874 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.426175411 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.737886426 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.016581762 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.306424154 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.422242629 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425088341 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.432470974 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.421489454 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372180645 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.420833588 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427605823 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.206147972 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.648872348 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436299057 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702204972 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361222172 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.571084182 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.431057447 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.644193967 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.709796664 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.432393238 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.684923904 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42600749 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.434249559 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.436405462 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445624784 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52916246 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448114443 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.440195009 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.684494856 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.430722787 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.43088289 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.740121962 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.207857185 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427178284 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.433322525 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445771349 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047624112 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422278905 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.423224998 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.317475233 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.43997556 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493864153 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.431780193 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.43764338 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.371074658 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44866428 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.434701023 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.423754805 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.666482213 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.438811472 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.733385808 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.50927756 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.652098265 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.049399177 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458747206 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.362767306 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.138655001 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.120875373 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426839521 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.62262906 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.426818316 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43823736 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.439397829 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.428596112 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.043225639 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.448026652 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.658414899 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.435429818 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.441840112 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.433619868 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430976396 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.359704892 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.214802893 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.43224562 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.440552655 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572670955 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.445486511 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.363350657 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.946977215 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.43638962 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.430718795 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.214206217 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464878781 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.658536175 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93548476 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681986139 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.449467615 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.444220096 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.776329205 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.467175893 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.427002249 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436856321 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43444513 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.442393175 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440599675 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.441991685 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.672265907 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.796261488 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991216297 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207102757 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031386034 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.451045698 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.440462195 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.315488051 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.90601761 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361040689 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.089348035 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635826668 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.926273942 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376080057 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.658895307 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.726738229 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.26853125 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.443925961 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65871222 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43328874 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.448174834 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445172576 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.643610349 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469107134 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.438437976 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.361923083 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.706101664 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.707059175 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425543907 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.52912659 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904009563 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.426321827 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.212977352 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.467530376 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.813862432 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.631756981 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.035675049 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.821039738 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.426675799 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.439437065 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939427412 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.42829974 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.958214048 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103534816 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.468991498 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.661334124 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370854627 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.445448025 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.444391397 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.431788852 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.879987362 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.436528393 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.691528067 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.446768117 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370284939 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.451171546 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001202736 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.307634414 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.44000324 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435935822 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213801289 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440070425 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.750096321 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.446208836 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.357213315 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45983726 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.371455964 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3709078 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.12870139 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.446050902 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414681912 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961128371 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.440930304 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441279087 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.435818931 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303042847 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.692490413 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.450538516 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.058564473 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682423803 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.437319782 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482873149 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.537628811 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.452710003 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.41913247 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.365844117 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.672535976 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.511305865 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.680554749 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.458936938 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.336725428 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.437021913 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.649552155 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.331433617 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.438472702 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.727455612 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.166976961 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.459964222 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214109579 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479611026 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.443083736 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.449432607 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.442793367 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459707827 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528728352 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.448422694 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.447426966 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.447990516 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.628283719 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450025974 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.440982178 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.451734662 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530804897 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.225272443 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.361195659 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.211738814 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062886423 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245772523 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.087598053 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468615971 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.441434061 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441088258 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373039849 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586086267 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.96531806 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.712458534 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.571015591 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.433971107 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463601341 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.437710059 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.468020688 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65337631 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.715411368 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.411639984 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441168478 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.227200218 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.322960412 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.451410451 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.653754025 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959823998 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013285403 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547284389 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.45128014 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.910891358 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.70774708 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.531863974 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.442411174 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.029688542 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.44371491 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.830241239 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.457744877 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.448505605 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589607579 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.450858204 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154270564 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.469084829 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.601746288 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.214765914 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.785324422 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.698875005 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.914502355 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.453178435 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070371154 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.207253574 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.707509922 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51123755 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.452627891 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.547099267 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590990879 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.44569474 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.344643287 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.442974056 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287858521 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.151642638 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.450811651 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067754882 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.721113239 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.43891283 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.445621711 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46780844 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.454081781 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.666948644 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186099086 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.666599554 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.453320024 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.452258534 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.016180111 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.075087994 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472878065 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376593008 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.440754141 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713604886 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.696186 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465458051 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.896834441 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.155342901 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014209565 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.407415723 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464744022 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.450728619 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.194312116 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070500954 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.391843929 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977752052 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.103098802 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.452155229 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.71959719 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.449830845 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.446550476 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.720239763 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.448469491 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.456016975 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.457200236 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.070613211 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.289297252 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.462536342 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.822203462 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.380493385 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.672836711 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.466592371 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.403107146 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436930624 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.643004627 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.446941069 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.578476675 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.451963701 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.453427129 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45040949 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.179161509 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.723720479 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.442447353 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.437758723 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.429474342 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.453458179 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544641307 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.723702294 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441251746 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.1188445 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.797642245 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.702454135 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.446079689 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.426173424 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.451518027 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447041705 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.165563585 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.453239302 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.444384185 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046734978 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.443143064 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.461363425 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.451320144 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.664879204 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659886814 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.464922892 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.460271278 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45504158 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.46255493 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.346651289 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.215365044 seconds)
  done (took 1695.718191938 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.466683927 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.478651718 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.454767132 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.499109711 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.497260522 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.501875045 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.523475245 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.561973398 seconds)
  done (took 53.330995047 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.458477607 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.605256726 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.480232239 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.459439523 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.456477791 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.453366668 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.944125978 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.474546045 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.456124518 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.45881099 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.452496458 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.455322667 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.156579967 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.458302746 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.462036515 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.44274458 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.451247803 seconds)
  done (took 67.476808799 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.455624537 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.71910541 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.474999545 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.453571252 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.928499817 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.458311395 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.748496882 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.498446663 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.441666476 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.680823034 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.117754478 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.48450447 seconds)
  done (took 81.811957361 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.458906372 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.457607638 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.458556716 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.455198556 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.458140941 seconds)
  done (took 8.637519368 seconds)
done (took 2133.833291432 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.698867894 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.191121033 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.119914546 seconds)
  done (took 5.657721086 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.598401763 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.647230113 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.766001585 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.774919464 seconds)
  done (took 8.134521651 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.736456076 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.836520292 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.644948629 seconds)
  done (took 6.568274071 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.953398892 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.455300515 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.466003574 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.448748666 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.452694617 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.451873992 seconds)
  done (took 20.704567763 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.454882834 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.457625056 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.455562309 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.458326451 seconds)
  done (took 7.175027941 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.432470388 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.147863446 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.431990644 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.4500318 seconds)
  done (took 18.81236123 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.201947891 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.214872123 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.198974526 seconds)
  done (took 7.96647392 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.451503246 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.314918026 seconds)
  done (took 10.117560962 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.754854216 seconds)
  done (took 3.103532881 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.589713051 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.787450643 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.585283679 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.442947773 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.605433941 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.612404393 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.229035632 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.800037755 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.418519668 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.809122484 seconds)
  done (took 30.232444326 seconds)
done (took 137.401213647 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.483870066 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.821117738 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.658708795 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.453587506 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.680101771 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.660856021 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.664347441 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.427980057 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.126376549 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.951563479 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.490716093 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.680089724 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.825674424 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.826997856 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.829195706 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.701136548 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.687130336 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.526290533 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.137891482 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.372858071 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.657590283 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.090601403 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.32543079 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.275087952 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.689699551 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.621284804 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.672650087 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.689552549 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.315109722 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.856096126 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.640009546 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.458016509 seconds)
  done (took 200.650041759 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.465524169 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.447252623 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.447137223 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.458238342 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.4631662 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.456696752 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.450190306 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.464697738 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.453197689 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.459098491 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.447768739 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.449123389 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.44798307 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.448537256 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.449449652 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.44883574 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.464895838 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.459418441 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.446900602 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.469337742 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.448079537 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.464293663 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.448806413 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.449536104 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.467689982 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.44607449 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.450260973 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.452504897 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.449589886 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.450781373 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.459340992 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.47338806 seconds)
  done (took 207.913321066 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.458314092 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.450214371 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.477753078 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.449381483 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.463445445 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.453268851 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.449345222 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.467191518 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.46364508 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.449366892 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.44969064 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.466049097 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.451569366 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.467542973 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.452309431 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.45317361 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.451410994 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.469938317 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.479832348 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.451143986 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.454084411 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.478248964 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.447956427 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.449986691 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.457923817 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.453031961 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.4543144 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.452975182 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.451799467 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.459548421 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.458651243 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.461126683 seconds)
  done (took 208.012439385 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.663139466 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.468050805 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.46650353 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.420642294 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.468219717 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.467568247 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.465076188 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.656108248 seconds)
  done (took 15.434892538 seconds)
done (took 633.372425832 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.916006764 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.619685651 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.677378853 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.488904094 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.344144216 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.507674673 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.486973828 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.670946384 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.442562169 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.681069752 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.787723319 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.501471817 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.933784856 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.488546163 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.758923081 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.591814251 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.434178744 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.572361285 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.820986853 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.100265757 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.766600152 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.023920458 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.692089595 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.429414519 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.952237148 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.015491934 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.294058861 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.429875808 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.501711141 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.826682775 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.288651149 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.550512198 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.556913894 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.551105516 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.608415222 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.594033543 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.528364776 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.551260125 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.697551206 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.780675172 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.109124934 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.248574145 seconds)
  done (took 99.180356894 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.453402555 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.453797569 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.451740377 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.454117021 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.455239364 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.453801601 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.451769486 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.451644542 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.454762905 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.455740722 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.455051176 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.456943727 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.45681344 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.455964307 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.456306772 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.454064248 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.458545622 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.457017797 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.455103291 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.455630537 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.456136805 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.453939529 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.456395825 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.455392577 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.454693945 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.456911312 seconds)
  done (took 39.192360344 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.471742734 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.731859892 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.906098696 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.480243197 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.471844416 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.476835521 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.556461579 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.47583567 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.477301049 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.476924603 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.648564282 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.476019968 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.507828504 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.929229346 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.477036666 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.474662052 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.476729581 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.475634677 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.740069315 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.480938419 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.573671864 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.47547977 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.557793321 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.484111718 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.494993774 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.473707807 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.478475465 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.002227238 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.492886313 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.64946617 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.326252456 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.551905937 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.962483176 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.929451405 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.328623721 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.477470664 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.477159542 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.653937974 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.478085753 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.477223631 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.555899289 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.476285926 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.913055174 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.109266834 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.49620134 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.476910496 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.025752298 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.673180671 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.74326428 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.486082159 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.940977213 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.480010206 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.479519979 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.47569694 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.741221017 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.485650333 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.477201774 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.040431504 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.502076388 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.557728089 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.47814406 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.479297286 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.747534722 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.477738945 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.73689333 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.480888624 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.482806379 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.494999138 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.915896119 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.477694854 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.136299539 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.494591155 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.478735724 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.651629454 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.737908535 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.071703946 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.499025277 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.753084051 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.969479716 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.5748721 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.483358108 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.00173305 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.578721875 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.482532038 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.483287343 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.479205212 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.476775677 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.53225051 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.559692786 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.063144283 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.137988095 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.063592159 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.581576987 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.49287486 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.482133201 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.049163681 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.498971747 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.479243753 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.915290932 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.131242269 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.495542706 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.488013499 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.132427415 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.499388713 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.564351398 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.484876992 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.923874363 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.483988794 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.535181037 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.481368621 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.488778736 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.500682661 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.565796983 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.486935886 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.479664884 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.105781686 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.682682315 seconds)
  done (took 193.569999438 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.482017938 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.464387474 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.487747157 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.46579311 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.473943113 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.480572731 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.472927862 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.475780192 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.479369592 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.475343337 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.475017269 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.476245342 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.475775179 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.471975599 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.497089365 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.481763093 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.087391804 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.471644336 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.475560509 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.468705504 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.284822981 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.474274071 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.476798137 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.467447298 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.476425856 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.477065043 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.479852397 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.4688899 seconds)
  done (took 156.116292519 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.482954077 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.103083864 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.500499001 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.625065635 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.506407606 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.480470191 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.621713563 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.546252616 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.503299242 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.480024961 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.48013701 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.810911456 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.478063317 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.030688217 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.679121803 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.643854242 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.053724459 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.501448384 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.480710695 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.48165582 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.624410044 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.489526899 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.816653517 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.107455301 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.502036689 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.10597209 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.46963443 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.482958415 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.482337838 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.110297802 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.499860367 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.817093029 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.567581697 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.549072269 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.124456984 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.072441279 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.07107389 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.647616773 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.484563772 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.483488799 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.48443724 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.469497135 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.109813385 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.502368901 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.485145548 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.099093465 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.503253732 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.488015357 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.489104277 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.485938927 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.549341393 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.5679801 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.838202686 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.116344668 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.586954202 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.496252182 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.628668555 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.909324322 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.488814434 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.057332839 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.46888997 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.11673465 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.506019938 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.469840374 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.485070541 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.492578936 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.650025763 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.630723909 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.059264068 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.502183741 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.058760339 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.668400308 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.486123052 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.48462705 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.48595214 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.114035579 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.077365588 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.668100627 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.633228819 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.694363776 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.472384206 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.4823389 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.470657002 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.573130743 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.485869622 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.119247922 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.079168198 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.506285775 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.490084823 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.490470306 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.487921874 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.67612729 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.135044123 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.586073011 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.050320698 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.84590581 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.82559995 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.48902404 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.551425702 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.502651388 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.82766896 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.487710555 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.553255222 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.980185307 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.829271277 seconds)
  done (took 177.482086021 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.745730231 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.807284706 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.587775694 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.627074796 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.133217019 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.069274343 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.834624758 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.638971785 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.60911109 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.76117852 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.727245408 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.578311143 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.672606631 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.570669658 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.288825143 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.582101308 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.602350448 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.637226359 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.606650845 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.565210059 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.184837851 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.789152677 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.672547263 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.453567393 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.587621175 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.34908158 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.073017762 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.024535717 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.679107451 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.926189428 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.065092947 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.677100718 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.521972918 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.224720083 seconds)
  done (took 71.251887186 seconds)
done (took 738.159312037 seconds)
SAVING RESULT...
DONE!
