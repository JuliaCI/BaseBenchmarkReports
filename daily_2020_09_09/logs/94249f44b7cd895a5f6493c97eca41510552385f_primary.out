cset: moving following pidspec: 10046
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.571945127 seconds)
loading group "shootout"... done (took 1.141972103 seconds)
loading group "string"... done (took 0.471705935 seconds)
loading group "linalg"... done (took 7.726183971 seconds)
loading group "parallel"... done (took 0.157819014 seconds)
loading group "find"... done (took 1.274676622 seconds)
loading group "tuple"... done (took 1.946663328 seconds)
loading group "union"... done (took 12.352310722 seconds)
loading group "dates"... done (took 1.300214416 seconds)
loading group "micro"... done (took 0.201834671 seconds)
loading group "simd"... done (took 4.293609757 seconds)
loading group "io"... done (took 1.012314775 seconds)
loading group "random"... done (took 8.598192178 seconds)
loading group "problem"... done (took 1.447011299 seconds)
loading group "array"... done (took 19.138308934 seconds)
loading group "misc"... done (took 1.467064266 seconds)
loading group "scalar"... done (took 38.926396998 seconds)
loading group "sort"... done (took 3.074819826 seconds)
loading group "sparse"... done (took 11.587777546 seconds)
loading group "collection"... done (took 17.00342641 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.497706969 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.116710239 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.12169523 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.112165465 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.193142279 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11451413 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.119525901 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.080557065 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.792079282 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.133210313 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.108733728 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.398208998 seconds)
done (took 5.104867617 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.16301243 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088065071 seconds)
    (2/2) benchmarking "String"...
    done (took 0.078821198 seconds)
  done (took 1.258343688 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.061255387 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128933191 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.061908004 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.062666142 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.062626438 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.061783417 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062138857 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.061875291 seconds)
  done (took 1.594396917 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.067373964 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.063355196 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.061254322 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06322276 seconds)
  done (took 1.349780969 seconds)
done (took 5.534154169 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.229699115 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.095214055 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.273776257 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.432615786 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.582994108 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.090084166 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.070066797 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.065466648 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.122600775 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.328496409 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.098167608 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.173219206 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.085112641 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.168142207 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.957368003 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.114066836 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081675404 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.117312564 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089231193 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128097467 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.376796868 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.073184817 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.069378547 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.065886502 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.063756952 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.631206264 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660077559 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.125141892 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079406081 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.158417952 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.112700683 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.640970219 seconds)
  done (took 10.485951116 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.087469579 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.086242471 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.064988887 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.11894748 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.088091499 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.065123737 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07036573 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.063278336 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.083246894 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.118571412 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087111063 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.092383898 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.062627362 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.064652883 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.070212049 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.191123586 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.07556758 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.076383695 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.063429149 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075669281 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.100810495 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.073846557 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.073444304 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.073412817 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.124371785 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.165219273 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.092418831 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.093925843 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06196343 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.07443117 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115166155 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123340685 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.062488253 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.061245205 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.114652424 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.091036149 seconds)
  done (took 4.350639078 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.918191693 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.088769093 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.095081975 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.592696069 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06211786 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.143078486 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.234324748 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068787674 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.362824393 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.141180826 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.131816064 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.141021697 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.110627502 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.06775453 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.143797512 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.107519241 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.436118161 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.063187267 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.062541306 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.061170617 seconds)
    (20/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.059755271 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.063627281 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.063262016 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.059169496 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06452288 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.090369129 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.082463652 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.140108047 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.882528768 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.225811193 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.063363145 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.154773865 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.083078999 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.379788774 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.068142324 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.078489693 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.401536046 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.117828731 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.061986662 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.157339218 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.111848069 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.060148946 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.110357955 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.07381727 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.064548328 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.06466562 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.064428012 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067352133 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.074030855 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.099316718 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063577188 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.061252866 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.157491495 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.060511632 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062277781 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.06263519 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.145504017 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062373789 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.13613 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.061875098 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06588355 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.099924366 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064635162 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.082357458 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.091550801 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.333244897 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.029856296 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.064882658 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.93989075 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075490565 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.062524011 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066506437 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062531663 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.0634877 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063222862 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.06926938 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066448543 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064960641 seconds)
    (78/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103636472 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.062044387 seconds)
    (80/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065727942 seconds)
    (81/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062204352 seconds)
    (82/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067357789 seconds)
    (83/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.093202586 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063302979 seconds)
    (85/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.465856497 seconds)
    (86/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.093351783 seconds)
    (87/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062124958 seconds)
    (88/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.074851749 seconds)
    (89/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.100371835 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06299712 seconds)
    (91/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.06728415 seconds)
    (92/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.063041182 seconds)
    (93/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062675962 seconds)
    (94/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06206394 seconds)
    (95/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.062462078 seconds)
    (96/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.065448492 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.079241915 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.091022388 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.060023538 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065299856 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.108408086 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.137262753 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.065683874 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062701187 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068223247 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065198048 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065717134 seconds)
    (108/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062465847 seconds)
    (109/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064802311 seconds)
    (110/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064340472 seconds)
    (111/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061197368 seconds)
    (112/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.102763584 seconds)
    (113/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.062542253 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.060687535 seconds)
  done (took 20.8439585 seconds)
done (took 37.691770625 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.24439067 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074776638 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073924411 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074247323 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074108074 seconds)
  done (took 1.73562714 seconds)
done (took 2.91766831 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.103537933 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.06108444 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.093944158 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.093109649 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.060132314 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.059930978 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.095409867 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.059913277 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.092655049 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.093839026 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.095175829 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.094619663 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.060289801 seconds)
  done (took 2.256354921 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065954317 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076925415 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.07842747 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.05778166 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.067309121 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077349869 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060864087 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076572548 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.081921596 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077130632 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.076693822 seconds)
  done (took 1.974272682 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065780532 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076457071 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.078340404 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058371152 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.068352812 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077141226 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058030079 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076320336 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.078995408 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.076948949 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.076489533 seconds)
  done (took 1.962283151 seconds)
done (took 7.36670269 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.061990708 seconds)
  done (took 1.217663386 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.49390116 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.126157071 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.06351625 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.081625286 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184919203 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.087488487 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.195388 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.066900819 seconds)
  done (took 7.633965754 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.092093441 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067028699 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.063729314 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.063887633 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.063841336 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.063593821 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.065172582 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.064685468 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.064610633 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.063819376 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.064513385 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.065141848 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.063390643 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.065186918 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.063772056 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.065620757 seconds)
  done (took 2.322749112 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092917033 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09258475 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.068384772 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.068629661 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.067134286 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.066538233 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.068224694 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.067832585 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.065220949 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.066807873 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.068416007 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.066997171 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.066536025 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.058670863 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.067665908 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.069077675 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.065071976 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.068408772 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.06892434 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.069803295 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.068816084 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.058810429 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.066434969 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.067665102 seconds)
  done (took 2.937489779 seconds)
done (took 15.283753096 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.170917053 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070537197 seconds)
  done (took 1.40894141 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.064212117 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.065400931 seconds)
  done (took 1.312823927 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.069976687 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.056847064 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.075363109 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.06614922 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.057341931 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.057203703 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.073077516 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.05718291 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.057126056 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.057575913 seconds)
  done (took 1.810047516 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.05953157 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.06504084 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.062934833 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.064374306 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.062902134 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.058931162 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.061183883 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.058801105 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.064934374 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.057658597 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.062287858 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.076648257 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.060913219 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.078160182 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.060975351 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.061970169 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.063231017 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.061063376 seconds)
  done (took 2.329924969 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057264308 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.05788499 seconds)
  done (took 1.304557512 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.060612817 seconds)
    (2/7) benchmarking "second"...
    done (took 0.058871981 seconds)
    (3/7) benchmarking "month"...
    done (took 0.060751072 seconds)
    (4/7) benchmarking "year"...
    done (took 0.060111509 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.058112781 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.057640273 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.057742863 seconds)
  done (took 1.597851577 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.392227345 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114280704 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.321024715 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.064314875 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.072457732 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.239796687 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.059559031 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.063913232 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.064125204 seconds)
  done (took 2.617410818 seconds)
done (took 13.575651864 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.076407178 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.165736388 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.084562995 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.396982323 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.08658059 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.062570406 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.108642127 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.164626492 seconds)
done (took 2.351012325 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.228190037 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.310518254 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.879684405 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.065116728 seconds)
  done (took 3.450320609 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.31815188 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.07435685 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073747059 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.062955239 seconds)
  done (took 1.73327394 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.061531968 seconds)
    (2/2) benchmarking "read"...
    done (took 0.066874397 seconds)
  done (took 1.328599832 seconds)
done (took 7.945240496 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06013653 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086442951 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.060220101 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.059437601 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.059942374 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.059698751 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.060264614 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060107823 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.059677769 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.059080325 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.059609396 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.059654404 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.059366286 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.060199705 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060875097 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061119396 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060874818 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060750422 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060907792 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060828248 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060702136 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059829846 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060834904 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.061276189 seconds)
  done (took 2.700579773 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.074842968 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.061641716 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.063121775 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.062543299 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.063353193 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.062806091 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06231213 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.061049395 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.062653896 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.060989864 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062864845 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.062847101 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.061051034 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.063205673 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060828002 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.063159154 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.062852441 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061392682 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06136476 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06346805 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.062456561 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061532379 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.062822293 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062254214 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.063122373 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062859487 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.061630581 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.061520939 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062473604 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.063053468 seconds)
  done (took 3.096036668 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060396356 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.056685662 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.056842352 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.065207734 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.056500596 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.057256018 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.057281912 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.055888864 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.056387171 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.057726995 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.056648647 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.05604438 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.056950822 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.0561207 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.056212122 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.056541559 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.060267471 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.074158288 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.056353542 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.056067399 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.060481959 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.0559999 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.055910757 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.056278548 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.056622062 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.056136176 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.056253329 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.056488366 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.056216098 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.057244637 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.056254016 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061312354 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.071344984 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057612395 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066571488 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061451876 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.056100596 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.060396359 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.057458934 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.056247912 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.056277486 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.055919473 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.056494284 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.055876381 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.064945946 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.056627859 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.056772588 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.056752437 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.05657261 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.055951185 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.056093609 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.058384891 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.061287213 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.057446667 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.055629913 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.057252732 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.055985926 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.056925527 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.056073865 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.055765713 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.055923357 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.059499298 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.058115945 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.056859384 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.073987023 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.057294908 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.06511536 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.058713652 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.056852807 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.059957517 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.056606015 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.071987829 seconds)
  done (took 5.423654074 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.078091933 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081562381 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.060904574 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.060985639 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057096156 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.056465268 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06381798 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.056546931 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060960921 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075254446 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057040573 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.060756306 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060954962 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.060600313 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.056871633 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.060717028 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.064076589 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.056711274 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.05665109 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0613117 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.056884324 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.063935686 seconds)
  done (took 2.596392051 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.130385777 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062166984 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.097336176 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070382873 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064530852 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070388755 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062017902 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061843235 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062005305 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062496569 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062863674 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061985969 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064214064 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0625179 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062477779 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062618761 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062074579 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062862069 seconds)
  done (took 2.464397342 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.072843002 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062017675 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.083312751 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062036235 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.062012999 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061572453 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06513842 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.065984671 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06117617 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.061945524 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.065851487 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061552884 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.061351019 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061621053 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061246056 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.061490912 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.061385854 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062038317 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065566618 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065149803 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.065448618 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065411359 seconds)
  done (took 2.636409142 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070478742 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061026386 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074054823 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062403024 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.05677633 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.056554813 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.061587769 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.060815596 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.061589691 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.060147892 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061180611 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.056571089 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.062130298 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.060936849 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.062860266 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060821814 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.060599084 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.060974836 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060586867 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.056635966 seconds)
  done (took 2.448212237 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082005053 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059264997 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059351496 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077587626 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059036086 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.058643636 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076808 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.058875419 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.059129644 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079035159 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059249867 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.059011972 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077267178 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077109941 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.058604911 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077229991 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077261024 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077470105 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.059058619 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059000538 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079583331 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.058812998 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077010325 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059057331 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.05889261 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.059051763 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058937743 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076954385 seconds)
  done (took 3.100686573 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060153702 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.059448262 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.059657463 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.059723464 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.059935748 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.05965285 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060211842 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.059698888 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059533664 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.059844549 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.059825739 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.059275196 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059559866 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.059329047 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.059391646 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.059680625 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059278189 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.059982082 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.059775515 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059652168 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.059563084 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059331051 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.059634671 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.059954353 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059550449 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.059127766 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.059506697 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.059468865 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059275951 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.059835136 seconds)
  done (took 3.015487094 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.069064652 seconds)
    (2/2) benchmarking "in"...
    done (took 0.067416391 seconds)
  done (took 1.36315932 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.058503232 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071591607 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.056415102 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066964202 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.064931955 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.059995948 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.06495843 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064821411 seconds)
  done (took 1.7306089 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.062854147 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.085124326 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.058390506 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.05908142 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.061293415 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113497592 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.069553037 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.070862462 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070933607 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060570856 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.05874973 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.069013239 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.057650905 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070188704 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059465708 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066065172 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064696171 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069209155 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.069524461 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057099024 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070063454 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058558834 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.056909506 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.059168991 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.058029684 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064105089 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.072576411 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069465566 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065688524 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.055803647 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075202366 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.056975265 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.058015868 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066040308 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.06124694 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.056852432 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091009166 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.057480291 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.062472407 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.056689194 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.068048588 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075864493 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070215189 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.073871453 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.058516962 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.058688148 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.056428152 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.05853282 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.060513527 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066191268 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.056683679 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06383243 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.056346119 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.05816117 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06688691 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.057554218 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.062109693 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.065425089 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069416061 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.066797561 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068262083 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.070931477 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.065351745 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.06439306 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.057688652 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074616829 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.058286166 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.0687482 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070579667 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.057738314 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069338003 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.056252623 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.055646577 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.05633703 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087575416 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.058416469 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.057848592 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.057035788 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.056580363 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.058271732 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065328781 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061722522 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063628585 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060100547 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071247807 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.065239484 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.056410593 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.063031625 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.07334462 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.060107404 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.057158524 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.072123229 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.059928646 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.05646702 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.072463714 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.065784757 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.058409424 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.057544213 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.060222423 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.069551686 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.057748903 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.055500451 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064287869 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.058491912 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.058959359 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.060307981 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063466935 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.055957171 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.065659945 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.060647108 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.05720649 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.054925572 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.05993941 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.056970264 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.055036717 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.064504084 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.055655748 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068902522 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.061641571 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.068947255 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.069106455 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.066014701 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070290198 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.055861149 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.054719202 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.072103508 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06410525 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.056913072 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.072040256 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.185317809 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.06817576 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058446058 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.059241186 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.067243198 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.056899218 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059512481 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.058229688 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.06341012 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.059301532 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059270355 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.061788356 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06555291 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.068486241 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.058620685 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06648331 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.05758143 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072258133 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067277174 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.061888229 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061263486 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.057867714 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.068767182 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.063439664 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066237804 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.05719147 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.057688698 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.057452691 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067558755 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066144433 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.058912038 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.064420632 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.061269474 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.058569402 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.05745711 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.058472492 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.060768061 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060860258 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.058292059 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064592546 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.065707143 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.072431502 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064681208 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065753188 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.05756089 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.057262453 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.059883467 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.056917484 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.061464707 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06571549 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070962859 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.067959631 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.075909252 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.056830707 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066153891 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.058137836 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.072494545 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.069727986 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.058022464 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061626118 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.056728126 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.058831976 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.065596531 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.06789348 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.069799011 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070399481 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.061161705 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.061326107 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.056833774 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070542083 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.057492706 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06510902 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.065981366 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.061262091 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.056929805 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.058803742 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.065427352 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.061411697 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.057391678 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.071569657 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.063217418 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.056977637 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07024242 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.057223243 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.067072148 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.056772045 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.060430154 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.061999762 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.058729792 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.065776764 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070965682 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.055997994 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.057738993 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071951415 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.058732416 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.058431722 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.063994623 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.070691724 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.061240812 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.063919113 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066877171 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.065908836 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.060627928 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.065714912 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.057493628 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.064953161 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.059701155 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.067701839 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.056350769 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07272515 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.05529899 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.069971354 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.056601394 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.066457891 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.056666161 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.064719865 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.05688412 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.071130436 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.057706647 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.05658894 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.066734258 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.055186127 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.064675274 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.055463062 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.061090429 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.061964407 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.064590036 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.057682602 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.064287253 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.057309563 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.063869334 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.059847475 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06342362 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.064237273 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.059930579 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.190282426 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066366515 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069056423 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06623753 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.059390514 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.059383175 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.058368669 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.066555413 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.058787807 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.059443425 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06552621 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.061528211 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.062343416 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059285813 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.059340974 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.058606739 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065532603 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066900349 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.073777231 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065050293 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064195212 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.066094173 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.05695683 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071731047 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.057209492 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064423591 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.056092817 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.063213541 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.066574805 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.057295461 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075094588 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.059422799 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06440949 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069333581 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065594024 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.061716415 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.074091965 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.060376631 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.064934433 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064437765 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.061470849 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.063702755 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.059063585 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065015214 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.066149241 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.067362559 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.057968688 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.063962318 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065723251 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059085552 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.065149619 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.058560247 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.064733866 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.058788864 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.056307291 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.061412556 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.067753819 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.061189135 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.061610759 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.057573961 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.0557456 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.057098473 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.064232119 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06152291 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065009711 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071335414 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.056245042 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.057968318 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.057046188 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062904395 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.074144957 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066345395 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064308759 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.061649797 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.056475899 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.058644337 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.058939789 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.056977196 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.060465461 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.056208589 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.057125213 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067164295 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.058967536 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.061517142 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057919873 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.058611413 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.065656844 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.061961394 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.057297958 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06292962 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.056879686 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06210155 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.056493817 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.058772701 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.061531869 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.05660309 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.060595383 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.066832669 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.07203327 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06302248 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065669052 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.057759196 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.064181767 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070992587 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06390014 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057693541 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.065202387 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.055927301 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073614289 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.065205662 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064249327 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065546654 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.057573756 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.071815994 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.060473635 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.06495206 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070469596 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.056989618 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.061867235 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.055593052 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069837777 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.059851308 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.055610731 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.063300176 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063063484 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.061092135 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.066776675 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.056468559 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.063016634 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060786746 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.059247356 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.057104429 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.057248865 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.063974896 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.070441655 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.056448501 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.059570817 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.062874856 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.063584304 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.060052252 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.066983194 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06317554 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.056398243 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.057279912 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.059431892 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.056667234 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.066407814 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.055955865 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.060068928 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.060094887 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.055242189 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.061704033 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070343663 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.064200264 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.064299833 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.055913359 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.054940994 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.071543969 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.05937376 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.058897716 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.063062558 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.064506036 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.067293237 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.063963421 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.070977919 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.056243943 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06125129 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.066834882 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.056430006 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.055928046 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.059177194 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.056325292 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.063873227 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.064356281 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.062518308 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.056532532 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.061412279 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067282714 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.056732039 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.060022172 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.058876565 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.056133586 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.065148232 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.062335492 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.063157412 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.056557937 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.055702999 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.0588668 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.064105061 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.062852604 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.063858596 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.056419791 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.060810793 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.067453806 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.062845877 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.058048998 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.054616065 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.058381063 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.064279838 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.058530872 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.055492742 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.060186505 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.059166099 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060462624 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.063944754 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.059847404 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.055155708 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.070112083 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.063312127 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.06425485 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.057796694 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.057382717 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.056197421 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.054986635 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.065548518 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.055573432 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.056760351 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.059716036 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.056742212 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.071107587 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.062849727 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069737149 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.056296393 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.059676022 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.055393396 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.064084301 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.059538698 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.055642519 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.065043119 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.054963492 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069385271 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.066082945 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.062297642 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.055452566 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.060521435 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.062777412 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.068747885 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.064670868 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.064021632 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.058965319 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.064703795 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.057561562 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.065798905 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.055618005 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.054895169 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.064532283 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06311208 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.066652354 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.055077293 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.064690139 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.056586961 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.062810166 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.062773654 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.057355617 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.057305581 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.05654247 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.064149436 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.060329325 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.064046458 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.059984958 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.071052859 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.05676123 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.065086662 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.063345771 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.06597778 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068564988 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066431192 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.062668655 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.056173579 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063017665 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.310735664 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.060548628 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063794307 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.061948565 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079880809 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.060792843 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.060315171 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072886808 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.065846058 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059567333 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.066189918 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.063879527 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.069396461 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.06075831 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.06955207 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.064202823 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.059930908 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06328882 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063687715 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.058331492 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058828357 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.058873408 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067767034 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.062719172 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.058970665 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077189797 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.059985409 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066918599 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069141961 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065439945 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.060236307 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057759113 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.0596004 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071052891 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073041851 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.061567865 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066670503 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.05982235 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.066913947 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057173918 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06672016 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.082917599 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066468204 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.057584886 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058263388 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07158837 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072124121 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062498746 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068326351 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066620865 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.05872368 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077564705 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.065737222 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058626747 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.067839622 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.05985859 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.057212504 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057234673 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.058977594 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.068820848 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.057432893 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.060099056 seconds)
  done (took 39.113513788 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095340232 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059311392 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0583739 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058643718 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069175027 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059060071 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058126341 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.058727906 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.058550021 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060216941 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.057715941 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057822895 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068530492 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.071448364 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068185728 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061746412 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057567266 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.058762144 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058155804 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058668906 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067590784 seconds)
  done (took 2.723859313 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.064740084 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072617473 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068934735 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073861115 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066168852 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061744669 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068507229 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062225128 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069155546 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067257481 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069330487 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062204983 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067080952 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06725549 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06688945 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062135228 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069048968 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065798697 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.061906854 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068676805 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062346088 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069225556 seconds)
  done (took 2.831975428 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.059323545 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.058784514 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065997203 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.057703519 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.057500713 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.060623522 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057461676 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.061958976 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.061848588 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.061878972 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066342446 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.058596801 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.057491912 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.063214018 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057279367 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.058713007 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.097903261 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059125267 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059296533 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.058126915 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063830301 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066663916 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.058356997 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058114038 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.062239197 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.060839137 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.057676568 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.060444129 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.058650798 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.062313954 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.058611315 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.057229075 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066101787 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065591669 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.062237379 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.061993784 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.05917402 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.058774691 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.057556847 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.057860788 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066374337 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060016165 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.05878403 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.059200403 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066635895 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.058039905 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.057727305 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066361159 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057750564 seconds)
  done (took 4.373568431 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.068803074 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107296074 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06310921 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088230237 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.069806213 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.063476295 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06268118 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089195087 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.05833593 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.059624754 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.070807935 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.071475255 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060751124 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.062513492 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.06488636 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060941095 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061394347 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060238023 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06323571 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.060108847 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.063441132 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.064480165 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.069882453 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.070352695 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.061568071 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060068634 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060063158 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.061955047 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.070527634 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.063844389 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.062124413 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062421395 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.070537315 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065224348 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060570861 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.060228809 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.071279071 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.060704732 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.060229258 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.058792892 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.060191532 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.061412069 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.064459836 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.071679144 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060643522 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.06484381 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060799364 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.058497161 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.070486892 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.060482787 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.064417296 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.071353854 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.061478355 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06099015 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06203086 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.070677627 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.060599453 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.05943508 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.060778067 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.070298098 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.05912801 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061154421 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07096936 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.059817041 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.063683486 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.071049723 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.065019612 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061343124 seconds)
  done (took 5.9416247 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067062489 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.089228123 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06820442 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068372171 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067693096 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.068137182 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068012862 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.067632484 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.067686927 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068578719 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067947424 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.103832718 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.064161536 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072321989 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068214711 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067899984 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.067872409 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067620713 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067648781 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067653331 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.068246648 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068122158 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067889759 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.068078332 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.070417914 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064255955 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068034039 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.067544263 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06783455 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.067739303 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07017847 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.067858834 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.067917822 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068317228 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.070393551 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.067679224 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.058332242 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06777984 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.067699601 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067976354 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064005065 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068136337 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067707895 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.063944579 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067938247 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.067649596 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068118554 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.070622895 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074525273 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068382791 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.068196713 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06848419 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067620706 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068259472 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.06821212 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.074726407 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068820556 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068929962 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068030916 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068747761 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068253071 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.074565853 seconds)
  done (took 5.683237315 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072010807 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065087077 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076192599 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060233941 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.05785425 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06679263 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.057768587 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.057484547 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064746976 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.064570304 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066415862 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066531251 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068792346 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066082876 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066413841 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06839466 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066278709 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066572766 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064211964 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066290689 seconds)
  done (took 2.7056682 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.070533383 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073975473 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063435419 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066628273 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06364969 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067238523 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.062216358 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063308361 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063644424 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063474399 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068476671 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068311535 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063586122 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066633712 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067834359 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066582551 seconds)
  done (took 2.444103498 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.063944847 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.064721252 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.064911761 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.059763746 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.062527734 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.058839619 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.05845853 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.057269945 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.057800919 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.071318723 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.058571008 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070121787 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.058514002 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.057783773 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.05838033 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.064375158 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058150508 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059070317 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.058539869 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.063000947 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.064730267 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.059602727 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.062204231 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.058294899 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.063300181 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.066626694 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.059774184 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062302125 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.058258787 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.05900891 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.064615927 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.065017589 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.058747638 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.058831751 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.05773373 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.05856592 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.058615507 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.060186691 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.064361508 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.058698622 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.057173968 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.063161935 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.05849988 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.059594443 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.057494711 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.058994929 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.057931024 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.063833278 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.058753366 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.063646337 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.058531909 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.060296404 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.059825661 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.065434749 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.060878955 seconds)
  done (took 4.73716551 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072347291 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062938354 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057409877 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057286509 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.062357993 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.063170411 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06252481 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.062783524 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06339023 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057382436 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063062034 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.062031619 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062622579 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062713347 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062863649 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062971607 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057154951 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06300237 seconds)
  done (took 2.518592734 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068758587 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063108963 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.067065017 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062529689 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062709379 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062069123 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057881126 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058162237 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057723751 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06240168 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062124748 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.061817975 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058079273 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06260882 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06256588 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062285419 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.061986433 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058216491 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062368219 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057686804 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061845163 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057934101 seconds)
  done (took 2.745282149 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.084911314 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08088202 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.119878885 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.075517706 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08361054 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068091316 seconds)
  done (took 1.906663676 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087612566 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096916958 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062417752 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.062527926 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070606138 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065072795 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06502204 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06541131 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070608212 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069101637 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065414371 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070769369 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070930218 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066865453 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070698416 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073136442 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065548598 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06539168 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062443065 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072946574 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065682198 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070481799 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065950837 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065062524 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065711447 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066879655 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072966632 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069216247 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06782473 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070586243 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073113449 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065461641 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070663433 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069253451 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.062676527 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070374103 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065557496 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073044578 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070821646 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067399578 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062471857 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070834427 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071184931 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067127113 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07336584 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066322803 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067230747 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065736351 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06571073 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075544093 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070850666 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067499488 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071118183 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073440597 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073847606 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075661968 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069283965 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06732266 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070874028 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06899789 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067011119 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070790809 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067089374 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069277897 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073667014 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067189284 seconds)
  done (took 5.976211383 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094281441 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063122048 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06550299 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069728863 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067501668 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065326661 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0653652 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065525759 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065478405 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063044673 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097517623 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065456456 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066979867 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067404651 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066071001 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065428256 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065756288 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067206412 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.062862478 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07543793 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065595266 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067012051 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066930136 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066972098 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068940646 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072983525 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065317522 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065129356 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065386556 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065167651 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066553332 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065318766 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06664174 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062684608 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066605388 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065460362 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065077748 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066982178 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06516762 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070715772 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066703351 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073188474 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065432155 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06540928 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069022259 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065287935 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065131901 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.062657069 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065532417 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063137193 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069067579 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06945198 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069511488 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067251467 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06555993 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066248889 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065628578 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065511564 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065650997 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073479976 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06704475 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065576036 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075189935 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065497688 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06524596 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067136587 seconds)
  done (took 5.879898052 seconds)
done (took 121.362515427 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.206268469 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182966171 seconds)
  done (took 1.772992732 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.0702901 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.092351534 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07098208 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130341171 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068286644 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101697654 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100893819 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07130416 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067626112 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067297382 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067783757 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06999786 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132645114 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067714801 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06734536 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070026921 seconds)
  done (took 2.719130984 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101646727 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.174994306 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107499143 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065540764 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101057688 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071666997 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065884927 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075703274 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.068968904 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069361656 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071950577 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070527687 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068770723 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070164776 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069394605 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071749882 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068508661 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071702232 seconds)
  done (took 2.873462371 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.090016003 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.081378084 seconds)
  done (took 1.584051878 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153171514 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.102527978 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.139943941 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.308914918 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.126044853 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.124246194 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129594201 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127051132 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112044712 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.119301794 seconds)
  done (took 2.850148625 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09749108 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.167079765 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.300571352 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113933416 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071686344 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094511422 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115886471 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077962041 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.075123937 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.0747887 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078151543 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.072769262 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.093260226 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.071904963 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072070395 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.072106678 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.096248448 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071379221 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.070700588 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.071450276 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.096651148 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066231169 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.071783291 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071313454 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073662487 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073203122 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067309571 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066236729 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.071253813 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.070792339 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.073443545 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091346401 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073155034 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.094235559 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070050841 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.095292118 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.070644229 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.069513649 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.070959706 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.069412515 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.072750138 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.072611618 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075092313 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07243198 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068017356 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.070500801 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067852526 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066380794 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.074723108 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067344595 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.074429379 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.073966368 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.094204104 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06776464 seconds)
  done (took 5.918173139 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102906593 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10085482 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066996904 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107456618 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099618775 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066187774 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.099009224 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095123745 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102829859 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066019199 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065434663 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065253562 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072257293 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.074875712 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109337846 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102028125 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067278711 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065912269 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101703447 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102011045 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06499977 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095419232 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094503238 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101045056 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.064201132 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065649555 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064607326 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.064943329 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.070064522 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.070968918 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.064910626 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07250446 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.07702616 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071327244 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064088431 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064368474 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064993559 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.071764296 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072517187 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.072589644 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.070858224 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064535286 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064166133 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064684218 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066046739 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063756418 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.070564803 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.071641266 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.070797762 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064820346 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06483649 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.064524909 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06489839 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.071636148 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.071022468 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.072499025 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071964502 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064890515 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064672976 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066247762 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073105085 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.073360888 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072780327 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06588202 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07337041 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064746918 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074191342 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077273733 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064757735 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065202984 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064859871 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064835456 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065542439 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.070705603 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.071226445 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065899941 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064740034 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064775562 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.073373892 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071202602 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065353264 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.070601589 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06448033 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065227268 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065507278 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065413673 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.070437948 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07226516 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065512692 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06466649 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064813186 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064774634 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.064356046 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.070791669 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072333513 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.072101403 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.071511029 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065941063 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.071354955 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07176189 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066014308 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.070884577 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.064628775 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065203317 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065105342 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.070303173 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.069234918 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07197339 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063943807 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063770468 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.069622179 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.072418439 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.063689513 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.069240625 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.206969077 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.072194336 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065872557 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07817085 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065576203 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.073626313 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06558294 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074139345 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065650237 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072053378 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064844865 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064306495 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065141547 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.072650227 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06607324 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065382625 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065563712 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06507249 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07137836 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075027488 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065612571 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071919438 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.071417075 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066038149 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071019473 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065355496 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.072499889 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065041178 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06601295 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064456663 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074397658 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065305852 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065162854 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065299392 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07288407 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065344256 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.073567635 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.070263222 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06469084 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074525742 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07339668 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.070830043 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.073801227 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065994009 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065422143 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064908362 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.064947478 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.070772049 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071719044 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065484884 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065034959 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.070349713 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07314701 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064464 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.070803109 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.070428451 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.071346193 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.0648356 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064812157 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.074212349 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07307452 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.070853547 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.070833996 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071376438 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065107391 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.070705609 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071315394 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064498486 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076909316 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064671773 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.074554962 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.071213054 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.070616018 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071482772 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.07270612 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.073491963 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.073560838 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.07577977 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064761508 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064877919 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.071914748 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064539885 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064488936 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.070663418 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064992621 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06511797 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.075312912 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065342442 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.073034082 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.064413783 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.072389616 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064782748 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065544783 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075839809 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064844581 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065373967 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.070836925 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.064759597 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.0709594 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073797004 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.071005091 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064840249 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065254623 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071546233 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.071810153 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064281997 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064213174 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065130085 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.069623319 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.06922565 seconds)
  done (took 17.392478681 seconds)
done (took 36.532873068 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.191093719 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151337003 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.184795535 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.107800556 seconds)
  done (took 2.148969211 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.087436821 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.092421602 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.072402477 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062482963 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.076881961 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062175161 seconds)
  done (took 1.90661008 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.252126167 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178275615 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.163689845 seconds)
  done (took 2.04226623 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.206407653 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186356523 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.462014008 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.282840143 seconds)
  done (took 2.688717016 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.122585021 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.074046487 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.059875351 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.069721836 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.100136003 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.127468599 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.082195102 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.103055743 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.070988946 seconds)
  done (took 2.320781285 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.122759305 seconds)
done (took 12.706430095 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.22029973 seconds)
    (2/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.061645191 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094530543 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.064429695 seconds)
    (5/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.224527019 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087232436 seconds)
    (7/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07238332 seconds)
    (8/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.222310588 seconds)
    (9/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.065404428 seconds)
    (10/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.179944187 seconds)
    (11/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.071501283 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.164671276 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.087177126 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.147100087 seconds)
    (15/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.1515719 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.072952138 seconds)
    (17/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.089659243 seconds)
    (18/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.07312668 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.070165945 seconds)
    (20/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.224988162 seconds)
    (21/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.067439416 seconds)
    (22/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.22616643 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.163472794 seconds)
    (24/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.328079934 seconds)
    (25/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.190872052 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.072603119 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.122965821 seconds)
    (28/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.064061519 seconds)
    (29/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067814998 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06207377 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.12091981 seconds)
    (32/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.241911824 seconds)
    (33/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084669303 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.085334767 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.061795506 seconds)
    (36/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.117568459 seconds)
    (37/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.137975574 seconds)
    (38/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.179961524 seconds)
    (39/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.206759588 seconds)
    (40/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.063145643 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.069727419 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.060592428 seconds)
    (43/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.070920069 seconds)
    (44/309) benchmarking ("sort", BigInt, false)...
    done (took 0.243157061 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087306105 seconds)
    (46/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.065340607 seconds)
    (47/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.062686205 seconds)
    (48/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.074781424 seconds)
    (49/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.138837648 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 0.142653108 seconds)
    (51/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.156603722 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.138610142 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074294892 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 0.063412397 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.080449156 seconds)
    (56/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.070489928 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.061320822 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.070518698 seconds)
    (59/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.202031522 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.062142276 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.060530575 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.110615442 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.061717139 seconds)
    (64/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.224055744 seconds)
    (65/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.074282629 seconds)
    (66/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069432246 seconds)
    (67/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.073876201 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173795819 seconds)
    (69/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.069764193 seconds)
    (70/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.187645159 seconds)
    (71/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.067596695 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.172274439 seconds)
    (73/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.072686981 seconds)
    (74/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068035285 seconds)
    (75/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.074555614 seconds)
    (76/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.138200185 seconds)
    (77/309) benchmarking ("sort", Float64, false)...
    done (took 0.127872523 seconds)
    (78/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073017648 seconds)
    (79/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.151170996 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088130959 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.086198047 seconds)
    (82/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.340906946 seconds)
    (83/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.139278862 seconds)
    (84/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071960352 seconds)
    (85/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073270503 seconds)
    (86/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.14094539 seconds)
    (87/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.061945689 seconds)
    (88/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.061380334 seconds)
    (89/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.063486012 seconds)
    (90/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.0647401 seconds)
    (91/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.076317962 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.080646596 seconds)
    (93/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.075912573 seconds)
    (94/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091407124 seconds)
    (95/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.064224074 seconds)
    (96/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.069831807 seconds)
    (97/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062800922 seconds)
    (98/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090815783 seconds)
    (99/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069896513 seconds)
    (100/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.069936328 seconds)
    (101/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.16191163 seconds)
    (102/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.176331619 seconds)
    (103/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088704385 seconds)
    (104/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.07405247 seconds)
    (105/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.078893662 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.062949004 seconds)
    (107/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.18132115 seconds)
    (108/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069708316 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.061263441 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.062447477 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165348721 seconds)
    (112/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.061789066 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07461306 seconds)
    (114/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.146654289 seconds)
    (115/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070775881 seconds)
    (116/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.203417561 seconds)
    (117/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.061725116 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.086919747 seconds)
    (119/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.063395006 seconds)
    (120/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.069250043 seconds)
    (121/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.062207429 seconds)
    (122/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.149192553 seconds)
    (123/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.064480577 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.117790153 seconds)
    (125/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.211632437 seconds)
    (126/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.06172689 seconds)
    (127/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071696167 seconds)
    (128/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.066044161 seconds)
    (129/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.215018884 seconds)
    (130/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072898467 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073577434 seconds)
    (132/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.142721506 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.085759406 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.084725453 seconds)
    (135/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.223257065 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.084543989 seconds)
    (137/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.220129643 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.086765839 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073685876 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.143946504 seconds)
    (141/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062368598 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.213687721 seconds)
    (143/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.062202725 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.069259095 seconds)
    (145/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148723258 seconds)
    (146/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.062642547 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06161491 seconds)
    (148/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070815451 seconds)
    (149/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.060503038 seconds)
    (150/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072121158 seconds)
    (151/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.066142653 seconds)
    (152/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.060714066 seconds)
    (153/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.146836199 seconds)
    (154/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.063019541 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.062236737 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.064225288 seconds)
    (157/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.062410296 seconds)
    (158/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.061490833 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.082644814 seconds)
    (160/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.061165132 seconds)
    (161/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06132641 seconds)
    (162/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.141652931 seconds)
    (163/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.062705645 seconds)
    (164/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067988499 seconds)
    (165/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.074058741 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110778939 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144161294 seconds)
    (168/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.060816961 seconds)
    (169/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.14343233 seconds)
    (170/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062447313 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.123288416 seconds)
    (172/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07241025 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.084388862 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091166809 seconds)
    (175/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.061060806 seconds)
    (176/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.062344822 seconds)
    (177/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.061088297 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14637935 seconds)
    (179/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073615256 seconds)
    (180/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.070872345 seconds)
    (181/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.137559065 seconds)
    (182/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.140835801 seconds)
    (183/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061898309 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068830531 seconds)
    (185/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.063998087 seconds)
    (186/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.060721036 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.061111109 seconds)
    (188/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.059941832 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.083081257 seconds)
    (190/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.061485487 seconds)
    (191/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08488818 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.087768023 seconds)
    (193/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.135738643 seconds)
    (194/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.068243513 seconds)
    (195/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.060082608 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.061069647 seconds)
    (197/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.244381556 seconds)
    (198/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065888277 seconds)
    (199/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071515454 seconds)
    (200/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064657623 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129148148 seconds)
    (202/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070816245 seconds)
    (203/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17622173 seconds)
    (204/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.06332894 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.087615543 seconds)
    (206/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.205128853 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070065136 seconds)
    (208/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.061862471 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.063702541 seconds)
    (210/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.062692978 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.12693927 seconds)
    (212/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072160623 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.085974975 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069475088 seconds)
    (215/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08453424 seconds)
    (216/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.155618651 seconds)
    (217/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.063369365 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074334282 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07403038 seconds)
    (220/309) benchmarking ("sort", Int8, false)...
    done (took 0.163297034 seconds)
    (221/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.061818127 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119170385 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084130296 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.143469488 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.14135205 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.110930161 seconds)
    (227/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.167574776 seconds)
    (228/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.072952867 seconds)
    (229/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.063644066 seconds)
    (230/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.200411673 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070345551 seconds)
    (232/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.063376437 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.062156187 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.084345956 seconds)
    (235/309) benchmarking ("sort", Float32, false)...
    done (took 0.13132893 seconds)
    (236/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07099762 seconds)
    (237/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.062638828 seconds)
    (238/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.062663684 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.061787401 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118547068 seconds)
    (241/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.06203183 seconds)
    (242/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.062852825 seconds)
    (243/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.069547188 seconds)
    (244/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.063335857 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.062504453 seconds)
    (246/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.069953778 seconds)
    (247/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.142341547 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06277512 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.061703753 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.061009615 seconds)
    (251/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070191128 seconds)
    (252/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.061887822 seconds)
    (253/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.064259028 seconds)
    (254/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06299417 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.062113994 seconds)
    (256/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.062730143 seconds)
    (257/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.062824683 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.063193391 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.064421562 seconds)
    (260/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122895238 seconds)
    (261/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070193486 seconds)
    (262/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.061294579 seconds)
    (263/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06291504 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.063414157 seconds)
    (265/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.061059707 seconds)
    (266/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.061235813 seconds)
    (267/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.063143967 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140597228 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.084228681 seconds)
    (270/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.150882126 seconds)
    (271/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.061633889 seconds)
    (272/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.062779642 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.145052337 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.063120098 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146958296 seconds)
    (276/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.062413551 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069015041 seconds)
    (278/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.06673625 seconds)
    (279/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.062606499 seconds)
    (280/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.062960396 seconds)
    (281/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.064332925 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.062720948 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.165817659 seconds)
    (284/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.061779062 seconds)
    (285/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.061026759 seconds)
    (286/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062106131 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.061492971 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.125027786 seconds)
    (289/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.068518349 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.109328758 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072937628 seconds)
    (292/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.060991288 seconds)
    (293/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.061248494 seconds)
    (294/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061951186 seconds)
    (295/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.062583524 seconds)
    (296/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.062094557 seconds)
    (297/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.061232827 seconds)
    (298/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.137270087 seconds)
    (299/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.061347057 seconds)
    (300/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.062016501 seconds)
    (301/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.062534948 seconds)
    (302/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.069120804 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.069267796 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.161855726 seconds)
    (305/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.068876568 seconds)
    (306/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.069814714 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.061837269 seconds)
    (308/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.061726309 seconds)
    (309/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.062879625 seconds)
  done (took 31.837180371 seconds)
done (took 33.307245767 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082803063 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085785728 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.069541387 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.080833851 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.076904414 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096288468 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07033363 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.074232234 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.07648248 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.075234712 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.074729592 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.06888583 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.071158035 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.071567826 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.069292359 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.083532544 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077028663 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.070462775 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.070591981 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06155174 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07114467 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06238845 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.061427768 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068968182 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07377443 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.068801727 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.070946464 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.070985875 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062419079 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06285816 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067338647 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.070844688 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064832298 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.073891922 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070132437 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.070700319 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.071880869 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074688145 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.061463995 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.062718883 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073127535 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062395023 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.070090336 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.068490877 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.067509095 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070198744 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071055832 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.073329803 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.083758318 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066503206 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072982345 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.073159142 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07292844 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.067504558 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.067152377 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.070219091 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.068527934 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.083267785 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.070575894 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066436742 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072446303 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071228852 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069219158 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.070559874 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07041851 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073293896 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073853441 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069261026 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073157255 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069946862 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062209559 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.070811447 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.066876211 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06214014 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.073320381 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075549759 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.060718716 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.06610944 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.069740928 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070470208 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.061934498 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066028518 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06130172 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.067039942 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066236161 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.068329313 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067638221 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.06935024 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.060936521 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.070568131 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.069100931 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.069628333 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.061095779 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.073972914 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.061523357 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.068415831 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.062724966 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062446452 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.060645807 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06712742 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.061966813 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066486734 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.070205893 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.061029912 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067099904 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.074928789 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062091039 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.069911786 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.060890329 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.061077938 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.072178087 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07244492 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06256595 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066182966 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.060951209 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.067437974 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.061288093 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.061914717 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.061650809 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062048242 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.066364857 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062179692 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066482504 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.067336436 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.074312175 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.061968373 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066680847 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066098708 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062154397 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068489134 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.062359186 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.062197334 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.061148318 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.074507687 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065945587 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.061857777 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.067168628 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065435459 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.069035906 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.059898 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.06963655 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.066832611 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.065325007 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.06752382 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.059654934 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.072061353 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.206802673 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067439493 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062050645 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062942488 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06161688 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062156936 seconds)
done (took 12.155953486 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.063213068 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.087069193 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.069192212 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.077830304 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.07397434 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.063270583 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.06567209 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.077746802 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.065120755 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.080576805 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08455657 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08263621 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.087837741 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.061992821 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06261474 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.063111668 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.061807793 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.069516502 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.076488943 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084350719 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.091177106 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.062428328 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.071046995 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.078112364 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.072152241 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.07757561 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.063638353 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.063060733 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065167303 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.078750992 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086586452 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.062690444 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063934064 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.075614029 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.075634879 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.068454721 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.063219593 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.066353375 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.063436984 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.062536984 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064696567 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.075525606 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068701126 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.066339266 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.063242386 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.063652643 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.062351839 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.065219604 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.074707134 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.065375504 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.069865221 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.073648976 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.064397901 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.062643335 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.060757249 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.066317997 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.062203458 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.063043498 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063056092 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.062653231 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.063056238 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.064915638 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.063557036 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.063391169 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.065826216 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.064598355 seconds)
  done (took 6.104603451 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.080486781 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090646265 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.078450556 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.079311256 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.062345612 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063067113 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.063021605 seconds)
  done (took 2.091623937 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063315142 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074669359 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.077864373 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078465004 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.070888622 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.079882641 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063247073 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092536394 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.061956103 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.074030893 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.106379561 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079398245 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.065926861 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074011585 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.063166556 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.070587957 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.062982385 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070897546 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070228604 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.07812483 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066425307 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.089567212 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.076782621 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.063894096 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.08246325 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.067102573 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.062264579 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06342555 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064113379 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.064228587 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064407106 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.100356843 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.066474646 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073962793 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064475876 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.062427805 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.067955024 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066615118 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.065191674 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071538165 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.067854413 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.064216972 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.061762572 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064416229 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.065532627 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.066840169 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.061486461 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.064074475 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06424467 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.074200478 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.062105439 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.066316434 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06576292 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.067854051 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069424052 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066997328 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071395344 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.064230179 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.074380041 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.070619383 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0641859 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.1059939 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.070236748 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.067575694 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.070451435 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.067118265 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.066627805 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.068178272 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.064107067 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.065117563 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.064644842 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.070328158 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.062595599 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.065642839 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066498697 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.065130032 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.067187678 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.078929499 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.079056209 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075169553 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065266918 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.064713544 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066465795 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.079341789 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06764319 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064373673 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066814969 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.062441288 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.067196858 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064755345 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069404094 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.064166467 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.071332528 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.065806344 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066471594 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070725659 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.063186315 seconds)
  done (took 8.321662161 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065755141 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.064300665 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.065358209 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.063793007 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.064350919 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.064065196 seconds)
  done (took 1.994924811 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.084989619 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.063487508 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.07816259 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.064030325 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.097765147 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.069224984 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.070245405 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071057769 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.076188786 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.076096516 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.069478887 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.071504602 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.069490826 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.065248752 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.069499243 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.064287532 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.069594942 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066950574 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076122012 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065151063 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.075495377 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.064861489 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064785924 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.074409928 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.066139687 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.063958922 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064044415 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.075628594 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078154348 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.071470267 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.064762322 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.06646173 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070765871 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.070887995 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.069797721 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071155371 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.063624017 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.068871491 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065944292 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.065956275 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.071822036 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064851862 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.065707391 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.068794604 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.070813687 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070883124 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.068644989 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.067262797 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.069259286 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.068418564 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.068418546 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.064310208 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.065665092 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.068652077 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070843604 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071275044 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.068802019 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.069478508 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.065216969 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071014562 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.064038253 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.065821076 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070799923 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.065730296 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.066913529 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.068706436 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071759649 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.065340022 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065178175 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.063607706 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.068602584 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.063302903 seconds)
  done (took 6.558263856 seconds)
done (took 26.632054303 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.56105844 seconds)
  done (took 2.113924097 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.550781193 seconds)
  done (took 2.144923427 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.77309626 seconds)
  done (took 8.363969293 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.268330911 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.297083672 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.69968136 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.126701404 seconds)
  done (took 3.013962219 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.708773225 seconds)
  done (took 2.310840008 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.226255386 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.216658148 seconds)
  done (took 2.055392019 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.337674575 seconds)
  done (took 1.929205958 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.114631144 seconds)
  done (took 2.705840279 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.20968926 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.153042239 seconds)
  done (took 1.964133728 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.474166764 seconds)
  done (took 2.068682331 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.113006564 seconds)
  done (took 5.711421356 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224353356 seconds)
  done (took 1.857055312 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.228010785 seconds)
  done (took 1.829272808 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.728271389 seconds)
  done (took 3.323449757 seconds)
done (took 42.992602292 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.07944607 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081797964 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081865281 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07771624 seconds)
  done (took 1.899122152 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.069726897 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.066079296 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.069044798 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.069856699 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.067545201 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.068640151 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.068736752 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.065727105 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.067193638 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.065623009 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.06486788 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.065960738 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.068707002 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.065911268 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.068295297 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.069219233 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.065921771 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.065682081 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.068643799 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.065839462 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.06843539 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.065667359 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.064250259 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.066323625 seconds)
  done (took 3.214228084 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.074606164 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.068765888 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.071078818 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.067560343 seconds)
  done (took 1.891431758 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.071449331 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.079972471 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.081003752 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.087053703 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.072120219 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.072220278 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.077874932 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.079324505 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.061984515 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.081504476 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.064627546 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.063087565 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.062959309 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.082197356 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.078472961 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.059418357 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.060788135 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.07196718 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.071419116 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.074063263 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.064682584 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.062171516 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.072261006 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.071625121 seconds)
  done (took 3.334784821 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.075025013 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.061840073 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.073778827 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08790968 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089770142 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.062047349 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074282041 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089563642 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121930784 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.062064156 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.067907077 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.061959773 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.102369557 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.062001842 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076288336 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103523188 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10593192 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.065739679 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.093799467 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.061881251 seconds)
  done (took 3.218216676 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073279387 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.065897855 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06663925 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.062317663 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.073632936 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.069534842 seconds)
  done (took 2.032374956 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064463266 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064436881 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.064044199 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063037756 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.067752158 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.063630195 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.062869542 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.064437123 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.064248165 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.063673682 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.063165524 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.062845882 seconds)
  done (took 2.381643967 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.161866525 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.066228572 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.066760963 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06571016 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067351125 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.062705376 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.07663784 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.064438605 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.079983617 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063062006 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.063519764 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.065111761 seconds)
  done (took 2.518508564 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089965267 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.08839777 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.122160462 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104478133 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085759051 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.08982482 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.13813694 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.127038052 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104078661 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.065358902 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078600511 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097250047 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094513138 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.131439824 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103376122 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.069071328 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.093923547 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076851807 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097786375 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105534352 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102843028 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106082901 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084694602 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094429032 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097911438 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106459502 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.067391615 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.066920482 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12811588 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.093037195 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.084631325 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.087216206 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101818755 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.06515476 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.081393147 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.093514988 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079618834 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096152196 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.083351599 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090560619 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072418083 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.117538245 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094681358 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100539494 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112705233 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08824635 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098194799 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094101213 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.07829105 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.109436066 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089685188 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086612911 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071905265 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.145663644 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085630337 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.099046928 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104605387 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.077301704 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.083279764 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.087994488 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.115008742 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.091851191 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.24848221 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098375342 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.083874554 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087219328 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.126926111 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080661401 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.098542971 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118587992 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.085836728 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.072014084 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.086341892 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.066257887 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.093619613 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095503375 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088454358 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103904456 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079253221 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113994735 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.101972434 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068693336 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.105769616 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087069403 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145948452 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092291856 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.096447151 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087247318 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.141285849 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081300064 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075691478 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089474671 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123635476 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085557759 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.091282809 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.119122548 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085038262 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078703009 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071281155 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.081170273 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088756405 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10388453 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092760769 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084996966 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078657653 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084664177 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.071146676 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.076644161 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.092728361 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083321435 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112261916 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098253759 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107742219 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.074749479 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102667617 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.088619295 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124117942 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.112597986 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.081036976 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103959198 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12769371 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.102406671 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080823852 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095803657 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109253287 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098293329 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.083547727 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127229985 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107193809 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081373712 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.237351118 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088397083 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.100634268 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145024127 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086226262 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.101320296 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130286604 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.101620728 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089016885 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.080210874 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086769897 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10294396 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.131568199 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.088011618 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.066616427 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089130956 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.122539566 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072679002 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090907247 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.08552707 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.079631305 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077022006 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.06430665 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096760691 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.126941734 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.110361967 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094651685 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.089649613 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.066427581 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095321657 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092244431 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139533018 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111261735 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093571685 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.086822555 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096238116 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076577227 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.124647219 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.124074725 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087500272 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087644952 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118918975 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.085442945 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.096616293 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102762532 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10097909 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.093816996 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.132440422 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117742947 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.111573495 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100499977 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118607145 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077721825 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103204844 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.070521324 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099188896 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.073222549 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096952605 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.07476007 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.105710855 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074983049 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.094589755 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.220258316 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.072694961 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.100467442 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085285985 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082292394 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.126024394 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.11814832 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.078408518 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.089273889 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.095821314 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093566136 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.102044181 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.083836229 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087643983 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.074702342 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.076181573 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086837604 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090748927 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099224302 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074117459 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07113797 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.133472967 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098825859 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087548344 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087434013 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.112438756 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079604102 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078899858 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101240778 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.128670389 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.113229611 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076715266 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.087398487 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.065754766 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.080186056 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.071880734 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104386321 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.070337749 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106891341 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.064759755 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.124975213 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083392922 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.09735082 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08866324 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118274614 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.082339729 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118804123 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083106249 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103992769 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090769158 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08650973 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.101819562 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.088122846 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094030908 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09985538 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082215855 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085139689 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118220727 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103538982 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111593759 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103536947 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.130806987 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104032342 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07129756 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099262398 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.086696548 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14489994 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094869184 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080595208 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.082780502 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.255046039 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080330281 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136194707 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083232342 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.079227409 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108831373 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.086322102 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085285422 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072619053 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.098064565 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.082886254 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105264287 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.093435866 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.090539223 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101732304 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102621426 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08208144 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082792797 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119101001 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.124121789 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.097675832 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082431565 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084088618 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09616726 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089287367 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.105557508 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077112492 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.071963591 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.064923691 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.068172531 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.112615982 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099752332 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090494018 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089752096 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.098623991 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068139597 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085280999 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08771716 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.079888187 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085643459 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.109242358 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.098818549 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.124021107 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.097134786 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088209738 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132207662 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.122956061 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085892483 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089114535 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092612774 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.073365503 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14254278 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11030297 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.07444329 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078450661 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.073557241 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081632301 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.068084327 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101313382 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101265151 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072934585 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.095433645 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090469348 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.113151493 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088421667 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07342408 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.076949902 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.070209069 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.0701052 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.092974604 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.07287874 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072779371 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.273502953 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10045862 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101435605 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077476702 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073057311 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126748239 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.065984294 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126936854 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079621324 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105463617 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.077295365 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076110263 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086294184 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099584079 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103826161 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108798277 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.067793106 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099103132 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144282842 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073366721 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071863962 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.071131534 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106951585 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083435889 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139528646 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086918788 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084904439 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073689406 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119154577 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09964921 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.07932911 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119531672 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077362494 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.067960165 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078473386 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.103782375 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.068836991 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.071203441 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108499112 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.618464961 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087487313 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.073707963 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080867985 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116168391 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079248718 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104570127 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.113049343 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101829362 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.176461836 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070302595 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087067049 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.101213877 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.094756244 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08716471 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076455054 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.084652769 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08446835 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.07658668 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101980748 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.077020542 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.083104696 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.076664682 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.100238892 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.124689106 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082164733 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.097644809 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083186429 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081685225 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09315082 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101409219 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.253139557 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.082340505 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085152025 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.102807437 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.0800263 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076422464 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095245295 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.073338226 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07459914 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10874778 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.08078148 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.089402296 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100151365 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.081787403 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105215714 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113045747 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110324339 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.094246619 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075916925 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081993665 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.084000983 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070458537 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075742254 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072417673 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.066741837 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103900415 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081572362 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078618815 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.096385208 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.102378296 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.095666658 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104077893 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086126535 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092515309 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097122561 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.122102887 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147673143 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095390241 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.114477326 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.127506322 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.074539969 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.072423089 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.077413432 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126926847 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.076783608 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088178397 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.227717116 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073827593 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07756046 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088156895 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10342377 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078822857 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077312733 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094674017 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107015901 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080523978 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078061489 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089924179 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.101029279 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.125663699 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.085171816 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07145372 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105035473 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098480899 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119101341 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.069953235 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078567368 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.124522458 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083205855 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096512815 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.075442309 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114830903 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.2801958 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072124028 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087269566 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.067750301 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084660877 seconds)
  done (took 48.483287036 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.150523787 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.147093745 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078223581 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.09395517 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.188489636 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.204233852 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.11427719 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.090863972 seconds)
  done (took 2.800230883 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06414006 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.078490141 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.097766741 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.079817514 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06310529 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.064826593 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.189915979 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078815923 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.062807067 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101837845 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.071410512 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.065315131 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.346793666 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.062517142 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.063543918 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.071236855 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.063801566 seconds)
  done (took 3.343781373 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.346028677 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.608928479 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.312983402 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071405353 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.942914727 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.086183782 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.154122282 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.134703488 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.078240618 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.548452731 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369920327 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129194898 seconds)
  done (took 18.512860331 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.071666519 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071065061 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.073995117 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.074209533 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.070065024 seconds)
  done (took 2.087098441 seconds)
done (took 97.366881388 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078110231 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.163402524 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.064048706 seconds)
  done (took 1.986927102 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.078038033 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.07712061 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.076913776 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.074492693 seconds)
  done (took 2.039827975 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.070191984 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.072259252 seconds)
  done (took 1.868483918 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.230187329 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.158364888 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086030564 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.078225884 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07632775 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076309226 seconds)
  done (took 1.967357625 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.068356811 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.068092191 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.067989219 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.068263484 seconds)
  done (took 1.9976081 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.064631389 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.062516409 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.065575487 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.067803665 seconds)
  done (took 1.987499802 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.078708059 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.07983761 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.073852102 seconds)
  done (took 1.959289287 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106713394 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095050024 seconds)
  done (took 1.927962032 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.075992134 seconds)
  done (took 1.807705064 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.0834043 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.090060181 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.138714332 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.103920259 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138312645 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.123260508 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.073060329 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.07403553 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.069789959 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.06868472 seconds)
  done (took 2.69181423 seconds)
done (took 22.513274873 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075005784 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.362970108 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.356889966 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082233859 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666635014 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.352597613 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.978252329 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.086194308 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.093988522 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064493556 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080472437 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647673169 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.96902032 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327790934 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.955620435 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326453482 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.666102574 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064788156 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064099904 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064793267 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.960848124 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064147071 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064611082 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064990583 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.666203511 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.368378767 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065119522 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326298792 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06410134 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066499123 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.352633126 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06599911 seconds)
  done (took 16.127625529 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.066299395 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116106476 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068879569 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.079740437 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.06671025 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065623014 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.067994382 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.065524102 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.104057266 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064736731 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08096586 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064475456 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.069225784 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.066170648 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084618779 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065244908 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066876121 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066127491 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0683347 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066267108 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082867722 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064580922 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065737768 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06581815 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065782531 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.077297539 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066675249 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065324269 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065631525 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06761556 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.06922554 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07038999 seconds)
  done (took 4.036996564 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118407027 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121703626 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070062008 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103769813 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114353588 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067047527 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145886469 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.086751376 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.109031385 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065368824 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081160907 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065068469 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.09941902 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06702956 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085394736 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06586986 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066873925 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065942255 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065656508 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066359872 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083362918 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065321786 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065964021 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066285082 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066101155 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079464636 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0662959 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065179996 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065594293 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067533971 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069110178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066723896 seconds)
  done (took 4.305614059 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.065789339 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.068549183 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.075698699 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.076260943 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.063454318 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.065312154 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.066399449 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06391562 seconds)
  done (took 2.296022122 seconds)
done (took 28.517787809 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.075079976 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.064818161 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.06756004 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083763467 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070186308 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.066809761 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.061744445 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.070721677 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.067684156 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.068169413 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.069462344 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.063283832 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.066132621 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.061855158 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.068787068 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.063357063 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.069428108 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.067063234 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.068036661 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.069237267 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.065546805 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.068456251 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.071740433 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.067809568 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.06778075 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.0676166 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.072451042 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.068608273 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.063705501 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.065753568 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.064947837 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.077087457 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069528796 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.069555866 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.063184778 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.063163476 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067162234 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.065346223 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.069478944 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.071769979 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.065157306 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.072134193 seconds)
  done (took 4.579074952 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084080402 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089344294 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08205419 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078491802 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099714284 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.078296951 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086004945 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.075528753 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074090195 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.085004746 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.06985567 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.074861009 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.075673043 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.069073302 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.074241517 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.070867145 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.076529354 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07019156 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.074845145 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.074978086 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08698363 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.068472882 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.075920246 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.076756554 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.070857755 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.076620609 seconds)
  done (took 3.776630069 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.068670867 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083204326 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088392573 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.150155748 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106717395 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078540997 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077736646 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097129345 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096496508 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.064578874 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.068357282 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09054164 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091702632 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07141694 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.103211632 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081221267 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.075735165 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06646596 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.071225004 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097032257 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086697585 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082642031 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095350458 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084088011 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063966071 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072984539 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070630924 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078430621 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071054788 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076103329 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.068277856 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.067803603 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.064545546 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.075260014 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.068003421 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.062122711 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.085202342 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076010784 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077566415 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105774735 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07328015 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065550408 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092169864 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125174863 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.063838074 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.06654467 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.067929262 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075992088 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065362847 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092574268 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081750039 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064119131 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.081694099 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065254756 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.065559087 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079081529 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.065939514 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.065815702 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075599921 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07008997 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083527674 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068544094 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082952034 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064107558 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075083184 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065792083 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066104139 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063052318 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097983933 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070670952 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112881182 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.065135538 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.062478559 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075331181 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074348429 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.070465173 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064354684 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081672262 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074991166 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067524395 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075009832 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.066838012 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067450861 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097579194 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06295323 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.062745737 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.062462558 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.066251472 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067019042 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.064695763 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.076784226 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.063362191 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.06754772 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.078152235 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.063898288 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.064557412 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.066645024 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.065217183 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.063453919 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074296871 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.068071556 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.065801803 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075963852 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.064910397 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.067262741 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078411915 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072957842 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063498404 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.065021498 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.066644204 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.065413448 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068388441 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067264046 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.065661333 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.069594841 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.071100551 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.069389895 seconds)
  done (took 10.556145854 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160140009 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152962777 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.066053151 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146011499 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.072042722 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.068807604 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148674154 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.083059534 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.065030636 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.065814228 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.064366561 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.091146152 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.086846216 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.09809324 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.068832105 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.065504331 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.087338849 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.095621771 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150144868 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144289612 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087242498 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.071430761 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.06702069 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.066332653 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.066346674 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.073257161 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.079850843 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.072632398 seconds)
  done (took 4.364418744 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.0716838 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.08898621 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.06831588 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.075520009 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.083447989 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064999185 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.066707773 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.065755001 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079075743 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07150134 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06485007 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.069649486 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.067922063 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.066936781 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065757392 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.070941773 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.070989773 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.063713219 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068569468 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.069083791 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074666713 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.089738863 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.068760354 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064277147 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.066593956 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.064614244 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.072173607 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.074486131 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.064318955 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.078284839 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.061866991 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.068897702 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.078610958 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.065445783 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064636906 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065338177 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.064865361 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.064610065 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.064853927 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.062929916 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.062445082 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.068989091 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.063776223 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.070887409 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078274341 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.07126982 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.066080125 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.067099774 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.066781182 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.061846253 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.067586878 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067636149 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067568296 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.072265244 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.067917295 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.066892413 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068160221 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.093283856 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.070020144 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064074679 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063669181 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.063054745 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.066062599 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072414159 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080528574 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.065553247 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.063269652 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.064873088 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069589734 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078249303 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.064374768 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069651447 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.061744919 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.064728374 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.066718918 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.066888314 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06558543 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.063267181 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06434875 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06495763 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.064701191 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.064114461 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.064193267 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067395706 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062397917 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.062836322 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.065239508 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.065878795 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.071038602 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06324028 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.067192676 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065786572 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063327171 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.066935467 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.069741526 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067267092 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.078408955 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.073893387 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.064825621 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.062396858 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.07798201 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.066323741 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.064059559 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07041943 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.068621448 seconds)
  done (took 8.9890676 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086004653 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06579283 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083482947 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.088740135 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.074561559 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.070219598 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077445676 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.065329944 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.079952686 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.063627955 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073494399 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.063612339 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078039711 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.073775727 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.066107136 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.074670745 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.066927957 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083429467 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.078229643 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.063349711 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073012143 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.076244734 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.076475103 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080822934 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080598984 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082082574 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.076209398 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.067206455 seconds)
  done (took 3.894771643 seconds)
done (took 37.904172313 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.82413684 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.99532481 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.824084517 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.022608057 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.084152192 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.844050128 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.023050592 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.821124694 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.855275734 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.850885245 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.133202906 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.260173808 seconds)
done (took 67.352932199 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.848666788 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.990780792 seconds)
    (2/2) benchmarking "String"...
    done (took 2.061188503 seconds)
  done (took 5.808698757 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.984657045 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.464794631 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.092414046 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.83115451 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.838115482 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.244075534 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.623846291 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.272565704 seconds)
  done (took 31.124741435 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.953427937 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.053532673 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.51996158 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.551892607 seconds)
  done (took 15.876225181 seconds)
done (took 64.490418467 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.860793404 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.825264711 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.890401604 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.851954915 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.830624944 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.827244807 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.825952605 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.828590724 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.884784876 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.890049307 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.825875236 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.834777706 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.826949316 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.855504238 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.365052544 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.874043435 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.839971238 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.839356638 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.831460182 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.85050994 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.831722345 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.988581791 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.322675738 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.023941135 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.441923815 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.268147607 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.903597038 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.250951468 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.82967336 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.821101185 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.890458435 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.221795755 seconds)
  done (took 206.013167333 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.837075878 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.870254367 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.932704958 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.862548719 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.454165576 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.011380968 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.93685941 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.475294146 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.839684811 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.843810105 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.046246582 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.837787422 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.071957926 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.79437146 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.863570055 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.840426146 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.111789828 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.092933017 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.865338695 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.983282276 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.850694302 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.021672735 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.997983187 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.079281113 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.87571842 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.929993127 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.84662584 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.836417125 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.008320198 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.089818699 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.845068742 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.844027081 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.011280529 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.689372278 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.844317007 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.833554248 seconds)
  done (took 172.93992877 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.002836129 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.83908549 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.830326186 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.874085413 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.95200956 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.829677051 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.490161757 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.829685956 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.887443508 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.816719597 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.824294731 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.824107047 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.817310609 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.835295633 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.895085804 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.815976386 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.83938204 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.826463073 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.850245945 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.825661585 seconds)
    (20/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.823509935 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.823386711 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.824817481 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.822888847 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.82316245 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.823576986 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.824201492 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.105960071 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.064703704 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.82606356 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.825273161 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.618618971 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.837109616 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.22752902 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.812853894 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.911315192 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.86498272 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.938943017 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.819686274 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.036702535 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.883659769 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.820464888 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.817966078 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.882541987 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.831854825 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.811563938 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.812210056 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.824732352 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.883845178 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.070091494 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.819241273 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.941930397 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.30643515 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.818853749 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.819329973 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.818627274 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.428734588 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.82127822 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.819043169 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.825609666 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.826825195 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.819245423 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.812563561 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.198457037 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.890897685 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.948827746 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.160140055 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.819710829 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.45746832 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.00857168 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.811595373 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.810288621 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.810624144 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.81168678 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.80934318 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.813501909 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.932111254 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.816353459 seconds)
    (78/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.937137447 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.89195037 seconds)
    (80/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.933234653 seconds)
    (81/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.810050395 seconds)
    (82/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.811489138 seconds)
    (83/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.645834503 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.87918784 seconds)
    (85/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.837671354 seconds)
    (86/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.638367898 seconds)
    (87/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.811440857 seconds)
    (88/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.180710358 seconds)
    (89/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.588522205 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.811170305 seconds)
    (91/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.80722975 seconds)
    (92/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.819412966 seconds)
    (93/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.807524311 seconds)
    (94/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.807814923 seconds)
    (95/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.808430169 seconds)
    (96/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.888269264 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.80894015 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.807167143 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.806161628 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.930215897 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.536549157 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.329358601 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.795669812 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.799970367 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.799254137 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.880362521 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.922149925 seconds)
    (108/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.800406122 seconds)
    (109/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.867003082 seconds)
    (110/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.805151513 seconds)
    (111/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.801231053 seconds)
    (112/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.873799989 seconds)
    (113/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.799911819 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.801072771 seconds)
  done (took 405.631048243 seconds)
done (took 788.405037619 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.363388768 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.341087576 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.432306261 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.350635642 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.323481688 seconds)
  done (took 13.538672316 seconds)
done (took 15.268506996 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.813489591 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.804645412 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.858739628 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.883145401 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.815048165 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.81680596 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.878500468 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.81704272 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.847411175 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.851657538 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.881888995 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.881195202 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.820615949 seconds)
  done (took 25.699011851 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.799561104 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.932813644 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.012382081 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.831397046 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.800180572 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.014954351 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.856202859 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.927474528 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.936900414 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.013654415 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.017267723 seconds)
  done (took 22.870265485 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.799009104 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.931094016 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.025091938 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.833315602 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.798924017 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.014071806 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.862619184 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.924827971 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.930874189 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.012670707 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.024142421 seconds)
  done (took 22.891497302 seconds)
done (took 73.189451274 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.793261413 seconds)
  done (took 3.518409012 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.807676745 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.933746659 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.792093381 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.792279712 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.79280136 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.793233305 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.792557906 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.792544409 seconds)
  done (took 16.222888515 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.791709518 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.790593557 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.79144399 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.792047209 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.790053516 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.792612771 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.791180839 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.790954735 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.79094307 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.791987154 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.791356183 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.790362699 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.790229275 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.790097131 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.789874637 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.790839703 seconds)
  done (took 30.38295586 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.792449377 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.790158918 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.789689544 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.79163274 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.789248839 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.793406245 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.791026987 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.789031537 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.790728496 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.792002489 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.790352909 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.790243665 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.79103351 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.790531291 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.791443307 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.790782548 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.790381581 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.790552894 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.795126813 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.790646195 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.791707257 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.792023232 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.793609981 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.791613071 seconds)
  done (took 44.715684839 seconds)
done (took 96.57615147 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.562554766 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.851419062 seconds)
  done (took 10.138969015 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.79809532 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.796798688 seconds)
  done (took 5.32950736 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.796929668 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.796578307 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.798589642 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.796826118 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.798117158 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.797060572 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.797155544 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.797374297 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.797459607 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.797363367 seconds)
  done (took 19.704373034 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.796192728 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.796925315 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.797427089 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.7969764 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.795392477 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.796625036 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.796844741 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.797498346 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.798197206 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.796871817 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.797725371 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.796101684 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.796215469 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.797000972 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.795227006 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.795757017 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.795875697 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.795490495 seconds)
  done (took 34.069841638 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.79741563 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.796732997 seconds)
  done (took 5.323637099 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.798086264 seconds)
    (2/7) benchmarking "second"...
    done (took 1.795454731 seconds)
    (3/7) benchmarking "month"...
    done (took 1.795994072 seconds)
    (4/7) benchmarking "year"...
    done (took 1.797083918 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.798611597 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.796442543 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.795910006 seconds)
  done (took 14.307119126 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.797598854 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.943784696 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.997037914 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.608339662 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.797524212 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.799714364 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.064545015 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.798979439 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.80010427 seconds)
  done (took 20.337834632 seconds)
done (took 110.9383372 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.625193478 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.79729314 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.065887044 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.930715904 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.819431071 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.135299345 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.836346506 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.443417334 seconds)
done (took 42.385683779 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.845427452 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.797195333 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.841476069 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.846422973 seconds)
  done (took 22.215731358 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.795394054 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.103445752 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.819729644 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.626487209 seconds)
  done (took 22.09265395 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.184736087 seconds)
    (2/2) benchmarking "read"...
    done (took 2.146454726 seconds)
  done (took 6.069270967 seconds)
done (took 58.957818652 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.797749677 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.796804663 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.797277185 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.797270798 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.798944661 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.797852298 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.797649898 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.798197345 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.798505749 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.797418272 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.797928075 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.798780557 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.797543117 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.797653881 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798122168 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.799275124 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797762282 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798707782 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.79743111 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798196202 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.797854735 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.798390664 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.797888643 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.798389745 seconds)
  done (took 44.884275992 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.799474905 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.800216533 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.798826852 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.801125862 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.799331808 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.799288098 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.798899133 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.798929411 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.79903946 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.799452356 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.799181516 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.799589595 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.800083516 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.798945054 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799502906 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.799716961 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.800150484 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799884322 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800803841 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.800065393 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.804516806 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799792182 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.80000891 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.801058306 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.800559917 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.800308584 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.80057989 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.799798232 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.800456996 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.801627617 seconds)
  done (took 55.735935852 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.800287758 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.800460434 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.80097278 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.80052582 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.802708648 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.802466469 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.80127258 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.801276391 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.80142596 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.802585484 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.801274738 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.801846124 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.800973396 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.801580853 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.801532786 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.803122255 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.80152248 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.802297576 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.801375383 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.801608647 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.802431274 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.801792308 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.803393754 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.80151419 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.801878825 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.802028805 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.802808188 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.80233631 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.802429557 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.802157883 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.802224322 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.802868475 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.802404397 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.803105302 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.802540065 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.802405489 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.803263935 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.803216711 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.802404689 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.804170498 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.802921046 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.802284791 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.80383402 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.803103864 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.802823858 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.802969271 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.802689945 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.80281592 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.803316028 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.802858887 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.803218569 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.802717774 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.803537442 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.806675038 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.805346448 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.805612074 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.805549616 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.805035035 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.803908333 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.805259878 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.803932138 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.803534744 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.803342694 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.803513795 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.804411581 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.8058639 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.804180121 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.804102926 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.803834284 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.804645478 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.8054378 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.804006045 seconds)
  done (took 131.5482279 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.804488158 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.804529552 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.804505117 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.805022824 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.805117023 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.804701279 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.804619346 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804275189 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804896137 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.804735506 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805019065 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.8052355 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805073207 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.805027965 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.80618877 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.804452441 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.807053027 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.804748801 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.805348953 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.806842534 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.805725809 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.805431567 seconds)
  done (took 41.452733659 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.805994616 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.805142686 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.808121011 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.805885391 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.805413176 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.805606027 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.805615333 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.806767854 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805672382 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.806176376 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806289931 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805301818 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.806260828 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807583361 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.805982758 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.807116148 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.80690312 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.807469213 seconds)
  done (took 34.253049051 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.80760808 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.807529584 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.807047491 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.807289464 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.806384932 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.807874717 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.807257257 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.808855089 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.806149616 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.807575233 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.807057606 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807754137 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.80715149 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807543458 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806658017 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.807323756 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.809328639 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807196625 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.806668273 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.807475733 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.808218605 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.808530447 seconds)
  done (took 41.50547378 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.807044158 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.809430995 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.806931108 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.808768595 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.807928784 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.808915242 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.807868363 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.807840984 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.807705609 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.807865241 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.808491379 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.808280713 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.807852872 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.808464579 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.80854284 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.809332606 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.808548997 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.812008118 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.808429628 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.807699302 seconds)
  done (took 37.911388311 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.811614864 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.81143551 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.810297924 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.810355144 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.810841238 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.811789562 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.810496619 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.811446544 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.811088796 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.812161302 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.811881343 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.813789358 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81154304 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.813022561 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.812106909 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813183079 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.812552047 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.812489789 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.811834122 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.811662961 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.812097098 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.811722823 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.814283027 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.812069456 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.812587796 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.812484466 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.812287799 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.812915464 seconds)
  done (took 52.479668135 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.809884567 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.810704658 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.810617199 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.809954411 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.811410441 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.81046146 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.81122924 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.810386676 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.810891618 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.810034109 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.811561363 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.810816615 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.810686929 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.811293133 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.810588216 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.813469061 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811509154 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.811854285 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.811284106 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.811782619 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.811130242 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81251655 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.812741223 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.811351737 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81175367 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.81089203 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.813087176 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.811957846 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.811709318 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.812206336 seconds)
  done (took 56.086196039 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.832393832 seconds)
    (2/2) benchmarking "in"...
    done (took 1.832585385 seconds)
  done (took 5.41062544 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.81133104 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.81168819 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.812025275 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.813097111 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.812269525 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.812695572 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.812171467 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.812276125 seconds)
  done (took 16.24323726 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.813124516 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.818470759 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.812571092 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.812717779 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.814267366 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.82359559 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.822891933 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.816929656 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.81951317 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.822124324 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.817604769 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.81945343 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.821706963 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.819762084 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.813040847 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.822556023 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.817882386 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.81960418 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.817051303 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.813829675 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.819576309 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.816121192 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.81348132 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.815963281 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.816884289 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.81743372 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.826479836 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.817083202 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.817249619 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.813599369 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.824430599 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.81506079 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.816188287 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.818655817 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.81602518 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.814999648 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.825398725 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.817012332 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.816569356 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.813993355 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.820321581 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.822974759 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.821144509 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.826063432 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.817720866 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.815962236 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.813715363 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.81739332 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.823738771 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.821813026 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.822557716 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.817820738 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.815672099 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.81729385 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.82169061 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.81932133 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.818868721 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.823600697 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.824488189 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.826865233 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.822646671 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.837634967 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.826831268 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.818744431 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.818183026 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.827098155 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.838959863 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.820068114 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.820997279 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.816836852 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.827869844 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.818084544 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.816509324 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.817125951 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.83352284 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.825945649 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.819287908 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.818303863 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.816943456 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.819779089 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.820212549 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.819440077 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.820698574 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.819789664 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.828402778 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.841184339 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.819536062 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.819574076 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.823989072 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.825775766 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.825436392 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.822715485 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.825321426 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.819203962 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.821014142 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.828637024 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.820318264 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.820114501 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.825547076 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.832321952 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.819526102 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.818857075 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824002343 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.827026482 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.819848953 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.82050885 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.82224527 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.823199868 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.829382213 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.821147854 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.821472239 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.818568076 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.827687377 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.824787628 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.819691708 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.825778618 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.828548545 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.832698383 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.829896526 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.826566272 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.82688085 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.82637092 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.830630003 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.845834271 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.820027121 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.825764005 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.827585493 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.83197083 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.826929153 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.820490691 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.825467551 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.820838127 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.819820675 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.824598771 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.820586265 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.822847032 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.82065946 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.823470481 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.820009445 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.824628705 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.83294263 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.824866744 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.826484395 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.821810486 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.827263714 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.823091531 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.826427441 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.83182405 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.830233024 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.823080639 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.821413687 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.82597361 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.830640414 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.825310828 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.821195753 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.821241319 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.825423805 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.831063811 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.826861722 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.823966524 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.821335166 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.831798915 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.825884977 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.824452526 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.825381799 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.830047926 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.824402002 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.824088311 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.826506087 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.826035443 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.828179487 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.824737755 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.830647026 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.8221888 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.823159383 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.824894179 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.823038727 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.830925445 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.82809904 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.835955502 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.828941108 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.834113332 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.822389962 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.833204789 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.823397599 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.827768188 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.826087609 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.825078633 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.824966968 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.825645744 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.822857798 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.828905562 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.845943974 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.835484104 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.827659103 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.832254715 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.835507165 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.827851099 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.831990694 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.825151124 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.826490112 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.828644498 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.826186956 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.826215177 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.824949128 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.831122292 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.833456984 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.824726461 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.831524307 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.826711083 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.824879816 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.827840771 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.824527749 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.829279069 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.82564715 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.832094576 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.833321289 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.824316294 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.836112083 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.831445418 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.825521675 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.827001306 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.832194343 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.826676611 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.825578254 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.829128424 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.832041225 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.833777345 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.828804085 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.836038608 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.835307411 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.833264778 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.832932518 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.826306955 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.829881524 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.826532199 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.830734565 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.833404909 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.833021621 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.828860218 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.833240284 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.826732498 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.830198836 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.828289202 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.829805928 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.828043744 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.830704513 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.828464968 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.827136234 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.838074058 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.827125811 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.829425386 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.827784605 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.837885578 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.835891344 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.832941195 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.828902016 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.833298979 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.835210466 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.836415447 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.835635089 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.838751877 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.83229164 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.836627222 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.830773269 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.830924749 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.842722079 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.838943226 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.82910121 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.828567338 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.829501105 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.834318817 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.82850463 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.829619598 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.839768367 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.837994359 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.837377106 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.831782652 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.830086496 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.83064053 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.838611945 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.83309931 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.834192839 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.832720554 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.832529391 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.832153754 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.829070051 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.834721478 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.831618226 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.833405958 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.832455722 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.828832954 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.833016583 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.829132588 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.841760041 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.830466614 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.831817568 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.840274513 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.83349786 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.837698563 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.833163943 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.829991447 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.833562625 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.832552192 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.837906122 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.839488578 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.831955559 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.835522285 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.84201073 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.83504312 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.840719923 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.833803527 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.844134372 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.831940876 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.830578284 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.83180383 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.835281392 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.839633502 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.830255902 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.837482282 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.843409834 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.840042527 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.839980223 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.83708771 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.831535092 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.832807396 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.832989058 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.839978925 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.839382502 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.83737781 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.832259365 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.833640392 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.832892396 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.838143828 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.838070772 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.837247873 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.835908516 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.840802347 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.831666959 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.833333022 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.833339999 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.833239849 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.832966257 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.831203477 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.832551969 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.843242533 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.834915806 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.840038032 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.836406282 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.832496208 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.843946127 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.835340079 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.834896882 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.842315118 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.832995683 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.843930442 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.832586402 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.834561902 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.840659017 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.833069143 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.841195462 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.848338292 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.844012305 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.84511003 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.83737893 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.835161914 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.836161038 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.843853587 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.853968909 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.83818998 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.83771383 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.837394121 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.845031396 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.838528077 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.841529288 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.838362299 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.842036929 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.838456999 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.841242007 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.839408899 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.849048562 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.835672275 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.833918577 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.834622218 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.841151117 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.844684 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.835064035 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.843709648 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.840098703 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.842908104 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.84913431 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.835431223 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.843727774 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.836933726 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.834565534 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.836288377 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.834760871 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.838632472 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.837939129 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.836950839 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.836706183 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.839347371 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.842799061 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.842690592 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.842673249 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.846251929 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.836708644 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.837268123 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.844948635 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.837860856 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.840349786 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.83782903 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.843905893 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.84613901 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.8351351 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.84551623 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.841431093 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.845865835 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.840699532 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.835155525 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.835246217 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.843156129 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.844016629 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.838017783 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.839007764 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.848055985 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.842886851 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.849278988 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.846443313 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.838582335 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.845095326 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.846257405 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.845334137 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.839163734 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.846243391 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.83982695 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.842153778 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.842568617 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.840221435 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.83886395 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.846511478 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.844827212 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.837964562 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.845690622 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.839070695 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.838401445 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.843200334 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.841172908 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.844400191 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.838529282 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.838235503 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.845942689 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.841533873 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.840425431 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.842490436 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.839601266 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.838536654 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.842375104 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.842699364 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.84177353 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.838751063 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.838396158 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.842014689 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.837634364 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.838767461 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.846838459 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.846911239 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.83951801 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.843033565 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.853369799 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.839380447 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.842361737 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.848675818 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.845463364 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.840622102 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.840367269 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.841423624 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.83859668 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.849857089 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.839733158 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.841497848 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.84803441 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.838868012 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.84940863 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.844392278 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.847125076 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.84259326 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.848123142 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.840232596 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.845654446 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.855738205 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.845217528 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.844813549 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.847023009 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.846761727 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.844573131 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.840369783 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.840676681 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.848345941 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.849055427 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.8480461 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.844725948 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.846301435 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.843350271 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.845456589 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.842941027 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.845572755 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.839981785 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.840880886 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.846891126 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.851514731 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.853265689 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.841829518 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.845192346 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.843737568 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.84693228 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.861017377 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.842796507 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.843081316 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.843184339 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.844600734 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.849789753 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.850358281 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.857307896 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.847978316 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.844102288 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.848428834 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.861259896 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.847727069 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.852992422 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.873629753 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.852693606 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.844758831 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.845104181 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.851127161 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.844395745 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.853684534 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.844116122 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.852987845 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.844880063 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.843182319 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.854553271 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.843719744 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.843372975 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.845230179 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.852672916 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.850172041 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.845258067 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.85466445 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.845469144 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.843564257 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.852597763 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.85488256 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.843886973 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.843522597 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.843858584 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.848333001 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.843831248 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.845791251 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.856096767 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.846126794 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.847652219 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.858053836 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.863420207 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.846449596 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.847380167 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.845809303 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.851276064 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.851110672 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.844699814 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.849586133 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.850284817 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.849994277 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.851065355 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.848550926 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.847889339 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.847374574 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.845049507 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.846247982 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.858499291 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.857481231 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.854786755 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.853856762 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.853372453 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.845198507 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.855267071 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.854469714 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.847037648 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.849318032 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.847610653 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.844586912 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.846210809 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.846417843 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.852070191 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.852958092 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.848201252 seconds)
  done (took 1095.134658499 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.848411566 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.846460228 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.845790928 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.846569333 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.847521225 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.846457376 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846571419 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.846791237 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.846383128 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.846128576 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.846834623 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846677955 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.846022355 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.846322727 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846139333 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.846632634 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846885497 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.848640096 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.846323809 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.846512952 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.846699863 seconds)
  done (took 40.559981218 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.846484006 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.846122722 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.846992048 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.847059019 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.84765483 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.847285683 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.846439722 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847306539 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.846585132 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847329664 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.847053698 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849694745 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.848305035 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.847464064 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84773588 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.847409861 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.847315145 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.847208904 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.847692943 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.847431445 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.847915466 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.847731465 seconds)
  done (took 42.42276676 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.849908653 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.848944735 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.850719168 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.849498437 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.852955199 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.851564975 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.848907864 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.858145952 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.857103808 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.858287557 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.857200946 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.855254119 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.848223709 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.859314543 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.849491502 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.850363151 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.996917754 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.851110128 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.851111772 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.849360989 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.852092809 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.859925246 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.850633879 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.848970005 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.856383825 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.852346616 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.84967521 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.849502488 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.849773315 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.859235204 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.855560239 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.849718228 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.852497123 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.855397406 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.858237264 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.85894405 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.856883596 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.8551571 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.849793067 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.850443385 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.861617346 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.872190346 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.850935823 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.853152814 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.862022475 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.851082421 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.85088837 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.856136989 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.857336627 seconds)
  done (took 92.762824723 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.850655164 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.850578951 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.853013895 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.853715689 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.850694887 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.85062763 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.850710474 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.851511908 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.851661348 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.851247086 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.851513683 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.851866469 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.852090135 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.851057342 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.851808626 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.851684674 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.851791283 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.852263453 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.851843432 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.856364576 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.852665943 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.852313532 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.851295929 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.851724605 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.852257202 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.852083617 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.853073737 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.852150159 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.852018901 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.852464928 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.852151451 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.852984037 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.852190566 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.852929615 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.852965767 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.854581821 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.854018794 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.852148788 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.85251557 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.852549188 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.85346882 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.85282821 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.852587252 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.853190848 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.853726234 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.852676806 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.853190449 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.853787682 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.853962334 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.853160319 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.854002848 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.854644374 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.855530559 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.853224742 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.853279741 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.853449745 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.85331006 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.853513428 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.854021789 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.853701063 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.853473226 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.853529371 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.853266712 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.854277383 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.85370987 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.853657395 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.854416259 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.854480919 seconds)
  done (took 127.77569455 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.857067256 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.856061068 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.856655208 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.856668092 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.856801471 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.856582517 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.856737003 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.85600977 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.856186573 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.857204965 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.85705763 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.853869142 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.857802912 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.855584263 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.857630317 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.861099104 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.856469123 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.857276813 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.857303145 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.857020871 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.857180107 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.857939553 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.857524798 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.856947488 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.858013202 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.857822739 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.858576046 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.857195224 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.858095249 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.857982991 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.858019149 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.862577371 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.858050635 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.858165334 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.858937621 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.857946177 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.858201424 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.859192471 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.857982093 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.858178507 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.857656857 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.858864602 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.858114845 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.858437329 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.85784572 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.85865925 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.858925733 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.860891853 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.856646571 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.859008343 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.858558843 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.85882207 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.859110035 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.860045331 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.859684375 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.857253511 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.85977348 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.859948283 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.859676903 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.860385993 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.860266851 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.857062876 seconds)
  done (took 116.988584885 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.85836373 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.859171597 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.857605924 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.857910092 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.857626205 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.858440493 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.858422897 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.856804437 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.858223891 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.857842908 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.858216149 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.858415602 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.859381029 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.858517761 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.858039076 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.859564041 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.85801062 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.858410931 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.859027383 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.858263427 seconds)
  done (took 38.95698284 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.857985663 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.858722456 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.859665377 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.858599716 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.859037444 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.85873352 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.859407387 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.858395558 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.859289374 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.859082296 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.858405678 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.858779014 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.859527621 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.85904872 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.859284343 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.859374408 seconds)
  done (took 31.53358661 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.859207622 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.859916546 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.861742027 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.862912001 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.859869538 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.859788531 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.860677251 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.860290327 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.859912486 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.860007902 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.861355615 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.86013736 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.861005281 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.862974581 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.860507097 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.86018852 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.86120477 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.860401233 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.861100596 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.863611915 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.861477066 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.861087331 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.860879923 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.870844268 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.860486541 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.860959252 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.860311732 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.86249911 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.861415717 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.861764767 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.86058144 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.860913545 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.860958181 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.86088421 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.864522043 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.862162973 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.861435998 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.860896184 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.861148096 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.865916964 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.86191074 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.861808642 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.861455772 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.863540909 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.861856228 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.86551651 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.863302831 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.862363749 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.863064508 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.862398737 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.86493112 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.864748414 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.862502566 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.862522009 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.862340738 seconds)
  done (took 104.196581397 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.863140392 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.86277751 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.862749502 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.863635826 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.863693036 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.86391322 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.862930105 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.862643462 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.86281722 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.862339551 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.866435304 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.861972903 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.863987053 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.863347077 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.863684181 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.863587414 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.866142062 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.863464163 seconds)
  done (took 35.33765299 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.864489773 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.866670768 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.863843621 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.86369835 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.863419583 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.863875568 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.86327157 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.867141394 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.863180736 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.864623046 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.863808656 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.864087761 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.86420532 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.864216241 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.864346932 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.863874842 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.864552211 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.864692391 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.864659156 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.864871437 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.864496861 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.864188534 seconds)
  done (took 42.812748101 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.873817396 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.873111795 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.88692235 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.892310323 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.892665385 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.905195512 seconds)
  done (took 13.120090017 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864586461 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865410713 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.865247188 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867427842 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866500895 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864828219 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865734617 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865060546 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86531812 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866140099 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869167862 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86572748 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865736576 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866274064 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866219635 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865821484 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865662478 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866480639 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866731327 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868076911 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869518349 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8664697 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866026248 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866821293 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867149198 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8662035 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868537775 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86662997 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866754518 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866646301 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866967504 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868385383 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86678848 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86719343 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866404355 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868306413 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868322755 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867208254 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86681856 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866664477 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.86703769 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867305322 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86926976 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868080641 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867841465 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86694944 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867240649 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869690551 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867869097 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867875684 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867613412 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86899303 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871044643 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86750961 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86820445 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867723345 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868271545 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868404466 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873250602 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868844785 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868285981 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86790686 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868257689 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87145792 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869241825 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869732919 seconds)
  done (took 125.051563906 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870689933 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.868615931 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871622883 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869518303 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869224171 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868827864 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869060976 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869648234 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871861656 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869252689 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869987263 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869535908 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870669415 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869301353 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868674316 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869151079 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87102503 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869093737 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870454961 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869565275 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869813064 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869876478 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869552667 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871579427 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870604282 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869818097 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870465808 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870586692 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870478629 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870625001 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870713575 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870678914 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871542659 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.870821374 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872174911 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870480171 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870881846 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870307882 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869387402 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87198739 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871009977 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870397992 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870828898 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87082026 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874086358 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871068044 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871125596 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871364205 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871299216 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8719005 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87473443 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871728656 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871624263 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.87246932 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871412758 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872812076 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871229648 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872457317 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872236036 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871414208 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87324196 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872142654 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872806074 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872620471 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872115352 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873388895 seconds)
  done (took 125.284531873 seconds)
done (took 2551.191362758 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.92889461 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.980071779 seconds)
  done (took 15.712078352 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.038383102 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.989791164 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.876983324 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.899109788 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.876933575 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.8975139 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.883515166 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.877238256 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.877699773 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.876633055 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.877551064 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.061634711 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.935172376 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.876865875 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.877716106 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.968725956 seconds)
  done (took 52.50065466 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.881895469 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.881996753 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.89230451 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.881990709 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.881738281 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.894989127 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.91195228 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.887237812 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.919312265 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.895118156 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.952646125 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.892150054 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.885196794 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.932428412 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.895141303 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.897113408 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.97414323 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.958268755 seconds)
  done (took 36.122879953 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.95855236 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.887221864 seconds)
  done (took 10.656652617 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.907025721 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.910617409 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.91276137 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.914607917 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.897485164 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.89560128 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.921727434 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.89189011 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.906498958 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.888535983 seconds)
  done (took 70.857206924 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.884342028 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.884718302 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.884777553 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.881056668 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.876640119 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.881211762 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.880435078 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.879823889 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.568787823 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.915825806 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.887342552 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.888624124 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.879700823 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.880555456 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.876334183 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.904292247 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.992069055 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.878048458 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.878802484 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.884805426 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.880199881 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.932490094 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.892815984 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.879653143 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.911417031 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.560092724 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.889885008 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.884844814 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.98449098 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.876603198 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.879889699 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.091264526 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.885038265 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.346934124 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.171375916 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.883670837 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.891241647 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.887964475 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.877260498 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.001018816 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.879887885 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.886032012 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.775095128 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.148139648 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.970663621 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.926135231 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.21578597 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.883345455 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.880819457 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.914298954 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.883427897 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.881623972 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.89818088 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.38700334 seconds)
  done (took 133.437988201 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.885662527 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.248590827 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.053229208 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.88647618 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.171081702 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.091225612 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.889670621 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.933507621 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.889200039 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.117365877 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.137399726 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.989920421 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.88861458 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.887832714 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.887536563 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.89048039 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.031271732 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.9562751 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.889859278 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.887917028 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.914929324 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.127059107 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.009938588 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.891154273 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.914886014 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.094154509 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.007849678 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.990288905 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.654084869 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.888747619 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.94968192 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.890364569 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.887488239 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.887496214 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.041657172 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.982436117 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.968847485 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.890645393 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.888725139 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.889012096 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.544114112 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.086702259 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.983422226 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.014838131 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.143228683 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.095860031 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.668557061 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.889315854 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.617372237 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.053611211 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.11637795 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.121465162 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.006229981 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.895097867 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.425784854 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.889882221 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.891048639 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.134078373 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.108847644 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.990290259 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.892168429 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.894407297 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.889804938 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.12509043 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.891415676 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.984233582 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.890985292 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.891144875 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.985131187 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.989647259 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.118354307 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.101477578 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.918731417 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.214555232 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.385369809 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.134230856 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.957906363 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.139460433 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.893869388 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.891124866 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.968404991 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.735048042 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.142152769 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.131552781 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.132462374 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.925258575 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.608957193 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.891095812 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.115363067 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.108456256 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.140674683 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.137881407 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.126184988 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.199017541 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.891742765 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.89178983 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.202284315 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.009667905 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.896242403 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.23017433 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.122025081 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.439428031 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.917344821 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.194699721 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.017898715 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.896918889 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.51670502 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.893137372 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.113157152 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.92960339 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.8926502 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.892766227 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.109941841 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.861807267 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.891927144 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.56256748 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.955024073 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.894817061 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.122821893 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.896993066 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.152652783 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.898199294 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.120845616 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.347145009 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.922336075 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.121025407 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.137274904 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.899319424 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.133989893 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.129411695 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.005578802 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.116707534 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.603813397 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.893176978 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.177176608 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.896415517 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.893011645 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.062045524 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.895559497 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.034604133 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.898305692 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.176649421 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.914344376 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.121587415 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.89851417 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.148563416 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.925232585 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.945349017 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.896931192 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.019989484 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.89636111 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.719834892 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.050803483 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.894973176 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.896497691 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.692050098 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.894497139 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.041826972 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.117377564 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.914527968 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.964652886 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.556157285 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.896099231 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.97439197 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.915766296 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.283903796 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.896989134 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.145731914 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.900919899 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.896107673 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.896606992 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.125928131 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.077582677 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.89740087 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.895000889 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.791929459 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.896128944 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.896728799 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.075258815 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.298332739 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.896908013 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093858047 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.898883397 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.022951345 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.902924392 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.167490788 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.232746184 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.896268271 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.895487017 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.898145062 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.896092895 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.897840495 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.156047978 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.920370559 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.410395987 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.031312728 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.161516936 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.204646232 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.134344578 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.937763546 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.900950974 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.149246434 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.901095798 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.95747678 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.900136922 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.91731962 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.124104692 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.899529715 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.104531064 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.166682596 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.75251818 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.943428759 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.900911219 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.899523937 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.898716162 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.04096442 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.981985044 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.904351987 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.899057926 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.01105606 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.018715702 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.108297316 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.899625769 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.980320131 seconds)
  done (took 908.382344197 seconds)
done (took 1229.478614933 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.89857245 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.901744933 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.891203951 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.901839359 seconds)
  done (took 29.415605536 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.892512096 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.899247433 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.893588111 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.899209367 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.892388082 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.899995265 seconds)
  done (took 13.199084763 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.963196541 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.902805813 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.901336827 seconds)
  done (took 21.590244075 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.969232158 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.294495447 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.032201161 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.319089735 seconds)
  done (took 10.4368846 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.894529273 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.896329526 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.894760545 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.894047991 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.894610274 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.895512218 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.895501926 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.894748121 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.897205647 seconds)
  done (took 18.880620764 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.614514701 seconds)
done (took 99.965305532 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.062640752 seconds)
    (2/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.204986369 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.961371891 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.992538037 seconds)
    (5/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.778329966 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.31390839 seconds)
    (7/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.913943827 seconds)
    (8/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.890855247 seconds)
    (9/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.981958808 seconds)
    (10/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.37377286 seconds)
    (11/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.439303675 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.101338615 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.188636654 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.928725449 seconds)
    (15/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.073997579 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.04727456 seconds)
    (17/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.590755397 seconds)
    (18/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.024914972 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.914835918 seconds)
    (20/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.218913793 seconds)
    (21/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.99438798 seconds)
    (22/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.195820777 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.002212342 seconds)
    (24/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.536211655 seconds)
    (25/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.27934452 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.988964494 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.030471903 seconds)
    (28/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.970578133 seconds)
    (29/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.029211315 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.249932353 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.904053653 seconds)
    (32/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.747502401 seconds)
    (33/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.662715141 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.222277075 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.25266443 seconds)
    (36/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.934239564 seconds)
    (37/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.969588537 seconds)
    (38/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.987870521 seconds)
    (39/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.721457885 seconds)
    (40/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.274153425 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.041604622 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.984529423 seconds)
    (43/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.973061741 seconds)
    (44/309) benchmarking ("sort", BigInt, false)...
    done (took 6.901237193 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.287829886 seconds)
    (46/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.957784942 seconds)
    (47/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.428745651 seconds)
    (48/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.416227855 seconds)
    (49/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.314575251 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 2.120971755 seconds)
    (51/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.361528452 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.027301722 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.974007385 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 5.516284022 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.152286265 seconds)
    (56/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.917758799 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.059552152 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.917614671 seconds)
    (59/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.904342891 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.301814054 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.981369361 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.991002155 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.289210501 seconds)
    (64/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.30062527 seconds)
    (65/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.963470791 seconds)
    (66/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.017425509 seconds)
    (67/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.057147129 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.904181225 seconds)
    (69/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.924758183 seconds)
    (70/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.265203508 seconds)
    (71/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.910703011 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.904338266 seconds)
    (73/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.915751581 seconds)
    (74/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.031366372 seconds)
    (75/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.904883758 seconds)
    (76/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.992635157 seconds)
    (77/309) benchmarking ("sort", Float64, false)...
    done (took 5.671546019 seconds)
    (78/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.902986007 seconds)
    (79/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.969631568 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.50592396 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.555217661 seconds)
    (82/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.206119318 seconds)
    (83/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.05908633 seconds)
    (84/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.92924703 seconds)
    (85/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.469410646 seconds)
    (86/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.233146331 seconds)
    (87/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.645938776 seconds)
    (88/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.000966512 seconds)
    (89/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.156761237 seconds)
    (90/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.899380371 seconds)
    (91/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 4.075869872 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.170871476 seconds)
    (93/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.45099615 seconds)
    (94/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.935348768 seconds)
    (95/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.8963905 seconds)
    (96/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.919982654 seconds)
    (97/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.31097754 seconds)
    (98/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.578838374 seconds)
    (99/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.086638079 seconds)
    (100/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.994203026 seconds)
    (101/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.407514924 seconds)
    (102/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.038387679 seconds)
    (103/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.913179833 seconds)
    (104/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.002433173 seconds)
    (105/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.862882982 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.241576995 seconds)
    (107/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.089067727 seconds)
    (108/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.097453276 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.983853031 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.143771751 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.15981275 seconds)
    (112/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.156592374 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.210101299 seconds)
    (114/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.994533406 seconds)
    (115/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.93090163 seconds)
    (116/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.184728563 seconds)
    (117/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.343868299 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.653754046 seconds)
    (119/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.210873633 seconds)
    (120/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.989188117 seconds)
    (121/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.534710215 seconds)
    (122/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.036610385 seconds)
    (123/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.986522009 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.587371254 seconds)
    (125/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.368341523 seconds)
    (126/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.152284386 seconds)
    (127/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.930912352 seconds)
    (128/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.030110933 seconds)
    (129/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.306836928 seconds)
    (130/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.199019381 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.153826927 seconds)
    (132/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.998554245 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.912434963 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 4.552474991 seconds)
    (135/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.263219772 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.893579368 seconds)
    (137/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.284351788 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.664773817 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.229547734 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.910047744 seconds)
    (141/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.084070095 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.903782633 seconds)
    (143/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.393673939 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.930980893 seconds)
    (145/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.151843658 seconds)
    (146/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.337779411 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.301540204 seconds)
    (148/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.921148908 seconds)
    (149/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.904121159 seconds)
    (150/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.38452468 seconds)
    (151/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.180461989 seconds)
    (152/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.916299831 seconds)
    (153/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.099481585 seconds)
    (154/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.13458354 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.243112403 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.963823031 seconds)
    (157/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.899332557 seconds)
    (158/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.064243805 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.762895297 seconds)
    (160/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.113407755 seconds)
    (161/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.20162841 seconds)
    (162/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.994709844 seconds)
    (163/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.134583356 seconds)
    (164/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.986696977 seconds)
    (165/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.381819395 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.035873626 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.910672639 seconds)
    (168/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.002989405 seconds)
    (169/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.195364455 seconds)
    (170/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.058081539 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.035900499 seconds)
    (172/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.910976103 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.08264335 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.932558918 seconds)
    (175/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.090882911 seconds)
    (176/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.148803984 seconds)
    (177/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.00139745 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.915179358 seconds)
    (179/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.909674228 seconds)
    (180/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.904155814 seconds)
    (181/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.978690508 seconds)
    (182/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.025457181 seconds)
    (183/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.09205395 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.145916451 seconds)
    (185/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.610283092 seconds)
    (186/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.142718615 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.289596739 seconds)
    (188/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.981547898 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.802216445 seconds)
    (190/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.612805308 seconds)
    (191/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.916960298 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.87406968 seconds)
    (193/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.906761628 seconds)
    (194/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 4.244305087 seconds)
    (195/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.995186942 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.226857218 seconds)
    (197/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.715465787 seconds)
    (198/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.144629835 seconds)
    (199/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.028841693 seconds)
    (200/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.952246079 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.005061903 seconds)
    (202/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.217131619 seconds)
    (203/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.916269489 seconds)
    (204/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.281301597 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.515700148 seconds)
    (206/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.972652135 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.970591861 seconds)
    (208/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.155932064 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.91434607 seconds)
    (210/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.04040894 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.004598999 seconds)
    (212/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.913969437 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.233345961 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.138424175 seconds)
    (215/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.916594318 seconds)
    (216/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.010758493 seconds)
    (217/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.982269374 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.549349044 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.211901533 seconds)
    (220/309) benchmarking ("sort", Int8, false)...
    done (took 4.856012337 seconds)
    (221/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.221103845 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.774338174 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.905452983 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.916440021 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.913054577 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.045345628 seconds)
    (227/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.105898575 seconds)
    (228/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.913859753 seconds)
    (229/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.082028511 seconds)
    (230/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.220589861 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.034007477 seconds)
    (232/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.913063793 seconds)
    (233/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.117670689 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.788729401 seconds)
    (235/309) benchmarking ("sort", Float32, false)...
    done (took 5.586874012 seconds)
    (236/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.822348602 seconds)
    (237/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.918088828 seconds)
    (238/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.023558178 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.154160276 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.918467945 seconds)
    (241/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.260645975 seconds)
    (242/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.375591179 seconds)
    (243/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.908282158 seconds)
    (244/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.904194716 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 4.092316048 seconds)
    (246/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.932101779 seconds)
    (247/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.161853361 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.221231719 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.207638492 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.04924905 seconds)
    (251/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.928348313 seconds)
    (252/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.303635718 seconds)
    (253/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.883579419 seconds)
    (254/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.000319461 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.314014351 seconds)
    (256/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.216991017 seconds)
    (257/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.129284716 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.946117465 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.9101428 seconds)
    (260/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.931740473 seconds)
    (261/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.930106403 seconds)
    (262/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.006983848 seconds)
    (263/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.167833168 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.916509577 seconds)
    (265/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 3.67155244 seconds)
    (266/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.068182081 seconds)
    (267/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.686254613 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.917784559 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.790630566 seconds)
    (270/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.174812298 seconds)
    (271/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.072841187 seconds)
    (272/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.014242351 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.939285045 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.916681872 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 8.471779763 seconds)
    (276/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.917625257 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.997165017 seconds)
    (278/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.921884283 seconds)
    (279/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.904814141 seconds)
    (280/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.215054743 seconds)
    (281/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.977121308 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.905346207 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.919074213 seconds)
    (284/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.164227877 seconds)
    (285/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.297497719 seconds)
    (286/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.06551308 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.191282712 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.04056703 seconds)
    (289/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.92481651 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.034466986 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.837996037 seconds)
    (292/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.649791026 seconds)
    (293/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.085149939 seconds)
    (294/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.190147791 seconds)
    (295/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.316008625 seconds)
    (296/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.071768472 seconds)
    (297/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.136320803 seconds)
    (298/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.096105179 seconds)
    (299/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.215547284 seconds)
    (300/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.912373622 seconds)
    (301/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.037173946 seconds)
    (302/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.915158761 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.937026113 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.91629936 seconds)
    (305/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.924280896 seconds)
    (306/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.930810488 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.126372158 seconds)
    (308/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.011337486 seconds)
    (309/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.911555703 seconds)
  done (took 1020.586654924 seconds)
done (took 1022.488561277 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.065531699 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.9321424 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.912870948 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.935578987 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.027388141 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.956367268 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.927623006 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.917566095 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.964651423 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.965805367 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.913622555 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.954493699 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.916833253 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.915471166 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.915095975 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.933153124 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.217768557 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.940986851 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.93440661 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.92645718 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.934189306 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.913844668 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.965036793 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.95430845 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.92446849 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.920761263 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.918716752 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.935437567 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.029494589 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.919245975 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.921949531 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.929335432 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.217346204 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.938004002 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.914509663 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.935645467 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.929317505 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.927490533 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.919254518 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.9503493 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.355290342 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.92115468 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.917041401 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.917498763 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.916781523 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.923488039 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.917281344 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.92481896 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.9332133 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.934700274 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.351397576 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.938368226 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.918951313 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.917112068 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.931561004 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.918626627 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.921524026 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.934678103 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.937309095 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.935108371 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.208603707 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.947576877 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.920530812 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.936996702 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.928167844 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.385611182 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.921904301 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.926289781 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.356553102 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.931083686 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.388224617 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.933735559 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.920646649 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.933753237 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.950817822 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.218446693 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.939487192 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.917848288 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.928572504 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.917272707 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.932031562 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.935235627 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.924498396 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.920682147 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.935233062 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.96262544 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.932420114 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.91983103 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.930207379 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.93974754 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.928389107 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.931373199 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.922602961 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.917058632 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.930903825 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.923681882 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.921451247 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.921512205 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.923317262 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.932587753 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.357130511 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.94228683 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.915589829 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.917146607 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.920535126 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.934604468 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.356713174 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.926094545 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.942181499 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.969683637 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.921666145 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.211521731 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.946834096 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.939156263 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.931763285 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.924240466 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.918761888 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.211621849 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.378595331 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.940917357 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.92108771 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.918438356 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.940577466 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.922844328 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.917893794 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.221434481 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.946076161 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.938192659 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.044438181 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.933731734 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.955722091 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.920005572 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.925773466 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.965506649 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.939419231 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.954394677 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.924115675 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.939229622 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.938182235 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.918787304 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.934283414 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.934886181 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.921758035 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.929839885 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.918991603 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.965885568 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.940873475 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.942154751 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.942986016 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.045354837 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.919568793 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.21252089 seconds)
done (took 303.137656556 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.005761444 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.92742981 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.044376102 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.919415025 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.016178367 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.001127749 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.919592726 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.919687636 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.918832218 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.42737313 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.920075405 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.925280389 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.92754858 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.920625407 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.997478265 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.919942643 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.919642498 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.213129753 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.923651833 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.007950148 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.927870081 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.920490362 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.92046325 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.430711528 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.927495692 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.928774983 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.007602405 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.920252928 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.218137362 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.927461753 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.929730501 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.218861595 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.007834295 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.933599453 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.931361606 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.926477306 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.016771467 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.928332664 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.995770646 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.99569137 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.046175962 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.959102755 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.928418763 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.929562789 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.923921232 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.924570727 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.920923973 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.953639117 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.931606459 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.92628523 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.213276434 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.929506385 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.926160537 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.923131114 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.922839253 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.937538955 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.92413054 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.927558303 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.009791112 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.925218758 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.997590401 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.433782181 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.431661932 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.923639066 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.930034359 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.924074641 seconds)
  done (took 188.363474821 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.996694372 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.00193488 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.997898214 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.939112132 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.98060096 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.998124348 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.937416616 seconds)
  done (took 15.70177002 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.938536429 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.923582169 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.97997772 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.979708132 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.92383517 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.116549233 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.942595312 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.927673795 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.958658559 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.924071256 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.583597246 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.980804788 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.930717593 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.929445061 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.944241923 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.986673433 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.934923915 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.925853239 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.041568503 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.081882216 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.930047833 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.931540375 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.959242908 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.946753023 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.924643986 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.926311902 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.926461712 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.940211414 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.923630103 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.925255872 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.924879838 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.985354128 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.924449229 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.93382476 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.924637704 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.9252339 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.92735034 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.924697863 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.923680857 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.932735086 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.924101844 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.925180297 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.92483541 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.924615925 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.925209598 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.956074841 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.924641114 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.92504643 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.925008203 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.925758409 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.960147667 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.926424163 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.925104198 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.930506676 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.979125009 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.933547144 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.928453759 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.925482736 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.925062991 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.92741512 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.926341302 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.083122176 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.983701166 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.926553239 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.985229912 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.086737342 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.926975771 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.927089284 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.926622864 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.023184322 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.926324211 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.98355509 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.926789389 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.049041253 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.927096655 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.120831917 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.95853738 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.938504047 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.939286693 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.936786939 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.942541829 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.92747326 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.937678891 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.942467829 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.932916324 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.925918939 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.926194926 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.937388108 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.942597677 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.927303365 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.985150602 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.927042211 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.930443058 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.071313422 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.928237727 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.047196334 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.964647992 seconds)
  done (took 211.812541742 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.943386947 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.943217802 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.93865514 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.952217723 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.938154394 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.938415393 seconds)
  done (took 13.509042672 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.939407912 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.9325257 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.928518746 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.927854798 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.93045288 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.931602111 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.929467159 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.940596601 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.936119387 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.930517294 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.933542038 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.931365515 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.932490961 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.932021496 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.930712794 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.930266476 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.930705196 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.929529524 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.931973093 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.932862387 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.073890232 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.932163651 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.93311023 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.933788325 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.936084751 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.929395732 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.95094569 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.93070515 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.929913849 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.9465339 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.937700479 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.932943838 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.934554354 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.948567395 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.934828903 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.934547925 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.933957776 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.932523976 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.930110301 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.933466193 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.930677704 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.932748551 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.930649401 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.931284863 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.941455995 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.938488032 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.936277809 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.952007982 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.931834068 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.933575101 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.932055516 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.931754814 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.93425149 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.933055704 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.936407628 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.946067697 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.936979283 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.932637149 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.934274427 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.935741011 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.936355791 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.934918305 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.943832028 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.935416753 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.943680654 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.934486112 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.93669953 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.938064008 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.934890192 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.932572073 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.933470309 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.931097143 seconds)
  done (took 142.300257947 seconds)
done (took 573.549153802 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.33201138 seconds)
  done (took 9.190795384 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.05134884 seconds)
  done (took 9.009637308 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.537680169 seconds)
  done (took 10.398664217 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.963176245 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.96905251 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.939591417 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.947372344 seconds)
  done (took 29.688072344 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.15223722 seconds)
  done (took 9.013046578 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.947110061 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.948220944 seconds)
  done (took 15.82637633 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.014349499 seconds)
  done (took 8.875334514 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.288518592 seconds)
  done (took 9.165648217 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.954771133 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.933142228 seconds)
  done (took 15.770392656 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.936801125 seconds)
  done (took 8.797879547 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.676973862 seconds)
  done (took 9.62944842 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.949444729 seconds)
  done (took 8.829671685 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.987616704 seconds)
  done (took 8.849540737 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.158689745 seconds)
  done (took 10.020126929 seconds)
done (took 164.927185344 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.946468584 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.941125329 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.941016777 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.941228945 seconds)
  done (took 29.630649241 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.969465523 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.969454926 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.977650507 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.968884375 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.959473056 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.959395414 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.969257169 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.970074211 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.959180043 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.96616646 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.96863187 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.96686493 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.968013435 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.978163905 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.978502986 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.981221409 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.968803224 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.970909882 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.961901875 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.979118132 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.967315347 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.97540943 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.935441215 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.936074602 seconds)
  done (took 49.070322269 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.136278541 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.011010925 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.097458939 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.989768815 seconds)
  done (took 10.097488549 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.935430948 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.000091262 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.98841272 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.981850322 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.021890936 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.03929112 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.989577162 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.14657685 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.056170846 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.063172528 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.943847564 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.957313145 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.958509214 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.985955384 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.039895666 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.936080191 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.936668063 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.059008018 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.999260272 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.147442847 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.936056764 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.991759067 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.030032167 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.989844117 seconds)
  done (took 50.000963124 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.937867186 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.945770523 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.94573853 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.937593272 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.93870048 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.939219331 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.945508213 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.941618555 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.960556555 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.939473177 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.938285342 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.938711761 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.946622827 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.939457635 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.937866797 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.952530822 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.952768787 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.940554173 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.943978056 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.94459195 seconds)
  done (took 40.732476379 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.944072132 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.791035483 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.290125542 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.196631405 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.946136191 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.94711632 seconds)
  done (took 31.981304435 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.959359246 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.951819218 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.947005425 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.001826157 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.083444328 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.955377541 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.947232459 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.957622233 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.991043217 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.012861427 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.963917224 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.975260358 seconds)
  done (took 25.612525835 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.948962207 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.947785075 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.949168607 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.95927624 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.957648395 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.955491607 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.954997855 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.946817696 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.959215101 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.966095442 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.955419619 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.958048456 seconds)
  done (took 45.329463145 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.15248881 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.16410158 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.167666521 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.321467261 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.922293759 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.840827472 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.680641205 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.638010374 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.23658056 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.918883211 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.906406173 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.842679732 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.180685417 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.948552964 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.200537959 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.867773611 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.93965711 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208868066 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.940788689 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.943555439 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.226200919 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.995479443 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.153822254 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.986033696 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.153122843 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.221761337 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.181751426 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.20105142 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.282975045 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.994467044 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 4.907165268 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.98183252 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.948522316 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.952290001 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.944113431 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.954505961 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210858534 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.942475428 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.952061228 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.927391681 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.868157416 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.267459865 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.058252365 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.369640563 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.071040371 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.181260647 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.94530632 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.905574119 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.994571952 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.204545841 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.048798579 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.154600542 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.865807623 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.298182693 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.069153747 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.944127045 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.944989919 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.640717621 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.180725024 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.021762402 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.266267298 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.057196331 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.943639861 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.026799428 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.941448309 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.05438193 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.14011706 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.944958902 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.949381283 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.94826378 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.036633499 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.1521269 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.941597926 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.940894808 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.95678387 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.942590626 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.291774446 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.289055887 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.923465202 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.496070028 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.209888495 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.899091267 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.219441979 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.977583939 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.210898198 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.323211929 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.030035789 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.185046577 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.826468923 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.946469662 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.74735674 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.021480491 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.005220334 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.941842064 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.903360315 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.234473772 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.064789113 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.942810601 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.869499384 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.955111874 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.146032977 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.217216572 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.994959721 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.943310541 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.94337073 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.946580825 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.944886214 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.960885227 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.958821277 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.86407166 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.227386375 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.059404015 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.200755102 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.940094215 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.642880921 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.216736823 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.072099118 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.558237939 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.077850381 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.836235102 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.079529517 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.952163468 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.951031101 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.13989418 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.371160695 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.918417294 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.179036329 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.978914683 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.984422275 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.949748373 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.025208139 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.170810971 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.94649346 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.190082968 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.191379399 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.627813253 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.990703498 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.021929821 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.953667002 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.158941216 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.02826053 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.493928333 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.163786782 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.30854013 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.929945818 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.542798581 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.204807949 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.331556195 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.961983912 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 4.917025562 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.975292198 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.654133899 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.872033743 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.951475428 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.274797577 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.994513947 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.047957123 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.948160578 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.945774982 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.955350533 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.027641239 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.022001885 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.023778882 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.872814839 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.949205763 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.949639883 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.945993979 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.484079686 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.615812857 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.242995666 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.947491568 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.020483042 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.949704141 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.543438314 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.951179906 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.985547099 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.958208794 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.681384493 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.988346891 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.206074655 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.350757589 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.068498739 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.948841389 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.954024738 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.650343476 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.959891828 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.649055198 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.229525749 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.951306301 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.395993456 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.014542979 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.037783026 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.963297692 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.952257769 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.951735033 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.950630886 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.151686007 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.460380977 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.283353398 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.30153399 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.031704841 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.219991594 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.142454893 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.231028597 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.631788895 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.466196098 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.174658461 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.950209891 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.9517059 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.411984182 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.95737621 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.166437421 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.155206527 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.23780099 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.249556963 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.36689175 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.955990772 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.968726369 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.191976772 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.949606278 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.395909066 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.001366739 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.301245753 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.762613902 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.212960598 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.01681228 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.961929224 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.600365473 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.083473642 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.909381671 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.081380708 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.876953851 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.672228264 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246031518 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.228829562 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.933540472 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.287139853 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.248268654 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.207310039 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.595017661 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.863889126 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.001321955 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.032266949 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.952844586 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.285846434 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.987447779 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.009273496 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.957899364 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.950949096 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.964574329 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.639894719 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.028054536 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.083789048 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.677630211 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.254357601 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.857600369 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.224668534 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.009480646 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.405040161 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.999682665 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.165958776 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.958032183 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.310719346 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.9957107 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.224701337 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.91171734 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.167158409 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.171750193 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.975508013 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.958739662 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.878664373 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.828631352 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.95719968 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.930025403 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.858199112 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.956926267 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.245102227 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.366390489 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.985625988 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.95599792 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.278135766 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.371588665 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.144877726 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.961458772 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.167199853 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.102519863 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.873019933 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.441018964 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.537079442 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.65430287 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.96591258 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.157455043 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.286398745 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.03929893 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.987361763 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.024856058 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.224477013 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.93642668 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.953805314 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.475525688 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.052345807 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.19615546 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.271732084 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.324102298 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.353857166 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.209043307 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.944756926 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.169499942 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.318195541 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.202265383 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.888118637 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.052878072 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.169057423 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.248784464 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.840068118 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.665124707 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.198212362 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.962108832 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.882939818 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.165145317 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.468089275 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.329231757 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.496501706 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.937019165 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.982418146 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.442944133 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.972268259 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.891701408 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.958162346 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.912055827 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.170878458 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.940641892 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.992609314 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.513853491 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.220475976 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.360652054 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.990026071 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.991755504 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.883702174 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.637254431 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.910405147 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.010185506 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.999171246 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.029835953 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.960565003 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.160826796 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.395436363 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.012587087 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.511317593 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.162042377 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.263538237 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.230329004 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.256418894 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.916635685 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230965288 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.906495248 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.278312375 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.041317076 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.036894167 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.958123963 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.96170384 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231427539 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.283115063 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.345564582 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.990443457 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.294042123 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.064427867 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.960586501 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.964340509 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.249841845 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.190040422 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.175770734 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.037043504 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.158108359 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.032149465 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.474811576 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.964152869 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.961915473 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.09592206 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.856599403 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.661721539 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.257625918 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.711736507 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.162553426 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.480235739 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.834321779 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.933668807 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.000813014 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.959789808 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.002819535 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.964110238 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.200902943 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.226354193 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.72477349 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.966191574 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.965749499 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.962287051 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.686065965 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.201997635 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.968428687 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.025041375 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.967921712 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.080929014 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.974150388 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.230842922 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.019074809 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.96430046 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.964602267 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.177778878 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.479029297 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.982428797 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.665158107 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.16793218 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.968667018 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.451389185 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.412531073 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.018479532 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.003240577 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.940470274 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.207833375 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.501698718 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.94548985 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.958171404 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.190894376 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.966919923 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.236297707 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238829175 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.966056759 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.181454114 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.248172255 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.248036436 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.975936071 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.934690722 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.967911921 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.230247429 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.030368642 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.965184398 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.974605559 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.97423236 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.690632152 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.43470471 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.124317611 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.280266416 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.731084583 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.72999057 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.968908074 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.967857648 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.681579754 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.691477488 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.180339851 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.254738478 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.912978111 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.168245428 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.67088125 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.874491673 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.233139934 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.893256533 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.969939758 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.273161681 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.234054998 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.902803996 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.971996876 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.58820927 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.974956924 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.050746963 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.968094185 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.094937868 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.229518299 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.331321738 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.082351886 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.607905319 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.676828004 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.910230656 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.022059761 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.77391121 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.527751296 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.620071812 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.993888413 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.983683017 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.89341028 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.973798036 seconds)
  done (took 1672.288492826 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.978066788 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.170641926 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.990286926 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.095774499 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.005465524 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.077765244 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.069900949 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.002538919 seconds)
  done (took 58.285636989 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.97812394 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.992462011 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.981759462 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.979263984 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.98329014 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.978816124 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.136047863 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.986800736 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.990253919 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.983252561 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.980969158 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.97803157 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.239340963 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.993380825 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.984266545 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.968095134 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.981644676 seconds)
  done (took 76.061766694 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.972808339 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.184396853 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.028470549 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.972781758 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.96730298 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.98863217 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.06118114 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.024216001 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.976670151 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.201039055 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.269419623 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.979393691 seconds)
  done (took 91.524535325 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.983484732 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.978802749 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.979016973 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.979872907 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.979811269 seconds)
  done (took 11.802141996 seconds)
done (took 2194.316382384 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.212644727 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.02802438 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.065256029 seconds)
  done (took 5.990015217 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.126596972 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.172970066 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.285577099 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.047021288 seconds)
  done (took 10.535016632 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.241054384 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.380719057 seconds)
  done (took 6.519498738 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.327705447 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.990000552 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.336386268 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.974781627 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.975971643 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.976981756 seconds)
  done (took 22.831711802 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.973021151 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.972330937 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.972930077 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.973791703 seconds)
  done (took 9.790550839 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.969936081 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.681823428 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.975605989 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.982148404 seconds)
  done (took 21.50820505 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.117083168 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.084917258 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.111381709 seconds)
  done (took 8.211597021 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.132166002 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.821463293 seconds)
  done (took 6.852410885 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.116361603 seconds)
  done (took 4.015248722 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.001836125 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.243755805 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.46656668 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.507732765 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.589295692 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.700707733 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.280325157 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.204991041 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.39450175 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.400623022 seconds)
  done (took 25.689255677 seconds)
done (took 137.709728175 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.32747211 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.997608562 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.181988621 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.33928205 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.203780005 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.182676691 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.19928577 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.328311815 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.009811627 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.998948149 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.342279418 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.208150073 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.145352873 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.993167353 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.153866828 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.994570983 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.210035314 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.343307522 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.024276124 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.240994505 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.210361719 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.987173331 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.187454138 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.001256857 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.215661195 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.13481418 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.533179863 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.995800087 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.173911576 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.542950664 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.135886665 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.386798031 seconds)
  done (took 171.833315221 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.98432279 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.984146594 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.983543173 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.985121296 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.249740122 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.984242077 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.983863652 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.98715431 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.185352434 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.166968291 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.984539041 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.237697481 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.986367154 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.985157141 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.985563685 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.984959957 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.34062616 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.990171916 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.985342726 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.984784057 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.986824796 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.094800929 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.985658457 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.100436659 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.316809254 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.986446399 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.987192697 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.98444552 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.985532688 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.985385072 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.986473599 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.986115246 seconds)
  done (took 211.250845631 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.987448481 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.986325031 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.98630439 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.986291294 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.986277516 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.988526506 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.986312261 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.985837189 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.72752773 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.716539909 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.989454407 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.986750709 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.988612053 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.985356765 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.989509165 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.986966513 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.985963836 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.987422334 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.987297811 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.992326044 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.987162038 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.650165458 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.98557261 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.674337864 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.994149358 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.990441804 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.988139928 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.988065741 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.990846433 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.991875233 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.988343886 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.988408941 seconds)
  done (took 224.34301888 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.220090014 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.983198142 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.983273944 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.001867982 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.981188923 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.979895891 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.987339763 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.234354493 seconds)
  done (took 20.280522366 seconds)
done (took 629.620887648 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.322475447 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.695536072 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.115014472 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.005364312 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.246698471 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.055638259 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.000526846 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.058678743 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.831866822 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.071301735 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.402783962 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.015370885 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.759826741 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.022920089 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.120650841 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.054816503 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.367479746 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.694282326 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.140996094 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.637572691 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.160831385 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.945654189 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.072161747 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.887382848 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.426199037 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.980702795 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.026124733 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.361961046 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.005212898 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.163407475 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.597474751 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.258606361 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.019223406 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.009411864 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.054942495 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.031206467 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.206154054 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.015737763 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.125950425 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.739383275 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.650488087 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.723194213 seconds)
  done (took 104.98944349 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.992573774 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.988637531 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.98871549 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.989412252 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.999126104 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.989316698 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.989658769 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.989877156 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.989469604 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.989591063 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.990507306 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.998476723 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.990335853 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.001131771 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.989838686 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.98963743 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.990709569 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.998570771 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.99042338 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.989534327 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.990659183 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.989936892 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.986580248 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.990026019 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.990616892 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.989596384 seconds)
  done (took 53.692182219 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.983377396 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.156411044 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.228946031 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.008207805 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.994374668 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.996182003 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.02022587 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.98980285 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.996479395 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.995673717 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.0919415 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.988019127 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.007052418 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.233262042 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.006392736 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.984781038 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.988392984 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.994429282 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.160547451 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.007162998 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.0229155 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.992288565 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.021139218 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.00833832 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.996108251 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.994944113 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.997363884 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.421029609 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.002080994 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.093472208 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.037079222 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.026040492 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.376834894 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.242383996 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.045433394 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.992546683 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.986821081 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.099588881 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.000930931 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.997702433 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.022157146 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.002127236 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.237273412 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.519682511 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.005856172 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.987366516 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.420835469 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.105318831 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.03425199 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.007929147 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.245292727 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.011255757 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.987165131 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.998108246 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.032008577 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.010737087 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.997709444 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.284412307 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.008656456 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.025616141 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.992476516 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.998374754 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.169695327 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.00362809 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.159277246 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.005510228 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.003734585 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.998234959 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.238026894 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.011253296 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.538290745 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.008279515 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.990841342 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.097827926 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.165258492 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.444667747 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.008233851 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.172622925 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.39404344 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.029807544 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.008351954 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.409743875 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.033664003 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.005441923 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.987865457 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.98839143 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.988393349 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.036919555 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.023928654 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.448061997 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.53527632 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.298595897 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.032225427 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.009905351 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.998860935 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.284162985 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.996952297 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.989741402 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.228468013 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.544969498 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.009335855 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.005599405 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.515745069 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.011443688 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.026228428 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.009711547 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.252376584 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.011974057 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.038417041 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.990101131 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.005383026 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.002879411 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.026877133 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.006850021 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.989161564 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.510389024 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.115327167 seconds)
  done (took 246.853998762 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.999617223 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.99858683 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.999386884 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.99884545 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.998354198 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.99951186 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.997631794 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.99814899 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.999552275 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.998837483 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.998287595 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.000518972 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.000562626 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.006534332 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.526505033 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.00695431 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.49429237 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.003571729 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.005025985 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.007149067 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.604135868 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.012317652 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.006842463 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.00776309 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.007180273 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.006620439 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.007750088 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.04754356 seconds)
  done (took 171.657296965 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.99857425 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.084556551 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.017715293 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.055983136 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.01464323 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.002096333 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.181803159 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.029376819 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.013038515 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.999084168 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.998398054 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.038206317 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.006971833 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.095178179 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.041464197 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.104970819 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.10890631 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.006475281 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.999673348 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.999397832 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.055688281 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.014230933 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.038645024 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.071674919 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.014736211 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.063860952 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.015781299 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.999663757 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.009102382 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.145988786 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.018034211 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.031394274 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.048809911 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.032650814 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.127694151 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.126152279 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.105186286 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.103947572 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.016497411 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.000857026 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.999211101 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.001559679 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.065804486 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.016050596 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.010961782 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.116323834 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.021089612 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.002460498 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.001716839 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.001124944 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.023008154 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.02843499 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.046091849 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.13791755 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.050629688 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.031182009 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.107955852 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.128480272 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.005826761 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.108213256 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.008669072 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.118579996 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.023469735 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.003197259 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.005640856 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.00742248 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.052326858 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.118119932 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.114954885 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.017453913 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.109131253 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.057482186 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.022325163 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.005790814 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.006151512 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.066526807 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.125968758 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.058596173 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.07643324 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.051373684 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.014243565 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.011843683 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.005339353 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.039394896 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.016573585 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.119513969 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.129759231 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.01175368 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.005709869 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.007233546 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.007885149 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.038828849 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.07787279 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.056992232 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.11325782 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.049704586 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.055899482 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.017184487 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.020770692 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.012007403 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.048250894 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.018505315 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.018212705 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.300105041 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.043506144 seconds)
  done (took 216.960562305 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.410973107 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.049312296 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.090007463 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.314776686 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.406347728 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.94238553 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.055134675 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.055901462 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.086037747 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.184825349 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.135337177 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.09598819 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.056153973 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.037516376 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.052469872 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.087776001 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.08371481 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.364944735 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.256998605 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.574516412 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.053709623 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.457628905 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.384128901 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.447072022 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.115463892 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.445588462 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.683900331 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.150791808 seconds)
  done (took 67.015472589 seconds)
done (took 863.078067592 seconds)
SAVING RESULT...
DONE!
