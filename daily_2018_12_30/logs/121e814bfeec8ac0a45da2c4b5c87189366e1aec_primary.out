cset: moving following pidspec: 2114
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.337720211 seconds)
loading group "string"... done (took 0.554404735 seconds)
loading group "linalg"... done (took 7.592508074 seconds)
loading group "parallel"... done (took 0.170777412 seconds)
loading group "find"... done (took 1.271088977 seconds)
loading group "tuple"... done (took 1.929229657 seconds)
loading group "dates"... done (took 1.397421454 seconds)
loading group "micro"... done (took 0.243429451 seconds)
loading group "io"... done (took 1.038388106 seconds)
loading group "scalar"... done (took 40.63676686 seconds)
loading group "sparse"... done (took 13.537799942 seconds)
loading group "broadcast"... done (took 1.036139752 seconds)
loading group "union"... done (took 14.201384125 seconds)
loading group "simd"... done (took 4.752525291 seconds)
loading group "random"... done (took 9.643994903 seconds)
loading group "problem"... done (took 1.992905417 seconds)
loading group "array"... done (took 22.627952622 seconds)
loading group "misc"... done (took 2.052804249 seconds)
loading group "sort"... done (took 3.449880721 seconds)
loading group "collection"... done (took 19.60924258 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.577636211 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143584294 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149213236 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130499704 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204581133 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156900157 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157531534 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098830712 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.967444712 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.175034196 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153242079 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.527192139 seconds)
done (took 5.180607854 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.269710677 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095248197 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104364759 seconds)
  done (took 0.883424592 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077436953 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146086899 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094391326 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077824722 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094444161 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077220927 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094879459 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078313305 seconds)
  done (took 1.351192267 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086642429 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097709297 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081909501 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096251938 seconds)
  done (took 1.053332317 seconds)
done (took 4.332183316 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.734899585 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.271288515 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205009021 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.465182022 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.192711405 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216819303 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.66985562 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.340685598 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254812533 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099105737 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.134021546 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387289235 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137349677 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681740171 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089282643 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123077396 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176693235 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.447346698 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08221978 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.11010265 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115807103 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142735181 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.126850972 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091091971 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183803561 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080952274 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193368353 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107668156 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081217682 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.277198002 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200299008 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.68897132 seconds)
  done (took 10.839492082 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110525124 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134142979 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097682236 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138063686 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134671038 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100403808 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084280213 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096630483 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121925766 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177419966 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130335292 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121110565 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095000721 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081553292 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116023484 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246621569 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12181142 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098953986 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101353225 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087605596 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137845517 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112756678 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109560683 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09356411 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166789518 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221599441 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113685049 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12704412 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097173848 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112127991 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143444682 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14493612 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097233081 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081856285 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175056397 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123666382 seconds)
  done (took 5.156026676 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.088194681 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.154740444 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190619234 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121563814 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169951796 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080164198 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143584506 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095061481 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113107812 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25710989 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.113510657 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.488018893 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142157904 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099563977 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099198066 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082806437 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098144126 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.607822616 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.122295093 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150760665 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113540588 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101917742 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083705901 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.371400719 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097310252 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080239784 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097804197 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065999348 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160878551 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098088858 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.143168554 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101642884 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10245069 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13381471 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191657059 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125874639 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134049082 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078692911 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096777626 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175054862 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085884985 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098314763 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120931112 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132945687 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117353983 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099914506 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096709903 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.200737092 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095379841 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09791278 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.954805701 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182841335 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.103253221 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097054529 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.285786104 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116539038 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100707505 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.078400827 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.096834792 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.279356796 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.207380183 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099220299 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081512691 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095922013 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08201993 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.381233199 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098491968 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.780379606 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084511523 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10594794 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083113435 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096593475 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103329673 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08771035 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114937464 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080065957 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098955495 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07890893 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096772611 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080550142 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.09548008 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.105595163 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.217202342 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080555509 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097919497 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.077084201 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116223493 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127512493 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083628204 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095313381 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129467893 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082367692 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097360053 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133073816 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080923807 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094984048 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106274398 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083285461 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14264458 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097990931 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.151231289 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095012739 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124453052 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099163354 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113644473 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112216966 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098174361 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.167873987 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.07890786 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095344179 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079256546 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095409258 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08114919 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099188486 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108798746 seconds)
  done (took 22.850954849 seconds)
done (took 40.624446479 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.324786711 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103393407 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102759015 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102899027 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101204178 seconds)
  done (took 1.501722413 seconds)
done (took 2.240408148 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.286790548 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.174659126 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097342962 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166588767 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092995245 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.164422923 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.15831195 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09413118 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217786103 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093972226 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160675201 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076464416 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094492971 seconds)
  done (took 2.644159949 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094620124 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114844345 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083081362 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108960787 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076846597 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110644941 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093428824 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115635775 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108702462 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085450575 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093403277 seconds)
  done (took 1.821736509 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093509125 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112821533 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083243525 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109436047 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077010118 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110065942 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092244364 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116295845 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110105135 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085960039 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092588278 seconds)
  done (took 1.818251631 seconds)
done (took 7.013191462 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091216652 seconds)
  done (took 0.822610459 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.938240489 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.668686064 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112824261 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148091129 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.312653223 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.170698102 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.466855287 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126637644 seconds)
  done (took 10.884993277 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.115356874 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101874087 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.112426562 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085509295 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104301342 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084294421 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102429398 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10187433 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084196554 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100456816 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083650123 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100362559 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.098199294 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084404781 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102367928 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087322819 seconds)
  done (took 2.348698868 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119402833 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118617733 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10781805 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107467761 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087818402 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104879341 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105998205 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089091262 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101890759 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103279128 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090268279 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105871118 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102843407 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080884463 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106190886 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107938669 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08666714 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107165412 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10698219 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090705969 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107027573 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095167185 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087380889 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105806754 seconds)
  done (took 3.273013211 seconds)
done (took 18.065606274 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159013688 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109245028 seconds)
  done (took 1.00803449 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094932801 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112616886 seconds)
  done (took 0.950668275 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098188484 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095276192 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122190207 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108847919 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081869834 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096441181 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119997792 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081180246 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096515526 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080164389 seconds)
  done (took 1.726879373 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083374828 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10921231 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101369496 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09505638 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105919981 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094705654 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089115188 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099195224 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109945914 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077675638 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102312123 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113516409 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086336559 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115633844 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104077994 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083809963 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103248566 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098930918 seconds)
  done (took 2.520469678 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079707988 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09784827 seconds)
  done (took 0.922976161 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081618648 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093956464 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082535112 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09689129 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094233239 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077028284 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093464633 seconds)
  done (took 1.364634423 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.485468682 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.13561027 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260481476 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10148687 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103342336 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300361351 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098488151 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084264503 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103603744 seconds)
  done (took 2.475802622 seconds)
done (took 11.714145669 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093717364 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115162749 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113777368 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.465040562 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107025606 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.098846638 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147498563 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.249910385 seconds)
done (took 2.145607572 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.145958191 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.602861945 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.427637336 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.232445684 seconds)
  done (took 2.017745952 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.403361617 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.098787203 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083648284 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081260283 seconds)
  done (took 1.424995854 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080207467 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100267569 seconds)
  done (took 0.937742578 seconds)
done (took 5.289184258 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080930656 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096564445 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078060773 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.096106516 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.078280566 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.09414701 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.114075463 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098971776 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079900825 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098485741 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094996178 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081195704 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093282909 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.080733458 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096468133 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077702138 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093385494 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081621503 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094215171 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078588547 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093415982 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080576623 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094129604 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077931445 seconds)
  done (took 2.92506452 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100920979 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098015699 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103293836 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086719116 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101568529 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086100285 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102945913 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096743692 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086721294 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.10012901 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101014283 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085802632 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098892589 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085749915 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09986607 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10147448 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087242243 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097209081 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082719771 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102635021 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102891014 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082201839 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101350808 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103134975 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085485088 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101070033 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083391216 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097922458 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103528062 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085383164 seconds)
  done (took 3.613764457 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085731046 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093640289 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079202603 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101541783 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078888814 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096869248 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078426305 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096507695 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079633325 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094929896 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08027396 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.0956023 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078144996 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09670731 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078820972 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100235464 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110983159 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079094231 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094857644 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079073802 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098157605 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078540545 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095881873 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078542288 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095242151 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079586527 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094767307 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078668329 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095302311 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07853079 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098991786 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081975144 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095305641 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084634179 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098947576 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077683006 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09902927 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076986057 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096550353 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095124517 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078744362 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.0953149 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078908849 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101666788 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07917908 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096689216 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079261336 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096097446 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07921612 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098054343 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077920117 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095028979 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080090554 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096610874 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081702511 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.094957584 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09544966 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078724096 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096287251 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079324988 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093966915 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078844733 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097657497 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080218002 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11022797 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085323781 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095777249 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080734936 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096703838 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080827052 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097913266 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108928893 seconds)
  done (took 7.189174566 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.103677113 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126245466 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.098053176 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09709016 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077683028 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096421211 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082998667 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09632419 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080804332 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.102227109 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095601204 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081403848 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097103031 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094527604 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09600516 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.080879865 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103406595 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093421335 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079194562 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099337231 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079791717 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099031047 seconds)
  done (took 2.824516237 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.208692345 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104394725 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141714308 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106908931 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083533803 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106175714 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101173593 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087265999 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102104095 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083608072 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100947779 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101661819 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.193491953 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100649041 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100577457 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085300138 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101594021 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085881665 seconds)
  done (took 2.761459725 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093407925 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098617491 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.099013205 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099172913 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098659262 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084140987 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103851199 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108089814 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08520281 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098299828 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091947637 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101405817 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100966405 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08203073 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100524598 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08226816 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101256479 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081864808 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108862089 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10412643 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088240125 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108485773 seconds)
  done (took 2.89290309 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097981773 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101533665 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.11987524 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08517586 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094300037 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080567381 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105139463 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080672457 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10767088 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099190328 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083245966 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097017462 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089125976 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098887991 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104410392 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082502973 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100481932 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083422526 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100579967 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077323411 seconds)
  done (took 2.663341881 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102703826 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100704914 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09951055 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0916145 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100367544 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082218094 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110191295 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100438239 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08224949 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125024866 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10094786 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08303371 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10980492 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105878814 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099754261 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092510733 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109413105 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109627043 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083240402 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101051798 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125498919 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082642568 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108929848 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099959874 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083537352 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101069455 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100381136 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090134365 seconds)
  done (took 3.558835975 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08261889 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098611488 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082009588 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096302289 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079341335 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095457845 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079524689 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09524529 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081738208 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096242841 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081675085 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097685343 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082451377 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098430425 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081368249 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099267696 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081474992 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096156287 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079588414 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09613898 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081465753 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098176604 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080934745 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096481337 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078427586 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099158287 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079014814 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097431426 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081267889 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096723364 seconds)
  done (took 3.448894293 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092222706 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106018798 seconds)
  done (took 0.975966436 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079625435 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114643066 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079544533 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103067023 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086392929 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.10127453 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106669717 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086710615 seconds)
  done (took 1.536379865 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097397172 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109972058 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083125945 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11294219 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109555497 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099165996 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170267561 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102297561 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087968153 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099009121 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112919017 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081785776 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105694212 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083165046 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10611926 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088947273 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098130241 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104963071 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085499439 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09898746 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084010629 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112265844 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08301374 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097815976 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101127402 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091795927 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111908283 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082745069 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.1037653 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106372702 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088276207 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093098565 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083067829 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100393795 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079715806 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109642197 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116944009 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0854907 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109198207 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082367528 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111842427 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094729275 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087735965 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105595294 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11026066 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083435161 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099443988 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077956481 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096805761 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085503523 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094994617 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082370851 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095167792 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088589926 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103984432 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110805104 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082208173 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100974084 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085587305 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104309383 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088045014 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10291464 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10107167 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082608281 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105776052 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086902139 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109684567 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077031518 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094547326 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097079879 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092759274 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123469885 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.087909863 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102158348 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100383358 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080467736 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103100678 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083461854 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106310224 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106033879 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083820257 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105798301 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08953881 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100558509 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084132587 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108920269 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097729801 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084885488 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09747606 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117032247 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081671155 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096670034 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080317118 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110994031 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085754297 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099591478 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079564914 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107624786 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.09326435 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084035613 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101073875 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083836269 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111697316 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105343201 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089115688 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108999466 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088913384 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101252418 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102741837 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079688116 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101124267 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085033375 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106938022 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076500975 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103560061 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083612515 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101848169 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109385494 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081247608 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100624696 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090956199 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106617223 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080592213 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097289889 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102817088 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083393956 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103851926 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091660185 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099392238 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077253287 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097016538 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103473625 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083155106 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10345203 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087943866 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104554149 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076126369 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09799248 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104351756 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092383241 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100350084 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082253146 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107574548 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100799831 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082568503 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106837386 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086220546 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099205116 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088243123 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102138961 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076770231 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10503228 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102636662 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082060052 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103790498 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086947366 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102846394 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082239734 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099403017 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105495471 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083741584 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099697775 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082979737 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100070437 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111863889 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085220709 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094959986 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.080356381 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108995902 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080336498 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100600409 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081156642 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103575508 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.1010954 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081061249 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100078181 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085176303 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113222545 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105578102 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084554557 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106228656 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094243982 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100843596 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085765452 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101110361 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10197823 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085242038 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109652534 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087979708 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106740487 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102509062 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079639751 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105830771 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090457612 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099736142 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080669045 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.10073756 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103561397 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.088874546 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.104370519 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083534936 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09943243 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084157804 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104794985 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103394882 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082719686 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098897766 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088565071 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.099487607 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107343117 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084617379 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110904598 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086318526 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095942094 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085891681 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099658644 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105816819 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078117563 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097572212 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081687557 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102347529 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081855381 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103997439 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076375554 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107780275 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108188642 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083403624 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099002298 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082871662 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107226497 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084378197 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105620159 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086634069 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10790723 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111248158 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082447361 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103889591 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093939823 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101302606 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094825655 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088893313 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099865234 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082236811 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099764006 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081666543 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104125016 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109868103 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090562548 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093966286 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086622863 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099453039 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081576756 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096904781 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087279315 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104673602 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.101021694 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089836142 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101805798 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085661738 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104991469 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08261372 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103350894 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101896246 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086425678 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102345588 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086246211 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100110018 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085666985 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100802041 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079999751 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103258867 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100565926 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083340636 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106452448 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083437943 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10101899 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085381879 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102900366 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100892973 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08405407 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.09928194 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086869786 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101091806 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.083451002 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103498121 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078470486 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108644552 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081466931 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110265736 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100684659 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.08018204 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105902034 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084829879 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107627688 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101985352 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085178086 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101450204 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083143856 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.10366597 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090187482 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100503548 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112470668 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093136829 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102883841 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086739508 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101742347 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084161888 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101812193 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083530404 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104199455 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100303608 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08328018 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106208109 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086378353 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102010991 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08453143 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102703113 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081887712 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10266206 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095022015 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082463964 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100452219 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084014938 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112551756 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083202453 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104878168 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100316027 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085151764 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100003421 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080376446 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110984438 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110801119 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084981655 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108770877 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082338309 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103555115 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111568545 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078110926 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099364761 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081292583 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098821158 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091901667 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103781215 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.10073525 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102232977 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.099548202 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081393029 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10268387 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082142571 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095790875 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081013172 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105500234 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085919652 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101423952 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083704685 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105520761 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102199547 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093929731 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101266558 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083588789 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10248118 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079625413 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100335428 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081059756 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105698163 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102045329 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081603185 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098738602 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082585694 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102625032 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084010879 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101583576 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084478064 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109879417 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101466341 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086693075 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105268665 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078331386 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105547232 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083475421 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102360511 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099532121 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088173369 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104243223 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085390329 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.11140404 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082709624 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102839021 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101004788 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.08165091 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101151175 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083509302 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102555993 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082603262 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103159453 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090776826 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100184686 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103894327 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083616021 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101940547 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091257724 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103092169 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085228069 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110678761 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104891105 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085476245 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110154862 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086336818 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106678171 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102550482 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085617298 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107446852 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083151633 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.10921199 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082954079 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104179585 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102852661 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082335977 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10083457 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084264665 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10014389 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090166156 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104006025 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082351007 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101600178 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080479695 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103836835 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105452606 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091623485 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105033823 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086713444 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098918713 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080103356 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10487279 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099113123 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086166006 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105518366 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090199325 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105378079 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084574994 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102117381 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.11144039 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091053334 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105723637 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081866941 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10639379 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084681241 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105206827 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083744104 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103810501 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103384738 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089186385 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103563097 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083866976 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109845062 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087384763 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104539523 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102799753 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08480211 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101520488 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079727177 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104158326 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087439052 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108450509 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085389564 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103362698 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113440108 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084076018 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102334132 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088033558 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102919829 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106780258 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079930519 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102876231 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085823392 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104129856 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079873588 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101882856 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081484503 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105713254 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082935307 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099042418 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113191851 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093951121 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106328023 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082662201 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102349313 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078294795 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098678777 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100729682 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085714474 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103113878 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094178313 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102225061 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082196063 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098946492 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083772072 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106814837 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104903464 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082604087 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097556739 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083257926 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105964968 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089690772 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102987885 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082930529 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107698905 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104215004 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082370636 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106264944 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.08147959 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106722993 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116024968 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086558737 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103419866 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091225976 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111365063 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084502578 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.09870956 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102690352 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088137891 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103072987 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.086011976 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104208123 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118139308 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087901256 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101456894 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083847252 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10524649 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083214585 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11190957 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084603436 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105548758 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106873696 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086800716 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113006845 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086449144 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112200459 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105730578 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088218098 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102131336 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084350157 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10135124 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082418216 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10523475 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103373688 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089424727 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111911952 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082826318 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114876406 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112407812 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090391623 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099573386 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083673398 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103255829 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079904 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107876473 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081508595 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102105818 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099820097 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.08384344 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104279619 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090124869 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.1039895 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085229611 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103427838 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078506789 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.10566118 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08629569 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104635335 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09892979 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085145822 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104080152 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08873115 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107576312 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084316236 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106276009 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085344161 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105823992 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097984782 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091749515 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101807985 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08741631 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102320818 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08491784 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104792144 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087146716 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10981094 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104498841 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087960368 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116330891 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086050145 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102231223 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100068097 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090957115 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101511092 seconds)
  done (took 57.915447669 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145790071 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081806605 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098859972 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080829635 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11236941 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099078831 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080164446 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098905469 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081025794 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102025252 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080825033 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099675411 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108210156 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125387695 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094388616 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104554149 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078379295 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10187067 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097853946 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081671179 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109573627 seconds)
  done (took 2.890208179 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10494834 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121465419 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116049367 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119840493 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090028257 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115830182 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115970383 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115949133 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099917833 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112026293 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118693547 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116068349 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09117081 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112606407 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11124753 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09364881 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118938683 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110445055 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115298517 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096138921 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11358227 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115318981 seconds)
  done (took 3.253239568 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085807305 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102017499 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08597249 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097693015 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084726816 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097980006 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088677589 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102304133 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087275559 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103067451 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081882307 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102503833 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104018065 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079971103 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102358697 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083198225 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150621276 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108328044 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083074022 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10537736 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078514681 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106737031 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098341918 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080625519 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101201246 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088229473 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104511215 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081903455 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104184187 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08270599 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104619082 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080650331 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105211042 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102603696 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083876225 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101271838 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084044289 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103431995 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080014053 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102306404 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085217239 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099721996 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08442194 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105329848 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081965342 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102266379 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084368281 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104655056 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098532238 seconds)
  done (took 5.488787351 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104718358 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161713299 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086947506 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144705098 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121269764 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112934365 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088690213 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14343567 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102526594 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.08266688 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12389673 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121394644 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104531452 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089856945 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111989255 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10348866 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087493785 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102810175 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108175352 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084948814 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109230144 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090833852 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120279921 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118486986 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108749476 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084311904 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103993163 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10863545 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098756597 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109953739 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109322794 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090095073 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122414477 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106773261 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083439988 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107430696 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121807009 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083613283 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108163079 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101572218 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087584457 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109588454 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110693787 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102848496 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105817236 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108502258 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08528093 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102161806 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117947106 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087413676 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114102101 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120369197 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088725529 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106479038 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108822469 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121350341 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085120687 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102859035 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088578366 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118768037 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101840943 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088291965 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119408702 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106755589 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092779593 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120543429 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109579291 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108021929 seconds)
  done (took 8.168158525 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093774524 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111338861 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120905563 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12045148 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091732123 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111264576 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110650171 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.09090412 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112425157 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116610071 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.1108531 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133801603 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087525003 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115404481 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111863481 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091303575 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11132155 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111145718 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091012682 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111565795 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111552991 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121334312 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091583204 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12221057 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142367908 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105743154 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090912653 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112193232 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121167547 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110039513 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123189631 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091520622 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110701743 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120845744 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12317942 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091460273 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103547098 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110875477 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091692963 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111933412 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105024496 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101615559 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111626499 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105526387 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091146392 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111826836 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121541225 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123874806 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114147588 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097503012 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112116991 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121192918 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111008884 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091404879 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120543926 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147651559 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121072459 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121438453 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111119845 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10095047 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121571504 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128062144 seconds)
  done (took 7.695848271 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107958254 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116317723 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118049924 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100151168 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083922275 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108424632 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083345258 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102916557 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113813435 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095523973 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117556 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108177545 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092199198 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118307539 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109772721 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113221805 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089231749 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109672779 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114375438 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090006516 seconds)
  done (took 2.936171769 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095612598 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124094414 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085308564 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113641794 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108018281 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092063626 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107867682 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10718535 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087163773 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108046589 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096266482 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117277817 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106040808 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092039101 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11735467 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111695033 seconds)
  done (took 2.517890539 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099644711 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118227682 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120688188 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08475327 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104977256 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080218913 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107111635 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100978195 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081813288 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120732659 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08441911 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109192571 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104483411 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083804249 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102242807 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088200081 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102589049 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08278752 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106544763 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120090968 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096649647 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105511227 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105929583 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087624557 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105843913 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09084005 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.1066198 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102702078 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083587368 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105447924 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086639363 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113220503 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102042175 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084438914 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103494564 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082490723 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105528833 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085623584 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108515667 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104444327 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084296533 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105217947 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085499414 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106975126 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081050384 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107458213 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100502476 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092193862 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103546438 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086057366 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105730945 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086298844 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107352565 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115825465 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088129774 seconds)
  done (took 6.274491334 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099385655 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109340226 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080881386 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104366081 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088102712 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10786962 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108609296 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089276765 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106679544 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084153472 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107590668 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089941208 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108283782 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10828441 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088289218 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109252027 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081262419 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108681984 seconds)
  done (took 2.634038469 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091369994 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104901847 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09351027 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106730015 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085168478 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109416563 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079941681 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105755571 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103867539 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086238133 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105065736 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088384025 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104440042 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087155486 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106018255 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085208329 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109136018 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103870907 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085807989 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10157311 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089172008 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104254831 seconds)
  done (took 2.989457463 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119267025 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126484245 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092452652 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.23304958 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.10438317 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133802559 seconds)
  done (took 1.662363052 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109783416 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121059238 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105573726 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107866874 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114950909 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086785102 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108537531 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108569412 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117303043 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102260148 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109220265 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118058829 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117328948 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096889759 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115548192 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114461076 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107339552 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088642802 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105979895 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128307134 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08746054 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118224977 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10889272 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087295986 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109800653 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117538338 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11754671 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121884042 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088448571 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117647064 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113982379 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087464317 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119504692 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12297617 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108583328 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098446051 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109180647 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1284471 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113953987 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097104147 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10956369 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115467655 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097690986 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114802789 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117950918 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107534305 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09378199 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108801759 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107238269 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135260837 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094215218 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118013983 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116039027 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118091011 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097550723 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156118128 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102317235 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117733113 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11524227 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122406672 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116858894 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094655532 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117680875 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123500714 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115206179 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097295742 seconds)
  done (took 8.146795935 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103160705 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127316772 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108365618 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122334482 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099202841 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108284875 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108043319 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08822183 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108651577 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107356267 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152034203 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088388407 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11906589 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117846256 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087195553 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110178344 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108599852 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116703855 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087734895 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136057483 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108626707 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117353896 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117302539 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097884916 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123693171 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114756152 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10793742 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089043102 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108647493 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108544846 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09418491 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108949584 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117777418 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087505805 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117788503 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10893033 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087092617 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11452146 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108241421 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113575649 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097763807 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128560607 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109824168 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107717082 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102893887 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110085418 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108143045 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086755264 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109144364 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10639237 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10228078 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122843311 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122188583 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118489196 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108962122 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088223807 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109820397 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107817835 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088864002 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116124509 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117641471 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086977281 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13508762 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109859224 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109038467 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116986809 seconds)
  done (took 8.049614357 seconds)
done (took 155.768224218 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.234949216 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.205197945 seconds)
  done (took 1.297424025 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.088267694 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136907088 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096187851 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171610829 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084814668 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142042792 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138829943 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098558826 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106878025 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085984464 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107298917 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087182911 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173770188 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.08548719 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108310296 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10741969 seconds)
  done (took 2.68410297 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.119147406 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254150954 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.125976965 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105191609 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090862704 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110294656 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084319785 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112165162 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090035904 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.106026821 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.08783862 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.108469117 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.083340881 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.108470738 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110172057 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088842003 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104177242 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089049708 seconds)
  done (took 2.842902368 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114214827 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147810149 seconds)
  done (took 1.134577913 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.243190188 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.163272901 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.231758984 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.474955415 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.276228247 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.366900431 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.204932655 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.214568071 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.163120091 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.210295334 seconds)
  done (took 3.4138308 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118845613 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180030353 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318617999 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156186819 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106782862 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130474382 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15808681 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130805106 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122330487 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101297466 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122938165 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11930506 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138073805 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095800948 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115793144 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118003988 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121325522 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115450841 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115154312 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09665961 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.13923425 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.084405729 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116665452 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113697546 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097876852 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120675084 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105848725 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08501744 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117847382 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093312547 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114825435 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126479787 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119392155 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.155107143 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122600183 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.157127926 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118648981 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092324485 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116205772 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090166888 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119300545 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119567558 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125385149 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097360503 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106075987 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.09742588 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107057591 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084621627 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116315901 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.117909792 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093969252 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114022842 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15399675 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119986746 seconds)
  done (took 7.412920711 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.785661062 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156189602 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090025903 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.877789832 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135828897 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103400331 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.77375097 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111500697 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258788545 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.752695646 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133563962 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.11970793 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.205483019 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258465369 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.986389061 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.292954838 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.64131064 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127537425 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152608581 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153577755 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117303181 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114478959 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132995367 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.452330075 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11755687 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089204927 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11836016 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119813576 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161123249 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125982544 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093324592 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200792822 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.261909565 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204903387 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094615327 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113182164 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088131668 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.193749857 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265022883 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194909529 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180758362 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109520302 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089420502 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123332458 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132479439 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086269079 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.185710303 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175096389 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.17175282 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116133306 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118494261 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098754532 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12211908 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164521412 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122772547 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.322038843 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319262091 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090342802 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122840119 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126185832 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.239215393 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124370939 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224840659 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138847877 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.188461634 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113450594 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782935793 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170525762 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110950606 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095509788 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121211551 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116092576 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098843834 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168906569 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.39098039 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124858725 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114545681 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089807286 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225614795 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102424444 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113064744 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162282642 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118125713 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120271926 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103024305 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123242728 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.1691808 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.256877929 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10078264 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120860394 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115521981 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102955811 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117783345 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212273391 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219857176 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162167848 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.232559883 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100170874 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.18451971 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169874258 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118868603 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.173973752 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118781419 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102595727 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122925671 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217050808 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145134279 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123809769 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094574764 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119475148 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149671745 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126933819 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097422738 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.193455691 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480466789 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168976745 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110404931 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127999696 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097942288 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183335963 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097151675 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261301128 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12185221 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169713091 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119891057 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087954048 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120898031 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163847308 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12244844 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119674961 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100704061 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120092097 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.23538609 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217603874 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121126124 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22173092 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.187085049 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118679948 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173064696 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122704553 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168136468 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120742416 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09750547 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118078249 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.790990519 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123837409 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099490953 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116476504 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.194471937 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089246819 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126229171 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125599251 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087078923 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793178136 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128238575 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120803103 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103525259 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11873925 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119933096 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096304438 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116651032 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162098096 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229870218 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120670246 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096714647 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125287544 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159266978 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117612213 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124837668 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123172503 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10411272 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122655158 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114911748 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104132144 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190532539 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.165588142 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.21871866 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.577990647 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113561447 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12393677 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.20359542 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113764447 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291122353 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118749787 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.203449615 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186200011 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099446966 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311604348 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164140047 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195156348 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.1278674 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173150853 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110733286 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119018066 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164965985 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111316988 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095612581 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162075133 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126380666 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124558627 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.959373113 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089244801 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24603037 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087881648 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169911355 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118587286 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12021528 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294327539 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090929417 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130020626 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165256006 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115722435 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123797745 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.707951473 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125446312 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099308935 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118196375 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221351803 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164200741 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120164253 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119237421 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096387309 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.185473051 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207506099 seconds)
  done (took 44.093863549 seconds)
done (took 63.74258802 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277986355 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216428449 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269914124 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172194088 seconds)
  done (took 1.909175316 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171937024 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150191933 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121756437 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108482077 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.15169712 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084343184 seconds)
  done (took 1.685515598 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.364623168 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278750525 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.245101329 seconds)
  done (took 1.789415678 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.319298138 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.250009469 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.472372264 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.32537009 seconds)
  done (took 2.363488561 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210679949 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133198153 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110836631 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103374373 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.198413697 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.24628469 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142812081 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201134103 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.097989163 seconds)
  done (took 2.390945049 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.198265783 seconds)
done (took 11.237789361 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.252948948 seconds)
    (2/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.150848132 seconds)
    (3/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.24891837 seconds)
    (4/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.213837881 seconds)
    (5/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.16043506 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.171119407 seconds)
    (7/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.099362504 seconds)
    (8/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.136436424 seconds)
    (9/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.101717019 seconds)
    (10/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.1196815 seconds)
    (11/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.096096819 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.22564254 seconds)
    (13/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.213760119 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.12669956 seconds)
    (15/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.192443027 seconds)
    (16/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.170247512 seconds)
    (17/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.192189167 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.136262595 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.120910708 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.125547086 seconds)
    (21/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.210686713 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.225881033 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.202316468 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.214687255 seconds)
    (25/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.096776965 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.140906927 seconds)
    (27/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.095542716 seconds)
    (28/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.122473577 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.136636666 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112879101 seconds)
    (31/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.118628103 seconds)
    (32/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.199776081 seconds)
    (33/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.196928365 seconds)
    (34/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.162515911 seconds)
    (35/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.174923269 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.138049842 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.130149303 seconds)
    (38/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111833369 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.136543997 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.086690666 seconds)
    (41/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.185893482 seconds)
    (42/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.090584004 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117563038 seconds)
    (44/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.17413952 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.236304709 seconds)
    (46/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.219886487 seconds)
    (47/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.06569162 seconds)
    (48/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.127657581 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.148742435 seconds)
    (50/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.127082841 seconds)
    (51/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.120135974 seconds)
    (52/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.213117181 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.093825405 seconds)
    (54/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119173923 seconds)
    (55/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067161783 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.115431275 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.11097617 seconds)
    (58/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.098950637 seconds)
    (59/309) benchmarking ("sort", BigInt, false)...
    done (took 0.224583819 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.139073945 seconds)
    (61/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.222661538 seconds)
    (62/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.17548044 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.142163998 seconds)
    (64/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.089371242 seconds)
    (65/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091619181 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109672696 seconds)
    (67/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.099751452 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.137848118 seconds)
    (69/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.167462294 seconds)
    (70/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.183381605 seconds)
    (71/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.184767967 seconds)
    (72/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.126674897 seconds)
    (73/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.20309719 seconds)
    (74/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.136953749 seconds)
    (75/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.151602168 seconds)
    (76/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.119463582 seconds)
    (77/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.087497361 seconds)
    (78/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.09226331 seconds)
    (79/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.097657401 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.155549121 seconds)
    (81/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.235307262 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109723276 seconds)
    (83/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.07504559 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.109395135 seconds)
    (85/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.097274386 seconds)
    (86/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.090347594 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086576507 seconds)
    (88/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.12394997 seconds)
    (89/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.203863969 seconds)
    (90/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.125446182 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.223430512 seconds)
    (92/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.187514341 seconds)
    (93/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.123309713 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.16824729 seconds)
    (95/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129231718 seconds)
    (96/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.06842471 seconds)
    (97/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.108671137 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.114362457 seconds)
    (99/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124523742 seconds)
    (100/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.06792176 seconds)
    (101/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116509226 seconds)
    (102/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.095506511 seconds)
    (103/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116963225 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.086053998 seconds)
    (105/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.110331972 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.147117698 seconds)
    (107/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.164248402 seconds)
    (108/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116191085 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.126475054 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119593146 seconds)
    (111/309) benchmarking ("sort", Int8, false)...
    done (took 0.18857359 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.180018084 seconds)
    (113/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091433738 seconds)
    (114/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.121096341 seconds)
    (115/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.116831377 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.16996226 seconds)
    (117/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.157765293 seconds)
    (118/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.40732447 seconds)
    (119/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090691114 seconds)
    (120/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.090764753 seconds)
    (121/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111978651 seconds)
    (122/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.199458982 seconds)
    (123/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118050215 seconds)
    (124/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.100748214 seconds)
    (125/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.0904614 seconds)
    (126/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.108076615 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.133806052 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.181675234 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.116592139 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094341473 seconds)
    (131/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.216410606 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.137809805 seconds)
    (133/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066840399 seconds)
    (134/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.144159271 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.107637757 seconds)
    (136/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.177427878 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114024697 seconds)
    (138/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084755859 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.091120264 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.188881818 seconds)
    (141/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.115084939 seconds)
    (142/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.172793975 seconds)
    (143/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.09880666 seconds)
    (144/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.065971376 seconds)
    (145/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.090122229 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093065328 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.220954094 seconds)
    (148/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125096093 seconds)
    (149/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.092138092 seconds)
    (150/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11851685 seconds)
    (151/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.117730162 seconds)
    (152/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086285107 seconds)
    (153/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.074767638 seconds)
    (154/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.114811633 seconds)
    (155/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.087256971 seconds)
    (156/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.121314357 seconds)
    (157/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.119594789 seconds)
    (158/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.089026323 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.107926351 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086329533 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116952149 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066960251 seconds)
    (163/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.109351371 seconds)
    (164/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.092865345 seconds)
    (165/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.110759615 seconds)
    (166/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097376299 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.100899492 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095287245 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.11981978 seconds)
    (170/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.190885867 seconds)
    (171/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068705167 seconds)
    (172/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.091916392 seconds)
    (173/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.145156436 seconds)
    (174/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.07656864 seconds)
    (175/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.110796864 seconds)
    (176/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.136991333 seconds)
    (177/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.150841947 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.133409473 seconds)
    (179/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.09243615 seconds)
    (180/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126181711 seconds)
    (181/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.065953743 seconds)
    (182/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.09240081 seconds)
    (183/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.076713228 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.185557762 seconds)
    (185/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.087083813 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.155938917 seconds)
    (187/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066682179 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.09155618 seconds)
    (189/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066577335 seconds)
    (190/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066661187 seconds)
    (191/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.146883256 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115446073 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.157024395 seconds)
    (194/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.112772183 seconds)
    (195/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.147166629 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.121739541 seconds)
    (197/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.075841836 seconds)
    (198/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.101487751 seconds)
    (199/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067491746 seconds)
    (200/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.191292017 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.084915043 seconds)
    (202/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.12668668 seconds)
    (203/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065552554 seconds)
    (204/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.111308243 seconds)
    (205/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068100902 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109134543 seconds)
    (207/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.093196462 seconds)
    (208/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.090541528 seconds)
    (209/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.134864018 seconds)
    (210/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068456244 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.179020375 seconds)
    (212/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.06868614 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109913695 seconds)
    (214/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.094103786 seconds)
    (215/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.08043651 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.111284552 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.108501494 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096919005 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.116539251 seconds)
    (220/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.092788059 seconds)
    (221/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.06676634 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.195631448 seconds)
    (223/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136779133 seconds)
    (224/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067919525 seconds)
    (225/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.120402618 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.194209229 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092405753 seconds)
    (228/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.090170175 seconds)
    (229/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068909295 seconds)
    (230/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067415013 seconds)
    (231/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115757765 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085213178 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135303016 seconds)
    (234/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06723113 seconds)
    (235/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.139037393 seconds)
    (236/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067829324 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.1095849 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.188457162 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.11071793 seconds)
    (240/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121833594 seconds)
    (241/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100118567 seconds)
    (242/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.115099934 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.174487483 seconds)
    (244/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.151542351 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.132420241 seconds)
    (246/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066110355 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.174683405 seconds)
    (248/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.109790194 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.068655446 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.133761549 seconds)
    (251/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.067742601 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085542427 seconds)
    (253/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.100592362 seconds)
    (254/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.0676741 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109517527 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.087203565 seconds)
    (257/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13566464 seconds)
    (258/309) benchmarking ("sort", Float32, false)...
    done (took 0.176334905 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093973213 seconds)
    (260/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.091491346 seconds)
    (261/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.088793027 seconds)
    (262/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.13666912 seconds)
    (263/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069011899 seconds)
    (264/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077185171 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120716436 seconds)
    (266/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.109198217 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.087004009 seconds)
    (268/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066162202 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.213760998 seconds)
    (270/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.091599485 seconds)
    (271/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.217055103 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.117230265 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.216397574 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109815681 seconds)
    (275/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093674055 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109209523 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.113728636 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.111725335 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.086467549 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.120201069 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.133785773 seconds)
    (282/309) benchmarking ("sort", Float64, false)...
    done (took 0.147756613 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109407454 seconds)
    (284/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.089118525 seconds)
    (285/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.091153758 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086415686 seconds)
    (287/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.117217548 seconds)
    (288/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069326513 seconds)
    (289/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.0662472 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.110258704 seconds)
    (291/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067813907 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118464252 seconds)
    (293/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088973935 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.164101219 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.159551174 seconds)
    (296/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068877745 seconds)
    (297/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.067035044 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117505366 seconds)
    (299/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090146094 seconds)
    (300/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.093876783 seconds)
    (301/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.077596535 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.132080885 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.087564774 seconds)
    (304/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.091313121 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.114502425 seconds)
    (306/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110013866 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.086790126 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116304029 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067616637 seconds)
  done (took 39.713127428 seconds)
done (took 40.620013595 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100787559 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148815281 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095157407 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137006887 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123979381 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091871503 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119186645 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097802562 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125102784 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124248462 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098640989 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093672818 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097397571 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121713558 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096950972 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.14001937 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.12443655 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094547534 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120117844 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086586381 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120704369 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086756267 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114283079 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069991816 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123562696 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094129419 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118628006 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120194377 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088252061 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110430375 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090896773 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118263932 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087511313 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124613093 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094277884 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.12013177 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097678672 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121603838 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087378959 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112388055 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117838694 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088146221 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117812418 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095113595 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116169128 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093012207 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.11943456 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.09919785 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140549725 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115817488 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09547039 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120851594 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096325655 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118567876 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091321639 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121038659 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092760744 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.143032655 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121734622 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093117325 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.121064702 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095881856 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117582721 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095136618 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120442963 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121456528 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098758777 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116532115 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097236015 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117701617 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.08771205 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120905559 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.09041572 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112480191 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096072071 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.124025818 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109402728 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.094118055 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118398433 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092797965 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110377423 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090353452 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112072475 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09412822 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113331864 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070928929 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114578928 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093916006 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110184528 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096411983 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117765785 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094241296 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113103144 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099137921 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112382363 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092393626 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112801811 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086773159 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114573366 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091167126 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111272668 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089371529 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121489574 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088068934 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118682783 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122741636 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.08744292 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117291372 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08699541 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110846216 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101952819 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122361495 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087608868 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118302473 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086121975 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119723325 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.08587982 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111910878 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086627134 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112355619 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.09277619 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.113308491 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113696839 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095329127 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125872525 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088519118 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113887042 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090542569 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111447292 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093730662 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112167093 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087250427 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114111307 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078700006 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114034687 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088036455 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118829523 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090804023 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119898995 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089024341 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121843442 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091669307 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118551491 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091879026 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112648544 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074040592 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.1173774 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089592289 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113236798 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087142181 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114402853 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086904261 seconds)
done (took 17.049400225 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.08873985 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185938988 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152686447 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142385342 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108168002 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113623135 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122087119 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120117419 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115014263 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143724929 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111059819 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134129392 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149355064 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087233609 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11296031 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091837849 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113920882 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102514174 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.147714572 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133857839 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165455086 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086547238 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148981571 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136725792 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122000511 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.116207008 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112690603 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.09260247 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115328205 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103738656 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134509451 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090854234 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.11388704 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134739995 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.10516851 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121346027 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087755668 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121123693 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087273767 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113618786 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141604263 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134124891 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094471285 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118500763 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091704452 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115434204 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08892493 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122664677 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097994474 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117963331 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126149099 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156851997 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091576155 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122540663 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.08695442 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124264385 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121833859 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090882265 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11284111 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091041466 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112056715 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092556772 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128464926 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143366159 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092988126 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123490825 seconds)
  done (took 8.688660641 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10668463 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139377111 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106046845 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.148987864 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112429115 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088870931 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113072974 seconds)
  done (took 1.785928544 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089254187 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134334876 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111538573 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136947452 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.1326537 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110263006 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123706047 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088930085 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132150231 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088340373 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135785945 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152176189 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.09026975 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121583139 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137945871 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089096739 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137164109 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089329491 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117579751 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112322809 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117710518 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134996167 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091101546 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114075085 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10335033 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114218061 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161986735 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094168018 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115109171 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093012125 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112724563 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.167067558 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105768953 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126471373 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088304137 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129688012 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.1278157 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087626456 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131394987 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094001934 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129821004 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089021961 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11551192 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086072725 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.12043847 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124131317 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091094521 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114793925 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.09335757 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134503225 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089516813 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127362056 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089419706 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.121029692 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089420896 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121129947 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123178136 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090146434 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134119906 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091032697 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130740234 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105439857 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129692024 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130501831 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092115218 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128453272 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103060546 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118189664 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090839708 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119707019 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130530452 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088204067 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115745943 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100624124 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11552463 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113430004 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.13909607 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115662899 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100597233 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114049117 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090028769 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115162151 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113121279 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11905732 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089349207 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11956606 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091970265 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113384489 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087739114 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118002564 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087309382 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116618172 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117028019 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090730151 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117101567 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106535351 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115000243 seconds)
  done (took 11.879831805 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090510095 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114739298 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092963539 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115278131 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090919754 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115300603 seconds)
  done (took 1.600893761 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114773974 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118390263 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104238219 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121760198 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157253501 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.13159965 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.10622286 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123578373 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.13350794 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.103496075 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130480203 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105701991 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137561028 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122393373 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10430549 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121238172 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129684124 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101038124 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129204657 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097212989 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138798991 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.12201575 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097256591 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134466084 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118748901 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096538142 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126523422 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103235894 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128591747 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123752153 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096502819 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118740461 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096525822 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125116261 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.13027697 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095830809 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121764842 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120194769 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101253664 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119660147 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105138374 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123326909 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12696586 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094152436 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125597067 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120833957 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095227561 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125665005 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.13032235 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095635051 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119610865 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095795363 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119087424 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094371683 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122461992 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124339773 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095082016 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131199179 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121750422 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096956942 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118117463 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093851111 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125061528 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118288353 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105866311 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119612434 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122198043 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.098276889 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12187525 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095932499 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120550373 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09364887 seconds)
  done (took 9.291851757 seconds)
done (took 34.217302215 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.690881622 seconds)
  done (took 1.670623154 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.739855385 seconds)
  done (took 1.72093264 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.124867989 seconds)
  done (took 18.106855569 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.50379719 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.589813098 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.883161347 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180273715 seconds)
  done (took 3.14207816 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.961298656 seconds)
  done (took 1.961256428 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296848954 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.257953781 seconds)
  done (took 1.544697338 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.779436784 seconds)
  done (took 1.772189648 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.355647434 seconds)
  done (took 2.342394359 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331413494 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185063786 seconds)
  done (took 1.515264815 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.546184349 seconds)
  done (took 1.545050469 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.860926751 seconds)
  done (took 7.864348051 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26914163 seconds)
  done (took 1.276303863 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.304535862 seconds)
  done (took 1.303994322 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.547977163 seconds)
  done (took 4.54783888 seconds)
done (took 51.307062201 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099275033 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126825907 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102756734 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124285776 seconds)
  done (took 1.447865837 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101767703 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120977139 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100121091 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120697634 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125935485 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096568687 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.1233454 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101395784 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121379692 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096711995 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122409681 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119773411 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100173122 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123310453 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093900609 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124332844 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099340639 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12227486 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124449581 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097114806 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119221566 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097872622 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124908534 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093848697 seconds)
  done (took 3.675179158 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100331543 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118766117 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096635634 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118007824 seconds)
  done (took 1.442915093 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101212001 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.14235862 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139080285 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101145585 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143211931 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136114884 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092773032 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117259032 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094835418 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124863738 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090714232 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150193077 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137191843 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100082576 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128280488 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088149106 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118313631 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136832174 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100650141 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127628533 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095285482 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125446932 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091103981 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140949338 seconds)
  done (took 3.828383824 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170985413 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.148222858 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139624583 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095106583 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160731646 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141466887 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088786417 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140780825 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087831866 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133009115 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118282881 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133150178 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129721771 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087666698 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114321927 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086878646 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129839858 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129664153 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091407646 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.141563921 seconds)
  done (took 3.480802768 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097663775 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117722806 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088746817 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116983564 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098981904 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121071979 seconds)
  done (took 1.652860189 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090802485 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114775942 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090721794 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11445776 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094927432 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115372701 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089684818 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114742781 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090664762 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116122255 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089844959 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113363186 seconds)
  done (took 2.246714881 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.463887104 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093597331 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120612658 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113791989 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096946654 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114803784 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.104042321 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119375222 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140659887 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089804556 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115743692 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.09227752 seconds)
  done (took 2.676178564 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233907497 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125951984 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286916823 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273476261 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15787225 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171858293 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281508075 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162429877 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225491066 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160163532 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204879972 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224406815 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1517339 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189421956 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138006857 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119072242 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226144993 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241112459 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152610972 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203678156 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226701093 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165683809 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18066202 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150324183 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112440964 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171031878 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121532619 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129328781 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20594059 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202282853 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18849168 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16242051 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148362858 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238434329 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253297114 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193706834 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282872277 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136405385 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.171137324 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168224134 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264588793 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112278499 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232195849 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156371001 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105458903 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221676089 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167380477 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177270321 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151147816 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140809588 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221132514 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214309256 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.219607631 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112064898 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233340843 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157828443 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168638989 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193201048 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253413661 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224135606 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178949861 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.093763961 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215806576 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193374697 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185757841 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168944024 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.209271886 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148357652 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192621659 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189395022 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165357932 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214794521 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.186877426 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141511298 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168380532 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172572093 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172643695 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257192041 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203138627 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095656725 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16986659 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150434715 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133680542 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194327646 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099074013 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239593252 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148659152 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.13762636 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241975701 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159715954 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160968209 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202549361 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221116873 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122190343 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110879877 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155272457 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155967907 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192454666 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140521067 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159905282 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1631623 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129355451 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180336564 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097061492 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202313473 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092571722 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173108906 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18168709 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127587429 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161656111 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15219866 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150173882 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173978156 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199581255 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142337313 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13513714 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208601603 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177726669 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150382456 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204791049 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202963465 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.14446142 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150744518 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200150318 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245597422 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112700221 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231266032 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157879861 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135982247 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.106122908 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20778786 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126996683 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161706487 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135030611 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182743229 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235256394 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126256886 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111428562 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210735276 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107567143 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132494441 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161515218 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148768328 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138641059 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.120091843 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.15230875 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209304031 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178196794 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154518933 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165661213 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15309604 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2541566 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141603662 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.124090297 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149612966 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121396459 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192019838 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198870498 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131911896 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231323426 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172397902 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202753152 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168792387 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135976122 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177638713 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130951229 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093175041 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222248372 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168540684 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161748295 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196986162 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226825514 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.183386335 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182259412 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172480201 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201028746 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.138465809 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184244364 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111538054 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16109656 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168220793 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124983841 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143091986 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107324722 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149037895 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144690005 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134787032 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196796752 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169579733 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218540581 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159279305 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150603462 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182646601 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.100865098 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201866822 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178716263 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149183362 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199591039 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221249143 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188922388 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143248825 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201817445 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121602496 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098421043 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143730963 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170499187 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13539384 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135269535 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168335839 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182132821 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181321417 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176369404 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238970376 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170510575 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190208251 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.123699311 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168774289 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187041804 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177541414 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.187317949 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140804393 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.122540234 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205299155 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158981937 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226826244 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167934812 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203524837 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207752242 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.151905489 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132812132 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151449558 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187663047 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154521653 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178163442 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148332322 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143203924 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163244129 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.104931536 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188128372 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185537373 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16352268 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18818389 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151759641 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212029097 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101632509 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166335148 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160304153 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165672636 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.110152894 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17594756 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203934785 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15024383 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167577728 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218680034 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103510882 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311240513 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235678637 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218260114 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110843975 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158557883 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160861552 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165808927 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172916154 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177871067 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160796907 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216248401 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15811474 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109373067 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14218442 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14960518 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150750707 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.104571998 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148930948 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.203106057 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.112525147 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211985221 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161681841 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13088413 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200749087 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.12307209 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14444643 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151871539 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215333487 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204586157 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210845797 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151610453 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180853824 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235062419 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09887753 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133539474 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134706302 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180510376 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107943648 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22126748 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188639725 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229488293 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183816543 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186763441 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140909232 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120658085 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129802481 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202217891 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206666599 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151655017 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159204998 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231175639 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114966877 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13341532 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173195632 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198778118 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146012799 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225125878 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081394124 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281429779 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126493023 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105563276 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164970452 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237676256 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137237802 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.160420372 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194331213 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170743939 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164955856 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150289417 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19143787 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21378557 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231383617 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180466622 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133361902 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156329348 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177394406 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194113281 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159788416 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141739248 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203961053 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224097862 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196886398 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143986065 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169834219 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172196204 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159204676 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187229429 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136617781 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233793534 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10760244 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223261517 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154518708 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142626341 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178125676 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.188548478 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140723258 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189391866 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175783645 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135323435 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134059023 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170351233 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177742783 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158727215 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128450369 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180636034 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125774223 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192811679 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259535953 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135517607 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127476276 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148072726 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137162019 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158273939 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159669783 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141844476 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139452716 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230008943 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135165944 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193922798 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2304604 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170519026 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175738055 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145010325 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694493531 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102122046 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225719356 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155037426 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207292465 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151253295 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174020952 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160703441 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169849926 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223550974 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160852182 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232287666 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195393983 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179258182 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133704753 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158536757 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162198997 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144407282 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151828492 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170446894 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160904572 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153183686 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180077574 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169331169 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.136190696 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112256608 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229704 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155331122 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18465376 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180956789 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140271843 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174774589 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18706933 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135355335 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179962537 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237308029 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142270053 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151725566 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106595839 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156349236 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263390099 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125077088 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201981008 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176918896 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160700194 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167686362 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148271133 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221424677 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158724755 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179988615 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147416912 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160650252 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157893764 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11004647 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130535352 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156268562 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168268634 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150284184 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160360176 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141338573 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219366843 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096763138 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146229846 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224198124 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192349389 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215553852 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136967752 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137174162 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16299179 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151082337 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176947024 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18057318 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137558647 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108365524 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137635909 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.159240927 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11319109 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156283793 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194552183 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167190317 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237225755 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136808839 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.250820776 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141048556 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156299071 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087928049 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133290212 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151150684 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14665907 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159605947 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19430176 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261905602 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148921683 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132466609 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122215448 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127142161 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136701367 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166559491 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165984061 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178603672 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146859459 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081296128 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159164773 seconds)
  done (took 82.882868986 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166236224 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132109275 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147752801 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201845854 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175451622 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269399823 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209264628 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254063352 seconds)
  done (took 2.657334682 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093843545 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145449921 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158554725 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133968469 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091260865 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120019355 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.345446903 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133925508 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.115699477 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.113383965 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172911813 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093751661 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.553660936 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090516833 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120483109 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107639717 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092088267 seconds)
  done (took 3.77840018 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.475610089 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.722688702 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.511150612 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097213378 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.148726569 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112755831 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.715304525 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.196688036 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.114442619 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.487128359 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.775195911 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159192102 seconds)
  done (took 18.620895749 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099016463 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121430491 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107940874 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.137527294 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096396747 seconds)
  done (took 1.673087846 seconds)
done (took 131.063151121 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104027183 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.405929949 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072015257 seconds)
  done (took 1.61857441 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107335481 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137710945 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109455256 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136538401 seconds)
  done (took 1.608952043 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098039227 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.1278065 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109189221 seconds)
  done (took 1.448149043 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.323596189 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190496415 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.164412639 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106357883 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129827952 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10292147 seconds)
  done (took 1.451010832 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097194225 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128382498 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097710097 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.13051136 seconds)
  done (took 1.566372593 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095309245 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070877748 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101586245 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074807566 seconds)
  done (took 1.4508729 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11435434 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132901342 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103257102 seconds)
  done (took 1.464832398 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129945977 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139247526 seconds)
  done (took 1.383220215 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106399181 seconds)
  done (took 1.216394108 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.119824482 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170426542 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190300389 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165614587 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.229463992 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166513584 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142067627 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115042786 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131673717 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145023521 seconds)
  done (took 2.691158782 seconds)
done (took 17.793850065 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103555104 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.519369556 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413336105 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117357635 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723520529 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381763947 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.069771495 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14815442 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166878036 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093334627 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140685022 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674501534 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.024133833 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.474449415 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.980491888 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.375491577 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.704371515 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09386566 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120469804 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094381494 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.055786685 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092329809 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123214896 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092936962 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704227696 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426544312 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094902927 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.37574435 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091939014 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127680744 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38360934 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124016342 seconds)
  done (took 17.217023761 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095259536 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174864723 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098383705 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137987482 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124051847 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094817473 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126033436 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09415098 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180756452 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124043527 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111078112 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121034102 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126732243 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095324685 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142671884 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092651082 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125577158 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092633717 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121584846 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122320899 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11280973 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120722761 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0940382 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122525818 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093508472 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136203632 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123931104 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093298041 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121317451 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098747326 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12828257 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094918225 seconds)
  done (took 4.861856714 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141330837 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184482949 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129980992 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127927944 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170139215 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124577571 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200465877 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118789071 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182695934 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124440398 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140753784 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093558865 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158801432 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123288489 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114883521 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122425475 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097676566 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12313871 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093442058 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124265343 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140972232 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093628289 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122994201 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094283436 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12419798 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109180274 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124787774 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122207884 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093344487 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127868031 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100589 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124937427 seconds)
  done (took 5.201657665 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097466862 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127472956 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109447536 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.14034952 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095346022 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126443338 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097738909 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125860602 seconds)
  done (took 2.042895664 seconds)
done (took 30.435616198 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111957748 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127957218 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107597943 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135936278 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103104714 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132385956 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091851113 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134245977 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135358127 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102874923 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139202681 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093879399 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123606143 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091999014 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136294301 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097482798 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.13407674 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.1025512 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135569494 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132810402 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09425658 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134053674 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103224105 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134758105 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104480666 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134772558 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137873787 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100161044 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123078456 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094350616 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125475755 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.10450744 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125755712 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104954119 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128329006 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097267713 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124756669 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094826189 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133720709 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133202114 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100808445 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134298831 seconds)
  done (took 6.05475965 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108151459 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140744982 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105558144 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081665833 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117742889 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080899102 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138845066 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079582073 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111434676 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108327525 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074858715 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107416968 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078959472 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102123093 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077460901 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075465428 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109363987 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076723016 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076532995 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107004537 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080329448 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073145868 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109204771 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07899422 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075008745 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.11067878 seconds)
  done (took 3.615378451 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100438493 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136579767 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112301608 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185157956 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162304049 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099923408 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133745796 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139912327 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109078664 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120816042 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096355923 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151290034 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110499214 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129684293 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091131691 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137786151 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136698461 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093932193 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128803981 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113333188 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138965057 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102725226 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144010583 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133873303 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092457585 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123168376 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09574703 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13523218 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.09769305 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132449569 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.134403874 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.096505759 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123424321 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104319478 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127427407 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093798025 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143618932 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132299569 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.103245059 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122645413 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096411816 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122597198 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11391356 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168891064 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091137823 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129909747 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129684501 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103380942 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.123257976 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110294551 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132995512 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092140568 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125735583 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092731091 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.123204823 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136006488 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.095813602 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.12713168 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102648368 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125638121 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105612458 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126985608 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108870643 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123153835 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100306496 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122257196 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092307171 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121212804 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144459061 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093896783 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164786455 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093447729 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123398857 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131322484 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100245812 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128509127 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092643168 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138310075 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102323658 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126831651 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102831861 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127372604 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.125559481 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111613308 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.125117591 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095582859 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12357794 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099163675 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125509624 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093714112 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137601623 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092816112 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126381845 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.139767964 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093212053 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.12383506 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.09928826 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127400664 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091850785 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135524287 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097986327 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123083451 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132595642 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.092748585 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124950007 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103672217 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127161814 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.090703136 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12748336 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099171106 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122982502 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094327707 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125787924 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094218857 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132742176 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129304512 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097128364 seconds)
  done (took 14.902769302 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228832034 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217649321 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.238281982 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.262088759 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136800794 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114859879 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212068383 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156145402 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124158267 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160087144 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162413368 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182243118 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.13959164 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180982294 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.141554474 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.12260579 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112033467 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165808563 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215081593 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.292146312 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113087235 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134090119 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162992822 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161323948 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107111174 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134197601 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.141002291 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105260645 seconds)
  done (took 5.771421217 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109020032 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157516252 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098045225 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14587831 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149554956 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093439483 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128662623 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094684839 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136652266 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135256969 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092497054 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129719846 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100338232 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132946394 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123352583 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102554379 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133026893 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094753033 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126911823 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097350713 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130326266 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102709982 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127810919 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121443887 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102916478 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122379896 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086524547 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142969926 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122454778 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116245664 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12176158 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.09984598 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134495488 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093387209 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124333121 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095813484 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126937789 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095628242 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126724068 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091486116 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122773643 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078194849 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123208984 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137352963 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100436404 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079492755 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130398452 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128173326 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094861788 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.12090852 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096241232 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12607517 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097314251 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131216103 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098280556 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125526038 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096884275 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11705589 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100516946 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126296941 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085019673 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122363964 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098673355 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118561288 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101566371 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129880595 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091798199 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.12727467 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097268903 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130426725 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.09590655 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127392838 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09128112 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127333818 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096741585 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128015492 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096762693 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122785223 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122043049 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.09447664 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076399858 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12468106 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074165973 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127614564 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091843737 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123649259 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09581609 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131201392 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137371623 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095175114 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132716923 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094997936 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12330273 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097974373 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114334351 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096032066 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.13922568 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141914208 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093694323 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122326297 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107587524 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126548875 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092655595 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107163171 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101829872 seconds)
  done (took 13.031883581 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.12819604 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154648643 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.096517786 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.144175023 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156246179 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158144292 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101438602 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131129505 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095247812 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142842246 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093551745 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133447941 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097939328 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13840502 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157427231 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103432324 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126679156 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106540519 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132729945 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171711823 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111781491 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143227685 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107801696 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125297114 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128959746 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110972122 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162547024 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107177963 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137246735 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142659762 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108513341 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161913115 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143600323 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.0991272 seconds)
  done (took 5.522022388 seconds)
done (took 50.021734704 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.243784831 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.444899166 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.220768874 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.194556856 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.268311963 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.235414584 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.232940169 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.221823996 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.714864623 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.224409739 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.478117626 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.857372145 seconds)
done (took 60.489782169 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.224189896 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.348790852 seconds)
    (2/2) benchmarking "String"...
    done (took 1.482449317 seconds)
  done (took 3.982527159 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.569583837 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.157112826 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.478099362 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.217693124 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.217835295 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.51079653 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.909706783 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.579008111 seconds)
  done (took 28.217238921 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.217743684 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.622889044 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.996625256 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.006118747 seconds)
  done (took 18.991876476 seconds)
done (took 61.136615985 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.242167589 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.290044267 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.221245837 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.198332957 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.353801101 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.253230516 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.59435364 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.246150304 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.241054989 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.215892045 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.242139167 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.221164578 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.24766218 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.544327222 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.219679446 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.219797606 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.286992809 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.717329879 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.627550727 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.22069195 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.241582086 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.24681953 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.220829624 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.241165386 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.255822642 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.234532287 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.221013826 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.239288181 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.830514262 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.225121908 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.23992762 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.697932464 seconds)
  done (took 191.447682838 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.220019318 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.375441239 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.479942361 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.255991413 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.948060398 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.420588886 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.358446591 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.002410028 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.23962385 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.248433036 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.416509235 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.221087013 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.474555923 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.231979217 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.227783992 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.22893154 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.425572478 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.501749779 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.240761064 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.443990274 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.24803741 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.351365042 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.295313411 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.394247788 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.251823071 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.316759542 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.233616564 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.243197742 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.412369915 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.369710119 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.230464492 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.272479961 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.860886701 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.080514233 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.236714715 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.228775632 seconds)
  done (took 151.140997962 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.530969506 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.222493236 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.221640639 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.221293673 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.221938393 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.254039136 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.222578233 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.811506233 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.815412968 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.732934569 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.370195565 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.286299037 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.502357744 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.224009254 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.319994207 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.237154589 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.224360322 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.238424007 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.266886173 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.226548225 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.224373839 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.798898003 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.235225593 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.299032195 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.230982165 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.22408888 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.257939647 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.614367275 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.224188721 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.257226657 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.557623621 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.275547204 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.224424943 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.646895337 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.470394898 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.339073191 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.226031629 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.257469083 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.224328682 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.50614683 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.225105369 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.224755882 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.227891114 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.929293193 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.228591475 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.811153439 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.228485413 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.19934512 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.224504221 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.225054167 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.620312917 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.950450276 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.246605564 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.224496146 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.229050938 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.225671231 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.225753927 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.22561527 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.258446684 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.651635515 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.321830757 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.24384455 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.229495188 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.259373172 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.224344113 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.335827798 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.24747201 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.814276276 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.283450333 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.335317351 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.8044459 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.226765861 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325084096 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.348869663 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.227506864 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.226177385 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.226681454 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.226047623 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.338700076 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.227928077 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.226248606 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.660218181 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.233473402 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.228038871 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.287652244 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.324884184 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.227464141 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.657034764 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.229340329 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.228131848 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.006208086 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326347311 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.227157649 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.227577091 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.227413668 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.227628589 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.656816591 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.814939613 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.509897134 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.230801094 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.645066082 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.229907061 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.675011865 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.797054225 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.948981588 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.230629909 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.341716384 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.23215019 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.230374709 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.228452253 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.256952783 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.247742669 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.28679396 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.228454417 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.627792135 seconds)
  done (took 349.692848095 seconds)
done (took 694.963638067 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.89742656 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.884353768 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.998808016 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.878522388 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.863259739 seconds)
  done (took 10.680027471 seconds)
done (took 11.838512794 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.417279933 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.416698935 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.28973926 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.417918077 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.259080357 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.436198824 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.396078313 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.250415447 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.332017473 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.312394797 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.330001482 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.284907718 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.258616912 seconds)
  done (took 18.559967735 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.550892585 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.540356046 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.292670088 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.550774229 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.269091335 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.547653636 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.449499514 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.442044804 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.453757822 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.26400858 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.243565802 seconds)
  done (took 16.765028936 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.578915496 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.552080213 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.296564999 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.595533929 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.27123671 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.557789809 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.444413108 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.449877443 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.447245636 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.264249991 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.242946159 seconds)
  done (took 16.860625302 seconds)
done (took 53.343845919 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.240670733 seconds)
  done (took 2.40077358 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.274827288 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.438905876 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.257207636 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.245429892 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.240756958 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.242410822 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.245541084 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.240670682 seconds)
  done (took 11.347303267 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.237961156 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.237800014 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.239979583 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.240120097 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.23945279 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.237101179 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.241317758 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.240729391 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.23794669 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.240580719 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.237812399 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.238573797 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.237526838 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.237770728 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.239694077 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.240333217 seconds)
  done (took 20.986549076 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.241005654 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.238097687 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.238255449 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.239298625 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.237793346 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.238648116 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.23995513 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.239201441 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.237847875 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.239217437 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.239368206 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.23909835 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.238362279 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.238215306 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.239325127 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.239155794 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.238598521 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.239626842 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.243550653 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.239497244 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.240108902 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.240002535 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.240979549 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.239759697 seconds)
  done (took 30.909029621 seconds)
done (took 66.803223 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.434645257 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.000097064 seconds)
  done (took 9.597524162 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.243278534 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.241852783 seconds)
  done (took 3.649420273 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.242869349 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.242030416 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.242145039 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.241903841 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.241971569 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.242233577 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.243542948 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.243113028 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.242390202 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.241951666 seconds)
  done (took 13.588006047 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.244218684 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.241668743 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.240098947 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.243107339 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.243720109 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.239772083 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.242249494 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.242347768 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.242597611 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.240479568 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.244559817 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.241096232 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.243518355 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.241361977 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.24317056 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.242449273 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.239630885 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.241295495 seconds)
  done (took 23.521370446 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.244322448 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.244523518 seconds)
  done (took 3.654810183 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.241895259 seconds)
    (2/7) benchmarking "second"...
    done (took 1.242775693 seconds)
    (3/7) benchmarking "month"...
    done (took 1.242360652 seconds)
    (4/7) benchmarking "year"...
    done (took 1.241639575 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.242053268 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.242800669 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.242414056 seconds)
  done (took 9.860738243 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.245682767 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.421049577 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.498057571 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.851234505 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.245964933 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.248405499 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.122978434 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.248109439 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.251016356 seconds)
  done (took 14.297451709 seconds)
done (took 79.332536721 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.273624078 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.256212762 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.428103696 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.249724321 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.257370659 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.587902648 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.279131244 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.370354246 seconds)
done (took 37.868190503 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.243146061 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.994288285 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.999164319 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.251131827 seconds)
  done (took 11.411555539 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.221696861 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.248075929 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.221825783 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.295906317 seconds)
  done (took 18.158715396 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.298897341 seconds)
    (2/2) benchmarking "read"...
    done (took 1.577511647 seconds)
  done (took 5.043700194 seconds)
done (took 42.023135816 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247238237 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.245596516 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.244547136 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.246850376 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.243886084 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.244698859 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.246886102 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.246740605 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.247025719 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.246840407 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.244788434 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.246013314 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.243927575 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.246893161 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246896402 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243773361 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243978797 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246748703 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.244999426 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244002695 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243817952 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247846105 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.244559171 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.244495052 seconds)
  done (took 31.061476426 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.247499407 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.246467697 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.247392146 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.247718111 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.24486976 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.248939318 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.247151909 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.246686969 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.248560368 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.248909383 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245684653 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.245775086 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.248608277 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.245940861 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247530363 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.245297079 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.247927293 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245189607 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248990262 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.247144347 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.247794301 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246007548 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.246076305 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.249427705 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.246267326 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246032277 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.249174674 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.24635073 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248372172 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.246170763 seconds)
  done (took 38.584055424 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.253841668 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.256842316 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.249484173 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.24956335 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.249776267 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.250320736 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.249239639 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.249831717 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.25036714 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.250848372 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.249422766 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.250149044 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.249612836 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.250314315 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.249142751 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.249162047 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.250306201 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.250779479 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.250326882 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.250049861 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.250501006 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.250559985 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.251215 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.250775852 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.250861057 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.250679062 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.249965546 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.25025833 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.250829311 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.251493051 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.251056382 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.251448921 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.252570703 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.251307986 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.251271293 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.251469489 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.256197772 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.258202851 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.251798554 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.251000682 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.251061772 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.25164368 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.251279554 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.251388469 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.25137065 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.251603331 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.25198279 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.252001963 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.252155037 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.251700002 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.251916585 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.253372895 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.251883288 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.251841753 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.252382853 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.251624833 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.252885072 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.251764889 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.251471652 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.252714984 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.252378401 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.252453101 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.252703404 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.252787273 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.254144911 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.252724276 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.25326319 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.253794143 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.253754738 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.252434453 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.253429236 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.253573222 seconds)
  done (took 91.290811338 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.253332337 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.251009898 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.251570151 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.250976665 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251153425 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.253331613 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.250657581 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253981749 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251527732 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.253587227 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253298216 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.251846425 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251825836 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.254466248 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254487016 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.251245526 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.255171567 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.251988214 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.254818891 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.254952127 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.255771915 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.252641968 seconds)
  done (took 28.738240529 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255285667 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.256187678 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.252053294 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.254907638 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.252494977 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.256006497 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.255344177 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.257883894 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25648587 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.251341338 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254409182 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255838739 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.25347271 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253893576 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.254373811 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.261276548 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256713985 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.254827132 seconds)
  done (took 23.768757088 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.254432206 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.253715255 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.25678281 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.254005212 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.253241971 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.256959579 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254503736 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.256317469 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.256316484 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.254102188 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.258081609 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256940117 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.257198169 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254787084 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257451836 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.25455259 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.256417169 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254757887 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.257327123 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.254414421 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.254933744 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.256257191 seconds)
  done (took 28.80108852 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25727935 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.258188448 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.255274177 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.255470931 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.254646792 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.257187082 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.258122629 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.255157761 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.258515784 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.258010245 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.255624974 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.257725004 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.256723151 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.256467558 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.256175363 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.256323654 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.259336715 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.257010701 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.258087603 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.255013335 seconds)
  done (took 26.314231888 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.259309051 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.259608911 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.259368861 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.259932401 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260673869 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.261214963 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258896306 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.259439502 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.259838819 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.2607736 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.260178363 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.26036018 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260646763 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.260666747 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.260327715 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261285148 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261825067 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.260735829 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.260544961 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259823241 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.262932249 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.261336829 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.261146887 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.260536153 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.26106381 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.261151141 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261685122 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.26193642 seconds)
  done (took 36.476693156 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261006522 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.260893779 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.258604902 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.259485567 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.258594938 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.259499438 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.259910734 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.259255006 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.260671058 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.259014673 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.262067096 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.262011489 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.261929862 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.260991959 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.262137134 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.262669042 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262095157 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.260546825 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.259810518 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259190188 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.261986372 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262304763 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.263028546 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.259266376 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259413201 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.262221421 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260482753 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.260921495 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.26299956 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.259786072 seconds)
  done (took 39.005153315 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.281968577 seconds)
    (2/2) benchmarking "in"...
    done (took 1.281615041 seconds)
  done (took 3.74676403 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.260715762 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.263211337 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.264024547 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.260429708 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.260141752 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.263013565 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.263989317 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260447586 seconds)
  done (took 11.279611778 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.263369948 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.262945377 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.262531711 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.263891693 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.264287292 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.26396097 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271040612 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.285456687 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.264666845 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.266924634 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.271021493 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.271223521 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.267413462 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264667235 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.26561302 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266530549 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.264261196 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.264153209 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.264649046 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.264342526 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265129007 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26585921 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266515846 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.262954701 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.265827775 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.275750388 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.288971721 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.26495022 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265030575 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.269915369 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.265422436 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.263029962 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.266117886 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.266927225 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.267353543 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.266491517 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275918281 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.285955906 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.272553046 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285598593 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.267461999 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.264670067 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.26790459 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.267904049 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.268458123 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.267510127 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.267212687 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.264647833 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.266724535 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.27023293 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.272591547 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.266777123 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.264274976 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.268535108 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.268524752 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272669514 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.287409279 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.271645879 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.277834203 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.278595867 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.300252083 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.293148862 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.269123382 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.267901381 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279747528 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.291512024 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274566021 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.286226453 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.265417914 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.268350184 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.275098057 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.301290921 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.29393155 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.268402833 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.268272358 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.268371944 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268923878 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268283342 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.275897557 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.29052222 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.268638237 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269890386 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279915936 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.290968484 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.268665513 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.270083509 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.269447379 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.269665392 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.27062179 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279345551 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.288219703 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.27110902 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.269351342 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.269235436 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.272311232 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.269415823 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.270517481 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.271223817 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.267666332 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.270969796 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.269853524 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274835425 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.279604815 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270742235 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270971145 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.277502723 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.292209182 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270131973 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.276751381 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.271395979 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.270660039 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.273558689 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.278658988 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.268365755 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275378725 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.280133891 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.271371937 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.273359181 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.271599942 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.271929403 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282833665 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.297950357 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.272017413 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.271916078 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.276178039 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.283637518 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.272087058 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.274489575 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.272918766 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.268809807 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.269951496 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.274065737 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.272188234 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.27289497 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.271090814 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.273246717 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.271206682 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.272002365 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.271712443 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.274534803 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.274316504 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.27323106 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.273976102 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.274052178 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.27377649 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.27392981 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.279508273 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.293340224 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.274891328 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.274254856 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.271866326 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.273321503 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.273779767 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.272500022 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.273598071 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.273893831 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.274309078 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.273204361 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274865604 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.27455136 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273631754 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.27504657 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.279043346 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.273902253 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.278303653 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.273775923 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.272045101 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.274182948 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.274974064 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.273490144 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.274905202 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.273646206 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.279783502 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.282350609 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.274778081 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.275288006 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.277327554 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274748872 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275436959 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.275310307 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.280051852 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.284346409 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.275526686 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.281978243 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.295179672 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27588102 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.277065907 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.276233019 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.275016936 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.275722918 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.279256332 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.283676291 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.289080926 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.302326944 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.278115027 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.279920211 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.277020207 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.280553923 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.281621299 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.276257903 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.277081103 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276175464 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276718582 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276862263 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.279761811 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.277227586 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.276671981 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.277126196 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.277908765 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.276968214 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.2784336 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.27771295 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.278121872 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.274632179 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277681753 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277464356 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.277032475 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.275229054 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.275544544 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.277671762 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.278287132 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.277211525 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.284772951 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.275496916 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279616042 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.279384128 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.27828252 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.27762032 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.279217437 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.279955087 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.278209665 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.285330416 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.29969002 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.279371869 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.284315497 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.299069963 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.279059185 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.281156383 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.279315647 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.277544208 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.282016754 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.287443376 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.279356994 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.279579026 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.27941964 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.280066108 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.281432619 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.286059707 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.297988686 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.278814859 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.281100065 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.282438762 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.277537339 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.280854802 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.281335677 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.281022477 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.28255407 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.28156971 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.280223817 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.281292924 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.280611282 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.281701295 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.281749453 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283904386 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.288520588 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.286583057 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.28054193 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.283478384 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.282768991 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.286447286 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.282015673 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.280706147 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.281795078 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.29362787 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.307558296 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.289086664 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.303102037 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.282822954 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.287195781 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.30414951 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.285394153 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.282601386 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.282615654 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.28259949 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.282022584 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.279584138 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282193892 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.282482163 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.283315455 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.284220939 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.287089257 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.283780154 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.282162757 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.28242491 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.283056285 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.283418282 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.283226885 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.283932333 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.285616122 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.286125609 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.282635752 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.283503681 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.290650793 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.303494436 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.285057748 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.283222159 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.283356875 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.283221737 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.285710438 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.283756436 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.28739606 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.29161768 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.288167412 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.293027581 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.286625649 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.294990192 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.284947318 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.287999382 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.292369496 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.2850554 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.284456691 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.284552385 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.284830242 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.291770281 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.304459257 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.286600382 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.289084477 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.285716654 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.285480847 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.286599344 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.285155114 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.286472426 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.284933611 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.294456325 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.306184207 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.291302338 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.287244524 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.283335773 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.285090498 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.287268267 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.286011994 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.28918385 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.285845963 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.286572826 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.287161326 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.287516545 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.286480299 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.286064004 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.288566458 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.283665781 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.286981016 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.294484251 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.308687268 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.291919883 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.288154744 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.294927331 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.309305106 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.294330974 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.308248703 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.287402602 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.287855145 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.287453379 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.290066769 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.288088681 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.288729809 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.287294051 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.289055379 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.293380023 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.286978193 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.291459334 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.288295093 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.288337867 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.287906659 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.299119406 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.312285774 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.290123643 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.293351314 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.285533349 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.29038812 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.293228916 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.288412889 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.287410567 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.29235172 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.299409644 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.29787122 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.289014105 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.289308933 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.288882615 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.289090668 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.290198749 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.288895688 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.289128266 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.288892103 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.291519416 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.289582824 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.292659984 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.289130728 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.28956733 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.291991081 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.290920409 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.299539057 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.310921713 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.290699454 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.289536727 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.291421889 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.289309944 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.290519899 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.290716729 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.289881739 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.290053614 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.291404159 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.297155742 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.296978654 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.291683378 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.289668296 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.29068282 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.291105029 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.292288131 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.292042381 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.291041396 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.290647339 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.292108331 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.291164612 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.293153005 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.291334524 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.29245865 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.292783998 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.292600136 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.294003662 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.299467596 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.292085844 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.2898917 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.291999498 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.292321782 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.292006009 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.292636311 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.300545292 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.317585659 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.303656038 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.301553336 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.296331686 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.293167602 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.295995634 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.301493767 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.292652251 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.292904887 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.292414039 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.29409754 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.293457415 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.296720297 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.293759598 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.30013641 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.315529096 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.29389997 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.30096097 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.312971489 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.293408695 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.293684143 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.298242381 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.294205192 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.291550266 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.294341331 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.293213253 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.300786491 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.314711764 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.294019773 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.295060208 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.294654117 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.296600879 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.297878847 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.294771114 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.294519607 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.291042437 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.294990339 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.294999903 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.29569078 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.292396417 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.294988815 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.294903941 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.298177504 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.303883392 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.294015693 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296497763 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.295730336 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.296621588 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.295817217 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.295812607 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.293826837 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.293721258 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.294873049 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.295856024 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.296695276 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.297594797 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.29618397 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.297565001 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.298343446 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.295490665 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.299612311 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.307675699 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.305702755 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.294852306 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.296103533 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.296380301 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.29903309 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.296989026 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.29685553 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.29848659 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.29884811 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.29757831 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.297077865 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.297118857 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.29987155 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.314797011 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.317939364 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.298012932 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.298004253 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.29934144 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.297945889 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.294729952 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.297719424 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.300433867 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.301134817 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.305890131 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.298366187 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.30373409 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.317490494 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.299570567 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.303042041 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.301146581 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.305428114 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.300843236 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.298121721 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.297662604 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.302240598 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.315574338 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.297653837 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.310135541 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.329323472 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.320170874 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.298894257 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.298926327 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.298277056 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.299040469 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.300893271 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.298124095 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.29988716 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.29981516 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.300080238 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.300144326 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.305594805 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.299869759 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.30084941 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.299627229 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.299335395 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.301368232 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.297751486 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.300383553 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.301227243 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.30060825 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.300154959 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.300260468 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.300066468 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.314038691 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.32998125 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.301236197 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.301421573 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.297969887 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.305184831 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.303087268 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.311392627 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.309334772 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.300209342 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.300698048 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.302453873 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.30111507 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.300986204 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.301630458 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.300898811 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.301815937 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.29950722 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.313725352 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.328787149 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.305895108 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.3006439 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.302286387 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.301628193 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.302053304 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.302545871 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.301122322 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.302609819 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.304466213 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.306614694 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.302341473 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.301809555 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.304940587 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.309835089 seconds)
  done (took 767.87843952 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.299959391 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299987307 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300069591 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.300890404 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300506831 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.300645513 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300475601 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.299985408 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.300870841 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.300661755 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.300190081 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.300405868 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.301094331 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.301380873 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.299704685 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.300004218 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.301542055 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.301443023 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.301141637 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302643288 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.302268629 seconds)
  done (took 28.536216336 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.304403246 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.3024581 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.302758087 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.304958058 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.301443253 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.304333783 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.302719706 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304824585 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.305364064 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302643582 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.305321271 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305161427 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.302048308 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.301596963 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302640818 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.304547299 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.304898293 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.303678533 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.305631111 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.303058223 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.305038901 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.30347506 seconds)
  done (took 29.905199628 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.305527093 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.305537521 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.304980905 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.303144989 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.307130384 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.30293341 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.305407857 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.305798792 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.306554825 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.307062574 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.306171007 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.306804443 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.314525091 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.312406778 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.309221723 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.308479811 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.451101151 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.307173614 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.306401821 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.306675435 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.303601113 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.312444823 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.325900088 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.304790495 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.304501205 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.308499929 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.306646759 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.308580505 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.306034495 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.308348176 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.311268642 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.307288496 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.307314453 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.309705683 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.307311395 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.309088442 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.312772062 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.307393113 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.305895104 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.307120787 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.318422946 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.327863246 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.308054167 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.314926073 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.330491381 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.309236185 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.313173119 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.317124925 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.306009192 seconds)
  done (took 65.527368025 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.307959949 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.308910635 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.306578745 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.309284562 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.308549424 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.308859273 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.309220874 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.309093889 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.306269707 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.30626048 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.31034125 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.306858337 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.307169063 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.308769409 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.309597486 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.306481125 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.306731784 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.307390252 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.306394242 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.307123776 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.306588761 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.31075598 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.310842783 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.307832781 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.309925852 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.306665476 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.306423361 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.310063699 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.308613939 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.308505637 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.310766484 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.310328165 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.311564907 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.309095887 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.308074782 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.311232179 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.310851334 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.308193111 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.310772156 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.309817077 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.310381221 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.311538804 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.312584418 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.311525845 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.310030265 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.310218726 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.309928261 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.308720128 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.310346882 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.312641732 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.31200115 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.310499436 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.311869317 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.309957302 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.312591587 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.313357376 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.309135186 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.309616987 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.312814077 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.310773287 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.310671255 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.313144098 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.311023524 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.313009788 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.312836835 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.311395174 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.310858439 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.313039289 seconds)
  done (took 90.28913357 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.312623562 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.312323679 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.312957184 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.31219999 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.312846725 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.313525646 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.313146859 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.312866946 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.312807249 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.312353664 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.312193667 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.312538383 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.312834368 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.31388864 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.313370956 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.313203382 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.313248843 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.313621122 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.313388982 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.313631927 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.313816384 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.312869318 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.313287121 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.313335005 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.313767496 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.314008551 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.314273674 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.313795018 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.314369963 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.313963508 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.314028144 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.314399554 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.315206463 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.313771198 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.315212606 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.314167614 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.31322386 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315508252 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.31402338 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.314901641 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.314039682 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.314340268 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.313687868 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.315397563 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.314559652 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.31460365 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.313976332 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.315540869 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.315269536 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.314577809 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.315373045 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.314953983 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.315387549 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.315662911 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.316920121 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.316705057 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315044616 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.316092254 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.315488362 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.315077871 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.316561781 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.317647239 seconds)
  done (took 82.711028336 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.316739411 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.316722752 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.313405048 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.314894301 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.316953851 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.31481607 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.31791519 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.317670415 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.318271946 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.317185135 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317378039 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.314905103 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314613014 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317661616 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.314804689 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315681788 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.314951526 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.314543073 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.318198441 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.315448023 seconds)
  done (took 27.556790036 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.315849356 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.317116155 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.316152994 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.316028876 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.319685508 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.315754262 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.31860653 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.318686953 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.315543455 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318379013 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.318859486 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.319195011 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315628812 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.316370245 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.318605863 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.315813432 seconds)
  done (took 22.310641371 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.315609138 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.319842145 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.317883199 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.318349826 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.315832371 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.315715333 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.318441572 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.317551107 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.317411729 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.320201163 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.319708798 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.320123095 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.3205507 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.318600855 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.317985945 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.320366297 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.319256879 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.317768867 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.320780899 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.319994314 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.31926301 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.317726556 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.320584901 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.321004803 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.31807492 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.319445162 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.319629429 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.319626372 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.319397778 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.321373059 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.319244809 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.31806195 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.319827655 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.318407875 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.321134977 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.319457588 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.321681031 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.3219893 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.321548861 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.321591876 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.321659502 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.318374797 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.322060951 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.321705939 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.320184658 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.321625605 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.319055456 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.320074204 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.319814802 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.319224427 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.3217762 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.321344427 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.322302067 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.322443843 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.321260923 seconds)
  done (took 73.819706188 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.322073129 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.322226235 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.318986065 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.32216233 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.322674201 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.319449907 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.322433768 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.322101691 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.320959661 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.323880714 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.321333487 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.32427438 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.319653582 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.322641198 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.321809562 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.322644394 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.320173791 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.320987353 seconds)
  done (took 25.028852697 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.322000699 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.321360187 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.324298706 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.320242685 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.320791877 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.32448789 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.320348061 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.32338106 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323700539 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.321964982 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321722059 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.324959057 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.32292538 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.324260449 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.322421497 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321107028 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.325663683 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.323975481 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.322082871 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.321908414 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.325256777 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.325424431 seconds)
  done (took 30.343282525 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.323410685 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.324219065 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.324366805 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.340557249 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.343775399 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.345951057 seconds)
  done (took 9.243012365 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332050529 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325057944 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.323241501 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325492589 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325146916 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322208546 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32297589 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32246666 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325350273 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323650836 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322534073 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326549301 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325735206 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32231206 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325500031 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325807501 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323262671 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323771521 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324145929 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326365379 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324552112 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325827664 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323928678 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323694827 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324275203 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324480324 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326199409 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32411211 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32429328 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326922641 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326726229 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324004036 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326855415 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325151453 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32783376 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326594539 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325081751 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32742936 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327056148 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325488892 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.326877431 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328541033 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328603067 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325838199 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328048137 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326395649 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325911225 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325271367 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326196025 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328784817 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326866247 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325193048 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328666641 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328891667 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327716111 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327998784 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326576735 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325338416 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328149447 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32657217 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3263473 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328804026 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326353997 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326943119 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329127687 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327909783 seconds)
  done (took 88.777488909 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327995436 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.327754161 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327611714 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32736121 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351463856 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325611065 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324953323 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324257432 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326148567 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325984006 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328794748 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325249272 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325029316 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324022195 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324235632 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32539539 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325643437 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325077457 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326298674 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328461747 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325504762 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326601996 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32543482 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32551448 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326811529 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328621278 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32477506 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326292613 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325778377 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325810582 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328048905 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32626168 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326624109 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.326868723 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326001019 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326392217 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326138417 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327386621 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326328554 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329605054 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326956278 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328851038 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327718753 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328435666 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326964709 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327147046 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32755982 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326990508 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327307851 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328086405 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328703299 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32890888 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32877391 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32751638 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329008136 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328295879 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327488974 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330480994 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328442855 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331553781 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327497112 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328553444 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331019201 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328206579 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328167848 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329478674 seconds)
  done (took 88.863510297 seconds)
done (took 1791.024854603 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.423183823 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.397276257 seconds)
  done (took 14.06670807 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.495039749 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.448596799 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.330066568 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.32936979 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.330361507 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.347772158 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.353027724 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.330239506 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.329558136 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.330313489 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.330108214 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.518040543 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.330172822 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.330136218 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.330394059 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.426388199 seconds)
  done (took 43.144566154 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.359910855 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.336350996 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.456472349 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.355298209 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.360435846 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.534548746 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.391871564 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.334997973 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.519729999 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.380941656 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.018593523 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.360768843 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.335533807 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.532516891 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.354289752 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.534411993 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.596723624 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.023838488 seconds)
  done (took 31.035584401 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.824907643 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.387283748 seconds)
  done (took 9.460470771 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.343996526 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.345942071 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.368477412 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.362227265 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.37716809 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.348270734 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.390436468 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.367301014 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.327067692 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.412341559 seconds)
  done (took 64.905962882 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.357071912 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.336704426 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.33770093 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.33500456 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.32741389 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.347175744 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.334373223 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.333434151 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.365848973 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.470629409 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.337366262 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.344923553 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.357868497 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.33735611 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.335860322 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.373586638 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.495593995 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.335820297 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.334575445 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.34407344 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.338417801 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.429822688 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.380250205 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.335551413 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.47256238 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.371433908 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.338928641 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.344958363 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.520180853 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.336543497 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.337204703 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.338597859 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.339349027 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.958014268 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.831538022 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.346278728 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.363722332 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.346286202 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.33463234 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.511815863 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.339999396 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.345206713 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.330191039 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.84587332 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.469301724 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.460710562 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.683781018 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.357283667 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.339914009 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.400898213 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.338843153 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.340803932 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.370714376 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.11682961 seconds)
  done (took 112.710201084 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.381228852 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.728526823 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.501482653 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.351250084 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.199875847 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.056520102 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.349277537 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.646172042 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.386292996 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.332591383 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.622796142 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.869174387 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.350457373 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.382553192 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.828961191 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.372349544 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.331782893 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.09534154 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.350079196 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.335422207 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.849395251 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.333504591 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.352193693 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.595777758 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.372057356 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.812848585 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.866355271 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.879987788 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.351443972 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.331932436 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.829950197 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.355082509 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.376755872 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.333299827 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.606637893 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.716770867 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.709396482 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.357846558 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.366351342 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.335020058 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.367393536 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.810355971 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.717902957 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.351917798 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.352353134 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.831127843 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.351497995 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.343868494 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.336766108 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.544856296 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.184789238 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.33760286 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.854752945 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.335454421 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.7210913 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.429787763 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.353340606 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.84454481 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.357174271 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.522689483 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.396915891 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.335336958 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.339495124 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.335829101 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.336437003 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.708700365 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.709482763 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.342199846 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.706517202 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.84188947 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.364275033 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.887327843 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.265523481 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.339257737 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.385097042 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.340602346 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.920977999 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.85420591 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.373089351 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.335751827 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.694918936 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.355510995 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.629310248 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.353046866 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.353017592 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861181733 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.340376188 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.364840201 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.337414053 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.362062235 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.090707222 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.341069692 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.635293806 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.398276663 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.337020379 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.337027911 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.356060502 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.338247742 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.338095002 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.341050156 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.889701774 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.357716379 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.322469249 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.357694139 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.342030122 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.338164543 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.338863713 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.340889507 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.56534759 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.920892941 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.360058333 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.338833747 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.336882582 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.361328696 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.602657095 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.342608395 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.671883846 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.358967868 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.338915489 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.338204641 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.116525068 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.398090118 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.338860514 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.344700239 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.246752663 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.557915202 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.359247974 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.33948208 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.341065048 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.358116627 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.669256536 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.362037802 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.420368481 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.344432976 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.07505964 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.376665699 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.349263572 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.837771037 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.343939508 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.339658328 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.344261114 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.34135069 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.630800506 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.616982099 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.576972673 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.34280586 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.358982495 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.066951173 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.366417784 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.488915618 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.360260333 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.334847849 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.541946387 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.516732939 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.342306395 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.005424468 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.345536654 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.563452054 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.340823587 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.644135684 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.860708505 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.358570613 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.347034286 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.078468616 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.057186467 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.019005748 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.342181606 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.629927403 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.321542884 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.823565428 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.343413131 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.342552687 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.933724345 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.342025219 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.34636731 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.342756893 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.342595144 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.47758912 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.516174707 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.536166141 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.347530395 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.820556787 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.402175852 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.343265263 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.350672541 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.343663874 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.68947619 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.419463358 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.342753473 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.386204953 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.343452771 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.346303397 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.843903084 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.299887712 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.345104878 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.498006967 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.002672399 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.361175297 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.344684358 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.080269991 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.563728042 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.915074696 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.384695419 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.678333086 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.369739215 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.383121857 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.121166673 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.438415561 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.843755606 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.363527752 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.345841519 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.968032678 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.362734754 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.419917732 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.34565379 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.345692599 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.905732386 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.36254815 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.34549772 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.677683965 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.365576297 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.601785806 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.345103425 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.360312083 seconds)
  done (took 1115.258514208 seconds)
done (took 1391.827675532 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.345871265 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.344677235 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.332215827 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.355211171 seconds)
  done (took 26.644131529 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.3567181 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.354849774 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.355981742 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.354583694 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.357438727 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.355584874 seconds)
  done (took 9.406951472 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.539158358 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.348562206 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.352151448 seconds)
  done (took 19.510033055 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.574387505 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.75236072 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.738346593 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.782474988 seconds)
  done (took 11.120559082 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.355969181 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.357144143 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.35554425 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.357750862 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.359076922 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.360809772 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.358040046 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.358159294 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.361078769 seconds)
  done (took 13.493975294 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.627753419 seconds)
done (took 87.068410233 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.344447614 seconds)
    (2/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.473815746 seconds)
    (3/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.188677377 seconds)
    (4/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.34220141 seconds)
    (5/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.945589527 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.032534551 seconds)
    (7/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.368375682 seconds)
    (8/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.44807843 seconds)
    (9/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.885652984 seconds)
    (10/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.331852141 seconds)
    (11/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.461739176 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.355136047 seconds)
    (13/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.351534028 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.639911742 seconds)
    (15/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.339102766 seconds)
    (16/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.041629937 seconds)
    (17/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.332995314 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.032091237 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.39216458 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.336487841 seconds)
    (21/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.331497339 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.370574187 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.376743528 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.46483727 seconds)
    (25/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.395417147 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.93840658 seconds)
    (27/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.451942638 seconds)
    (28/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.436156925 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.023939399 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.391298166 seconds)
    (31/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.378178722 seconds)
    (32/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.540131693 seconds)
    (33/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.073235512 seconds)
    (34/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.333047609 seconds)
    (35/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.817895028 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.287839709 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.421133814 seconds)
    (38/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.433971659 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.718567571 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.404230246 seconds)
    (41/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.039144325 seconds)
    (42/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.87336086 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.456452597 seconds)
    (44/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.334033398 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.338178171 seconds)
    (46/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.367175871 seconds)
    (47/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.598400962 seconds)
    (48/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.383649886 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.333609863 seconds)
    (50/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.765412655 seconds)
    (51/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.379207514 seconds)
    (52/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.333763305 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.271165609 seconds)
    (54/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.3799452 seconds)
    (55/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.334282129 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.465103238 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.610463833 seconds)
    (58/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.760058572 seconds)
    (59/309) benchmarking ("sort", BigInt, false)...
    done (took 6.354243876 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.081148028 seconds)
    (61/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.347776183 seconds)
    (62/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.334043659 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.355939565 seconds)
    (64/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.349572123 seconds)
    (65/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.417604237 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.410708012 seconds)
    (67/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.363688604 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.353246685 seconds)
    (69/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.357785225 seconds)
    (70/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.303026968 seconds)
    (71/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.335692059 seconds)
    (72/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.24778445 seconds)
    (73/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.211933576 seconds)
    (74/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.073340581 seconds)
    (75/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.337576685 seconds)
    (76/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.465177858 seconds)
    (77/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.366285217 seconds)
    (78/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.363517771 seconds)
    (79/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.357634499 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.337177556 seconds)
    (81/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.450001192 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.057419386 seconds)
    (83/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.729620799 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.609657373 seconds)
    (85/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.392781554 seconds)
    (86/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.337056818 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.349435247 seconds)
    (88/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.440475305 seconds)
    (89/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.174014368 seconds)
    (90/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.197138578 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.355310788 seconds)
    (92/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.417906321 seconds)
    (93/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.937207289 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.446346577 seconds)
    (95/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.954037309 seconds)
    (96/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.428929402 seconds)
    (97/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.373491181 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.423096164 seconds)
    (99/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.811470697 seconds)
    (100/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.944859569 seconds)
    (101/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.398260569 seconds)
    (102/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.366117325 seconds)
    (103/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.383583406 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.157671811 seconds)
    (105/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.406082065 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.458984058 seconds)
    (107/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.355260484 seconds)
    (108/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.390000608 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.228335882 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.598774116 seconds)
    (111/309) benchmarking ("sort", Int8, false)...
    done (took 4.453879431 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.357573597 seconds)
    (113/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.642825323 seconds)
    (114/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.383984106 seconds)
    (115/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.440950843 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.357939941 seconds)
    (117/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.3567095 seconds)
    (118/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.57350048 seconds)
    (119/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.440831929 seconds)
    (120/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.064279846 seconds)
    (121/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.374151434 seconds)
    (122/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.480108622 seconds)
    (123/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.385042495 seconds)
    (124/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.505070925 seconds)
    (125/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.349361311 seconds)
    (126/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.795151964 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.597460276 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 1.899128207 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.399587029 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.616018879 seconds)
    (131/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.359021769 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.955035351 seconds)
    (133/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.794647238 seconds)
    (134/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.646138632 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.80754997 seconds)
    (136/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.699332422 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.207547054 seconds)
    (138/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.092080611 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.638566184 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.359624555 seconds)
    (141/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.384471423 seconds)
    (142/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.338995826 seconds)
    (143/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.461680762 seconds)
    (144/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.053558118 seconds)
    (145/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.621651796 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.462971096 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.359394836 seconds)
    (148/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.819210347 seconds)
    (149/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.385686819 seconds)
    (150/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.387562628 seconds)
    (151/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.404153653 seconds)
    (152/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.906755623 seconds)
    (153/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.757095295 seconds)
    (154/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.362352161 seconds)
    (155/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.436179832 seconds)
    (156/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.193984719 seconds)
    (157/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.468790171 seconds)
    (158/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.467209398 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.16423927 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.212546141 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.386509461 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.454071763 seconds)
    (163/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.381684947 seconds)
    (164/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.538317688 seconds)
    (165/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.405204369 seconds)
    (166/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.372428401 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.353270537 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.383804051 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.728823131 seconds)
    (170/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.358284416 seconds)
    (171/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.357914214 seconds)
    (172/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.389126189 seconds)
    (173/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.648349558 seconds)
    (174/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.109246031 seconds)
    (175/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.386486743 seconds)
    (176/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.260023513 seconds)
    (177/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.66062627 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.612987077 seconds)
    (179/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.448040567 seconds)
    (180/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.095346474 seconds)
    (181/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.361048534 seconds)
    (182/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.36372983 seconds)
    (183/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.301138717 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.343279228 seconds)
    (185/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.446742816 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.430949269 seconds)
    (187/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.344374236 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.342561219 seconds)
    (189/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.380604435 seconds)
    (190/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.765247055 seconds)
    (191/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.73892686 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.389384751 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.366199347 seconds)
    (194/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.440741002 seconds)
    (195/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.407421338 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.425377397 seconds)
    (197/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.780513356 seconds)
    (198/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.813615633 seconds)
    (199/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.343822516 seconds)
    (200/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.992877735 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.302904436 seconds)
    (202/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.097788508 seconds)
    (203/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.883086309 seconds)
    (204/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.362518298 seconds)
    (205/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.360339156 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.422464693 seconds)
    (207/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.446285964 seconds)
    (208/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.180123955 seconds)
    (209/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.38936763 seconds)
    (210/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.35686109 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.460616511 seconds)
    (212/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.348906159 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.807497197 seconds)
    (214/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.465962768 seconds)
    (215/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.915496213 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.273207709 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.364605111 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.016573916 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.574690743 seconds)
    (220/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.202533792 seconds)
    (221/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.010022738 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.38256958 seconds)
    (223/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.390837021 seconds)
    (224/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.345481812 seconds)
    (225/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.409783752 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.382835071 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.386391892 seconds)
    (228/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.247794314 seconds)
    (229/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.344641599 seconds)
    (230/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.358525217 seconds)
    (231/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.513775555 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.406419855 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.369193157 seconds)
    (234/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.345837965 seconds)
    (235/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.555747436 seconds)
    (236/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.958470844 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.793544612 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.38237482 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.622527992 seconds)
    (240/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.370818701 seconds)
    (241/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.844469137 seconds)
    (242/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.431465776 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.468531895 seconds)
    (244/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.347210441 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.084644438 seconds)
    (246/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.365917152 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.141168096 seconds)
    (248/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.490422781 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.347413212 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.84340183 seconds)
    (251/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.17229356 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.878781248 seconds)
    (253/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.740102701 seconds)
    (254/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.774984622 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.610673338 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.377775061 seconds)
    (257/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.384985759 seconds)
    (258/309) benchmarking ("sort", Float32, false)...
    done (took 5.402001785 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.412798956 seconds)
    (260/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.501509544 seconds)
    (261/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.377869712 seconds)
    (262/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.449975373 seconds)
    (263/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.702052486 seconds)
    (264/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.36317524 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.770474914 seconds)
    (266/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.491741722 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.783016111 seconds)
    (268/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.919834531 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.367968162 seconds)
    (270/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.364916424 seconds)
    (271/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.386879001 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.962995877 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.368112437 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.196060573 seconds)
    (275/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.393922991 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.992211688 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.965980435 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.394332059 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.382538454 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.4528715 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.413393272 seconds)
    (282/309) benchmarking ("sort", Float64, false)...
    done (took 5.730661505 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.451851717 seconds)
    (284/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.492564476 seconds)
    (285/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.558890704 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.498918877 seconds)
    (287/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.379488975 seconds)
    (288/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.114040583 seconds)
    (289/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.707813898 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.374631734 seconds)
    (291/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.336230496 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.162628548 seconds)
    (293/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.478345574 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.390483564 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.467379866 seconds)
    (296/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.980685266 seconds)
    (297/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.658666441 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.412259916 seconds)
    (299/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.388707332 seconds)
    (300/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.349280414 seconds)
    (301/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.9826617 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.132509836 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.79957519 seconds)
    (304/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.371689911 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.246695351 seconds)
    (306/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.223928345 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.596587838 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.411615924 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.57652325 seconds)
  done (took 1056.246473328 seconds)
done (took 1057.518663965 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.40577371 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.401160457 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.384034446 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.404556648 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.495734118 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.40854553 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.394190006 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.38632913 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.431931933 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.432982177 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.383100448 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.406913442 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.385513475 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.383000499 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.383361173 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.398053565 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.511983462 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.384784771 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.40225238 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.394466532 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.399641036 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.383144352 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.433225698 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.40738926 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.387402578 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.387054502 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.386276913 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.403655372 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.496176115 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.389026728 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.388925733 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.395834089 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.511412115 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.384562017 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.379928625 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.405347693 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.396508197 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.3955667 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.388707598 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.417951307 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.959912636 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.403424721 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.387386878 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.386825416 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.38690832 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.392138151 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.387066978 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.393364789 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.401040915 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.402638996 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.948024055 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.421161133 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.390102133 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.388662675 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.398740412 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.387896906 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.391596884 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.404657863 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.406627608 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.405396941 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.501615609 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.392443923 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.390417003 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.404357496 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.394541718 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.986211364 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.402815462 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.392027591 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.958425834 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.412868631 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.98486153 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.41657081 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.389468375 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.402288224 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.420686499 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.513350465 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.382558339 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.387520432 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.395933071 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.38780143 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.399104687 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.402804025 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.393388722 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.389480156 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.40409357 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.413542779 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.398823724 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.390500886 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.399312689 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.408603613 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.395489848 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.400195837 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.393579428 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.386395185 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.398260143 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.393910369 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.392323958 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.393639328 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.394979087 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.40144243 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.960623173 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.428602285 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.386544911 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.387341247 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.389758427 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.40372681 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.960814711 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.40983219 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.411497342 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.438979197 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.393491497 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.503744615 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.393589986 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.409146624 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.401275077 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.393837461 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.386125438 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.505250578 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.952666297 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.424465428 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.395150924 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.390402858 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.410057713 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.393417974 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.389176164 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.520697717 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.392367744 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.406710579 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.51284953 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.40368105 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.423824102 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.390466024 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.395272238 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.414935846 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.409163454 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.42335478 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.394511369 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.410835602 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.409095042 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.3897488 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.403769196 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.403815841 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.392952585 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.398914015 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.386985738 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.416351556 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.407372734 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.407350774 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.413897023 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.513192025 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.390966899 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.509706701 seconds)
done (took 235.784437177 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.450192304 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.38041602 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.480906045 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.389732219 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.489521406 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.489205623 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.386369543 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.386446093 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.386496153 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.764460657 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.386488845 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.38745778 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.386762562 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.385381313 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.468922707 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.389062728 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.386055099 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.726195558 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.389809895 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.458992517 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.385207323 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.386669567 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.38808842 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.769885829 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.382076128 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.385388013 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.460626349 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.390182325 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.7354342 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.390222178 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.383775274 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.739543138 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.479155913 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.408432129 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.398718583 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.396333379 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.490855068 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.409103262 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.469691937 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.470652345 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.48184399 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.429252105 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.388600099 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.390866028 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.391459842 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.391980691 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.388133395 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.417297348 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.392126436 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.388364401 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.728202491 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.400692727 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.389195777 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.389212464 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.389241428 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.419380308 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.388622678 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.391270421 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.478545587 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.391897162 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.453773399 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.772377324 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.765595888 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.391394925 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.385384072 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.390377947 seconds)
  done (took 152.175711242 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.456927859 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.462938856 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.509915217 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.411727035 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.441335917 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.516268573 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.411342157 seconds)
  done (took 11.513645389 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.397475576 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.39447071 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.443184818 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.44231117 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.393007059 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.538908911 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.393362283 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.4037142 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.391591607 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.44536537 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.394435697 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.394518534 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.40117828 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.390607066 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.442021777 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.403489655 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.508309153 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.394023972 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.394079836 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.548595311 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.391352763 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.401073793 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.445308649 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.404900713 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.395805815 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.39880666 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.962945474 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.393704424 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.392355785 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.394689391 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.392525555 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.431920619 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.395565527 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.393710339 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.392924938 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.5098322 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.393701238 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.390972232 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.395074944 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.389780311 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.394920954 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.395338485 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.396825558 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.392567848 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.394587691 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.417395973 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.394974484 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.395557092 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.395796916 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.395656123 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.445371619 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.397455293 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.393461565 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.394011961 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.45044315 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.402660792 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.396223381 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.394368937 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.397267053 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.394356402 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.553110963 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.444087747 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.397007854 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.443954426 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.397230801 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.396970332 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.397371379 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.397630432 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.451974489 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.397934148 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.44533493 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.395215166 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.550915878 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.420705957 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.397547976 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.399944736 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.400531131 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.397842355 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.389606381 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.402532198 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.395908579 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.398502157 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.403675786 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.39514378 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.396006539 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.500372118 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.507524863 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.395813458 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.408870699 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.403850012 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.397146147 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.449527536 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.399217507 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.395600138 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.449374596 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.513772213 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.450886751 seconds)
  done (took 159.265956872 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.401695195 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.404940747 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.40068994 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.413442145 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.398072983 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.39924 seconds)
  done (took 9.726836341 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.400872922 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.401247196 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.400461127 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.400270011 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.399125835 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.401051255 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.399407311 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.401637932 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.40370605 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.399961959 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.402035399 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.400752193 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.401724092 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.39954945 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.400220346 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.399348748 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.400665874 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.398303719 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.401531887 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.400432783 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.495040038 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.401618648 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.400690607 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.403304323 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.407071621 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.401641218 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.409481838 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.400330986 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.402549097 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.407031912 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.422871798 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.401840283 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.404124165 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.409176632 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.405954051 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.404532469 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.406866062 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.402764995 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.399288744 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.401459363 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.402855635 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.401952793 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.402334509 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.403300537 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.403958473 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.408225997 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.407162277 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.409720206 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.403388702 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.403052857 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.403644405 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.402640869 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.403270684 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.403330238 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.406050644 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.426454133 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.408662411 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.403894522 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.403377344 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.405031339 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.404122608 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.403870597 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.404780726 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.406636217 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.410409632 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.404770637 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.407926298 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.408203765 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.40393194 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.40384894 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.404178002 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.401947945 seconds)
  done (took 103.488505482 seconds)
done (took 437.470003052 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.473030734 seconds)
  done (took 7.786454856 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.422453892 seconds)
  done (took 7.738486827 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.625721945 seconds)
  done (took 24.218887219 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.41442567 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.460874426 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.411713398 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.402351731 seconds)
  done (took 27.003163198 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.5355117 seconds)
  done (took 7.849587988 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.394712952 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.403949655 seconds)
  done (took 14.117480104 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.839342232 seconds)
  done (took 8.154418468 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.071968396 seconds)
  done (took 8.394355849 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.394443402 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.892068934 seconds)
  done (took 14.874860601 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.376949195 seconds)
  done (took 7.691042744 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.632420219 seconds)
  done (took 8.948719843 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.400516087 seconds)
  done (took 7.715453068 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.426488693 seconds)
  done (took 7.740306017 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.115600781 seconds)
  done (took 10.429915464 seconds)
done (took 163.976816597 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.396653646 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.404915629 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.403693018 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.403442366 seconds)
  done (took 26.922966053 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.438204333 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.437032504 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.439170903 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.448841616 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.441299514 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.438098853 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.430831706 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.431523706 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.448466544 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.441693903 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.439378451 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.441247368 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.438684306 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.431735831 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.441568902 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.440860872 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.44988294 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.439997452 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.431930598 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.441985617 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.405978592 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.450557123 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.441668498 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.407501783 seconds)
  done (took 35.816530918 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.928274475 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.4771846 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.558930712 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.458158331 seconds)
  done (took 7.736943384 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.458375991 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.461265912 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.47258192 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.51062393 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.548160834 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.468403385 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.436365047 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.428317912 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.413445517 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.460034609 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.535604495 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.475571336 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.547484396 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.406504421 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.629690625 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.406255393 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.406719361 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.460099865 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.510527912 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.52720707 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.407253037 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.459028035 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.465768488 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.476730203 seconds)
  done (took 36.688334146 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.406490833 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.414909865 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.407169944 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.404820328 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.415172778 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.40707407 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.408334672 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.409104887 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.408691833 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.413951583 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.406457563 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.41979045 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.406799969 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.407644326 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.4137134 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.408388443 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.413226975 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.407403683 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.407511886 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.412525439 seconds)
  done (took 29.519308353 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.401212534 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.255339216 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.75352492 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.658040204 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.401126644 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.408028752 seconds)
  done (took 28.195354692 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.487340882 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.645833052 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.408582748 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.817874653 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.909559405 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.427125096 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.410142495 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.671277736 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.035881119 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.036697101 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.478030974 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.483701252 seconds)
  done (took 21.134783267 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.409460263 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.402643946 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.416153812 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.418192295 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.46951953 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.430994907 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.416669779 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.403905453 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.476204293 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.491548418 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.431196181 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.471459895 seconds)
  done (took 38.55958242 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491328946 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.451976573 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.427894307 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418287554 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.131136039 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.616663709 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.454628125 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.877167969 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.409217552 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680385877 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403434046 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5154595 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.662073354 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418390156 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.406407889 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.479922615 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650738149 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91617175 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408058879 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.699149295 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430691661 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.422606946 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.782492029 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.437734386 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617660427 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.545745558 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.666774195 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.183997177 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.734820075 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418674158 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416655013 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405874744 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681763561 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118216111 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525417803 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416895942 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418774358 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.95622855 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.40357661 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.743892839 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410387443 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.408197339 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417294255 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406448438 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.341814057 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41869261 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864916437 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.415313536 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.119155371 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.406545494 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418927038 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501877802 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.413056913 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.978466553 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411352313 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.435877879 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.405420667 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433280784 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997971453 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.174491631 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422073513 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.342947534 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.418420197 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.711915787 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093250293 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.531442735 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.412850972 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.413141629 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343621427 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.711343648 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425969914 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557735481 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.432396655 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.058958797 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158103338 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.446645705 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.340385207 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98404315 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.426483687 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.344784986 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636698122 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.186930227 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349770672 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.358978988 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.345367589 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158577671 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418792656 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.859084532 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431235614 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.88538118 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.42264617 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429337647 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435485806 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.63362683 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.291256713 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409643143 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.417375995 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538807793 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432437479 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.869877779 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346465734 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.414729563 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668600997 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.622430712 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425445019 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.498494254 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651242883 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419680128 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.425319575 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.410739691 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.439380973 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.03975187 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.442032563 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.181903213 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429288662 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.189286257 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179886152 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414143643 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.512240918 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.427083749 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67739135 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.209554713 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.572653702 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47988868 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415820057 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.412269402 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.806590225 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.010551657 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.571112488 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.408516662 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412077641 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.440468295 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.413650107 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37431013 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.409576497 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424075098 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.191243524 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.637006356 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425660752 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688558434 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348001094 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560488938 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.422441389 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.636457441 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.723209247 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.432821673 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676245448 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413278127 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.414132973 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.426346491 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43295209 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516547271 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436089303 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.424414382 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.673203594 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.418569866 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.418795683 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.824502632 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.193979976 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421824243 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.420679952 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415257354 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067900693 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412197685 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.419065128 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30468089 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.429707873 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482598519 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.420693725 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.4252838 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.458692406 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452951012 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.420590377 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.420773449 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638792811 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.427244086 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.747965092 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495199325 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.629719469 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.049912163 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448959476 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.351860268 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.128885966 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.108964768 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417591916 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.618538658 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.416408678 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426995362 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.427367744 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.42798771 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.052751137 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439356914 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.759512433 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.42350991 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.4281384 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.423080496 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417561804 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.437341032 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.228683305 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421020454 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.446881032 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561388175 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.432420999 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.352354257 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.935444919 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.425117596 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.418624104 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.195745277 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453634344 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.75003944 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92205623 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680733185 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.430906733 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430936446 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.917237441 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.453785319 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.425060063 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425701142 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421868472 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.42637472 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446894807 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.429303966 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.811472337 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.782588679 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985182903 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200873016 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030459464 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.444934629 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.420774804 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.312999383 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.87483738 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354339848 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.074793765 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627477656 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.897265637 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.375693601 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637000349 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.727625954 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.284070102 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.430223823 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647524231 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422083251 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.430570476 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432276632 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.632253781 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455323047 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.423464771 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.350681333 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.93893804 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676907647 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421805907 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499834687 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87564761 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427229176 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.201013234 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.468259686 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.805559078 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.626642742 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.969244649 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.816014513 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.435020522 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.437482303 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915470842 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.425001878 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.94916473 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093798941 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.450390024 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.638310772 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362031608 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.433403935 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.433208598 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.418483726 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.933273551 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.419646874 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.679335278 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.433858229 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35522087 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.434285707 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000960387 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.298199451 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.428730961 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423221679 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203805941 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42643339 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.748743302 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.425559094 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.431103744 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444316554 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.3575808 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357256885 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.116647174 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.432619697 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400445769 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953263146 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.432795002 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426456192 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428764316 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274184351 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.683068622 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.437935895 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.062775279 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.669852045 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.439169985 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44749742 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.5251671 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434986295 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.404813141 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.317513979 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.660603283 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.445555132 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.650219716 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.481259424 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.325521032 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.494607605 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.635420145 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.316467369 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.424668006 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.706873366 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.155375566 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.435796511 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193593923 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471151691 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.426733169 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.455870225 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.430276757 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446328414 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518885913 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43550748 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.439312242 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.438021042 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.613275339 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427226369 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.42840553 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.441825276 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520798528 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.251004652 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.433118072 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.200181353 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070531901 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229016947 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.090031588 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459042076 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.428382152 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431794929 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362474501 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578436808 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.954985138 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700863385 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.558219178 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.432134449 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451359944 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428922579 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456052 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646930089 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702203241 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.404084823 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437333288 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.220490772 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.309298433 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.440885326 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.639853778 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964321339 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022809372 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545575941 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.431933586 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.892567944 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703059205 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.518973524 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428240055 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.018390322 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.449833813 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.814942997 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.455705299 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440978894 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577089594 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.439997792 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144660414 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.461016139 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.589131632 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.203647129 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.939589375 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.694609057 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.976645395 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.440933182 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073431272 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.217192004 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.698084555 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50071463 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.442343433 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.542801021 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577555836 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.441810017 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.325632829 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.431468169 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275344691 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.140902535 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.441218307 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078066146 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.713583668 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.428641366 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.441304192 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454741366 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.440959985 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.655488721 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175722881 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.656530246 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.442531633 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.440269538 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.001372376 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079910862 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463604531 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366188645 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.436151421 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.707980898 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.689574173 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45646951 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.887311613 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.14527432 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014736076 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.404902788 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455082101 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.448003661 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.209846052 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076515266 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.465829867 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970060559 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.09107525 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.448440898 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.714391044 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.439157153 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.433274036 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.71736092 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.43642984 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.449400889 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.45117302 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.076398433 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.307392279 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.450353905 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.857936355 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.378256253 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.65998272 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436141349 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372943606 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.435770682 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.626550482 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.435415061 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.564743798 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446496449 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.446330727 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439529115 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.189717568 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.720635517 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.440142186 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.429613039 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.419783063 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.444585736 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468019209 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.71728282 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439620097 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.109944983 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.789527336 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.693461581 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.446103678 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.423361349 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.440557428 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436364318 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.161375353 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.455379766 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.446148232 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035323593 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.452827839 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.453231075 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.44100976 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.653557939 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649094663 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.438865171 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.448598183 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436491662 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479075995 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.342954428 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.20507042 seconds)
  done (took 1693.81850345 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.473914603 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.448150155 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.467499757 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.551203301 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.480878266 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.494149535 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.517166522 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.557980748 seconds)
  done (took 53.342129698 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.440508373 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.5996767 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.469548285 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.447996364 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.453199713 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.43841041 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.957806988 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.469277488 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.44773173 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.450126707 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.44021772 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.446595222 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.146368595 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.449913485 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.43911884 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.421065122 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.446591126 seconds)
  done (took 67.32883492 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.447121505 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.983183616 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.481595196 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.441765817 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.009659115 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.474349174 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.88799087 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.485182001 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.475281946 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.480722022 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.09771118 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.464446499 seconds)
  done (took 82.082678888 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.448511841 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.449525905 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.448441271 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.449442183 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.448081367 seconds)
  done (took 8.598676801 seconds)
done (took 2131.0626776 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.722652417 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.223744289 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.167419536 seconds)
  done (took 5.746001765 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.58684642 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.636327772 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.776558546 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.779152075 seconds)
  done (took 8.130118872 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.720006303 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.81314458 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.63319691 seconds)
  done (took 6.518277681 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.033523678 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.455209224 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.486502685 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.437458977 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.445096812 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.450127795 seconds)
  done (took 20.687712453 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.443662268 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.447192831 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.444805765 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.447430875 seconds)
  done (took 7.142792405 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.419987898 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.131771205 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.422170412 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.443413353 seconds)
  done (took 18.771507719 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.190293394 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.20377457 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.190552707 seconds)
  done (took 7.939010282 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.449312577 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.289151738 seconds)
  done (took 10.091575192 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.741585145 seconds)
  done (took 3.095422661 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.577607701 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.773789288 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.590265847 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.474341262 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.624971446 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.900381505 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.352168973 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.869609585 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.450736389 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.91022828 seconds)
  done (took 30.87914202 seconds)
done (took 138.052525739 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.673996905 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.846488749 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.650692588 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.647737917 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.674803181 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.650013073 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.945113767 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.612415631 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.156174562 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.145992947 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.688936115 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.669248315 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.667482421 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.84646693 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.668188575 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.464612897 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.666436388 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.720112083 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.37861429 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.442951539 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.946095897 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.286672505 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.521555397 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.307838602 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.671893491 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.601913481 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.869450523 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.464748419 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.443814128 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.910368672 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.603334382 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.443668457 seconds)
  done (took 200.645181282 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.455545739 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.443825726 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.451630765 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.455333214 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.451508132 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.443554251 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.443567715 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.462530983 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.444565927 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.46274992 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.444253412 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.450411486 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.445081179 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.462344818 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.445592478 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.46467345 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.46561986 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.444396376 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.44526785 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.444608671 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.464975467 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.465573877 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.444912322 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.444102836 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.447978443 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.445554561 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.462496815 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.449653733 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.445256141 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.475032455 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.445994949 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.46336496 seconds)
  done (took 207.840711287 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.446677953 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.465404509 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.468011386 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.464058212 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.447127529 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.448135705 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.46636345 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.446416872 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.462664564 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.459274495 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.445529528 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.447431865 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.446754081 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.465543499 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.466103003 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.446707184 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.447663921 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.459721389 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.448060583 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.466145008 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.465350128 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.445780278 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.465287122 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.447742973 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.447350153 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.464934644 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.468214057 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.481935781 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.453369365 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.448662082 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.44737061 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.473371693 seconds)
  done (took 207.984799547 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.652428607 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.455726428 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.456938933 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.412372624 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.457547582 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.456302135 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.455689725 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.647965962 seconds)
  done (took 15.357909038 seconds)
done (took 633.183212586 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.899284295 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.592119131 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.667097447 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.47527586 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.306351968 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.496851415 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.477020557 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.661994507 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.421197957 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.671555783 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.779005884 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.496373984 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.931364299 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.475289851 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.746540638 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.581237234 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.382134593 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.513283568 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.81338701 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.075961527 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.753497664 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.011298462 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.710954136 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.416330959 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.951687861 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.011234584 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.273520695 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.374816345 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.497295732 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.822193603 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.22373867 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.545645927 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.547574694 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.545367586 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.602959678 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.583380425 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.507767457 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.545003699 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.690710032 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.77447356 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.065534733 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.230593554 seconds)
  done (took 98.513462142 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.442860117 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.442977319 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.441828465 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.443844495 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.444103846 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.441995701 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.441445823 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.442648506 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.44363611 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.442941371 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.442333383 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.443623866 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.441919233 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.443391004 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.442478971 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.44205899 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.44232914 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.446009624 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.4431702 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.444283001 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.445132633 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.442866082 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.443614981 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.442477145 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.442805526 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.443836175 seconds)
  done (took 38.888818433 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.462322489 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.726765169 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.904723083 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.470316646 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.461722494 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.467077166 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.549504529 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.466070031 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.465327905 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.465630418 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.643056894 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.466052225 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.499869583 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.939882079 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.464775837 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.464901491 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.463663186 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.462989025 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.734090726 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.473473639 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.574949626 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.46449333 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.549728091 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.473526581 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.489067914 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.464242724 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.469359426 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.990673155 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.485646042 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.643036868 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.390983562 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.557669592 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.940262824 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.938767824 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.376949665 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.475513359 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.464999752 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.64854285 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.466695622 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.464111404 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.552133479 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.465022288 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.916792252 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.102424177 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.485783821 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.465283383 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.013696225 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.668901266 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.74285141 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.473693163 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.94438565 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.468174112 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.468123955 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.466626517 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.743330961 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.472524819 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.465715631 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.02260024 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.493056891 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.554797729 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.467976098 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.46616888 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.739473002 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.46693861 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.728759704 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.467992638 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.475509515 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.487712119 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.918655073 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.469335037 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.129609728 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.485868379 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.467443546 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.644528848 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.728993953 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.051778088 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.491590083 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.747397553 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.9579216 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.572168512 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.472718662 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.983959412 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.57755774 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.47149131 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.472004271 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.470658888 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.468136828 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.521476671 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.552535099 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.054730119 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.138904923 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.043856057 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.57775771 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.485112723 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.470647765 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.028265058 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.492025036 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.468867978 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.914963801 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.125449448 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.489499234 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.479062317 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.134093132 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.489524066 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.557646304 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.474644693 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.927720344 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.470841433 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.521550137 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.470730187 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.476844044 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.494722741 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.560637302 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.472954447 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.471081492 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.097154075 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.675907123 seconds)
  done (took 192.760468462 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.463754418 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.482012607 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.464586029 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.463067184 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.463535162 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.471372633 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.463834861 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.465202014 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.469727606 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.464528792 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.464317155 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.464815025 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.465989288 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.493357024 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.475884972 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.471112441 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.081352733 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.465974154 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.464721288 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.463689677 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.28923055 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.46682079 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.467299114 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.465156132 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.466370635 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.463438563 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.496592892 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.466388958 seconds)
  done (took 155.940782088 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.47340415 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.106318263 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.492172815 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.61935838 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.49420737 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.470266408 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.617203889 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.536532532 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.493452466 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.471708006 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.470201922 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.812145041 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.47385848 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.051022386 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.689512067 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.637805784 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.050017597 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.49455291 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.471523653 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.471250157 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.621750349 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.476811188 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.810996184 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.105924015 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.495715949 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.107517923 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.458412534 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.474967401 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.471561091 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.112921309 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.491479263 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.813470405 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.559189055 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.539979206 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.127926479 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.072836856 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.071273053 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.638244529 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.471739773 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.472949537 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.472321608 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.457770049 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.11130511 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.496779128 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.475343552 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.098833645 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.495197938 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.477059924 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.479434554 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.475018706 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.543121927 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.561869441 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.83775994 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.118345249 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.580085032 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.489618664 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.623788894 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.854359651 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.481018331 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.055938894 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.459137524 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.117713802 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.495447352 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.458878698 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.476806853 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.482810009 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.641587126 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.621990008 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.05619057 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.495950682 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.055830105 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.662532972 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.475656328 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.475791578 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.47888811 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.118223964 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.07595264 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.663103444 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.626338716 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.697376848 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.460223613 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.477086351 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.46261287 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.562784784 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.476506906 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.117618408 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.077425864 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.495644159 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.478679827 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.479410029 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.479704007 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.677405547 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.138569618 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.583727489 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.045128728 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.840097628 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.820921365 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.479756974 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.542346953 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.495173436 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.822851458 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.479874906 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.541123528 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.921069765 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.821851025 seconds)
  done (took 176.771870406 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.745157508 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.789496744 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.574821582 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.621598576 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.105191714 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.072558386 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.848144148 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.629314156 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.595685009 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.761487185 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.740723723 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.569260272 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.666470623 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.559321521 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.261116783 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.576374933 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.594251043 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.640674782 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.602560758 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.563112711 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.161775401 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.781078558 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.668579782 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.520633401 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.577588242 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.310251911 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.074455449 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.022629501 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.673862747 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.916479532 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.041254418 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.668035147 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.508587369 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.217261635 seconds)
  done (took 71.044886978 seconds)
done (took 735.282790398 seconds)
SAVING RESULT...
DONE!
