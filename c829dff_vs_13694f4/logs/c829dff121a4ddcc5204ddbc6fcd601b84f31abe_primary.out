cset: moving following pidspec: 9434
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.234977639 seconds)
loading group "string"... done (took 0.460602528 seconds)
loading group "linalg"... done (took 7.563052566 seconds)
loading group "parallel"... done (took 0.169825927 seconds)
loading group "find"... done (took 1.169385119 seconds)
loading group "tuple"... done (took 2.078403189 seconds)
loading group "dates"... done (took 1.321241144 seconds)
loading group "micro"... done (took 0.244922394 seconds)
loading group "io"... done (took 0.727236953 seconds)
loading group "scalar"... done (took 40.529814007 seconds)
loading group "sparse"... done (took 12.46676913 seconds)
loading group "broadcast"... done (took 1.023676874 seconds)
loading group "union"... done (took 13.524509855 seconds)
loading group "simd"... done (took 4.770333747 seconds)
loading group "random"... done (took 9.615909623 seconds)
loading group "problem"... done (took 1.988704075 seconds)
loading group "array"... done (took 22.562096457 seconds)
loading group "misc"... done (took 1.418602857 seconds)
loading group "sort"... done (took 3.575060839 seconds)
loading group "collection"... done (took 19.399882294 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.536809672 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140640642 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132750447 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147214538 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204962751 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144020085 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156371789 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.114647488 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.948647664 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180240044 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153790013 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.513664924 seconds)
done (took 5.098960757 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.253071439 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095101141 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10353927 seconds)
  done (took 0.86214193 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077415705 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145303279 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095089733 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078250082 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095717903 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078124217 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094648067 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077363075 seconds)
  done (took 1.333953579 seconds)
done (took 3.20491706 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.736769477 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.287498435 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202876809 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.462134311 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194093984 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216492605 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.720314055 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.350452292 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252079083 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099363727 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.14257878 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.390004414 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137755264 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.687393529 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088760568 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.12343073 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.182847141 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.453733886 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082226984 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109976487 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116470062 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14269045 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.13060721 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090693297 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183230557 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081904139 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192369854 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.106834476 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080117782 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.286729715 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200349271 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.714068909 seconds)
  done (took 10.955877207 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110417279 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13411534 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096594841 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137839132 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133698868 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099380995 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087297963 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095871106 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121297213 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174779593 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114676898 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136016001 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09431493 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082164261 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114544921 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244849593 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119375887 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103679439 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101798646 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104931679 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121440365 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114652481 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108575319 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093133465 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166407278 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222275677 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113291025 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126524132 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096444279 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111988221 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142914672 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143949284 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094111571 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079914143 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171905412 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12360298 seconds)
  done (took 5.124244503 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188222783 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120321267 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167461876 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.16349632 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.140053675 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.153438032 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113086626 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.242772445 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.186787627 seconds)
    (10/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.180483291 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163957215 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139001053 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115732033 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079893797 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098055712 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096115789 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.698580969 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.163206556 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116219639 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116471925 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1033571 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083729525 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.485698304 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103558436 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096274147 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08204469 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081404587 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159283435 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081530866 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.162028314 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125676252 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099728664 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131787956 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19323703 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126473852 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117383277 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096133469 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077353592 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.189521252 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087906409 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096191371 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103802931 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135044453 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13398669 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098209871 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080768009 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.218470105 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080316322 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115718415 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.948744613 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181683321 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090040046 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096454996 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.324860592 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097488514 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09794348 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077288604 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.271519609 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.186686216 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099842408 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081185023 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099330783 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082785006 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.40385683 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081060333 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.748338755 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.0886725 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10692326 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082671547 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096215895 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103781166 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08717354 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114729873 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.08020471 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099353171 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078578077 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096663185 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081380858 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109256466 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102278966 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080115946 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163997 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079119791 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114223898 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126438008 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083332188 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095460973 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129713983 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.078237245 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09894223 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080320946 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095590704 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.136845268 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080889178 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109092363 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099445571 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141747988 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080531817 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.206397779 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080683418 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12486544 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100789582 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113847266 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111744132 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099047236 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084352239 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095940708 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076796829 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164422059 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079316997 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097050469 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080752808 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094557793 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109204371 seconds)
  done (took 22.892430666 seconds)
done (took 39.645898375 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.325714299 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102026178 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102167881 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10211412 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100505014 seconds)
  done (took 1.478117282 seconds)
done (took 2.197131864 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287246404 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.212152895 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076952155 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167923741 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093242746 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172155585 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158069394 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111210226 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217993097 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076065985 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.180286548 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077118411 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093453104 seconds)
  done (took 2.669719216 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094294267 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114207961 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082249168 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111043613 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076668798 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110175371 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09234611 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116324806 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108784238 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0841988 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09274567 seconds)
  done (took 1.798496728 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094171019 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112690402 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082126851 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109556327 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076167972 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110043572 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092570157 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115664115 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109614085 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085677378 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092715376 seconds)
  done (took 1.797137409 seconds)
done (took 6.976636974 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090953432 seconds)
  done (took 0.802504395 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.928509575 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.946427902 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113126942 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150060056 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.315419158 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.176791826 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.482628158 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125405581 seconds)
  done (took 11.154181172 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.114296004 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.114180285 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103151362 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.084860796 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101467065 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082043507 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099655486 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.101022483 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085150592 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.098065239 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085638588 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099002411 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099434622 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.082591482 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101249229 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086370154 seconds)
  done (took 2.318091333 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119684005 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117482742 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105281196 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108143771 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087377687 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104563366 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106456015 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08897267 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101530031 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10312332 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091403293 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104283535 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103146279 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.0793399 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105245881 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107821162 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085047447 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105257655 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106116682 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090139977 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105925786 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095163432 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086530613 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105807075 seconds)
  done (took 3.238301818 seconds)
done (took 18.230186895 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158928721 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108243674 seconds)
  done (took 0.98871714 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09477287 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11300774 seconds)
  done (took 0.933061616 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096885017 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095287323 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122026135 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109624638 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079839985 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095897119 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118461636 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080013143 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09671487 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080078565 seconds)
  done (took 1.703201035 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081603524 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109069158 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100809524 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094299879 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104147706 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094528531 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087317995 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098174899 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108527015 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077285353 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102727691 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113994985 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085405699 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116299213 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104750885 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084008894 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10202519 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098325699 seconds)
  done (took 2.493576712 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078692163 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09710176 seconds)
  done (took 0.905062926 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081052945 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094504141 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081248044 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097266205 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094290464 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076094799 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094354238 seconds)
  done (took 1.346992904 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.507743468 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135621861 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.251887741 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084190562 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119767941 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.298740788 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097118397 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084545773 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103467157 seconds)
  done (took 2.468632676 seconds)
done (took 11.564948609 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093146949 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117092661 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111509049 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.465202444 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106561329 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097293261 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.160361749 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.251722942 seconds)
done (took 2.137131186 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.149117133 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325807111 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113752772 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067182151 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094806491 seconds)
  done (took 1.339654124 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079087159 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099687212 seconds)
  done (took 0.914732488 seconds)
done (took 3.143720655 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079978064 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.130905247 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079824575 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.096054107 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079994416 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.095650257 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07686884 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09594433 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080458463 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096018197 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.09626228 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.079481393 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096364363 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078279964 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093870515 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080006174 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094502624 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077214785 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.095992995 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07726466 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096257899 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.076791295 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.093417124 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077081766 seconds)
  done (took 2.896341949 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100844326 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097586358 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10276092 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086237834 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101614711 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086340037 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101629766 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097419158 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086454672 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098950082 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.1006492 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.08522492 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099450454 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084369769 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099325987 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101169356 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086361792 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098326404 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082854031 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100988335 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103072916 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080563756 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102124881 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101965594 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.0840378 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101167818 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082334638 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097680326 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103049731 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084491054 seconds)
  done (took 3.580346866 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084993364 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094661218 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078038643 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102235307 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077578123 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097008337 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077212926 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095438298 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078341875 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095665827 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079334223 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095076115 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07771094 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096227138 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079089726 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098639046 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107651904 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078711903 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095751237 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078224219 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098770907 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077554679 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09500587 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077827249 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094851584 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07749228 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095672618 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078505737 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095444514 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077768601 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098078157 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081305509 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095112039 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084512402 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098444775 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07776445 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098998348 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078256268 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095105416 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094968341 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077483195 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095338482 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078266726 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101265686 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078109616 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097904722 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078099375 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096587333 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078101499 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098955699 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077746638 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094538548 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080246796 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095732268 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09882882 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077104331 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095468745 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07736118 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09616149 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077469031 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095152002 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077374574 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096823219 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078620554 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110784019 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084276439 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094541704 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080007077 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095682822 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080521299 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096173607 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108825353 seconds)
  done (took 7.134049855 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083178739 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105843861 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080828797 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096908491 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076478822 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095335223 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097966835 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078688502 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097504637 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084780683 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095977447 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080212006 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096809214 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107803322 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07851779 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097053378 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085044216 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093274136 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078457005 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09861239 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079349471 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098375499 seconds)
  done (took 2.730105883 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210067976 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104033254 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142701572 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106816644 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083954976 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106120809 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102354254 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087749172 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101920317 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084101882 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099241505 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101800113 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082592349 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100662423 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100780851 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084972472 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102090652 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084774797 seconds)
  done (took 2.632920377 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092718733 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098516426 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102008397 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097634471 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099524556 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083561537 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104130905 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107756128 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083365848 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098788903 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09004263 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099713019 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10047678 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080767566 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100895286 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081118379 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101172027 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081278308 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107727544 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103657104 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103432129 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090035412 seconds)
  done (took 2.85679522 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096476432 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100220002 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117143322 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083907464 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095268141 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079732878 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105906169 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080793856 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106677134 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099628937 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081504909 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09663579 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088605199 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099006675 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103985566 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081323377 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100255671 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081372927 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101004627 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077738214 seconds)
  done (took 2.627966319 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102967863 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100100119 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099652379 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091604016 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100211886 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082615766 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108820421 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100896071 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082221588 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124880273 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100178736 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083160357 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109165411 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105843343 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099455862 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091862734 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108911434 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109226606 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082424887 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099923059 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12547187 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082337177 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10868766 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10026978 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.192925525 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099342715 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099443648 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088915043 seconds)
  done (took 3.634010744 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081523453 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098395029 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078314206 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096927975 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078339152 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095998324 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078535067 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09632925 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08137297 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095733793 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081553805 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098290758 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08115172 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101130161 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081376358 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098708714 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081126634 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096121532 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078767237 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095302451 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080818307 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099543916 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08128336 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095818325 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077981513 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098200707 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078777754 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096337055 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081454971 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096139462 seconds)
  done (took 3.416185297 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090671506 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105613013 seconds)
  done (took 0.951584898 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078968111 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114998214 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077947133 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10328769 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103474596 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082051736 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108273799 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086281279 seconds)
  done (took 1.509268806 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095318779 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109977539 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082844716 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112581418 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109760743 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094989521 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.164947296 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100948686 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.08743761 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09742916 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113007501 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080365515 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105188158 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081435371 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105412694 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087348276 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097090066 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087765315 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102488033 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098511547 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083079006 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109897746 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084317407 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09603692 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082578243 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109575269 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109228231 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083979162 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102565276 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108621553 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087429597 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092951559 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082067862 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100445164 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079823511 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.10882067 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112193196 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084957308 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.1086091 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083274476 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111638336 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094907787 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086571711 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105619812 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092733537 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100053909 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082686833 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094816287 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096898676 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084425184 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095120707 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08153244 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094202442 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08973781 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10352539 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112256426 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081170646 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101845571 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08549769 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102140616 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088629521 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101838579 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084753335 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098775719 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107256697 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085817447 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106866074 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.07676263 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093275775 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079705329 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107707764 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122901212 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090374178 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101391133 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082641066 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096873437 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102395297 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083503431 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107400097 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090549708 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100431929 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106609009 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090343891 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099731088 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08413677 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10806764 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097847907 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084120047 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09760371 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096740524 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098569974 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079574946 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.096884582 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108527175 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085838395 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099956978 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079736386 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107887153 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076051905 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103667415 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083761547 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100605255 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109398479 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088047423 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106979823 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106809755 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089896941 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100165466 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084924944 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097193336 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08339047 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102348855 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106223223 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075658853 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102746204 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083625099 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100694093 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089021568 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098694499 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081629718 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107752903 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107356109 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080379997 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096354279 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084628465 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.09993658 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085803546 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106535697 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098486455 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077631985 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095338406 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086301868 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099832253 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086374948 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105743392 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103118012 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076724005 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09782293 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086913009 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107655775 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099580803 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082451475 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104623229 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082709623 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099113374 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.0875944 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102184009 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081763977 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104103807 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10245991 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077726284 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103964902 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085073068 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099380774 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086929935 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103649887 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102776622 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083169871 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099152743 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088709542 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101799049 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081334036 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099776392 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080241885 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109314996 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101910222 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077138194 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097591482 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091092481 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097475483 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082262661 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099125414 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102809399 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083054074 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097481468 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081622057 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101269149 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095069063 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105869683 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101918509 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087564127 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110808181 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081805986 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101765863 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099789204 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084521975 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101475873 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090116147 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106388593 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106210245 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084924257 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09717028 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087737848 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10745188 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081688483 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098499095 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081604023 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103913751 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107666982 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08602059 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10132554 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08014153 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101675235 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104358354 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085534589 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099594051 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081797003 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105448563 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081657253 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108061184 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101661422 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091331348 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104796014 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077776464 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104598334 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098241431 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088206815 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096003533 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080814445 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099002484 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084698433 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099682653 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085118401 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094964569 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089140449 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108763392 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10076765 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08237764 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101377968 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091678185 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102621556 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086607234 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104213141 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106478576 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095659705 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099814844 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085606557 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109613624 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100810656 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076446066 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106269843 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081340997 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100157125 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081479182 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098442401 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085773219 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109510624 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105380278 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.07629993 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102899822 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081137996 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100291514 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077553614 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107169604 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104407555 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084549364 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109492836 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084052171 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102402677 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08648198 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100668383 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101850372 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083464617 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104658948 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084108191 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103006566 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081834073 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102319634 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.082013997 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098973714 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104693164 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083551342 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100009433 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088095148 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100985708 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082414253 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103740619 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101653261 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083282469 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101046096 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082594751 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104640718 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082937244 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100755389 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085157135 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096134328 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090128551 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.101342996 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107972093 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082499237 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097538852 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089110758 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103798713 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106040678 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08392956 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101693291 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083804006 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100785843 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085483121 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110067967 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.0981416 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.090919282 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107346407 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083795735 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103824761 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082184025 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.10257866 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081975616 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102552529 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102171034 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083316341 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100767689 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088354308 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103547373 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.08290776 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103207898 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102036188 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082648261 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101751521 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077138537 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099868742 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081926442 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101909612 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090659952 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102209987 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104359606 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081938806 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102943996 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081931489 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09856109 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091032603 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110977804 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102518522 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09103733 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101012356 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084650734 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111356193 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09631982 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081239907 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099209387 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080924857 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110093398 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083631762 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.10974806 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083632099 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101175306 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.08064373 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10229886 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100317201 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077636258 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099029229 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086102646 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.10399575 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081667537 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102913985 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085294096 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102740637 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108372764 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082586507 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103500134 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.083247703 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09854802 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081980618 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100521128 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085996947 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103098898 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.09891304 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080556939 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101543412 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08409311 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110519009 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.08292871 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103180809 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090041602 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101878079 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104987059 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086969027 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096020082 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086299089 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101097554 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082685085 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100201762 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.08650969 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105319817 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102482231 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090192648 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101620094 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084805523 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102074921 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081954151 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102175265 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101470093 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083395822 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101330455 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084793082 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110029284 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080819302 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103658318 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082151738 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102623037 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105674224 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084233405 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104572421 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091840855 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105144882 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084446874 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.107697671 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105550657 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086302177 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10289334 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084591626 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107954011 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100525945 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091149925 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101931324 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084436581 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102887453 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080648119 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101555696 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083328639 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101154251 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105833673 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084256765 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101127455 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081849292 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100063502 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085085762 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106229898 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10861377 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085726755 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10479888 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079105483 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099005427 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085137993 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099692182 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086288778 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104594872 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107667572 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085903287 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102514734 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081549688 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109298081 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08938487 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107230732 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080948407 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106915501 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102051928 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085414228 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103093025 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084198476 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104571509 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088636036 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103867982 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101053981 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091412104 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106237934 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08448218 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103671399 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083152081 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10240603 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097576706 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084185813 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103560938 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08969315 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104795926 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084282024 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112124549 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100916619 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083698709 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106122387 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082722948 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.10873919 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078426509 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102986295 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103437408 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08531595 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097039648 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083380283 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100109085 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085876449 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101549993 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078779973 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111897717 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109414709 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085687175 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100480111 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082398968 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097335458 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079248187 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101962324 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08463131 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103850911 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110876188 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083310967 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100669512 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078951717 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10154861 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086523467 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105458303 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080604135 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097400297 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081777745 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104403223 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109025692 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082273064 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101585154 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087531493 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104110721 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081146565 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107483019 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079956769 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.10659332 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112760263 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084968018 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103561682 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088945693 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110549742 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103204966 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078613887 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102912234 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086232515 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103126935 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084916984 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103518906 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115646628 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08641543 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102010129 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082851273 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105620074 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083127103 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109467519 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103461655 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084965144 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107398544 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085980936 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111911978 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104706579 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089527858 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104633064 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085592846 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101442783 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084377365 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100512847 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082300422 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103992375 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103279711 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088292737 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110996109 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082437861 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111921382 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11032682 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088208534 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099060101 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08347779 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101748231 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079176362 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104322345 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08182602 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101330696 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081705128 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101369421 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102334203 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089493941 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104395935 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08463267 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102371114 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077833973 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105125079 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088322988 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104182792 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09910875 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084147177 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103691398 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08951641 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108192768 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083990428 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104888021 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085342198 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104357956 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098637325 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090701069 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100973638 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08709423 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102058568 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083670945 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104258346 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08702432 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10929889 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103965843 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086205449 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114984189 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085704686 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099999343 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099421925 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089486673 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100492545 seconds)
  done (took 57.565166256 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14670735 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08017196 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098053416 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079843815 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112718914 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099151895 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079616426 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098921941 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080671555 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101974756 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079097168 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098169748 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108356294 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123395131 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092361397 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103393243 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097874491 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080848133 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098079122 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080319248 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108985368 seconds)
  done (took 2.850680214 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104259739 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117240704 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114665924 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118903471 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08949138 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115647461 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114474173 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114637878 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099366286 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111211949 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118605971 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114595086 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091160487 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110916228 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10998675 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093353161 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118266771 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108535939 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115308934 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095562967 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113384711 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113941917 seconds)
  done (took 3.210541947 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.0841963 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101624772 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08528736 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097103915 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08387389 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097511768 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087027699 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.099754564 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086941794 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101719539 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082470182 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102131375 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103595588 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078683337 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101293832 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081255135 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151681984 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10659431 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082765955 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104110519 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098066011 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086638949 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098308321 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079456782 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101257234 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088730223 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103720614 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081736249 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103425512 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081454556 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102851774 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081049791 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104693673 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102462199 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082506993 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101376287 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08279411 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102692619 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079005989 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100748668 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083469015 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098739698 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083645168 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104297652 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081483577 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101521571 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083912084 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103575712 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097961245 seconds)
  done (took 5.430225766 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104037016 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160810095 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085977777 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142395039 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119962081 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112646115 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088309445 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141589241 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101771759 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082379215 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123455146 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12024553 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103835266 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089415154 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110999718 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103919463 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086135213 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102726883 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.10782301 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083753026 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109302943 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.0910357 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119774376 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118429683 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108317023 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083047219 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103073337 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109203985 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097630677 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109254725 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108908469 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090041107 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119090442 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105204081 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082996602 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106365945 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122006672 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103300096 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08659032 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10084894 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086569652 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108512414 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109720663 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102187295 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104037269 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108480762 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08408551 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100393795 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116928938 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086945213 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112529963 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119402609 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107435822 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084723195 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109318754 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119664793 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084336743 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102450506 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086908527 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117441855 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100758997 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088315994 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118486238 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105743287 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112510143 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099337562 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10865421 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108124077 seconds)
  done (took 8.090459884 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093389153 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110900663 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120762516 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120386769 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092142921 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111195086 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110730129 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090737691 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110214487 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11582106 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110289769 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134015107 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086187026 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114826735 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110057627 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090892246 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110664744 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110139477 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091139053 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110732471 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11121877 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11971435 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090590173 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120384003 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141455452 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106048441 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090911456 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111698176 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120320902 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110636725 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123694579 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091946846 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110082908 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121311637 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123229208 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090438302 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102642113 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109385719 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091142346 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110540065 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104420792 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120147837 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091084566 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105264653 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110393943 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091039429 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120638146 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123774135 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114049705 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097552107 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111379341 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120685961 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110816808 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090951369 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.12004641 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146598433 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120664734 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120891706 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110787557 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120051467 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100625565 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127826643 seconds)
  done (took 7.641856015 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107051779 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115251249 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117062976 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099931499 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082653722 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109288554 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0829205 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102589805 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114046326 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09423529 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117819572 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108818123 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092270672 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117173186 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109602356 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112299684 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089765165 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109601997 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11404535 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108888836 seconds)
  done (took 2.927831702 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094152519 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124256483 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084731754 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112724594 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107596274 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091769359 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107066902 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107653295 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085646655 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107773694 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096912179 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116616137 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105067243 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091388993 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116174433 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111614892 seconds)
  done (took 2.483181206 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096178692 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117644393 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119744358 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084847253 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104183456 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08074986 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106104921 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100848562 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081703553 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120894668 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084658249 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108476913 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107313158 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083586138 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101651757 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087860848 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101999305 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08266404 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104340684 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118867152 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096578446 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104723379 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10478255 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086840509 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105463074 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090196359 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105929804 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102719992 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083032485 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105788658 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085089612 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113212395 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101519581 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08346344 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102632812 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082634454 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104864077 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085902186 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108387606 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104802562 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084311363 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104613714 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085428466 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106069971 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080901621 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105929621 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100998866 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091419745 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10298408 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084964178 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105206561 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106674076 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086489165 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116528568 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.08923289 seconds)
  done (took 6.230867597 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098615977 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108612636 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080279886 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103559224 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087934029 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107410341 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107400136 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087580057 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106935978 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082692686 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106882334 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089554571 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108272242 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108317023 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087513583 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109547116 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081232012 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107330683 seconds)
  done (took 2.601450327 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090755658 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104551802 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092933711 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105950492 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084735943 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108411247 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079893758 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10405643 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102862103 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085386877 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104784446 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088130216 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103197552 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086953423 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106173544 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084517001 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108080982 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103381842 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085427404 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100923566 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087350575 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10384402 seconds)
  done (took 2.952715478 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117896578 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124941407 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092887586 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228415345 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103843838 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132394474 seconds)
  done (took 1.631175091 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109897556 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121211773 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106488452 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107976525 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115534128 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10700314 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088590367 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10763966 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117916314 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101466882 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109501343 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118985777 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117631624 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097025501 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11461238 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115230443 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107574488 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087277788 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107001188 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128570974 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087416904 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117451549 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108071968 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086887041 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10827598 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11757956 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117278603 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122704856 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088180826 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118180371 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114011722 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088288867 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117741197 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123111614 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108530886 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097695201 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108528935 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128870405 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114652952 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096612371 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109752458 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113919743 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097697805 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114021626 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118202831 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107575475 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09387436 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108857618 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108548784 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135802523 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094109559 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118239694 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114724891 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118108729 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118588183 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136248141 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10226259 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116838454 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114937375 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12251457 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117636804 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094970076 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117583993 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122895082 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115465804 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117281384 seconds)
  done (took 8.143398399 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103515581 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126260069 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109073204 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122134698 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097282193 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108375304 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108511207 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087764947 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109570023 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107097277 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152959806 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088390871 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117961152 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117389322 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107539377 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088480993 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107852216 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116943404 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087110363 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137067249 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1086926 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117296629 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117584458 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097765707 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123713227 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114926295 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108687878 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088288366 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108209419 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107616941 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094054951 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108437266 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117760384 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086656906 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118546428 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109144193 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087153553 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115900099 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108637837 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114895164 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097459106 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128367799 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108510673 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107647944 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102518345 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109610664 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108479714 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086318814 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108102381 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107275057 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102369243 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122823162 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12292883 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118157089 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108558103 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088964552 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108778057 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108076273 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088706494 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115424823 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117900421 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107275575 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136470482 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088075891 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108339872 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118791156 seconds)
  done (took 8.019928853 seconds)
done (took 154.484628606 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098130532 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136333183 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095796301 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168032511 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105832183 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118314456 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137815625 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097331927 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106339491 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08616843 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106656902 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087151537 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171293261 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084886406 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106362059 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107665162 seconds)
  done (took 2.651200362 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200505774 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255342919 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102148384 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106762329 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.08919353 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110546586 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.10433263 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091270765 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109410765 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085049426 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108210675 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087115732 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105866454 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085640768 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109890527 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088987717 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106490661 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087606695 seconds)
  done (took 2.877233093 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113615437 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149533219 seconds)
  done (took 1.109516529 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118939495 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180432828 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319186897 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155650563 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106212231 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12736979 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15671621 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130285919 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196908884 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122874686 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122226002 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097144586 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140992725 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115678182 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094394148 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118099309 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142152227 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092781103 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114936598 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115951704 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116743289 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106410867 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114800202 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092673412 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181050125 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.11994203 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085087163 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107353131 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116065761 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093845262 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112461334 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.12455584 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098533656 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175768403 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102338542 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176333044 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099706828 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112214231 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114563335 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091729898 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119508202 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117309178 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104273483 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.11844042 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084765523 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118292124 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10619979 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085448211 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114929627 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096762504 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.1148958 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112516714 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15505761 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118689755 seconds)
  done (took 7.518487468 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.796342167 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.160411867 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113231222 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.864763678 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138247403 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103757154 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.783304947 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135574009 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23746407 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762927536 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135399802 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122393288 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231761868 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.239692418 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.931647858 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312079535 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.681421967 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101586098 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153013047 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153464564 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119948171 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139339918 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131093218 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430809797 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095138924 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113307194 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117916855 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099925384 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159850715 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.127244591 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115102106 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.18010689 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.271494284 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.186110132 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116461506 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.0886857 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113292712 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169790624 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271027365 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218873203 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181766462 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08693732 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112423804 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122606124 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110175012 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109648188 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165262441 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.198105857 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.17463316 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091897556 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12246517 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121521271 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12139544 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167116834 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.12205006 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.290327833 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.328257398 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114247526 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121440083 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105279036 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268284893 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125095481 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228323117 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118972381 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215440289 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111955227 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782117548 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.195745006 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091206285 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119309275 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120854276 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094203872 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122260247 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169327638 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.408259605 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124687207 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093608194 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11250337 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.207864379 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.127556481 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112217179 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164028356 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117027259 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099517397 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125586899 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124507779 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.172292597 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.228717496 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124880443 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12055364 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093730109 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126302708 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117897223 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215281486 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224356982 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.166509626 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.214961992 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123392947 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164824617 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.195567378 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100605795 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196501831 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097502131 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127387363 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123977631 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220234108 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.149197229 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126633643 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097428037 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12047899 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149837651 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128594654 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098006079 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.194002022 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.464161707 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170364718 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111641517 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129186188 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099228874 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184908255 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100292641 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267662473 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122978519 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.171084554 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120713888 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087709346 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121052795 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.167142295 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124253909 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122077595 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103421123 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119874813 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237027131 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22310191 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127823215 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227099466 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.190318408 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125804324 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178718494 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126198564 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172281653 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124366592 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124653782 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095656443 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.799187975 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124618047 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098918244 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117817297 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189129125 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112518662 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103611065 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12682081 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109889045 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.791885563 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129117874 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.123560514 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102200658 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12068722 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121065312 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117260966 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094521022 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164803014 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238118449 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128432552 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124341864 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.106708026 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.185803243 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.097031366 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.127244787 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.126504221 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125924279 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101310704 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116546751 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12583829 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171838385 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164361042 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.225172263 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.604467446 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092695576 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125575501 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23562874 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092080432 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296081025 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122935949 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.229148466 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.168409537 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122352726 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.323259654 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.170918684 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.190003402 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128974336 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175848054 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087307342 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120211343 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166502262 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.118683815 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122892054 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.166849063 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126062357 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101961193 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.975835777 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113308756 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.231330096 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110053812 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173847212 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094278382 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123344393 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292224851 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112401825 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108392034 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.191524829 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095475027 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.128181972 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.87356769 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103540129 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123689269 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119663249 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.226184164 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166457931 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097099717 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121787224 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122262028 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164319026 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.212977037 seconds)
  done (took 44.670885628 seconds)
done (took 59.669605533 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276092426 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213102207 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258688997 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168724205 seconds)
  done (took 1.858930189 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170445614 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150051026 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120459898 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107287047 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149683917 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085740298 seconds)
  done (took 1.651024807 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.361742287 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271339066 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.240051668 seconds)
  done (took 1.748043564 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.28806929 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.250050711 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.356538208 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.39741707 seconds)
  done (took 2.285905949 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209763234 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132127504 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110869445 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104486744 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197958777 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251724314 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141014458 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202342078 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121917645 seconds)
  done (took 2.391848452 seconds)
done (took 10.808942509 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.299261824 seconds)
    (2/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.157840865 seconds)
    (3/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.09880281 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.217694555 seconds)
    (5/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.24214138 seconds)
    (6/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.253431781 seconds)
    (7/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.227454184 seconds)
    (8/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.210454907 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.104425835 seconds)
    (10/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.19924501 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122992546 seconds)
    (12/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.078401646 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116424532 seconds)
    (14/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.171826731 seconds)
    (15/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.210337071 seconds)
    (16/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.189249868 seconds)
    (17/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.213499349 seconds)
    (18/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.198350154 seconds)
    (19/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.18703871 seconds)
    (20/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116918943 seconds)
    (21/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.173549866 seconds)
    (22/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117222614 seconds)
    (23/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.160403459 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.136032829 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 0.222862653 seconds)
    (26/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.210566826 seconds)
    (27/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.131430501 seconds)
    (28/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.198882816 seconds)
    (29/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.171305896 seconds)
    (30/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.093198792 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116914557 seconds)
    (32/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.097147979 seconds)
    (33/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.155453228 seconds)
    (34/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.092534576 seconds)
    (35/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.115618406 seconds)
    (36/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.12313443 seconds)
    (37/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.15068285 seconds)
    (38/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.167531804 seconds)
    (39/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.175877241 seconds)
    (40/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066011736 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.135034904 seconds)
    (42/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066979885 seconds)
    (43/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.089434532 seconds)
    (44/286) benchmarking ("sort", Float64, true)...
    done (took 0.228459719 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.109169613 seconds)
    (46/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.171865582 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09428698 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.11626362 seconds)
    (49/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.12382832 seconds)
    (50/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.116925113 seconds)
    (51/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088620766 seconds)
    (52/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.090385618 seconds)
    (53/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.09343701 seconds)
    (54/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120596624 seconds)
    (55/286) benchmarking ("sort", Int8, true)...
    done (took 0.218719284 seconds)
    (56/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094212092 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111398796 seconds)
    (58/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.194231237 seconds)
    (59/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.119700248 seconds)
    (60/286) benchmarking ("sort", Float32, true)...
    done (took 0.228961765 seconds)
    (61/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.130907783 seconds)
    (62/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066764097 seconds)
    (63/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.186585738 seconds)
    (64/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.097437666 seconds)
    (65/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.199189149 seconds)
    (66/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.116940108 seconds)
    (67/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.081903192 seconds)
    (68/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.170132074 seconds)
    (69/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.120767714 seconds)
    (70/286) benchmarking ("sort", Float64, false)...
    done (took 0.147130951 seconds)
    (71/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.117085835 seconds)
    (72/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.119586456 seconds)
    (73/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.096206496 seconds)
    (74/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118718809 seconds)
    (75/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098100427 seconds)
    (76/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.08849578 seconds)
    (77/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.11446494 seconds)
    (78/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.200881673 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109163634 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 0.087106827 seconds)
    (81/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.121572084 seconds)
    (82/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.151783182 seconds)
    (83/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121541338 seconds)
    (84/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.190503227 seconds)
    (85/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.076857214 seconds)
    (86/286) benchmarking ("sort", Int8, false)...
    done (took 0.188848614 seconds)
    (87/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.190654308 seconds)
    (88/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065893051 seconds)
    (89/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.115746791 seconds)
    (90/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066623259 seconds)
    (91/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.143805888 seconds)
    (92/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.186782543 seconds)
    (93/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.14173521 seconds)
    (94/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.138447931 seconds)
    (95/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.11255069 seconds)
    (96/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094538136 seconds)
    (97/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.191904566 seconds)
    (98/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.099994018 seconds)
    (99/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.099803774 seconds)
    (100/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066490716 seconds)
    (101/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.136048914 seconds)
    (102/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.185043023 seconds)
    (103/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.161124994 seconds)
    (104/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.115802768 seconds)
    (105/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134881809 seconds)
    (106/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102404979 seconds)
    (107/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.118950687 seconds)
    (108/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.187897465 seconds)
    (109/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.094106038 seconds)
    (110/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.070832889 seconds)
    (111/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117915248 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.108961552 seconds)
    (113/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.094357086 seconds)
    (114/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066829571 seconds)
    (115/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.135555293 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.181784194 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.117362165 seconds)
    (118/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.087619275 seconds)
    (119/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137240828 seconds)
    (120/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088285301 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.133138391 seconds)
    (122/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.164079801 seconds)
    (123/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.182134817 seconds)
    (124/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.127695205 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116051878 seconds)
    (126/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068856032 seconds)
    (127/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.11262778 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094672889 seconds)
    (129/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136498639 seconds)
    (130/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126203652 seconds)
    (131/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.11253649 seconds)
    (132/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.165810605 seconds)
    (133/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.12195409 seconds)
    (134/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.093070777 seconds)
    (135/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.090605703 seconds)
    (136/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.149160682 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.11791847 seconds)
    (138/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.086466635 seconds)
    (139/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.141290257 seconds)
    (140/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068312084 seconds)
    (141/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.185723183 seconds)
    (142/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.142853109 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08758671 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117294157 seconds)
    (145/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100908118 seconds)
    (146/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.123255425 seconds)
    (147/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.087580048 seconds)
    (148/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.113430353 seconds)
    (149/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078004475 seconds)
    (150/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.09126101 seconds)
    (151/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.066871753 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119484218 seconds)
    (153/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.112733212 seconds)
    (154/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.22867124 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.11087466 seconds)
    (156/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.06780151 seconds)
    (157/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116975472 seconds)
    (158/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.160129302 seconds)
    (159/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111088802 seconds)
    (160/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066631036 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.137141152 seconds)
    (162/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067667994 seconds)
    (163/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.111618273 seconds)
    (164/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.076871527 seconds)
    (165/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109021542 seconds)
    (166/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095403356 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.119731173 seconds)
    (168/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.084320007 seconds)
    (169/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135231618 seconds)
    (170/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.120352193 seconds)
    (171/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113565803 seconds)
    (172/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.121609558 seconds)
    (173/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.152712537 seconds)
    (174/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.13976015 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.109400917 seconds)
    (176/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066570672 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092788589 seconds)
    (178/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.114761061 seconds)
    (179/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117129008 seconds)
    (180/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068175476 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119253889 seconds)
    (182/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.090147961 seconds)
    (183/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.109212922 seconds)
    (184/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067343795 seconds)
    (185/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.172801752 seconds)
    (186/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.123431413 seconds)
    (187/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.144338518 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087339955 seconds)
    (189/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.090525398 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 0.220079313 seconds)
    (191/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066604838 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086275738 seconds)
    (193/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.121408518 seconds)
    (194/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076252166 seconds)
    (195/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.149498802 seconds)
    (196/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066888318 seconds)
    (197/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.145862173 seconds)
    (198/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.1117604 seconds)
    (199/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.151277675 seconds)
    (200/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.1268328 seconds)
    (201/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095792068 seconds)
    (202/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.107297934 seconds)
    (203/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095135894 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119404232 seconds)
    (205/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087333503 seconds)
    (206/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.09251547 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086947056 seconds)
    (208/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.112100719 seconds)
    (209/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.096666495 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117320829 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085626279 seconds)
    (212/286) benchmarking ("sort", BigInt, false)...
    done (took 0.244604559 seconds)
    (213/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.089777443 seconds)
    (214/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.118717194 seconds)
    (215/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.095300566 seconds)
    (216/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.333734014 seconds)
    (217/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.076928906 seconds)
    (218/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.138141207 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.113899347 seconds)
    (220/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.115175207 seconds)
    (221/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.06700197 seconds)
    (222/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.091372934 seconds)
    (223/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.086585987 seconds)
    (224/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.13581567 seconds)
    (225/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.077170682 seconds)
    (226/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109761182 seconds)
    (227/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067003123 seconds)
    (228/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06674429 seconds)
    (229/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.090931086 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.08678033 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.108480192 seconds)
    (232/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.110160404 seconds)
    (233/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.174268093 seconds)
    (234/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.10088123 seconds)
    (235/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093017576 seconds)
    (236/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067510311 seconds)
    (237/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.110846434 seconds)
    (238/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.084850071 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.110024852 seconds)
    (240/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.111643483 seconds)
    (241/286) benchmarking ("sort", Float32, false)...
    done (took 0.151019338 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119425817 seconds)
    (243/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067754542 seconds)
    (244/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.090454458 seconds)
    (245/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078483284 seconds)
    (246/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.094953382 seconds)
    (247/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.111075837 seconds)
    (248/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066622653 seconds)
    (249/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.098861256 seconds)
    (250/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.159230652 seconds)
    (251/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111471125 seconds)
    (252/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067288794 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.110567808 seconds)
    (254/286) benchmarking ("sort", BigInt, true)...
    done (took 0.232123307 seconds)
    (255/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067955173 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118409923 seconds)
    (257/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.086630686 seconds)
    (258/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.065651767 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.110087391 seconds)
    (260/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.067514707 seconds)
    (261/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115344841 seconds)
    (262/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093089816 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108836343 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.086702209 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119157144 seconds)
    (266/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093345013 seconds)
    (267/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.112116815 seconds)
    (268/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.067140496 seconds)
    (269/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.117585023 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092873466 seconds)
    (271/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.110842036 seconds)
    (272/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163484918 seconds)
    (273/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067462269 seconds)
    (274/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067214786 seconds)
    (275/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125278159 seconds)
    (276/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.088162996 seconds)
    (277/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.091880163 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086325396 seconds)
    (279/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.098415389 seconds)
    (280/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.087918837 seconds)
    (281/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.09084827 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092017909 seconds)
    (283/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.0664637 seconds)
    (284/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.136158943 seconds)
    (285/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078203849 seconds)
    (286/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.090826401 seconds)
  done (took 35.999835078 seconds)
done (took 36.880316214 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101883288 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148653285 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095833375 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135351844 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.1238981 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091153922 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117554536 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097492632 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123154659 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124289851 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098776199 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092557015 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097226378 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120275564 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096106965 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139341711 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.12407562 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094470257 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117967635 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08627665 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121337731 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086820451 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112858615 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070063421 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121761671 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094399407 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117713899 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120031944 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086669421 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110100444 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090555448 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117956813 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08714208 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124280835 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093674931 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119157598 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097261723 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120025069 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.11151073 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088235408 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118398015 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086896529 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117265983 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095169158 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116297107 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092212147 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118911689 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099500583 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.13919643 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115787 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095209233 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120735552 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096503744 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117336475 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091773684 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119774551 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091538757 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139173492 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118960039 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091527936 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118239537 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094795487 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115495435 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094416672 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118364126 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120222257 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097473672 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11544469 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096933461 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115857655 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087348622 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118379946 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.09093351 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110618653 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095800781 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121861393 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085572145 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115783562 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117203766 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091129828 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108986503 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089844948 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.110858906 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093224584 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112177109 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.06971735 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113629138 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093551737 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109449217 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095327422 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116414979 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093497408 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112032223 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098275883 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109829861 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092189352 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110562235 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087088483 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.1134701 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090810271 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110676108 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089990536 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119743505 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088661273 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116999062 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123213071 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086513691 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11707597 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086135704 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110345915 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102175308 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121807167 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.0864702 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116399096 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086153184 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118806582 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087089812 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109672479 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086945891 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.109623383 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092360931 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110374379 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089565981 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.117076167 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124706031 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086465756 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113954532 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089939802 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110942941 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092986945 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110908786 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087053851 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113029385 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077673224 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113223148 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087166315 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117896421 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089963071 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119317635 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088709301 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119832723 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091342022 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11703853 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091809258 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110738968 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074623754 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115855881 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089548927 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113386079 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087590074 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112256107 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087301555 seconds)
done (took 16.895993209 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088804286 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184379463 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151477707 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142228288 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106607476 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112066486 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121323786 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117749914 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113785015 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142858611 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109664101 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130671939 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.14740112 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086359499 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112054174 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090608414 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112600929 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10287892 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146247394 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133145757 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164434986 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086139317 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146694927 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135270005 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121327851 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114406958 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111535591 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091069999 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115124975 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103106885 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131586288 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114632471 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087995701 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133005985 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104092973 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119681382 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087293431 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118518545 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087527872 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111301338 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140812193 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132710325 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092545336 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11743971 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091217094 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114490094 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089579603 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120890355 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09785448 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.1157578 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126434481 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15566032 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090495989 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121312298 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086409262 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122926568 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122195236 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089939477 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112522875 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09054816 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111831694 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091402369 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127422723 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142761246 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091326177 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121596957 seconds)
  done (took 8.586751838 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105488173 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139582667 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105492942 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130721159 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111475983 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088496348 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112800346 seconds)
  done (took 1.736588878 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090308407 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134337635 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110863394 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135779475 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131753937 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112531758 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122651517 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088801987 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131520984 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089341205 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134626896 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150434349 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090264355 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120863397 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137640277 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088734051 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137725684 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088623525 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116507946 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112624791 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11643366 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134743462 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091747429 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113945444 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102767738 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113971885 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162129799 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093829065 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11565221 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092248138 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112057683 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151900624 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103007202 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125142841 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088889152 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129734246 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128718366 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087060455 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126407097 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093917026 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127396659 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089386341 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114664623 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087285672 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118655485 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099481647 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117019113 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090064245 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116543083 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133781887 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.106671157 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12737131 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090017334 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117562628 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089982928 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12052109 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098403922 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114354775 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13339614 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090237776 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13104143 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105430562 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127794945 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129716745 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091915613 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127330185 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102904168 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116899485 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090341116 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117351516 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105645722 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.111538458 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.090593769 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.125453983 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116587819 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112239932 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137514975 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090061872 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124985904 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.088945005 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11402756 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113881753 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11240877 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117909348 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089896617 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11782671 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092534192 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11165515 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088599818 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117248085 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087645177 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117641175 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091989027 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115178996 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092023847 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.13122271 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114432264 seconds)
  done (took 11.810399627 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.0896811 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115044931 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091258818 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114869384 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090022934 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115269599 seconds)
  done (took 1.56846242 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114580089 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117179701 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104548354 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120470793 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156080936 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104044838 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129970661 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12396807 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107866859 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126741239 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128690571 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104973362 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135570987 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120908906 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104118589 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120243346 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104343896 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12551648 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126841815 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097109914 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13712207 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120153476 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097433214 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132212342 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118465314 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095750583 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126496474 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102517175 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127327252 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123935244 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097914478 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118338275 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096361979 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123493288 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129521004 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095639292 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120933256 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119675323 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100104706 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119835705 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103385931 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123286115 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128488068 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094144563 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123970296 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120739448 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094490262 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125265145 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.129042327 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093424675 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119536442 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094983165 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.1182493 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094798318 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121255865 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124649665 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094441066 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129618711 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121262318 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095904615 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11852074 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093393139 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123626552 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118234806 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104238962 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.11891206 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120496823 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096337489 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122076573 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096525564 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119709047 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093619194 seconds)
  done (took 9.209089969 seconds)
done (took 33.848297924 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.689661508 seconds)
  done (took 1.644479702 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.818312128 seconds)
  done (took 1.776595876 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.94927936 seconds)
  done (took 17.927880776 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.493105737 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 3.378883041 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.994776543 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178817589 seconds)
  done (took 6.000632518 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.947239808 seconds)
  done (took 1.921157825 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.284285527 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.235884709 seconds)
  done (took 1.477858676 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.766869057 seconds)
  done (took 1.736171557 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.390437936 seconds)
  done (took 2.353465724 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.329586127 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184091392 seconds)
  done (took 1.48419374 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.551009284 seconds)
  done (took 1.519917683 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.745251885 seconds)
  done (took 11.717532807 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.268855139 seconds)
  done (took 1.248140722 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301788325 seconds)
  done (took 1.271624438 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.492655451 seconds)
  done (took 4.465391798 seconds)
done (took 57.511767111 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099894879 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126753024 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10208892 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124288854 seconds)
  done (took 1.423305101 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101011629 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12137348 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100694853 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120216209 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125886866 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096303889 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123699441 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100736452 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120358614 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096643239 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120558538 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119825819 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099449514 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.1228277 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09350349 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123593336 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098653444 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120953517 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123497906 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095492897 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118640676 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097165386 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123805802 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093548327 seconds)
  done (took 3.633982831 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099663726 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118497845 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097341976 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117741004 seconds)
  done (took 1.417471939 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100711761 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130792342 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105669443 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125262551 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131144696 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.104998548 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118193717 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.091939825 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119408107 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099569111 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115326385 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138681672 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106077554 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124554136 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101769073 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114657125 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.090563712 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130898341 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12539645 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.10055465 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.117773422 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099694693 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115399561 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108767872 seconds)
  done (took 3.697268731 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172008113 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126643952 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138585867 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094758967 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160331067 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.13973188 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087653006 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14159061 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087605847 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130968115 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118016542 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133734898 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.12941407 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088099494 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113973542 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087384507 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128174279 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128766954 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091037272 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12708684 seconds)
  done (took 3.413413979 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.099050295 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117350615 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087810681 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116319477 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098458117 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120388214 seconds)
  done (took 1.622697854 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090591933 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114360924 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.0892038 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114592975 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093243459 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114611041 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.087733366 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114697199 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089740919 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114558348 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089008262 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113227391 seconds)
  done (took 2.210985095 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.501783414 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119337176 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119559291 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091306779 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.12161355 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.08924478 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129017347 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092877016 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140622167 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088533507 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115866067 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090316525 seconds)
  done (took 2.679837064 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236705073 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124712833 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281296056 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369927408 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154961849 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165294134 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278953957 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159031104 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.223423087 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149305115 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203184927 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195465989 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150887975 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213978366 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111031923 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145031216 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187468615 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246153913 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153035026 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236174334 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182517614 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16782243 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178838062 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150516138 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138610131 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171500529 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119737741 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103739958 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233822489 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175611415 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216580407 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162360192 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146779868 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207151173 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254971717 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221541163 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282289586 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13391328 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.141463296 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166274413 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260878027 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136619238 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204044183 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154397384 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132038982 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21638951 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164138114 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17594236 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.145110968 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111908924 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221522016 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237776882 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192580249 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137011367 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302995156 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148365417 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.156270969 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193672567 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252204041 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226108724 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188598205 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120186828 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18754082 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190932339 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211331909 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152153307 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181524142 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148559701 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182839673 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188001155 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189946729 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179823813 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185178605 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139708418 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17081688 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171054331 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172221493 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256912139 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211055248 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095706177 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168319334 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150431019 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13387332 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194741972 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098765448 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239393116 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144855108 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163961322 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215049635 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158413023 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161002306 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19382344 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211493868 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120971609 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.111025038 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15475181 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153432171 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176211964 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139235375 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156174802 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156038752 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.10335557 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169325917 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125188418 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183565892 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118929365 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173416773 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183924679 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126948878 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160134319 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151585335 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.123262282 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201007429 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201052835 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141955262 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106040201 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236146282 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177757002 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142302998 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17612973 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201027345 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.144146617 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150568918 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227817641 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216613017 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141347989 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227063127 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12975618 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135145425 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132659738 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181522758 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155726352 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161663315 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134170282 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184521209 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231220341 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099148608 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137871269 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19374466 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133410928 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133247335 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156268042 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147354116 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111358217 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142792842 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145696389 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17579023 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177619887 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155250302 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164573035 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15250821 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256298847 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142223785 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151427715 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14883808 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09439429 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.218783385 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200590772 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130045526 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206823551 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170465311 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229976765 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169089793 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13472476 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177363537 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102581889 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121507643 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194237119 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167789197 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160853131 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.223556458 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200227006 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.2059093 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.18657596 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167338604 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173850196 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166259517 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157147874 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.13795993 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160674507 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157407747 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096327992 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.138861393 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134102676 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147582647 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116025924 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133723786 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224980501 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171020039 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189194425 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15945032 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149759046 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181432762 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129368451 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175280487 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176996422 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147933836 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.226561498 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194791309 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18544094 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1437812 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227467759 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094032502 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124875097 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.113807707 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195335752 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106339567 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135446946 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16444279 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180560396 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1787398 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197749625 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211603305 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171804141 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218119487 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095136978 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167948045 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184682897 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176345676 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.179428891 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14059352 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15112979 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176451598 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156822183 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255480555 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170338328 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176098327 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231910421 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123654979 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132875484 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150509437 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179016911 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15418405 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176135685 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146846379 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141622679 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161079479 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102401255 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186730442 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186736611 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163257021 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187663648 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150263275 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21107858 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101005211 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162992676 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160631866 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165244812 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.107822937 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175014943 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201929038 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14936342 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167270698 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215347504 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103262935 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306819965 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23472093 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195387543 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138484374 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156805195 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161394801 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163190048 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170482207 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178911468 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158576179 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187948902 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158689275 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135983958 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141218271 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149197442 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123259973 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131861235 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149543885 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176883102 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138809234 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185970161 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155741842 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159837255 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175013508 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.1494006 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146324709 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150653554 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216095368 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211854917 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21218829 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.153142194 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.17809897 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23494547 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097631735 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134448377 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.1333664 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180618418 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108257304 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223118172 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188265505 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231317999 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183430525 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178113183 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140658784 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119317728 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129510996 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168514812 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235269074 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151945756 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.1465832 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200820132 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.138329309 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13212383 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16624117 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290364657 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145429863 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19644512 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079614852 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.303655699 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100498861 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133437123 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163557091 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208624044 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137073378 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178419306 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171363306 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162375133 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163166207 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150873146 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191592344 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24452858 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201876697 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209567196 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.10571106 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157683551 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174647299 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219847722 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158174807 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.110972147 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23268551 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196404153 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195025538 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141271381 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168610099 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169063926 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157600189 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216351115 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107189828 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236531928 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135196701 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194457379 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154023814 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138609501 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177582251 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189418176 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140672434 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214759781 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184713841 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134469054 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106305378 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169297935 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205751812 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156453746 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099532545 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209108668 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098107525 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22435145 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232762081 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135784902 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155656926 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145565968 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107914363 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154897619 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157904104 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141247691 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.165074689 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202941485 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135589987 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189918109 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23189126 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171992132 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172530743 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146741515 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693269515 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131523065 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196124307 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147232208 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234180266 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12163339 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173274376 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159325443 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168437898 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224485823 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163087692 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231192998 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194125252 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.206848948 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104963257 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158099175 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155737049 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144274323 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151454884 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169318357 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161545346 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145813566 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.17839276 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164316853 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135285288 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139642642 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200699587 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147958492 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185386983 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180128825 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1393735 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174835498 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185882573 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13445231 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179904009 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239623258 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142279105 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151150964 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106528046 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.149668971 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262289858 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124123305 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190309287 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184914772 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159364735 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168591793 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147161711 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223853022 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158018665 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188624472 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141792176 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160029824 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156861138 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137694923 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101929256 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15567368 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168319252 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150380869 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160266489 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.163062998 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196981983 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095290313 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145137451 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316524929 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177340232 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216890844 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135051115 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13457421 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161814888 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121476889 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.203408749 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180344582 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134914784 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109775862 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137049067 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.12918935 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.134480103 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156124278 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198015073 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165342813 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236159731 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.108507126 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.28002473 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140409639 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155993389 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088610719 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133826063 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150787999 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145536698 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160301128 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191720927 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264925662 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149471003 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106154126 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15010152 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125885063 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109083694 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164022933 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164746983 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20642092 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117704893 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.108599345 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156432494 seconds)
  done (took 82.600646476 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167911416 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133320375 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146749083 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201376484 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176941397 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.27014641 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210060905 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253486753 seconds)
  done (took 2.638260639 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.096879138 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146242032 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157985621 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133201469 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090905104 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119501407 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.344905424 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134003478 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116629818 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121811424 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172786642 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093832504 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.551883295 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090547149 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119405392 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106948257 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091991423 seconds)
  done (took 3.758871269 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 46.901180914 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.445539401 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.965697755 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.196481682 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.817305237 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.094157663 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.716994279 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.169196292 seconds)
  done (took 60.386361767 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118435554 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135957342 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123300716 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152021533 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140024207 seconds)
  done (took 1.744236692 seconds)
done (took 172.200081518 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.102426596 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127815523 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098105988 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129917158 seconds)
  done (took 1.527183911 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.097899223 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070079144 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100197052 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074607829 seconds)
  done (took 1.420904506 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189224328 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.167789989 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.409196311 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071399063 seconds)
  done (took 1.593276419 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115783116 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132111928 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104635324 seconds)
  done (took 1.442334742 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.108771405 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12929493 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.101925397 seconds)
  done (took 1.428440644 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10867373 seconds)
  done (took 1.195980711 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.109606659 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136694321 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108853609 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136644557 seconds)
  done (took 1.579174726 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.101452859 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126671676 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108930914 seconds)
  done (took 1.424512592 seconds)
done (took 13.048911246 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.105054049 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.513271485 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384716276 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143692722 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.720202103 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379986118 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.04267324 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145159687 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166060139 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092836933 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139099889 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.670999771 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.070851299 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.468149016 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.028607319 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.370580959 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677004742 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120494183 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118530154 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093267554 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.025145359 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091164054 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121853019 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0923061 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701643101 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42505637 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094022404 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.369466423 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091974049 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125021034 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.3817167 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121606858 seconds)
  done (took 17.167333514 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096533951 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172973339 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097950056 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13655848 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123071633 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096945629 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123766975 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092402798 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177641181 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122747755 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110198302 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121349603 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125189107 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09417858 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140998834 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092431307 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124898344 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091505348 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120242422 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120851689 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111891792 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119504841 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09448641 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120681345 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092938354 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134170173 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121609671 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093851983 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119867002 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098765712 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126733899 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094006125 seconds)
  done (took 4.79518676 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141562523 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182119022 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127295011 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125958933 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168295962 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123279044 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197715493 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117117826 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183476187 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123566357 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138892661 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092981294 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15648355 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094548312 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141815428 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119944456 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09636768 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121668388 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092375014 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122641932 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139643412 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092738773 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121382122 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093044503 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121754358 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107721032 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123814124 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120674561 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092858311 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125844542 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100234209 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123417091 seconds)
  done (took 5.124552889 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098880657 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125543888 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109606277 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139107036 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094888539 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125414394 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097373375 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12412103 seconds)
  done (took 2.004458502 seconds)
done (took 30.179123177 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114019628 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126676822 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107201212 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134346033 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102793502 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131435459 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.09152452 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133814507 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133367135 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101761892 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136879244 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091915587 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12221854 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092137906 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135081933 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097160417 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132257251 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102284865 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133616868 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133105782 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09448706 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132981801 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103206605 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132408902 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10469496 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133157438 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136369391 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099192599 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122289046 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094216198 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124050946 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103386043 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123499998 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104884908 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126428772 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097053092 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123376099 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094059593 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.13254907 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132611956 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099895088 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133225846 seconds)
  done (took 5.98294272 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.110904117 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139662248 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104641261 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080591978 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116520796 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080202248 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138106548 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079033777 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109352231 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.106881863 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074055829 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106124423 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077869497 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101705027 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07667902 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074837192 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107899187 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075044184 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075820277 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105793802 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079565182 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07225505 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107544749 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078313995 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073888124 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.1095363 seconds)
  done (took 3.559886681 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102913275 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13376326 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11286994 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183284503 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160420542 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099866256 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131808601 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138553276 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.107919231 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.12035277 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095633693 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149135156 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110250259 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129082 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091467074 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136165265 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135740738 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093890285 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127281162 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111964839 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138109062 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102057311 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.14017441 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131919193 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092108317 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122992743 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097126272 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13422759 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097015584 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131157105 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096426822 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125047989 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12300779 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103725223 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125600429 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09337985 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141259191 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102523134 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.13121648 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.09172796 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129301592 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122300435 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113909375 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16125614 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091303876 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129122677 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095240672 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.131634172 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.12137783 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111064542 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130985239 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091695796 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124859136 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091559184 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121062932 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106637163 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123805431 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094898583 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131460564 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127096195 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105914111 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125275625 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109161357 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121730715 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100538281 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121082888 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092640757 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121109125 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143153487 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094577553 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161162756 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.0932289 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122943741 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101845555 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129698027 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127129463 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093797383 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137464898 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102781198 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124851539 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101653279 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125787555 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094700628 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139967156 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.122888434 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.09434449 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121142917 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100240531 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124053418 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093772473 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135257723 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091899102 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125955761 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110212547 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122160668 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.09330403 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128427443 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126125021 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091448464 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134109574 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098837787 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122742096 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102665475 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122415459 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123931165 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102674709 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125711146 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091903465 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126628507 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099281457 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122583785 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093067359 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125324649 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093995112 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131758986 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099683175 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127399597 seconds)
  done (took 14.768085917 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229994439 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215240238 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206271336 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.291966291 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134683671 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116480734 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.21067313 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155693882 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122779049 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159973982 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173781901 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181351147 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168935215 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181176823 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169447178 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09262493 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142204496 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134135253 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.245080119 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.257093842 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143033561 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.099889359 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160708926 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160317628 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136611506 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131454697 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109693377 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133643551 seconds)
  done (took 5.780173512 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.110925113 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155550171 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098168936 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145540769 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149097862 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092114079 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127276045 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093867297 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134660383 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135526685 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09296521 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129641623 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100048596 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131593889 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122573527 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10284629 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131274664 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094354854 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125327474 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096658144 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133318255 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101675381 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126915353 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120760671 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102405638 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12160975 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086693362 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142618128 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121945024 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115088792 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120881993 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10191602 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135886534 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093607056 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122565531 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094849216 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124518769 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094871464 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.123822835 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090681939 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122119837 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077018705 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121689693 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.107105822 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.128190201 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080062177 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129081796 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127623114 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094741213 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119632748 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095642823 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125057955 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09638415 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129903238 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095909658 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124052007 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096616702 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115443153 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099565023 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125043286 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084699287 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12044845 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097926017 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117367357 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101094718 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128120957 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091614742 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125104516 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097144856 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128927631 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094650371 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.12945271 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090462387 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125723119 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095565066 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127386242 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096546849 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121444496 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121147706 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093206728 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074481286 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122719761 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073749282 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125212652 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091920217 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121089597 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094102179 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.1291702 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13724229 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095300229 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131140113 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093286852 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121639127 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096423649 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112153413 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096589988 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139682748 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141147143 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093425217 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121194968 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.1078305 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125432135 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.091793261 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105865451 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102979085 seconds)
  done (took 12.908821276 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129369076 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.1532099 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094727158 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.141049587 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155951265 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157019985 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100000847 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129753915 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09504012 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141405556 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093664989 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131419434 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093456582 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13701054 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156913711 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103700536 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124610166 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.10804347 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12760855 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168242091 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111720218 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142543482 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.111067912 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124141459 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098238222 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.140593687 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160695684 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.10726642 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136633311 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141699545 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107406121 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161039164 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112134832 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.127516617 seconds)
  done (took 5.451983168 seconds)
done (took 49.539914195 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.194013551 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.413946572 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.18879247 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.124465033 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.21777952 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.238974507 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.201521979 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.207247453 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.739862733 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.189990509 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.445815395 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.743107335 seconds)
done (took 60.026910761 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.25454936 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.328085391 seconds)
    (2/2) benchmarking "String"...
    done (took 1.455198002 seconds)
  done (took 3.904483993 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.56431603 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.134290346 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.453905986 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.189618167 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.207643062 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.479229189 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.881718675 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.549466604 seconds)
  done (took 28.019388791 seconds)
done (took 41.862085943 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.211218549 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.225993367 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.199614647 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.174988149 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.300753075 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.219477836 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.540701448 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.244377363 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.207776962 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.17400949 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.212904402 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.221107997 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.195704396 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.560324025 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.19685984 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.195358882 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.270105836 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.760205667 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.600130401 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.201014891 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.21470856 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.249692566 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.195502732 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.198383049 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.232072934 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.194244253 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.21926897 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.2080486 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.751485683 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.19352944 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.208835439 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.756988452 seconds)
  done (took 190.657857053 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.192714338 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.313539397 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.400777203 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.213994029 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.630123267 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.39327259 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.343596708 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.709497625 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.215779442 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.212438927 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.439597583 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.197231458 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.502475492 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.170894953 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.224203788 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.296752381 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.411425727 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.510158442 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.233610683 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.35487651 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.196052587 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.546785534 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.4980085 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.392580091 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.23178443 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.323793031 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.221885136 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.223435004 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.388606946 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.356911698 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.19514213 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.245260704 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.815925766 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.051520043 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.214974728 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.221860482 seconds)
  done (took 150.216868033 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.195984971 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.196869031 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196560273 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.229641855 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.194941217 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.19730828 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.779870981 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.700986627 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.724225674 seconds)
    (10/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.784418713 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.593132161 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.472234055 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.195301583 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288777668 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.20941357 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.197082045 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.21212945 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.239603915 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199467502 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.197319708 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.780298362 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.211864958 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.25778913 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.376244616 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.213636686 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229557069 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.58869068 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.198179763 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232235059 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.529647728 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.247183217 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197896321 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.607462628 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.413472883 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309610735 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19801079 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230680077 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.19815769 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.477195691 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.19679955 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.198808475 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.201632977 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.886717816 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.200987852 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.784225932 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.200562348 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.159907947 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.196905155 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199569978 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.694138332 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.915024187 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.21727223 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.198345317 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.202472113 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.199077931 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.19939983 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.231568247 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.661358319 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.295919268 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.216802616 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.203147395 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233280714 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.199038418 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.211396106 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.200242849 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.621249611 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.271516512 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.42417153 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.785018977 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.2022317 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297942394 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320092739 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.199039229 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.198744263 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199176942 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.199284441 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.310540721 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.199662358 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.623517094 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.376734643 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.217625841 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.616656511 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.301937435 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.200313377 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.604947169 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.204034466 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.200436869 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.969702691 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.199794285 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298488505 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.201226131 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.200094143 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.200745517 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199629198 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.628886013 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.787707436 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.480859886 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.204297616 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.614142108 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.20388957 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.644309783 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.758032554 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.85677509 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.201600275 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313374761 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.376536181 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.218388688 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.200584796 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.614652142 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.204865377 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.261804134 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.201211373 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.201816711 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.59949383 seconds)
  done (took 366.357470514 seconds)
done (took 708.35119039 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.79127379 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.783274719 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.893257254 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.775439178 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.740718048 seconds)
  done (took 10.115010179 seconds)
done (took 11.242508235 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.390658172 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.387372167 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264076741 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.391920112 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.233629377 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.408835499 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.369854331 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.226791136 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.303566342 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.285720531 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.303806092 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.256041272 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.237863641 seconds)
  done (took 18.193281821 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.521645032 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.52555219 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266478916 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.511032986 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245341169 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.520260936 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407762389 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.412464991 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.417918026 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235986948 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217182329 seconds)
  done (took 16.417813456 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.520115884 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.527753493 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271522387 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.524120231 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244610801 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.523159003 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.406409922 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.42689894 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.425438099 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.23818206 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217974045 seconds)
  done (took 16.46037485 seconds)
done (took 52.201946093 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.213039701 seconds)
  done (took 2.34643646 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.249873261 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.412667436 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.231846126 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.219972867 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.214411566 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.211075853 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.217102468 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.214069253 seconds)
  done (took 11.10790488 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.210320334 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.213218642 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.214024292 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.213399091 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.210566578 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.209657256 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.209747899 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.2139741 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.212736397 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.210537371 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.212588942 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.21147721 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.208218278 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.21078981 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.210570647 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.209548775 seconds)
  done (took 20.518286905 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.213196502 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.208342653 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.211314151 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.212269667 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.210797528 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.212861117 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.213164621 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.207666643 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.211208672 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.211416712 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.21227001 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.210497981 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.213274394 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.212075478 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.211288838 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.212663737 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.212048665 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.210401415 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.218628915 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.211914547 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.21157704 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.21266392 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.213690833 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.213366573 seconds)
  done (took 30.226862433 seconds)
done (took 65.330327271 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.845968922 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.907291836 seconds)
  done (took 6.889153883 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.217379403 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.214409772 seconds)
  done (took 3.571204538 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.214729552 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.215956806 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.215068369 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.21532035 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.21694848 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.212844778 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.215277719 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.211097277 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.212557865 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.2124389 seconds)
  done (took 13.281420381 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.208380742 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.211327463 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.212918354 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.217836164 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.216785684 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.214306646 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.216982698 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.217450947 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.216548922 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.21324756 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.218241491 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.216186401 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.218072196 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.216534521 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.218124387 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.215198226 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.214834504 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.215873108 seconds)
  done (took 23.016342823 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.219222522 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.219773645 seconds)
  done (took 3.578967596 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.217349744 seconds)
    (2/7) benchmarking "second"...
    done (took 1.217284044 seconds)
    (3/7) benchmarking "month"...
    done (took 1.216211374 seconds)
    (4/7) benchmarking "year"...
    done (took 1.216208002 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.216199724 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.217527483 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.216181095 seconds)
  done (took 9.656435559 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.219489128 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.395350197 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.478562197 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.816926584 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.220618666 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.223441391 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.091266696 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.223574723 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.22521996 seconds)
  done (took 14.032617725 seconds)
done (took 75.159031839 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.246490188 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.231562492 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.492353925 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.216657852 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.227445643 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.512425089 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.222263223 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.332561317 seconds)
done (took 37.619936876 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.225358899 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.195326227 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.973728367 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.189224937 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.256554549 seconds)
  done (took 18.751365867 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.255226642 seconds)
    (2/2) benchmarking "read"...
    done (took 1.544925191 seconds)
  done (took 4.936754153 seconds)
done (took 31.0469099 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211606308 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.211774765 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.213028562 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.210310831 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.211885023 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.209072284 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.209076346 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.209861005 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.212518561 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.211802748 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.214326362 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.214920983 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215105661 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209143171 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209605728 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214983052 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.21169465 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212083217 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.215216208 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211728769 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215101753 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.211029898 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.210845122 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.210353212 seconds)
  done (took 30.220971455 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.213352976 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.21147661 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.214962993 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.213990739 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.211782062 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.213943734 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.213845547 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.210853543 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.214575008 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.2132494 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212670017 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.211974478 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.215257871 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.212024906 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21411343 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.209901279 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.215163319 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212475489 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21442112 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.212384016 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.216178508 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2137046 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.217335209 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216072197 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.212373718 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214173285 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.217066202 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.213923085 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218189509 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.212610245 seconds)
  done (took 37.55090905 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.22001057 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.223306737 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.217471307 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.215283429 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.215982246 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.218221181 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.216483764 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.216138487 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.216175261 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.216458489 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.215541165 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.215760653 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.216349315 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.215490547 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.215976353 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.217544425 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.215455472 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.217208004 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.217068847 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.215277306 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.21866309 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.217146565 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.217811237 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.21766709 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.217271465 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.21911117 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.217078669 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.21790583 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.216535911 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.217639005 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.220412846 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.218857995 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.221831787 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.22144832 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.219197785 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.22174496 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.225740304 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.2306872 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.222677718 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.222446067 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.221381629 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.221875904 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.220495943 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.222139034 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.220306892 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.221508891 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.222423476 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.225402422 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.221905698 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.222811212 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.22154304 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.222275683 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.221253596 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.224216663 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.22361705 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.224379543 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.222379174 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.225357412 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.226140007 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.221052009 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.221575422 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.223770845 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.22626769 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.227132948 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.222936672 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.227188842 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.227170782 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.226192013 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.225421528 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.227270872 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.227223808 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.223367566 seconds)
  done (took 89.04168641 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.22711044 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.223305579 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.219951366 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.220238199 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224426966 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.227827111 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.225743125 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227867326 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226844155 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.228860684 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226878976 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.225129766 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225796528 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.229259959 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227487919 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.224210808 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.22903746 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226499205 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.228691403 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.22944678 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228058585 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.225923061 seconds)
  done (took 28.127796228 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230076962 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.229721849 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.226262333 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.228996522 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.224752855 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.227525599 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.229375219 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229081058 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230186107 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226710872 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225130944 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229978786 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224349193 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224189974 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227071999 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.229103683 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228957428 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.228198492 seconds)
  done (took 23.250042116 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.228112646 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.227079206 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.230374155 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.22708375 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.22690888 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.230407995 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228060196 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.230496446 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.230103071 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.228104635 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.231068893 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231599476 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.230641767 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229552255 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231512506 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.227798739 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.231614477 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228166137 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230846338 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228014913 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.227307066 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231190557 seconds)
  done (took 28.198160809 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232383809 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.231183374 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.227428714 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.228228535 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.228351885 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.231833201 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.23313994 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.228996537 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.233512999 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.231474613 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229575778 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.232521893 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.23214682 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.230067011 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.23069473 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231180285 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.232330371 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.230886894 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232367254 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.230179967 seconds)
  done (took 25.769702527 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.236868248 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232383531 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.232206644 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.233015851 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234507891 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.235269216 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233719645 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.233548908 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.232668784 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.234200198 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.234686275 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.234027456 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234260224 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.235190137 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.23540872 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235843571 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.236099614 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234393428 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.234073413 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235194893 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.236014842 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23448027 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235134006 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.234789954 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.2327663 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.23483271 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233165191 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.235227873 seconds)
  done (took 35.718083012 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229517124 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232406072 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.23131939 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.230953373 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.228002196 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.228674608 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.232080652 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.233399144 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.233108915 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.228497405 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.231773049 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.235802935 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.234451882 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.233031064 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.23019112 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.231246775 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232194408 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.231468244 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231279579 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229311693 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.234438972 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230143761 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.230664417 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.227649698 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230545101 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.237864444 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23446824 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.232746954 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233606532 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.228944942 seconds)
  done (took 38.106515273 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.25189365 seconds)
    (2/2) benchmarking "in"...
    done (took 1.251624616 seconds)
  done (took 3.659657152 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.233423908 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230689754 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.234588966 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.231437831 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.229589899 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.235555265 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.231722656 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228707092 seconds)
  done (took 11.013201121 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.234949499 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.233208649 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.237824145 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.236312826 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.236931365 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.237569153 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241335598 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.25495239 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.233052836 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.236297267 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.24221245 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.239381715 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.240917707 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237382282 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.238869618 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.238385663 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.240766474 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.239468272 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.237707335 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.235227796 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236427067 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235378419 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238929744 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.232793617 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.235212338 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.247572652 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.266118111 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.238325158 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.235751298 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.241236782 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.240297956 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.23591836 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.235696859 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.235100713 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.240453751 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.237678082 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245310503 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255577994 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.245493401 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259286142 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240745223 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.237910843 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.240257248 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.242313389 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239825464 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.243340356 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.240820181 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.238859207 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.23868413 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.243711771 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.244538626 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242148688 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.237855649 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245618154 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.243513258 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247015832 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.260045784 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.244166702 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.245778169 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.25097297 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.275775976 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.267536115 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24332675 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.24314548 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249442682 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.264999451 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248070224 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.260896694 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.238582278 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.244606065 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.251438249 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276155944 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.26891658 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.242968598 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242939566 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.24289124 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242586054 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241667417 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250117476 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.266785612 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.24235072 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243269689 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253200888 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262111763 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.242794833 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.244077737 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.243452746 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.242519926 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.242452436 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248651463 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.265842919 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.243682213 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.243011873 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.243974973 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.245121198 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.243820232 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.242834167 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243874684 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.242705394 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.246138902 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243835797 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246870827 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.250794786 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243867244 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.24419017 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.251642586 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.265833675 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245596711 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.251246578 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.247595942 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24432535 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.245756468 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.250863213 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.241938129 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246570301 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.251422598 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.244724885 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.245738793 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.244552106 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.245130162 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255225717 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.269403435 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.248739329 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.248118206 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.2525688 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.254708653 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251843787 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.247987899 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.249077196 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.243230928 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.244364424 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.248079048 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.248490869 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.246520381 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.246440347 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247526772 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.245858388 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.248151112 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.247303555 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.246776536 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.247259267 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.248080658 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.24994383 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.250498366 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.246230697 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.247975463 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.25604406 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.266640736 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.249644294 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.247413267 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.246207313 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250037232 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.246990391 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.247118215 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.250416499 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249775288 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.246895365 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.24751323 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.248280621 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.249015857 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247350199 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.248082022 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253845332 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.248336032 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.251506611 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.25070861 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.246566548 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.248900054 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.2493045 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.247577423 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.249003202 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.248345092 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.252045616 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.258211845 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.248780761 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.246958838 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.250307972 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249028075 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251456564 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248810523 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.251818375 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.260376024 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.252426339 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.256632076 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.269654639 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.250293937 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.249270122 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.251629753 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.249159625 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251737094 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.252771306 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.260083781 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261758099 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275255717 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.252027448 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.256300695 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.250033339 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.255454408 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.255987269 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.251546394 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.253989321 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251480312 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251488152 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253053565 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.254554982 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.25295012 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.248913894 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.252950052 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.252895709 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.251265045 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252195983 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.251367018 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25128939 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.24982119 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252492083 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251279025 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.253066833 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.251159584 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.25023726 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.250483892 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.254993118 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.25316912 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.257915639 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.251736542 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253230593 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253904608 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.254513917 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.251858596 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.251978869 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254457993 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.252943047 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25889108 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.272163534 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.253870585 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259155308 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.272612207 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.252965082 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.254062584 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.256674043 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.252458731 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.25633653 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.265134148 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.254268642 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.253923015 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.253368903 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252692387 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255486293 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.259901188 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.271083419 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.253855443 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.254939123 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.255825963 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.250181459 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.254706718 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.255271494 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.25378201 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257225576 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257654981 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.255350913 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255331742 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.254211917 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.255194221 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.254841144 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255999832 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.26388459 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.259707024 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.257113994 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.25548165 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.255614119 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.258117581 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.255096438 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.255135016 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.255113511 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.267622665 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.279625308 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261950601 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.274692057 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.257170331 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.260349289 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.276050755 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.259542253 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256703011 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256673283 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.256089391 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.25611891 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.254662957 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257545379 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.256103025 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256495016 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.258996372 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.261427779 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.256813384 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.256557727 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.255643799 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.25468374 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.256835985 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.257000239 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.257571798 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.257203959 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257697525 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.256113176 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.257209075 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263543816 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276106821 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.257253341 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.256802672 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.256776584 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.256905723 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.258076217 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.258374707 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.260506888 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.268331504 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.260730306 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.263028615 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.25827928 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267511808 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.258912941 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.261495709 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.266705457 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.256046184 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.25710084 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.258139528 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.261334256 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265834364 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.279118906 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.260246664 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.261959844 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258629623 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.2582434 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.25802718 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.260118527 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259952413 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.260557687 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.268240368 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.279508166 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.26441855 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259607412 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.255527121 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.259324301 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.259753366 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.256905199 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262836069 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.260277017 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.259763172 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.260570579 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.259984362 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.261026232 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.260903707 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.260247724 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.25852911 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.261636443 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269201884 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.282629007 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265444706 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.261128774 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.267081708 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.27831825 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26691544 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.282536933 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.261727877 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.262510267 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.262618348 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.262348294 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.260331745 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.261976698 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.261885158 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.262470598 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.265320296 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.263063369 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.263274877 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.262510024 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.262577233 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.261651805 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271468789 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283767668 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.264364581 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.267001783 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.259841335 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.26327558 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.267672975 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.262360163 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.261855761 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.265464161 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274917064 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271965815 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.262977904 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.26426799 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263593002 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264144712 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.264232213 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.264642484 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.264625057 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.264005034 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.264310025 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.263853026 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265600682 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.264992454 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.264480044 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26373189 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.265535559 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.276100684 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.279955471 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.265385526 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266682365 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.265921075 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.266273816 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.26565948 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.265397853 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263963039 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266017202 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.267315923 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271530373 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.266548283 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.269499945 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.266968328 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.266279932 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.265096108 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.265477689 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267613622 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.265172081 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265779237 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.265562906 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.265360423 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.265117463 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.264684905 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.266978792 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.267567175 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265784646 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268897126 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.270154421 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266697181 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.258693321 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.267637248 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26485677 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.263274989 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.267171879 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.273793909 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286958147 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.274590289 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.270417023 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.271795856 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.265051679 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270031092 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.274315564 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.266653312 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.266251619 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.268294374 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.26766074 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.268814373 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.271501524 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27091911 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.274159733 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.289652826 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.264706763 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.275298256 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.28762162 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.267661823 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.267854267 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.273887807 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.266519237 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.264547528 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.269690691 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.267351883 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274128204 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.288576227 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.269482011 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268022141 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.268118736 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.267564515 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269326386 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267368301 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.2694866 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.266554515 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.269781757 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.267799066 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267484382 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.265024286 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.263806471 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.267359381 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.26945871 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.27148808 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.266479548 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269485283 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.269913595 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.268477122 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.270759892 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268440824 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.268759034 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.267409554 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.268061519 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.27052095 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.266577622 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.271221664 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.267626627 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.269638673 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.268656397 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270538334 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271703665 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.274286187 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.27165857 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.265997182 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.269778198 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.270154178 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.272268143 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270423143 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.269048162 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269679117 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.271267125 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.271398258 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269879631 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.269281225 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.275002979 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284014125 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.292697514 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269604643 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.27292423 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27110489 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.273704565 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.268679996 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.274329561 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.272954085 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.27206262 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.273714836 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.267531286 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272894705 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.290659081 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.27114526 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.273887797 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.274152766 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.275256199 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.27505901 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.273887074 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.274156927 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.275247498 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.28653753 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273255345 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279150507 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.300645728 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.295969039 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.272644297 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.270315579 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271928707 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.268694343 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.272892862 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.270274793 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.272076474 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273899474 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.271661423 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.27348561 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281992777 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.27493163 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.275384167 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.272506748 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.273508553 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.271010778 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.272381685 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.271644498 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.272417543 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.271695329 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.27289227 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.270388575 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.273751404 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285827152 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.3014178 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.269987284 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.272017895 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.265846261 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.273131078 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.273568009 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.281411831 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.276853606 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.273497905 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.274663768 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.270405512 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274012181 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.272351112 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.272371207 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.27198126 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273293826 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.270934072 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.287166572 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.303977183 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.281576004 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.274844138 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.269934662 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.275497913 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270862661 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27389995 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.274607652 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.27490336 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.274479377 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275390139 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.274934754 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.275723309 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.273650311 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.28090493 seconds)
  done (took 751.995496278 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.271204755 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272406883 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271388276 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.269813406 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26988605 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272530843 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269605224 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.269224424 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.271496511 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.272913159 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.270870349 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272643542 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.270093095 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.269838201 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270820321 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.27488212 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269468879 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.270548225 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272737226 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273523966 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.270738297 seconds)
  done (took 27.889610822 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.278145928 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.269679925 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.276002945 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.273745985 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273489181 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.275296695 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.2713223 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276086885 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.275013084 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272603043 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.276114696 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276215276 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.277437098 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.273505568 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27394161 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.277789348 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.275993896 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273825665 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.27881374 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.275304892 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277619293 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.272900029 seconds)
  done (took 29.245529651 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.276475261 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.274072906 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.27259587 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.275122644 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.277400225 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.275341839 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.277227928 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.276845221 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.278304571 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.2741329 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.275685773 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.277786896 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.284892203 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.283106344 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.276954129 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.276736586 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.417636639 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.280684928 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.27774984 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.278636435 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.272783829 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.284162683 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.300211067 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.277552279 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.277785697 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.278889032 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.278427863 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.278549273 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.277964164 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.279141878 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.282619888 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.280210469 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.27719136 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.28052597 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.274996672 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.277370239 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.280989276 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.275800128 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.273666273 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.279668331 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.288761741 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.299541906 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.277327514 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.282757726 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.303917129 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.276346012 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.284042955 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.287731955 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.277625084 seconds)
  done (took 64.051908903 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.277151786 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.27923698 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.274423779 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.279377264 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.281151015 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.280564745 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.279668559 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.276521503 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.278050925 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.277835597 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.28042418 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.276477642 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.27841228 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.277149304 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.281861959 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.278670871 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.278524842 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.2807949 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.278007324 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.279161285 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.278430937 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.28162304 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.278316103 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.277097173 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.280956082 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.280107443 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.278397282 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.282568464 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.280248354 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.2784836 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.281802005 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.278959366 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.279609244 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.280096195 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.280725166 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.2811796 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.283995177 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.279055804 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.282115858 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.281787503 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.283099644 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.283323163 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.282567539 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.282168676 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.276643008 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.279886523 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.280067541 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.279852554 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.27961096 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.282861926 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.282805621 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.278201352 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.280614572 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.279726959 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283297506 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.283856855 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.28074753 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.279088176 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.281610584 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.27776679 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.277663901 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.283913633 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.281136749 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.27877404 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.284266171 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.281373696 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.282126751 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.284170611 seconds)
  done (took 88.250253447 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.283560605 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.283988216 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284246472 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283896947 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277774085 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.283034545 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.282948919 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.282747185 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.283943303 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.28413597 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281469967 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.284350014 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.281627467 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.286167153 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.284120163 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.283610619 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.284475447 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.282064724 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.285698666 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284281723 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.284530573 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.284625725 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.284372008 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.281730855 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.283102988 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.285900645 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.283307187 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.283061811 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286428109 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286742698 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286003737 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.284855091 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.286123681 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.284344094 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.286515495 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.285350214 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285916085 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286370454 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.285965133 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.283333124 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.287772183 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.284917806 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.287362973 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.282815672 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.286302198 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.283548167 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.285166594 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.286341639 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.283981311 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.283926737 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.283356102 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.286499643 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287257484 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.286153837 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.28501152 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.2878303 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286940643 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.286427223 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289109116 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.286490672 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.283135476 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.288716171 seconds)
  done (took 80.861622998 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291007219 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.288472394 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.286267805 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.286136656 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.285721357 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.28656547 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.288912653 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.290066887 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.285929955 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.285895707 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289758559 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28535528 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285233071 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288594965 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.283511089 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286123654 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285860701 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.281650733 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288328343 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.287113013 seconds)
  done (took 26.94381939 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.286144731 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.287591825 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.286396531 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.287250569 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.287571729 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.287793171 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.289618015 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28567743 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287407643 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287598325 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.289762455 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286815689 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284378743 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.284832655 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.289525352 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28387235 seconds)
  done (took 21.801660817 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.289129205 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.290870704 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.284709185 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.286945027 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.285398326 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.288298413 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.287588477 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.289594529 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.283614532 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.286576682 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.288752022 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.287451832 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.291177691 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.289237353 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.28416235 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.290222804 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.28716153 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.285237005 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.288069263 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.289294754 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.286041148 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.288756601 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.28996403 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.29013967 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.28911949 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.286639329 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.290467623 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.289007966 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.287319384 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.293012146 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.290528429 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.286588554 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.28876638 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.290829114 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.293820959 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.290493423 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.288995175 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.289485637 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.290757143 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.29297339 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.288931575 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.289861852 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.294069437 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.291287097 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.286652137 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.293409692 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.291196061 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.288852656 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.291722881 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.291680357 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.293215735 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.293104724 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.288927852 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.294079831 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.290201303 seconds)
  done (took 72.125847507 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294065702 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.291553457 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.292338651 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.292013259 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.293490922 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.28844852 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.294981829 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293910192 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28935815 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.289908922 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293713736 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.292063719 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293193934 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.291678563 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.290346824 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295502214 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.291119265 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.288868979 seconds)
  done (took 24.469492546 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.290100873 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292758672 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.295653847 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.292585144 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.293650069 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.295491119 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.292941144 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.29398988 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296644381 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.288914626 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291968849 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.293497111 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298151095 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.294998976 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294791763 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292578092 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.293085541 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297013674 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.294296303 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289557143 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29736838 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296267441 seconds)
  done (took 29.680022286 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.29580027 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.295287166 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.295268908 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.311406811 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.313162394 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.312358857 seconds)
  done (took 9.037382152 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299777498 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290856425 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288112885 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290782743 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292554238 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291482982 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289400468 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289221703 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296376497 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295104597 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290246614 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293167997 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295049822 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28512757 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28587548 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285970447 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285131611 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284977164 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285727958 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287170426 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285018323 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287008714 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284712406 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285092286 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285169182 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284179648 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289208079 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28653896 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286204332 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287164368 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287262153 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284922073 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286888566 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284422049 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288030488 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289582344 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285028868 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28801529 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28791983 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284096021 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288156084 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287314287 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288105959 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286599603 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28791535 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286377566 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285624016 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286681389 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285912813 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289870998 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289769191 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286217884 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286719481 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28717145 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28741808 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288357338 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285152609 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284769493 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286621775 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285811848 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284390452 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287872822 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284571385 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286161484 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287597761 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284243044 seconds)
  done (took 86.219994241 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285663305 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285632372 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285475443 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285513738 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28609302 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285766722 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286496827 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286321947 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285581206 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286038003 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289463032 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28497491 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285827054 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285646094 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286245768 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286165274 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287020713 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286998391 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286291291 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289502266 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286380034 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286331639 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286840659 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286524144 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286374903 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290011094 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288356154 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28701341 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286517806 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286931898 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287073805 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286899503 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286699972 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.286464834 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286924209 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286199255 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287193834 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286675571 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287407711 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288865119 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287598498 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290628471 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28770567 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287866723 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287711842 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28659243 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287295124 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288239553 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287148256 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287027314 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288347163 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288970409 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288270102 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288050743 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288712992 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288642856 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288056036 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288379722 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288865447 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291060665 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289312293 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289316089 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291839461 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289472428 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288207085 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289932533 seconds)
  done (took 86.176349156 seconds)
done (took 1750.536380921 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.452252352 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.406375156 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.288466827 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.290326286 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.288944246 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.309648269 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.308313535 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.28911863 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.288547397 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.289853368 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.289137594 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.477368009 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.344115911 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.290542653 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.28903169 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.384943832 seconds)
  done (took 42.494461316 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.320059159 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.299578949 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.41491612 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.31740044 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.320153186 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.488683985 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.35499725 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.300493957 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.476986388 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.342219361 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.918644711 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.319783305 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.29779601 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.449073934 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.313309955 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.488868317 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.555408686 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.921650261 seconds)
  done (took 30.108198178 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.769948309 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.327470823 seconds)
  done (took 9.305642746 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.316319772 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.295317472 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.297272375 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.29571383 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.287114751 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.287908847 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.294809995 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.290988559 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.178274334 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.43271823 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.298500789 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.304862485 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.314593101 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.297461527 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.292846726 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.33311682 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.472948053 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.295490149 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.293263384 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.301218897 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.29683442 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.391223245 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.338717188 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.295463258 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.427263904 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.156165992 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.30160151 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.304173813 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.451849908 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.295463054 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.294789342 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.295783487 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.298170945 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.90824399 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.737073746 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.308146203 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.320872731 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.304638086 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.295200901 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.434791131 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.297683677 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.30156169 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.289624514 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.728948204 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.430814791 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.41589341 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.521454389 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.312980289 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.298893663 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.357771628 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.29570116 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.296746992 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.325057047 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.061923324 seconds)
  done (took 109.78560955 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.331256821 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.682118877 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.456154051 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.309221245 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.931129144 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.939603628 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.308721379 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.592081474 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.351883549 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.289907287 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.590647008 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.814957557 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.314089276 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.313740099 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.97537314 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.367358478 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.290417351 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.026015978 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.310830857 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.291982384 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.80145591 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303293014 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.308733606 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.455005117 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.328027202 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.771983537 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.802709976 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.626779272 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.314188809 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.290202506 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.772596614 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.316396222 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.345781403 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.29087338 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.562388677 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.679688953 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.672060658 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.31266607 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.337476247 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.291230537 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.310966711 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.764411869 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.679051692 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.322312262 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.291230348 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.769334721 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.311329313 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.292350257 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.292290238 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.493117919 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.004571113 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.292021516 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.787110752 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.29599958 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.648460816 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.355376223 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.377984075 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.80205485 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311756574 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.326477432 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.358563432 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.293042425 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.299818969 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.294684692 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.293620476 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.664139404 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.642091606 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.291230735 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.661585742 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.78945731 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.315047926 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.854059835 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.205157667 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.313925385 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.390264763 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.291927721 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.843697574 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.811791011 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.341347298 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.292943028 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.646981442 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.313297731 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.583727525 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.316393843 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.292186695 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.819245276 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.299714596 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.350740081 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.294031232 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.311630389 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.944279792 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.297772636 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.569857296 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.325717692 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.293826325 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.293323098 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.308258483 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.294254571 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.316881539 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.299006296 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.830773897 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.314179903 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.413548251 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.31346278 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.29372717 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.292803105 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.296651387 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.293051977 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.513740764 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.772944374 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.319988253 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.297589605 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.297177054 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.311723603 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.457970735 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.298788979 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.619814252 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.319284594 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.293843209 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.304655 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.957688708 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.34708029 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.294059473 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.293069287 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.18838988 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.503904215 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.313824049 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.293335107 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.29485105 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.317830206 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.54185483 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.312678945 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.342166498 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.294932409 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.004473289 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.342698123 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.302852309 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.643842072 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.300538935 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.293935827 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.301411671 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.29383439 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.604490503 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.562622815 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.573705662 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.295595652 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.317412101 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.006523128 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.357422926 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.431561929 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.315167748 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.341163911 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.490947146 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.75914712 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.295176858 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.941849992 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.295042606 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.508610353 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.294874091 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.595928728 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.795579561 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.317653503 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.303136995 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.009810751 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.031023646 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.970051122 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.294296011 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.575537409 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.264600634 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.772504846 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.295627673 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.293594432 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.75450945 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.295585108 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.301955468 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.295186113 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.295671034 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.431214382 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.468081855 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.456910922 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.303565938 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.747178503 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.340318818 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.294956044 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.302509769 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.294833946 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.643652594 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.389428723 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.296213452 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.334030164 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.297466734 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.299112712 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.777475007 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.252788047 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.303125238 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.446386566 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.927498465 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.31898142 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.297684481 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.924811268 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.594247761 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.811334999 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.358190157 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.613631364 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.3204835 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.334851872 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.874127741 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.359280368 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.767067736 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.316022457 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.303036583 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.892626096 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.319290572 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.65428102 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.296457557 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.296423285 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.855777541 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.317953213 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.299049225 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.525782461 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.314099046 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.5495002 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.2979242 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.311185218 seconds)
  done (took 1103.656871599 seconds)
done (took 1296.554272906 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.295773322 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.294569552 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.282746245 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.301363848 seconds)
  done (took 26.391659931 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.305836325 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.302467275 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.303928869 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.301705333 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.304529215 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.302895683 seconds)
  done (took 9.039243574 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.3684624 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.295715335 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.301704164 seconds)
  done (took 19.182865209 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.503556525 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.595742992 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.653309628 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.43972234 seconds)
  done (took 10.409600157 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.30387651 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.304959775 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.302787761 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.305055293 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.307060154 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.309317013 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.305991913 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.306298104 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.312357267 seconds)
  done (took 12.973758863 seconds)
done (took 79.210241132 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.375370914 seconds)
    (2/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.316220408 seconds)
    (3/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.468415777 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.884920042 seconds)
    (5/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.283151982 seconds)
    (6/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.278121348 seconds)
    (7/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.459009314 seconds)
    (8/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.095855152 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.561972563 seconds)
    (10/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.518452246 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.339482559 seconds)
    (12/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.278909403 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.324879756 seconds)
    (14/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.475660314 seconds)
    (15/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.279639837 seconds)
    (16/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.782342602 seconds)
    (17/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.278409885 seconds)
    (18/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.270978456 seconds)
    (19/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.71678352 seconds)
    (20/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.343794314 seconds)
    (21/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.646921787 seconds)
    (22/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.325887429 seconds)
    (23/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.115920093 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.668505283 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 6.314897298 seconds)
    (26/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.277930636 seconds)
    (27/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.416796618 seconds)
    (28/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.80319809 seconds)
    (29/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.313070485 seconds)
    (30/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.674233462 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.401104076 seconds)
    (32/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.307721533 seconds)
    (33/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.542864017 seconds)
    (34/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.381457461 seconds)
    (35/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.323832013 seconds)
    (36/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.460428593 seconds)
    (37/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.278641084 seconds)
    (38/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.278582277 seconds)
    (39/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.67840726 seconds)
    (40/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.697659719 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.646067288 seconds)
    (42/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.293489988 seconds)
    (43/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.090226773 seconds)
    (44/286) benchmarking ("sort", Float64, true)...
    done (took 6.303956546 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.690041466 seconds)
    (46/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.495474481 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.428293482 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.556589325 seconds)
    (49/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.500373152 seconds)
    (50/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.299729048 seconds)
    (51/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.434340453 seconds)
    (52/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.12620905 seconds)
    (53/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.05386685 seconds)
    (54/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.311071484 seconds)
    (55/286) benchmarking ("sort", Int8, true)...
    done (took 6.304159863 seconds)
    (56/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.342710078 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.35525767 seconds)
    (58/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.663675379 seconds)
    (59/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.109877838 seconds)
    (60/286) benchmarking ("sort", Float32, true)...
    done (took 6.298512837 seconds)
    (61/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.196568446 seconds)
    (62/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.824508596 seconds)
    (63/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.407376895 seconds)
    (64/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.64967507 seconds)
    (65/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.116148805 seconds)
    (66/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.429182563 seconds)
    (67/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.285280532 seconds)
    (68/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.415174228 seconds)
    (69/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.38477391 seconds)
    (70/286) benchmarking ("sort", Float64, false)...
    done (took 5.59041488 seconds)
    (71/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.313467937 seconds)
    (72/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.321309776 seconds)
    (73/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.392989712 seconds)
    (74/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.323441568 seconds)
    (75/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.324038845 seconds)
    (76/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.061938066 seconds)
    (77/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.318988966 seconds)
    (78/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.073079988 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.948660352 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 5.475093572 seconds)
    (81/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.307067382 seconds)
    (82/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.27791397 seconds)
    (83/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.306298505 seconds)
    (84/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.737872822 seconds)
    (85/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.043894158 seconds)
    (86/286) benchmarking ("sort", Int8, false)...
    done (took 4.315458534 seconds)
    (87/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.41161747 seconds)
    (88/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.278411215 seconds)
    (89/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.759408755 seconds)
    (90/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.278983348 seconds)
    (91/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.892367757 seconds)
    (92/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.283947294 seconds)
    (93/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.31784785 seconds)
    (94/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.249160831 seconds)
    (95/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.299422245 seconds)
    (96/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.634261272 seconds)
    (97/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.763866546 seconds)
    (98/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.406255129 seconds)
    (99/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.546268656 seconds)
    (100/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.515224623 seconds)
    (101/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.133155918 seconds)
    (102/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.309505067 seconds)
    (103/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.28029302 seconds)
    (104/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.520493167 seconds)
    (105/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.330877566 seconds)
    (106/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.462140309 seconds)
    (107/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.299336288 seconds)
    (108/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.313150973 seconds)
    (109/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.289281922 seconds)
    (110/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.301121504 seconds)
    (111/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.365592499 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.699467462 seconds)
    (113/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.414423591 seconds)
    (114/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.279203893 seconds)
    (115/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.721601445 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.817648767 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.345123899 seconds)
    (118/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.342763472 seconds)
    (119/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.322368684 seconds)
    (120/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.366022567 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.572486676 seconds)
    (122/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.279553994 seconds)
    (123/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.286047908 seconds)
    (124/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.678943258 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.029203632 seconds)
    (126/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.306133348 seconds)
    (127/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.389966945 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.57850808 seconds)
    (129/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.317665567 seconds)
    (130/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.004235232 seconds)
    (131/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.163390466 seconds)
    (132/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.302163111 seconds)
    (133/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.366823871 seconds)
    (134/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.050303618 seconds)
    (135/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.045334797 seconds)
    (136/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.512406733 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.403752334 seconds)
    (138/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.737899131 seconds)
    (139/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.479754055 seconds)
    (140/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.284832104 seconds)
    (141/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.322938485 seconds)
    (142/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.659891492 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.067843228 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.327311037 seconds)
    (145/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.489403101 seconds)
    (146/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.012916635 seconds)
    (147/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.329117298 seconds)
    (148/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.32884055 seconds)
    (149/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.664156509 seconds)
    (150/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.297065021 seconds)
    (151/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.516533812 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.343923175 seconds)
    (153/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.607602619 seconds)
    (154/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.310264282 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.710543498 seconds)
    (156/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.549760946 seconds)
    (157/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.115225725 seconds)
    (158/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.416367162 seconds)
    (159/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.333733712 seconds)
    (160/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.28984421 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.196783602 seconds)
    (162/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.283836774 seconds)
    (163/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.450502681 seconds)
    (164/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.033896698 seconds)
    (165/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.023341091 seconds)
    (166/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.329864052 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.142220531 seconds)
    (168/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.848579613 seconds)
    (169/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.388447991 seconds)
    (170/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.895726368 seconds)
    (171/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.372621757 seconds)
    (172/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.389333402 seconds)
    (173/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.857334768 seconds)
    (174/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.319438454 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.142282888 seconds)
    (176/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.12240985 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.349051793 seconds)
    (178/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.368911406 seconds)
    (179/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.389698286 seconds)
    (180/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.284594517 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.348443497 seconds)
    (182/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.367970887 seconds)
    (183/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.128726507 seconds)
    (184/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.088203118 seconds)
    (185/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.287276956 seconds)
    (186/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.315805588 seconds)
    (187/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.916719145 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.207620631 seconds)
    (189/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.700371886 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 5.407712778 seconds)
    (191/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.344468826 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.379384525 seconds)
    (193/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.313079838 seconds)
    (194/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.710660683 seconds)
    (195/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.097944941 seconds)
    (196/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.321584927 seconds)
    (197/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.327814614 seconds)
    (198/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.32476341 seconds)
    (199/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.535429205 seconds)
    (200/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.645961845 seconds)
    (201/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.33381556 seconds)
    (202/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.295717485 seconds)
    (203/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.52226936 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.928582491 seconds)
    (205/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.329967847 seconds)
    (206/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.346964542 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.213350259 seconds)
    (208/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.330964051 seconds)
    (209/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.417008207 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.32812407 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.345481993 seconds)
    (212/286) benchmarking ("sort", BigInt, false)...
    done (took 6.305478031 seconds)
    (213/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.381660056 seconds)
    (214/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.3296821 seconds)
    (215/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.315494248 seconds)
    (216/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.369521611 seconds)
    (217/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.573727311 seconds)
    (218/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.580501783 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.910820986 seconds)
    (220/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.331982967 seconds)
    (221/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.286044211 seconds)
    (222/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.290799514 seconds)
    (223/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.067914901 seconds)
    (224/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.334231285 seconds)
    (225/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.526382851 seconds)
    (226/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.651194805 seconds)
    (227/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.817263648 seconds)
    (228/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.798267789 seconds)
    (229/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.288125016 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.922404842 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.509467685 seconds)
    (232/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.719872244 seconds)
    (233/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.286366447 seconds)
    (234/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.287106157 seconds)
    (235/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.33150823 seconds)
    (236/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.794889804 seconds)
    (237/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.310980902 seconds)
    (238/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.396882922 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.913877583 seconds)
    (240/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.407264376 seconds)
    (241/286) benchmarking ("sort", Float32, false)...
    done (took 5.297209789 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.701309422 seconds)
    (243/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.28868431 seconds)
    (244/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.304658172 seconds)
    (245/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.293065404 seconds)
    (246/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.342465159 seconds)
    (247/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.546601115 seconds)
    (248/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.004771219 seconds)
    (249/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.674106662 seconds)
    (250/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.325003136 seconds)
    (251/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.308880588 seconds)
    (252/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.288113463 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.703513976 seconds)
    (254/286) benchmarking ("sort", BigInt, true)...
    done (took 6.321843844 seconds)
    (255/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.287673265 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.399863598 seconds)
    (257/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.39111803 seconds)
    (258/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.25060906 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.405312287 seconds)
    (260/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.678686559 seconds)
    (261/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.426735873 seconds)
    (262/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.426539243 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.424087803 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.845020688 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.154894748 seconds)
    (266/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.336305073 seconds)
    (267/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.306279074 seconds)
    (268/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.288770003 seconds)
    (269/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.410380464 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.350871717 seconds)
    (271/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.308464834 seconds)
    (272/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.316756716 seconds)
    (273/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.550035223 seconds)
    (274/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.288783991 seconds)
    (275/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.65486838 seconds)
    (276/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.43239057 seconds)
    (277/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.906373744 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.190834897 seconds)
    (279/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.651778069 seconds)
    (280/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.320723659 seconds)
    (281/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.29568541 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.34818941 seconds)
    (283/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.507904613 seconds)
    (284/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.776833625 seconds)
    (285/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.297471797 seconds)
    (286/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.295903244 seconds)
  done (took 926.975896362 seconds)
done (took 928.192594795 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.344927623 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.339000868 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.322482482 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.344061872 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.432019194 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.344989643 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.332822492 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.324945909 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.370245146 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.37271998 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.321567502 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.344037572 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.323299098 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.322127031 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.323311407 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.336936434 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.338073949 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.32827458 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.340126588 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.333385703 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.339501511 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.322615748 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.373410523 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.345762862 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.327027949 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.326544167 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.325966742 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.342520058 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.43471187 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.326322144 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.327116675 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.335615713 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.32324883 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.323308983 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.318994361 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.342860702 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.334797218 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.333114331 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.328128828 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.354378061 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.709837405 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.339376612 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.324872183 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.328125351 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.325962817 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.329250162 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.325623773 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.332520125 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.337830909 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.340041494 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.695835868 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.355395049 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.328224312 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.325404212 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.336230888 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.326234118 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.331056958 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.341490152 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.343851156 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.34274385 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.325000936 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.333391208 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.327548903 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.342544954 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.332294835 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.733671009 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.338362258 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.330838018 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.709814981 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.348365613 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.730446361 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.348901068 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.328774659 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.339039896 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.360138464 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.339971709 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.324760397 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.327318905 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.333308996 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.323364594 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.336865849 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344115251 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.333095714 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.328454389 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.341902117 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.349616623 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.337337715 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.327284166 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.337367732 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.349398279 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.333716542 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.337822266 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.332170101 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.324205533 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.338667424 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.331851658 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.333632829 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.330282682 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.331730301 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.340288382 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.705528851 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362200081 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.324656864 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.328357072 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.32928921 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.342566091 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.705583292 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.344021277 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.350505769 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.379934719 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.331325492 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.327092027 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.335963529 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.347171242 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.338753849 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.332962976 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.32717183 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.328993538 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.729857431 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.363442616 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.331468417 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.328549622 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.347528239 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.331297477 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.32724796 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.339799338 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.333461906 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344353344 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.4526617 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.341319299 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.362860409 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.328145308 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.333543971 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.352738954 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.347094636 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.360187587 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.334117813 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.346977902 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.345533801 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.327952394 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.340570681 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.342328716 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.332546318 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.337498107 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.325141921 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.353888895 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.344338964 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.345743507 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.352028396 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.451847467 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.329185351 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.325688041 seconds)
done (took 223.908411562 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.38961489 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.323839416 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.41027121 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.326650935 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.423887974 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.425156447 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.324207631 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.324369414 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.32457047 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.709497629 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.325211385 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.325737299 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.3195934 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.326107153 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.411024913 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.327142565 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.324506809 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.670023118 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.327199544 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.397445302 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.325693657 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.326625982 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.327572785 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.708280699 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.325178874 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.322237542 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.397718029 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.327889758 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.675535661 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.324781909 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.324021468 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.674810836 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.418043914 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.346851275 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.336683628 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.337905189 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.428046088 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.345485575 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.409820999 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.410312317 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.413320344 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.367559489 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.322230096 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.327685321 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.329632858 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.329291113 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.326495333 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.355283778 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.32615379 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.327215711 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.671093022 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.338170773 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.336397412 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.326100815 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.326825144 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.350124849 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.326848364 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.330104829 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.419271878 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.32959952 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.392805922 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.710440481 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.710989221 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.329803693 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.323131933 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.328694627 seconds)
  done (took 148.045871646 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.394940057 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.403161811 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.438435674 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.345252391 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.377728738 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.442698824 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.345590586 seconds)
  done (took 10.988374764 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.335733103 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.330619876 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.379206732 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.380062798 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.330812454 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.508872914 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.330386965 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.341688305 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.329211182 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.382194221 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.331954832 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.331560517 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.337601189 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.32905579 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.378156545 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.341955384 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.445091343 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.331843291 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.330267834 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.487585106 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.329992032 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.337329287 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.38272909 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.341691799 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.333634355 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.336536416 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.143829 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.331632521 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.329554918 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.332019603 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.330432867 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.409197899 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.333347235 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.329320845 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.329340375 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.448843719 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.332499535 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.330959949 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.332256265 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.326951829 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.331717119 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.332699786 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.333664498 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.330680286 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.333610464 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.355602321 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.333750827 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.333602585 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.333656978 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.333438285 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.382248471 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.333984818 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.330837174 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.331624909 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.387895089 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.340290092 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.333871111 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.331013415 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.33463431 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.33159167 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.489675608 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.379580271 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.333104429 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.382268948 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.334952413 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.334290773 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.335410442 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.334996888 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.388518255 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.334693136 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.382534155 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.332183965 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.523099293 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.355969976 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.337254497 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.336461809 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.33713002 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.334300515 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.327951907 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.339889281 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.332065574 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.336838334 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.340584273 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.332289443 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.332727577 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.511598038 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.443867487 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.33213831 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.34810628 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.340902498 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.333328004 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.388472406 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.336177159 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.334398204 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.388200078 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.450841503 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.38968914 seconds)
  done (took 153.557997876 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.341084295 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.34466283 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.337339004 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.352613281 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.337596546 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.336506405 seconds)
  done (took 9.297936522 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.337930238 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.338988303 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.337812648 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.33756671 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.338328846 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.338024602 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.337828387 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.33628502 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.339796319 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.337894095 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.338360767 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.338422362 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.339121232 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.338553213 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.337103084 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.336420804 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.337801382 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.335703716 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.337466296 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.33850328 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.44774731 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.338165658 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.338643075 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.336767292 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.341994219 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.337720221 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.345590336 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.338755473 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.338189425 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.346534907 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.35645727 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.338767754 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.338485095 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.343154277 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.341971835 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.338770535 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.343599244 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.339479114 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.337782539 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.339442571 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.34048208 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.340369589 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.340077065 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.340065441 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.340850331 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.343562882 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.344974718 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.3468663 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.340103972 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.339781381 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.340426842 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.340322143 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.340417166 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.341200363 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.342371258 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359624046 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.343879692 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.341507893 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.340624075 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.340721557 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.34179575 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.341265836 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.342194781 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.344726278 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.339714841 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.341774993 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.340526459 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.345319609 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.342180562 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.341985028 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.341653106 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.340607037 seconds)
  done (took 98.888446318 seconds)
done (took 422.014588189 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.630645564 seconds)
  done (took 7.883995136 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.491279458 seconds)
  done (took 7.747141901 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.077768161 seconds)
  done (took 21.341017258 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.335269785 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.554160356 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.364703002 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.344083341 seconds)
  done (took 27.852367647 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.466408092 seconds)
  done (took 7.720877 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.33418957 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.335123856 seconds)
  done (took 13.925584507 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.894244199 seconds)
  done (took 8.149967948 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.422543219 seconds)
  done (took 7.687218301 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.342516483 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.373290746 seconds)
  done (took 13.984758329 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.316463391 seconds)
  done (took 7.570208266 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.187074018 seconds)
  done (took 12.44216072 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.347590158 seconds)
  done (took 7.604861823 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.40721636 seconds)
  done (took 7.662316195 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.060892118 seconds)
  done (took 9.316021821 seconds)
done (took 162.139729261 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.336530755 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.342442073 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.340388308 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.343717216 seconds)
  done (took 26.618237405 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.377786457 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.378635603 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.379220593 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.3886757 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.381996611 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.377448382 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.369591423 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.369644402 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.387348429 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.380804273 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.379443427 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.379654616 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.377813564 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.369834683 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.379947646 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.379563493 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.38868589 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.378363182 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.37036165 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.382114322 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.346042183 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.38867618 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.381761078 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.346258265 seconds)
  done (took 34.296704583 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.865063763 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.414660465 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.497880241 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.397487796 seconds)
  done (took 7.43142667 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.396706274 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.398825245 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.409771464 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.449498121 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.476508863 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.407070691 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.372446262 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.366981931 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.35431771 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.398803345 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.474725312 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.415344154 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.484578781 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.344938643 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.557048676 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.346278501 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.346060304 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.398238106 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.450121365 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.462998612 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.346975143 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.397553541 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.401555489 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.417336795 seconds)
  done (took 35.131813064 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.346667795 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.364990924 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.345134464 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.345636467 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.354435623 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.345163515 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.346887683 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.347040833 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.34587654 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.35269707 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.345235976 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.35877363 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.346601619 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.346313858 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.352717786 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.348473088 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.353393989 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.344999381 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.347564955 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.354440532 seconds)
  done (took 28.251730654 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.340103584 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.19314972 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.692234804 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.596570834 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.342579328 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.340623435 seconds)
  done (took 27.765109281 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.415445345 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.55839298 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.346897015 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.68880541 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.785073424 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.364450049 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.348145443 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.578434639 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.882574534 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.878714646 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.410354509 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.413817599 seconds)
  done (took 19.931057561 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.354158867 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.347685308 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.351130883 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.363428059 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.39969099 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.367746303 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.355035053 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.341323039 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.406498154 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.421008923 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.367235186 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.401190504 seconds)
  done (took 37.737146443 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430518092 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392559003 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.27526439 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393896698 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.096927364 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.557167358 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.345845074 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.795050379 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.355544801 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619439153 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347702243 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439694694 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.600624803 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355070215 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.351698747 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.301865233 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594628278 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809289896 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347278601 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.283841333 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376043888 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.352618635 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.290391857 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.381719306 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.557163357 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.491729305 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.605131052 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.122882705 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633698005 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.361682444 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357539867 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346522652 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621467183 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000000531 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464671394 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357190618 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344269903 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.893373893 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.334583751 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.274924297 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.131987755 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.355546601 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35670682 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346563883 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.279992824 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360035187 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.777241335 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.359418087 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.058596322 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.347269289 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357898914 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442355336 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.35081955 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.920921377 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365443938 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.372558547 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.351178939 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440567382 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938712884 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.695473873 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371013568 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.28924998 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.346336854 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.199322658 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972733789 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.371220093 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.351862985 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.353156965 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283662093 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.319868218 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371683402 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486988993 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.371447041 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.010325682 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049779736 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.373414902 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.285768796 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879017622 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357915317 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.290483425 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57771875 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.12693724 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28486325 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.295499931 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.282875429 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030864067 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362085195 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.71059033 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374479425 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.793349497 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.367987196 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368430225 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372330225 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.573666793 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.228548804 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350695331 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.140790903 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491674025 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372009654 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.773654717 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291727293 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.354828116 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605312775 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.561308929 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35979024 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.320042962 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565746816 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35786342 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.37029231 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.353239729 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.366920828 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.914818944 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380992045 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.711391441 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374895139 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.128334989 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065182813 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359486023 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.362391306 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.359311187 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597102497 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.084880382 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.23682163 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419262095 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35421851 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.352706936 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.304458078 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.942798469 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.261306522 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.34863769 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361196289 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.369496756 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.352737953 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31137221 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.351439245 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360284863 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.134839473 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.57795027 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361863329 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63168231 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288138776 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490694929 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.369738945 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.577340048 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.557487712 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.379342542 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611544407 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365157722 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.359177651 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.383795906 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372674819 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455029229 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376371397 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.353435476 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.631155033 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.357524508 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.357661279 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.31781779 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.140451467 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357346091 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.359747047 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359137449 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929431357 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343470639 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363362711 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.246852465 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.369227899 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421721264 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.359893957 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.365905594 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.122084738 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378413963 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.35984471 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.358472223 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581384305 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.367307096 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.239685692 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440842418 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.545042788 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.935354832 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385937069 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.290286302 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.066738926 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.04790356 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356967268 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.545575318 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.356425818 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366641948 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366097537 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.358614994 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.925070798 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376048002 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.236256526 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.369063424 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368007761 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.362220753 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357276695 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.099913765 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.749207514 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368662098 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.374182913 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500517031 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.371506426 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.291083001 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.872653194 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.362519953 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.356892625 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.135040205 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392505481 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.229361743 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.838205117 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61553734 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.356818628 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.370224756 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.397723634 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.39317793 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.353310087 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.181424302 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383108529 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.368883357 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384295205 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.369544815 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.329023973 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.736710689 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926672208 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092843209 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910563079 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.285678204 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.365971932 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.257792009 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.78386921 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300358182 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.017560981 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54194667 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.804867159 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322054818 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550683961 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.556503511 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.127444038 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.371737684 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588523145 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275702897 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.196450155 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395004403 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571068915 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394826337 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.360209275 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.296068077 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.657279941 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58842728 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.187021502 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446725868 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.792056258 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.203607101 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.162785632 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.390091483 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.673000519 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.548096801 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.913384844 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.753810088 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36530504 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.366285822 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840677268 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.370239342 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.886541929 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975979538 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384263975 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.558099389 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304724283 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.372176143 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.372971448 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.357310591 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.615874533 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.375461736 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.61898616 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373495302 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295307205 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.362802025 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884645406 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.234915044 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.367682895 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362549612 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089499007 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36791659 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.657515577 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.366520154 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.097497217 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384099909 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.296227074 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297896948 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.054760446 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.364401486 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334187768 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837421911 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.377780771 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384327012 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37111453 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.217756412 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.618770933 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.377961981 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.937941414 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607416877 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374195518 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388498374 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.36771393 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.256461218 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.368737455 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.247339741 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.599376985 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390816705 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.593614922 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.306425856 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.276929179 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.462466112 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.006666395 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.247726264 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365774607 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619361028 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.09632887 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.38280026 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088684453 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406457404 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.369109232 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.390679403 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.366546732 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402900942 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455010476 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376509942 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.376555376 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.376435697 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5305735 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382890451 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374751666 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.378378847 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458731364 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.757275107 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.105397061 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.144131213 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946386183 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11765657 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.957185882 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394601395 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.366134156 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365410249 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300173949 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518453272 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.891730123 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640367364 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486922799 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.368154646 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405086471 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.247983439 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402444 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58266145 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64202982 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.338372122 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377365671 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.159765522 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.269561187 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379135077 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.578793343 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853015394 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922020486 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482569477 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376119442 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.796333503 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646933908 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.448713057 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367969479 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.876353417 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.370103598 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.69119027 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.396818631 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370547495 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519274599 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.378473574 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026152241 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.398907354 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.523323701 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.141524197 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.274621554 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.627530382 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.815709404 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.381928634 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94824786 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.081475895 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.635886692 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439846131 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381741025 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.471400498 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517545634 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.379889921 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.268573615 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36963759 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.220346615 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.080420288 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.380855762 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947105208 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648921081 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.372679284 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.376844181 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393549691 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.379564511 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.595302669 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053354861 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595731362 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381164327 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.37317636 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.94332472 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.946291979 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40091834 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305557408 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.375222901 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616455631 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.628360987 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394435493 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.824859191 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.08250778 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904362384 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.645642178 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392688596 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375528202 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.063350232 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952048049 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.14178895 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856325883 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.032928785 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371833104 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649990722 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.376082522 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38270296 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651561685 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.377838353 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.372628015 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386698578 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.950562817 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14609302 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.374455022 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.392883108 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.314064265 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.600496162 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440825802 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31417165 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375322703 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.541911384 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376822182 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49231393 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385352759 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.370757944 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375737724 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.15118573 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661513184 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.379925583 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.354584336 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.274447651 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.393350883 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470161283 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608030262 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382255151 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.046547216 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.723914456 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.630387485 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.375837281 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.357201231 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.379341375 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374352654 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.084249181 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.350380348 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.372387008 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92633073 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.376022534 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.405535623 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378862475 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.591958008 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586986918 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.375220846 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.409634425 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375561751 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39313124 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.275698989 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.147761591 seconds)
  done (took 1634.331917061 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.402059573 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.424121255 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.415658871 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.483491785 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.427194368 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.384252378 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.488445227 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.389083458 seconds)
  done (took 52.705131935 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.374369497 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.533213232 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.406834547 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.376051099 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.404261279 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.386755032 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.825529814 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.403761768 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.385765283 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.385831825 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.384548979 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.387146448 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.031672671 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.387791444 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.390521442 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.374342951 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.385114848 seconds)
  done (took 66.119774795 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 50.227297108 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.934501132 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.050709585 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.382365074 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.087301653 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.380695211 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.876709988 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.416661262 seconds)
  done (took 102.648814175 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.394368679 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.393006934 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.394395787 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.395154131 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.394928433 seconds)
  done (took 8.265013096 seconds)
done (took 2082.486197085 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.383074518 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.38430882 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.382497638 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.386479388 seconds)
  done (took 6.828857634 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.357557952 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.072426745 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.359304353 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.37677082 seconds)
  done (took 18.459543555 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.390586964 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.395826397 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.062798676 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.012311629 seconds)
  done (took 5.371154081 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.134081065 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.142158134 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.127268179 seconds)
  done (took 7.696693365 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.378131923 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.379987136 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.37965558 seconds)
  done (took 20.431156486 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.670437391 seconds)
  done (took 2.964132173 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.524710917 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.574892541 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.694490342 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.701534056 seconds)
  done (took 7.78904838 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.765294028 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.75175326 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.570447149 seconds)
  done (took 6.380721397 seconds)
done (took 89.99680209 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.104216858 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.755188564 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.577817545 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.076189129 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.599575808 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.576242409 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.585650308 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.043775667 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.582151799 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.575885662 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.122832851 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.600536782 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.742720683 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.757765477 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.742475489 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.624528678 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.602164732 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.139612236 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.761468875 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.994888023 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.586017869 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.714756331 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.951202317 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.72981023 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.604124112 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.531014789 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.297774546 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.629138891 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.937382523 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.308779378 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.533238578 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.170371215 seconds)
  done (took 192.854704796 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.379298908 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.38065785 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.380825317 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.379700881 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.380139122 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.380658393 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.385862788 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.380274226 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.381487526 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.382123017 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.381339826 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.408978139 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.382677854 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.381390775 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.399936688 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.395114398 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.381616646 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.397508957 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.395676593 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.381672315 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.381709374 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.398455738 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.381261504 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.408269975 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.392389697 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.381237954 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.381660381 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.381033547 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.382274651 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.39933615 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.382411408 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.382620025 seconds)
  done (took 205.666387882 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.390405406 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.381640447 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.397778516 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.381274896 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.393688809 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.383776238 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.381651465 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.381780146 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.413472331 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.393750857 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.382078498 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.406044709 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.383497259 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.381288809 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.384006932 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.400999543 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.400564602 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.388844175 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.382223267 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.381733068 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.383566024 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.38650879 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.38376325 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.398793445 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.398976996 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.393127733 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.396569485 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.383916854 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.38312792 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.383961124 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.398500645 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.384685132 seconds)
  done (took 205.764764624 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.586536733 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.392034124 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.39248525 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.34472524 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.393265352 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.391143534 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.387590658 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.581865082 seconds)
  done (took 14.769984582 seconds)
done (took 620.3464785 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.622476173 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.344030667 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.594313712 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.413369523 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.162380086 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.430238033 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.413757298 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.579193703 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.309515109 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.58390803 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.646033655 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.425618926 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.78382817 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.411634297 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.660187438 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.510407466 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.248869065 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.368941004 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.717472296 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.938892335 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.673105861 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.818858135 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.598593964 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.308431442 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.801011833 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.818395607 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.085366314 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.24278946 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.427986744 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.729262053 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.98522175 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.3479335 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.471662077 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.46958522 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.530791884 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.506124868 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.316609974 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.470383318 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.609003238 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.593283051 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.933134643 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.125559308 seconds)
  done (took 93.3293635 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.376506051 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.376059169 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.375845501 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.376635957 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.376918182 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.376855534 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.376434131 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.376703189 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.376984423 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.376161771 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.377663096 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.379072396 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.37680796 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.3785679 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.377004972 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.377849029 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.378196644 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.379500661 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.376015184 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.378337941 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.378488406 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.377680093 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.377956948 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.379301609 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.376594979 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.379128648 seconds)
  done (took 37.117199802 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.397757298 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.63995062 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.7962537 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.403044591 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.396128341 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.4019031 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.473031399 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.399799663 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.399773644 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.400287455 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.567366644 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.402127673 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.433642836 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.823760196 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.4001053 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.399447655 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.398374574 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.397708891 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.65041399 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.407588747 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.496353633 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.398730322 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.475270028 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.408371189 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.421550983 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.399382049 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.40385217 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.966540563 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.418578493 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.568394629 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.172727737 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.474164609 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.907479303 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.826906194 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.174866423 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.405031724 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.400680765 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.572421262 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.399532096 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.399434297 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.475130464 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.398947617 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.808110026 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.049337914 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.417087472 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.400747799 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.985074539 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.589713529 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.63624219 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.409518922 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.832419913 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.402947922 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.402913814 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.400724833 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.637791272 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.406832218 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.398833272 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.961521958 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.424163567 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.475716209 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.401517011 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.400075391 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.66091101 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.400084701 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.644950322 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.402688109 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.410244752 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.419139115 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.810066251 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.403955863 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.074158365 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.418512448 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.402578914 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.568616389 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.645023376 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.016272697 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.421988336 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.665522805 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.923728978 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.491738188 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.405707716 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.95366639 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.496519466 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.405611929 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.406287494 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.404906079 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.402772223 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.453638343 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.47505709 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.007497181 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.082266575 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.997304949 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.497680975 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.416022167 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.403318557 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.962160163 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.422817118 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.403863252 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.805843216 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.073964879 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.419445564 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.412076177 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.078030272 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.421753338 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.480159907 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.40832032 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.818077493 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.40369568 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.455543761 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.403827388 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.41211669 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.426049182 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.480510874 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.408830809 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.406088729 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.048400861 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.596295256 seconds)
  done (took 184.237875536 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.398337912 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.396088409 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.405608533 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.397394795 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.396178174 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.405273025 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.398564463 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.397925488 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.404303322 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.397011394 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.398668249 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.398177904 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.400167699 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.405498737 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.429925925 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.405794655 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.053427213 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.397059394 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.397873301 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.4163882 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.193070324 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.401329872 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.399918872 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.414905189 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.400079486 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.397639639 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.406984341 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.402087796 seconds)
  done (took 154.028886329 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.407074176 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.950121394 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.423856654 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.533758623 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.427679172 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.405295555 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.531145483 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.46131609 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.42398485 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.406097607 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.404647002 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.697238576 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.40754404 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.904915501 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.59097543 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.552762772 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.901578923 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.423551012 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.405569732 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.404945958 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.535804324 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.410490389 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.696473127 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.951215518 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.425146368 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.95120122 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.391527183 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.409797864 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.405439786 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.954619827 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.423292027 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.700406052 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.481926563 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.465426424 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.969621512 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.921260337 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.923176805 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.549620716 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.407393537 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.4054 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.407261808 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.391229965 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.954971051 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.426928638 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.409215538 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.94432827 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.427115916 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.410498464 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.413943613 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.406436121 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.464745209 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.481792689 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.718917482 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.960081894 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.500313828 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.425791783 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.534589658 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.815157284 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.411562526 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.907423587 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.39204027 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.961080919 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.429746124 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.393280162 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.410136643 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.414967511 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.554222847 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.540565082 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.908962915 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.42653981 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.906805806 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.571366351 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.412169398 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.409336592 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.412019386 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.961212989 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.92484344 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.571069086 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.544015785 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.598232277 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.398220643 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.408732428 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.393860505 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.485082066 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.412747667 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.962987265 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.925617089 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.429161058 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.412914808 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.412492385 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.41279375 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.581416185 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.981940339 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.503773052 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.897370275 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.722563289 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.70633408 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.413953407 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.469045359 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.426614163 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.707997196 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.413587526 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.467315635 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.883816964 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.708120718 seconds)
  done (took 167.05458616 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.645129212 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.591282757 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.503759719 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.553293612 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.992918435 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.9698722 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.695101916 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.554921518 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.518247587 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.663705382 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.53212903 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.500038449 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.617629489 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.485258904 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.149783511 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.495659128 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.519575068 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.569927715 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.566581769 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.401956898 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.076926626 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.696110129 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.592263186 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.255688944 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.500235833 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.188606519 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.963665162 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.957763333 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.577115752 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.695437285 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.93849017 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.5084299 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.351828555 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.095888338 seconds)
  done (took 67.24510398 seconds)
done (took 704.310789938 seconds)
SAVING RESULT...
DONE!
