cset: moving following pidspec: 29378
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.252726296 seconds)
loading group "string"... done (took 0.46420272 seconds)
loading group "linalg"... done (took 7.576249261 seconds)
loading group "parallel"... done (took 0.172771639 seconds)
loading group "find"... done (took 1.180428747 seconds)
loading group "tuple"... done (took 2.118106602 seconds)
loading group "dates"... done (took 1.336995574 seconds)
loading group "micro"... done (took 0.247457754 seconds)
loading group "io"... done (took 0.749094025 seconds)
loading group "scalar"... done (took 41.860840096 seconds)
loading group "sparse"... done (took 12.897438276 seconds)
loading group "broadcast"... done (took 1.108164436 seconds)
loading group "union"... done (took 13.992116865 seconds)
loading group "simd"... done (took 4.864537506 seconds)
loading group "random"... done (took 9.802673312 seconds)
loading group "problem"... done (took 1.991154367 seconds)
loading group "array"... done (took 22.344496242 seconds)
loading group "misc"... done (took 1.411881612 seconds)
loading group "sort"... done (took 3.56243931 seconds)
loading group "collection"... done (took 19.319989766 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.53461418 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139814268 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131501779 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147319627 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203956448 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143634404 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155458691 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.11411889 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.962871999 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.185941769 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154376261 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.508814406 seconds)
done (took 5.106746131 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.223656233 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094286946 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103107886 seconds)
  done (took 0.861677372 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076305058 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144070254 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093440816 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078187808 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093866122 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077316086 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094840225 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077182311 seconds)
  done (took 1.331782675 seconds)
done (took 3.169187276 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.732509138 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.275326429 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203224804 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.458473762 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194004785 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.212906927 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672168341 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.341563698 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.251258681 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099583698 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142917939 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.383669696 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135132652 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676469878 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089064259 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122345282 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.175929928 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.442627833 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081670568 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109156487 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115347418 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141278675 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127594179 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089955277 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183574763 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083506485 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.191223674 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107975535 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.08004981 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.286046618 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199897328 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.686259424 seconds)
  done (took 10.801914737 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109766382 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133300271 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096477856 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137597055 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134864998 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.10130374 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087341046 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096999315 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122435668 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173986502 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114061197 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136754861 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094274048 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081432408 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115114 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243494657 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.11802765 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102939299 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100307123 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102910709 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121525409 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115108957 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108911241 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094385929 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169238812 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223407098 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110810618 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12498027 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097827973 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113046821 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143059955 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144351029 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096715982 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081546936 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173014038 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126150197 seconds)
  done (took 5.132966179 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186502836 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120993887 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168290257 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.126580355 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.161074683 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138262708 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.159347475 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112159078 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.251927798 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.18957104 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16149507 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139333071 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115353267 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079097355 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098096363 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09452196 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.669332763 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.160900046 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114461286 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115458454 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103460559 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083204972 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363941389 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102212233 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095984616 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081037456 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081675408 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159079338 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081102774 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.132053785 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121370611 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104461223 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131277441 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193365912 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124373497 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.115904737 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095884728 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.076946935 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.188429342 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08764067 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094882294 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102691351 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13542499 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131763042 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096172316 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080183202 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.217642186 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079688937 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115778305 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.934213229 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180944965 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090934547 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097342955 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.319840751 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097489914 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097614367 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076552675 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.273608343 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.179026687 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097062261 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.103952786 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097042112 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094754832 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081958537 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380848504 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099368283 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.688542042 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084050738 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107018308 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082475562 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096017666 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.075832521 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104251182 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102466847 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.096562377 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096041447 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080265124 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096714578 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078042103 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098056715 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107053076 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085542132 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096602835 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148116757 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095371271 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096728299 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127099091 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101275149 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077228349 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130315289 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097944234 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080070789 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132255681 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096598046 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.090594411 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09878619 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142233368 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098265702 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.169856941 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094035795 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078500463 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128581266 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099673155 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128611357 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112409964 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081373609 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101118996 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077003637 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095153374 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158284127 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079134819 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097016797 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081931052 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109764515 seconds)
  done (took 22.536197199 seconds)
done (took 39.14352117 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.32280704 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.1020225 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101355578 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100935931 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099625828 seconds)
  done (took 1.468047392 seconds)
done (took 2.183991686 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.284115705 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.210278799 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076549686 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.16644177 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092877965 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.170749979 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157208631 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110767218 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216594901 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076675698 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.178529127 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076553121 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092745011 seconds)
  done (took 2.6515982 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094043732 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113658209 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082084372 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109806938 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075002045 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110578619 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092612375 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116514153 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109723231 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084473703 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093117588 seconds)
  done (took 1.797075853 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093001847 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11154042 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081037258 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110251972 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076353478 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110392993 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091715906 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114248321 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108713951 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084529183 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092624456 seconds)
  done (took 1.786173211 seconds)
done (took 6.941335204 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090069413 seconds)
  done (took 0.798353609 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.916361377 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.866503733 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112375764 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148204834 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.314560255 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.172292328 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.469956038 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124690105 seconds)
  done (took 11.037457335 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.144954293 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084648713 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.103784474 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086105728 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.105298703 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086755069 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101494792 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103750611 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083163173 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098769464 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081611486 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097928282 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099702546 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08500514 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099351063 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.08176567 seconds)
  done (took 2.323513537 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118205836 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117852548 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104411617 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106664203 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085931253 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103075333 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10423945 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087377091 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.099572898 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102303444 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089756416 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104062214 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102694759 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079270333 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103639225 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107196839 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085406176 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104343642 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105706599 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089388483 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105641341 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094455069 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085562395 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104660916 seconds)
  done (took 3.215723007 seconds)
done (took 18.087523169 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157457372 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.1075107 seconds)
  done (took 0.985791937 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09341575 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111740163 seconds)
  done (took 0.927763526 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096648729 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094600746 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.119990894 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108256486 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080082635 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098640205 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120250134 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081510444 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097858393 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081076591 seconds)
  done (took 1.704751329 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081490233 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108938052 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100605623 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094132245 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105539024 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096390214 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087186651 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098863744 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109936324 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076979584 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103146709 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115932107 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086726556 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117900739 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106670472 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084927515 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103886911 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099652232 seconds)
  done (took 2.510109858 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078840404 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096537641 seconds)
  done (took 0.904381268 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081046789 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093438868 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081207483 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098864876 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095573359 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077795401 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095631453 seconds)
  done (took 1.349760819 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.508944238 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135351023 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.25639445 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085812181 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.1212789 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.303272499 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097357654 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084825356 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102259808 seconds)
  done (took 2.485512755 seconds)
done (took 11.593454855 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.091974095 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117062933 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111822714 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.463971177 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106817818 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097526227 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.15927467 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.253150963 seconds)
done (took 2.136056068 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.149464847 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324956899 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113626716 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066932773 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094570543 seconds)
  done (took 1.334937719 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079130066 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099475176 seconds)
  done (took 0.911023556 seconds)
done (took 3.132892196 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079670603 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.128914253 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080000282 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098049372 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.077878341 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097940862 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077904797 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096098997 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081560041 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098915647 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.098618976 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078321927 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.097905803 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080328593 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095992658 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078723325 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09839231 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07828506 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095557479 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077293065 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.095592567 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079011266 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093108305 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076667548 seconds)
  done (took 2.911515454 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098707707 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097048998 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10189849 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085381638 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10096197 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085289247 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.1014636 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096075999 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085784131 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098433216 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099840429 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.082971331 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099887085 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084531561 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100370243 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103113512 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086544685 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099261581 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083573588 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102828114 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104669758 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082429737 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102513207 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086722444 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102819215 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102385181 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08347039 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098987597 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10448568 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086054139 seconds)
  done (took 3.589423852 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083514609 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09421382 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077189657 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101057951 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077739148 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095670101 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076916234 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095560202 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078707638 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095941961 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079017727 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096030531 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079812444 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095784195 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079125325 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097888949 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107237253 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077429348 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094727123 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077166566 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097468124 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077155935 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094596705 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076892625 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09440503 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076538566 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094137045 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07715662 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095345889 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076512925 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098882262 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08258904 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097208233 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086356709 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100032024 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079391598 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100943932 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079865251 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097230155 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096261983 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079001685 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.09703493 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079286136 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103267369 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079733281 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098679858 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079298284 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09842529 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079684199 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099482615 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078993802 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.0967301 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081069673 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09764749 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.101173217 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078226913 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097739511 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07861854 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097618169 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078455592 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096308403 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078895604 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099293809 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080625772 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11307527 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085451579 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096512581 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08100224 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097305012 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080565998 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097606448 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110259152 seconds)
  done (took 7.183077596 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081961448 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105438043 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079325081 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09874683 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077450684 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097332078 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100412007 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079389882 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099354486 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085877569 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097712978 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080780538 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098327096 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109827094 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079928836 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099227346 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086168495 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095157329 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080475365 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10096999 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080492308 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100368906 seconds)
  done (took 2.757879289 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.208198664 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10378795 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14161123 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106316025 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082690821 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106125538 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101613453 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085895985 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101179067 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083236913 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100506815 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104165411 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083722643 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102209745 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1022952 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085345997 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104799313 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086512018 seconds)
  done (took 2.639179487 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093141598 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098396737 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101546354 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097635111 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098281943 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083450329 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103882738 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10634984 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082594843 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097702059 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089490121 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099626935 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.09947925 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0804496 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100035727 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081058935 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100126584 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081139142 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106790059 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103279829 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103070174 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089367453 seconds)
  done (took 2.847609918 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097514556 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100156984 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116579097 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083455709 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094454873 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081016939 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107824609 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08249088 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109086903 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101727745 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082360339 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099377146 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089191854 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100193211 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105679258 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082367029 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102749811 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082907993 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102519114 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078673388 seconds)
  done (took 2.650980848 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101620063 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09949118 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099072942 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091232878 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102812744 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084665791 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111472111 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.1017857 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083793192 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125740456 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101801377 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083796318 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111096792 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107262242 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101147533 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092886061 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110982732 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112156609 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084491682 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101283547 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128606811 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084731368 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110405957 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.1018974 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.195743888 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101924736 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102242683 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089611444 seconds)
  done (took 3.676762879 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080171279 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098023164 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078614873 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096043178 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077792849 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.0974516 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080511852 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098361524 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082443773 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099344586 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082958748 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100747682 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083188437 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.103582807 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083015293 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101725716 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083018262 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09823163 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080708532 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098346185 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082898981 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101197342 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082685267 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098090335 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079927125 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100770155 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080320721 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097925127 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083302145 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097868854 seconds)
  done (took 3.463614794 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089466631 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105847495 seconds)
  done (took 0.951460671 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078117242 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113543449 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077770864 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102858 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103961279 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084874806 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109978562 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088070143 seconds)
  done (took 1.512080628 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09495208 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109544529 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082208343 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110952147 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110720626 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095443996 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167355941 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102401377 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089250257 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099967757 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114938935 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082037709 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.10823164 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083144309 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106832469 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088527077 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099625956 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089269371 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104694611 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099849474 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085132251 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112392047 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085955935 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098189604 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085996941 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112652789 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111215454 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085116274 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105102885 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111272087 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088790076 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095629213 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083833482 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102159782 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081514013 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111421097 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114114418 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086084176 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110226892 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084746421 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113473547 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097123355 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088454427 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107654838 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09408005 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102292582 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084300617 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.096807713 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099049981 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086490639 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098463702 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083440321 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096774246 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090349973 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106230427 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114675161 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082204929 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103694382 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086311058 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104409343 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089604727 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104260165 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0853846 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100858756 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10871862 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08686227 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110436279 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078635477 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095631613 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081952827 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109848539 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125658593 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091553508 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102715809 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084174103 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09957426 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10537095 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085032469 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109254312 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091807351 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101922565 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10963357 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091193847 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101835637 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086044564 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110258787 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100646661 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085965794 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099216492 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09875142 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100602561 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081670407 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099159677 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110432197 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086984517 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102242425 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081472971 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109791253 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078038488 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103617216 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085338998 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103617432 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111626057 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092589714 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109026345 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109837006 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091056241 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103824735 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087103504 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099300056 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085635844 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105471943 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10920534 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077654409 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105224324 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085088828 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104043956 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09116651 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100192394 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084759351 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109271171 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108837048 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082332965 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099519861 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087010321 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102798505 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089045149 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110153638 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100760975 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078932985 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097061506 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087886282 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102076012 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088775434 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108475874 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105699927 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.0780409 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100215986 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.088948843 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109447258 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102152522 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084095999 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107691497 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.08472582 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102425938 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.090225498 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.10484086 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083283197 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.106829247 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10419942 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077718 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104789361 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084746777 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.09883032 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08556271 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10318048 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102220494 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082188974 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097344982 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087921613 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100220753 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080482783 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099528305 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080017478 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108589651 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102031766 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077465968 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097681823 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089242714 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097113779 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081260795 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098921667 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101941333 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083031617 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097645179 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081260076 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100970909 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09296725 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105117141 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101597059 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087134993 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109775858 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081556574 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102163865 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098894874 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083563161 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100747665 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088438721 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105390554 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10435615 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084233941 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096831541 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087741665 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107553233 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081789489 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098229297 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081650673 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.102993098 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106786762 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.084981036 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100654247 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080963883 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100276837 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103428241 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.084277959 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101906218 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081406202 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105939819 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081779398 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.1064099 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101012482 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091068698 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103697016 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.07787619 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104042837 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097670479 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087691063 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095231602 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079454079 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098800568 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.082695284 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099680612 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084742393 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094090159 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089942805 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107837982 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099815737 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081708735 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099966679 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091003945 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101394615 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085053983 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103152724 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105415614 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094004842 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099069385 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.08551396 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109383257 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099766027 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075763585 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105713153 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080577717 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.09992487 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.080961541 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098378891 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084623539 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109787489 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104438046 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.07578364 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102644577 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080515157 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098700463 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077577339 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.106813943 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104175834 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083758712 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108766494 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082772401 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101759716 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086124099 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100970251 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101134506 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083500439 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104460724 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083662303 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103309631 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081192968 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102268768 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.080743251 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098691481 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104618998 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082225965 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100474012 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08780661 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099782314 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08190324 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103329528 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10075676 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082583759 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101558052 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081579366 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10422421 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083243958 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100583439 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085123719 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095757162 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090012152 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.1001046 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108812758 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083139345 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097151586 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088406 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103420042 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106078325 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083475728 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102161611 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083698343 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.10101967 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084833773 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109640083 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097725997 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.090885264 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105765428 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082359123 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103674324 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08244383 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102593514 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081329774 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10246593 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10135848 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082694305 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101562138 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.086559139 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104330467 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083432436 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105781416 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105195343 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084316292 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104758507 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076985525 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.09974622 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081630472 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101146885 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089257353 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101127552 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103701999 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.080957099 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102675024 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082239006 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097420441 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090837641 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109148182 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102656844 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091236848 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100300798 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084526956 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110832338 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095771619 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081517867 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098458856 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080712367 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110005816 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083519306 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109592272 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.081982234 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.099959197 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.079791748 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101751671 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099282999 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07686653 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099502855 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085566055 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103702067 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081905961 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101285718 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085129686 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101969774 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10855669 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.081902194 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102678859 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084180508 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.099477251 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081839637 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102346203 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085528857 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10336318 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099402994 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080398555 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100684368 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.083391923 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.109172122 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082420381 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102120402 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09067932 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10069554 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103534489 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086480703 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095445743 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.085242685 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100516609 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08263551 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099843168 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086387746 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104565524 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102264957 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089320718 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.10033237 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083749283 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101008262 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080329451 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101322333 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100233441 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082354448 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100266521 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.083828074 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109270668 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081018978 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103119889 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082069416 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102898303 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105880862 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.083390279 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103725169 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090152497 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104282223 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084133765 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.107479143 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104853148 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086128034 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102144111 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.083920025 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10867909 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.09977238 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091244841 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101193837 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083745487 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103101908 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080937726 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100658956 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.081763566 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100010727 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105824713 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084591089 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100193025 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081858095 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099181579 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084204254 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105538184 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109025753 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085572465 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103664388 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078096916 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098649031 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083606865 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099233016 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08439429 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104489421 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106833575 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.0852062 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101263759 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.080979261 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108398338 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089194624 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106307583 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080915086 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106454817 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101842851 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085219226 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102601394 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083020299 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103540506 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087794453 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.1037904 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101449286 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091241024 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105530548 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084002457 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103323357 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084043698 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102740968 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096185937 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084306545 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103534693 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089643433 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104344797 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082834252 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110373525 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101338024 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082746625 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106241691 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083024637 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108124797 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.07837856 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102730074 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102761925 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083881694 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096785727 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082185128 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099398647 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.08488269 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100267003 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079093298 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111429586 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.10890063 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085215052 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100434452 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082053003 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097061821 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079434145 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101356054 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084723196 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10327361 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110187646 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082053607 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100654293 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078611234 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101766207 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085616938 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105597258 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079817465 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096842772 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081643744 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104105251 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.10831282 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081602798 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101485969 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086216534 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.1043763 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081324108 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106647139 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079692917 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105970442 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111413503 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083815327 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102492484 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.087655979 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109600162 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103170691 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078322302 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102960431 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085051563 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102094082 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.083591778 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103097171 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115586723 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087374553 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100807036 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081739722 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10483607 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082053812 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.108379659 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103460658 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084407937 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106277642 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08502608 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111067903 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104110629 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089470773 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104450061 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.084904609 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100840977 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082828508 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100117338 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081870856 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103828545 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102586047 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087588213 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11070699 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082891853 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11165278 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109558724 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08826391 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099000611 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08225225 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101060564 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078596498 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102968914 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.080875823 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100658666 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080909212 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101239994 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103054625 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088747813 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104415822 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084570059 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101264905 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077384112 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.103419749 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087743011 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103273195 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098756764 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083979959 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10365392 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088977431 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106892261 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084540522 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105691306 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084168195 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103676327 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098147681 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090069428 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101336533 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086392969 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102081348 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083337413 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103396563 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087044986 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10791781 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103671029 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085773645 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11417962 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085972177 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.09993387 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099318305 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.087813083 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099801691 seconds)
  done (took 57.651507945 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144667822 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07941328 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098010953 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078984761 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111956994 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098886524 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078434657 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099028041 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080045296 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101271526 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077878331 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097724387 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107427916 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122372955 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092927319 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103386869 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097674567 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080259445 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097594098 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079546093 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107805907 seconds)
  done (took 2.839641984 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103998982 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116363226 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113762566 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117249825 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089102621 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114155575 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11301483 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113793441 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098319337 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109514431 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117294722 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114122316 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090297727 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110497518 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109601859 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092310816 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117365937 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107686513 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115270958 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094439333 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112495062 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113708657 seconds)
  done (took 3.189936873 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084028116 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100872824 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084720819 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097469006 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082796673 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097199016 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086736331 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100364002 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086690659 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.10121291 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080388974 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101850374 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103064793 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078185665 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101121642 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080283797 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150479406 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10632324 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082479286 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103208867 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.097546712 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085059365 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097924445 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.0799254 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100994544 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.086228417 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102804219 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081021515 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101738403 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081373299 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103178874 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.07960573 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103987879 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102284401 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082493423 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.100585716 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.082741203 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10151158 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079021832 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.099707798 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083338424 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098359876 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083636331 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103368352 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08123046 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100983119 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08419008 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102859632 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097492079 seconds)
  done (took 5.402356624 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103824283 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.1598333 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085385695 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141978077 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119520631 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111696546 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087065898 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140724965 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101073574 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081856485 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121186965 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.1190459 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102849137 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088528636 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109865467 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102633132 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085184189 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101787607 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.106944535 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.082979908 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107312954 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089875254 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118705695 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117887079 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107110183 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083416377 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102169859 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107946087 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096998926 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110450447 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107709864 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.08986952 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120540281 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108626336 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101979422 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.086282843 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120766842 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103769017 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087031458 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101145967 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086202332 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107885269 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109831864 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.120594822 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084020551 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108199667 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083371796 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099812654 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116891302 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086861511 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112799558 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118159192 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107543252 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084641468 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108211077 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119873581 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084139587 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101546879 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087422218 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116555721 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10044152 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088112012 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118080584 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105920799 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111801693 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098957205 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108766933 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107146215 seconds)
  done (took 8.05496669 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092849965 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110524768 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120287435 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120964995 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090263741 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11063798 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109915342 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089755457 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110621178 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116107492 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10977938 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132518769 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085978603 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114352727 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110344918 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090801329 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110459565 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110769154 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091231111 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109432901 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111317467 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12104569 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09065944 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119516424 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141035892 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105141579 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090378198 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110286843 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120708825 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110344094 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121794728 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090325663 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110249992 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11999313 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122171328 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089887325 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103057268 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109031762 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090421579 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110143053 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104852808 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099164644 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109531007 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105267203 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091004574 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110329219 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12010476 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123761057 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114187815 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096391225 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110353329 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119738862 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11007325 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091097107 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120107871 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146231897 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120222778 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120550182 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110097684 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099453359 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120654024 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127873886 seconds)
  done (took 7.613800472 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107135932 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114529427 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117146461 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099247389 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082779689 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108715554 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082254029 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101350119 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113229032 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093695826 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115733211 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107668649 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091774534 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115832095 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108288542 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111480942 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088661571 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107875072 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11371394 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107237902 seconds)
  done (took 2.909010996 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093337299 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12386365 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084705706 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111300916 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107711177 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091961783 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10686038 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10737617 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085587036 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10699411 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095893472 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115393624 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104634283 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091456759 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115800345 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111105095 seconds)
  done (took 2.474889664 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.094915625 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115876142 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119833876 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083729001 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104533079 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080003824 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104749153 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099591479 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080934686 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120573875 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084135879 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107552338 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107084924 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082619617 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101070899 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08683322 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100336427 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081652941 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103834898 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.117881597 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095001309 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103465934 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104908523 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087407201 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104500028 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089694873 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.104680447 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102252347 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082837424 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10471531 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084457438 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112795637 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101022357 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083734846 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10198445 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081453142 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104109929 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084503572 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107501764 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104624785 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083061039 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10392571 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084548291 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106429744 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080335779 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105764879 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.09995781 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090470648 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102498772 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085594002 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104307465 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106004524 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086574307 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115059222 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088823586 seconds)
  done (took 6.19093658 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098513226 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10809261 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080058868 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102513973 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087798103 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106801252 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108026716 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087599001 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105972374 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082658455 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105955227 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089439862 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106969093 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107996442 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087230603 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109227517 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080263309 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106873757 seconds)
  done (took 2.591884275 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08969437 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10419512 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091766346 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105039024 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084076197 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108628735 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080823283 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103527841 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102628937 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085067917 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104545321 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087183036 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102111659 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086772882 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10433831 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084321735 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.106891349 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10323974 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08478509 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100218203 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087679856 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103167661 seconds)
  done (took 2.939097805 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117263584 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.12382231 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091981979 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.227857885 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103679429 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131978485 seconds)
  done (took 1.626047258 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108927835 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120330905 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105038665 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106379144 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114045709 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105811445 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086891103 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107133433 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116337985 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100577539 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10702368 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117484681 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117107404 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095583384 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114537249 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113192939 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107105475 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086676568 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105731953 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128200167 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087283666 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116788584 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106854387 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086233913 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107495394 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11605381 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116252968 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121880703 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087585211 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117519787 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113791657 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08795343 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11732915 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12121525 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107406927 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096653937 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107239373 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127297613 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11325233 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096093374 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108797892 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113422872 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09678429 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113722935 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117528154 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106829343 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091745496 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107561919 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107360963 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134436794 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093825275 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116547563 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114350528 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11684418 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117219024 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134632843 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101084411 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116522417 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114370768 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121352092 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116757481 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093667946 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116956473 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121717759 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113907374 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116322048 seconds)
  done (took 8.074132023 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101915611 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12549961 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107481645 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121123383 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096524892 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107185035 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107458048 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086734549 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107718044 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106096018 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151508356 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087497024 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117460804 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116791155 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10728413 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086835055 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107278435 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117649963 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085877292 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133641656 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108386075 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117321558 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116206992 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096628401 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122006332 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114280388 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107347912 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087272285 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107356654 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106450145 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093846798 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108147923 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116702267 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086367739 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116851243 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107730604 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087403807 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113906279 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108659277 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113932507 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097120993 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12759946 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108004776 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106892795 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101274798 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10801186 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107462396 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086318291 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108465954 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106793013 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100804363 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121600443 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121530983 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117361475 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10768838 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087333085 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108191677 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106703103 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087424568 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115033884 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117417432 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106843121 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134580456 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087576695 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108127903 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117991549 seconds)
  done (took 7.956837745 seconds)
done (took 154.433841583 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097976201 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.134934656 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095531706 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168131567 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106119314 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118179627 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137094138 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09659606 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105412895 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085171282 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.105927 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08688033 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.17059191 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084493376 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106121015 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107060666 seconds)
  done (took 2.641453938 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199921927 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.252728899 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101980478 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105353084 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088436012 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109154591 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.103723996 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.09025952 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109611021 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085096167 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108246682 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085812681 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.104783425 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085696339 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109582696 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087350872 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105233281 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086465671 seconds)
  done (took 2.856563607 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111544883 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144918234 seconds)
  done (took 1.09981119 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117625509 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179560573 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316531023 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.153780521 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105481613 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126485953 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15510514 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130326327 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195995932 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122254267 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.120969054 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09713349 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139879596 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.114584427 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093931016 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117194707 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141005413 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092422243 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114768846 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115502387 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116924058 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105579155 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114862109 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092870529 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179084648 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119119949 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084702487 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106196829 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11551564 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094615406 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112344661 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124425397 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097454364 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173797765 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100803141 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174500906 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099035101 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111867769 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114387533 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09054467 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119172695 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.1175465 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105031179 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117483925 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08408473 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.117622629 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104678691 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085242747 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113966489 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.0967283 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114997436 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112166952 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154720535 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118036482 seconds)
  done (took 7.478882755 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.791137897 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15620628 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090023993 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.878758838 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138330785 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102696223 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.777697843 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134354759 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.232775904 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.759301767 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133437281 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121385 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226620961 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.23650509 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.961727799 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312357674 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.669978451 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105743631 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151337267 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153137257 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117979343 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136520724 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129558521 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.451951324 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094528694 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112441031 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116137084 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099419688 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158314635 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125317384 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113304939 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177367257 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.248255718 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20446186 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116419877 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089654724 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111862724 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169262706 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264701471 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213631375 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179858452 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086531625 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110369642 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121331934 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110273066 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108469055 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161925842 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172848145 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.191595616 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09145951 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120582458 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119365684 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12014829 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164398482 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120224705 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.296387594 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311173138 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111649853 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119482308 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105974554 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261523909 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122339954 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223196243 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116703086 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211305537 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110698201 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774616703 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.189429523 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089446008 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117129711 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119339754 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095354625 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12050033 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169707788 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391188936 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123413658 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092640841 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111309181 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203302456 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124834782 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110419719 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162404041 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114851756 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098828737 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124617294 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122626082 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169158819 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.229753785 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123979158 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118462906 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092880585 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125479901 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116043365 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214118012 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218678877 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.160703268 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209968274 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122786484 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.16320494 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188475429 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098210544 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193643858 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097815279 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125161576 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122229667 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216467012 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144881179 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100524856 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116166184 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118200962 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14718799 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125332099 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098024251 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168148688 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.503155831 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.166655149 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108755664 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126479897 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097211793 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16020627 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117757471 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257181741 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120874244 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168939214 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119390855 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087009925 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11976189 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165190124 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122425186 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098869751 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12287039 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118583537 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235042668 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21797354 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122363869 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220962369 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.1829062 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118975845 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171478046 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121631488 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166663635 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119712213 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120959789 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094869897 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789707194 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122762406 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098245685 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115830784 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.194194014 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110865804 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101595884 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12436571 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10841913 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755089242 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126669433 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.119902837 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101584188 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118694092 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120426913 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094924089 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115544869 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160923447 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22934646 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121676949 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120063547 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102390444 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.180330864 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094733051 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125796041 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124588048 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124215587 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100760761 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114424019 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123209821 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169726019 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162838018 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218869847 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.589224515 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09028281 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12451542 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226397409 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089485952 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288657286 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119472705 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.225363622 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16435985 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.119473363 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.307937563 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165799508 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.196601612 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126265582 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174424846 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086737506 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118187737 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163152698 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11183751 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117456919 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162082526 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12416055 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101364427 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.959198497 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111824583 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225232033 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.085788468 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191542856 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094139511 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121184353 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295906547 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110571686 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107014206 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.185232797 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093213897 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124809304 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.705767328 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125777422 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12168692 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118447479 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.199048181 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185183266 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096283695 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119485615 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121857694 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164041106 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205777144 seconds)
  done (took 43.921099338 seconds)
done (took 58.838322237 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.274674247 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211363617 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.256246377 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.167217096 seconds)
  done (took 1.851149587 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.169646689 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.146514637 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119416067 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10624353 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.153613512 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084845663 seconds)
  done (took 1.64619154 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.350291384 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.269205706 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.236877049 seconds)
  done (took 1.728871206 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.285906205 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.245871046 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.352925009 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.395284486 seconds)
  done (took 2.2703499 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207557486 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131225559 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111240845 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103092678 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.195583448 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247103539 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140326833 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200565826 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121870672 seconds)
  done (took 2.375213771 seconds)
done (took 10.743738296 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.123406043 seconds)
    (2/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.240872073 seconds)
    (3/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.185715693 seconds)
    (4/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.158748866 seconds)
    (5/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.172140269 seconds)
    (6/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.167669099 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.124902598 seconds)
    (8/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.099280938 seconds)
    (9/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.216027489 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121603415 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093325343 seconds)
    (12/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.200339593 seconds)
    (13/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.092855339 seconds)
    (14/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.261041234 seconds)
    (15/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.19560622 seconds)
    (16/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.200043053 seconds)
    (17/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111924158 seconds)
    (18/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.111553411 seconds)
    (19/286) benchmarking ("sort", Float64, true)...
    done (took 0.226586907 seconds)
    (20/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.125614774 seconds)
    (21/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.19090523 seconds)
    (22/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.159201748 seconds)
    (23/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.148004169 seconds)
    (24/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.17527139 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 0.22173534 seconds)
    (26/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.210181009 seconds)
    (27/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.11102601 seconds)
    (28/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.11839355 seconds)
    (29/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.131934722 seconds)
    (30/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.211834375 seconds)
    (31/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.09690638 seconds)
    (32/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.2010336 seconds)
    (33/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.185881462 seconds)
    (34/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.075867754 seconds)
    (35/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.091772089 seconds)
    (36/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.189691073 seconds)
    (37/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.08938313 seconds)
    (38/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.107433322 seconds)
    (39/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.13784999 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.133167231 seconds)
    (41/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100518916 seconds)
    (42/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.197405842 seconds)
    (43/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.099798436 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093656301 seconds)
    (45/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.183388414 seconds)
    (46/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.08984571 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.131498865 seconds)
    (48/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.113815465 seconds)
    (49/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.149440934 seconds)
    (50/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.180583688 seconds)
    (51/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.155720186 seconds)
    (52/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.16567511 seconds)
    (53/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.204034201 seconds)
    (54/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.105037186 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088092648 seconds)
    (56/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.226444641 seconds)
    (57/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.077151165 seconds)
    (58/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.183324252 seconds)
    (59/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.089677696 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.111898837 seconds)
    (61/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.119684663 seconds)
    (62/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092643288 seconds)
    (63/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.197718639 seconds)
    (64/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.111941683 seconds)
    (65/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.092189893 seconds)
    (66/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.187353858 seconds)
    (67/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.237300272 seconds)
    (68/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.124831617 seconds)
    (69/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.085776627 seconds)
    (70/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.164047284 seconds)
    (71/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.092440158 seconds)
    (72/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123367683 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 0.086194137 seconds)
    (74/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.115897606 seconds)
    (75/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.183820441 seconds)
    (76/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067163054 seconds)
    (77/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.161631653 seconds)
    (78/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.119597342 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.111460052 seconds)
    (80/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.12362599 seconds)
    (81/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094099434 seconds)
    (82/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.19029998 seconds)
    (83/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.08457485 seconds)
    (84/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.115638536 seconds)
    (85/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.171803902 seconds)
    (86/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089886972 seconds)
    (87/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.136460002 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.085711101 seconds)
    (89/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.179953654 seconds)
    (90/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.107682131 seconds)
    (91/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.12568664 seconds)
    (92/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.118774885 seconds)
    (93/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094772393 seconds)
    (94/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.116811066 seconds)
    (95/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067803291 seconds)
    (96/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.109392856 seconds)
    (97/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.149687082 seconds)
    (98/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.119409672 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.134966775 seconds)
    (100/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.077244538 seconds)
    (101/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.119685729 seconds)
    (102/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066646399 seconds)
    (103/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.184468616 seconds)
    (104/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.18618083 seconds)
    (105/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.163197722 seconds)
    (106/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137970447 seconds)
    (107/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.071224087 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.13792211 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.108588829 seconds)
    (110/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066388363 seconds)
    (111/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.1406354 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 0.179677733 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094959116 seconds)
    (114/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.121438368 seconds)
    (115/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093084987 seconds)
    (116/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.117500102 seconds)
    (117/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.183648064 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093196954 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107716878 seconds)
    (120/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.108758386 seconds)
    (121/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.137645681 seconds)
    (122/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.119624779 seconds)
    (123/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.130554454 seconds)
    (124/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.099100959 seconds)
    (125/286) benchmarking ("sort", Int8, true)...
    done (took 0.218009976 seconds)
    (126/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.150844504 seconds)
    (127/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117568897 seconds)
    (128/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118122906 seconds)
    (129/286) benchmarking ("sort", Int8, false)...
    done (took 0.187261062 seconds)
    (130/286) benchmarking ("sort", BigInt, true)...
    done (took 0.228293695 seconds)
    (131/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087855644 seconds)
    (132/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.090556312 seconds)
    (133/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.168747847 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.109144061 seconds)
    (135/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085947825 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108706957 seconds)
    (137/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094100957 seconds)
    (138/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.153355201 seconds)
    (139/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094537324 seconds)
    (140/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.117758307 seconds)
    (141/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066281161 seconds)
    (142/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.123962835 seconds)
    (143/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.11068255 seconds)
    (144/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066551712 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.093912644 seconds)
    (146/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.099901339 seconds)
    (147/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066430784 seconds)
    (148/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066227096 seconds)
    (149/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.1367887 seconds)
    (150/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.171489664 seconds)
    (151/286) benchmarking ("sort", Float32, false)...
    done (took 0.17448508 seconds)
    (152/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068144752 seconds)
    (153/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067391039 seconds)
    (154/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.172366333 seconds)
    (155/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.119199721 seconds)
    (156/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066610824 seconds)
    (157/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087402344 seconds)
    (158/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.091065037 seconds)
    (159/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097515093 seconds)
    (160/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.108509829 seconds)
    (161/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.228400358 seconds)
    (162/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137664614 seconds)
    (163/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.087474324 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.120629809 seconds)
    (165/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.086719498 seconds)
    (166/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110457902 seconds)
    (167/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.173579865 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092412449 seconds)
    (169/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.087269384 seconds)
    (170/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118133012 seconds)
    (171/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.164790764 seconds)
    (172/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.093665286 seconds)
    (173/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.142285174 seconds)
    (174/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.151601036 seconds)
    (175/286) benchmarking ("sort", Bool, true)...
    done (took 0.219587406 seconds)
    (176/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092105652 seconds)
    (177/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109142963 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.0861178 seconds)
    (179/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066560171 seconds)
    (180/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.121042638 seconds)
    (181/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.114390361 seconds)
    (182/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.076147383 seconds)
    (183/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067108492 seconds)
    (184/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.17346644 seconds)
    (185/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066411268 seconds)
    (186/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116393911 seconds)
    (187/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.089193041 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.119734025 seconds)
    (189/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.088425496 seconds)
    (190/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117317272 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095469665 seconds)
    (192/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.134117428 seconds)
    (193/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.116607433 seconds)
    (194/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.067023418 seconds)
    (195/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.119384786 seconds)
    (196/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066817745 seconds)
    (197/286) benchmarking ("sort", BigInt, false)...
    done (took 0.219642699 seconds)
    (198/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.065903936 seconds)
    (199/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116869847 seconds)
    (200/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.06635948 seconds)
    (201/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.170164356 seconds)
    (202/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.066752557 seconds)
    (203/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.107282782 seconds)
    (204/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067333348 seconds)
    (205/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115468613 seconds)
    (206/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.094540501 seconds)
    (207/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.10877451 seconds)
    (208/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067442938 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.108603781 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085489801 seconds)
    (211/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.161383217 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.085620407 seconds)
    (213/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.089541298 seconds)
    (214/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068508155 seconds)
    (215/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077469603 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.330856707 seconds)
    (217/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06766498 seconds)
    (218/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.090606807 seconds)
    (219/286) benchmarking ("sort", Float64, false)...
    done (took 0.147590532 seconds)
    (220/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.18310694 seconds)
    (221/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.118677481 seconds)
    (222/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067991138 seconds)
    (223/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.090270541 seconds)
    (224/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077796735 seconds)
    (225/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.086678195 seconds)
    (226/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.109816809 seconds)
    (227/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092843679 seconds)
    (228/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.089891064 seconds)
    (229/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105594229 seconds)
    (230/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109090268 seconds)
    (231/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123564005 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086548231 seconds)
    (233/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067778763 seconds)
    (234/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.090623308 seconds)
    (235/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.144537093 seconds)
    (236/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.111930635 seconds)
    (237/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068321647 seconds)
    (238/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.089877027 seconds)
    (239/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.087253868 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115588766 seconds)
    (241/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.06716116 seconds)
    (242/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.065266912 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118075684 seconds)
    (244/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066209012 seconds)
    (245/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.0890385 seconds)
    (246/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.092037218 seconds)
    (247/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.109174571 seconds)
    (248/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091601172 seconds)
    (249/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.117904636 seconds)
    (250/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067052462 seconds)
    (251/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.108023225 seconds)
    (252/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.093660914 seconds)
    (253/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.122174032 seconds)
    (254/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.086672049 seconds)
    (255/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.090428252 seconds)
    (256/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091935088 seconds)
    (257/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.132524867 seconds)
    (258/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.075842989 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.116949023 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085918685 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.107852476 seconds)
    (262/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.13332833 seconds)
    (263/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066679008 seconds)
    (264/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.0910367 seconds)
    (265/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.155009243 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108062026 seconds)
    (267/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066513235 seconds)
    (268/286) benchmarking ("sort", Float32, true)...
    done (took 0.227461886 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094872783 seconds)
    (270/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116637459 seconds)
    (271/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.110077794 seconds)
    (272/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066946235 seconds)
    (273/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088125622 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109506432 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.090944151 seconds)
    (276/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.137059978 seconds)
    (277/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.109479498 seconds)
    (278/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.112243989 seconds)
    (279/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.117352284 seconds)
    (280/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066238372 seconds)
    (281/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116953664 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09162817 seconds)
    (283/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.110917666 seconds)
    (284/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.066697168 seconds)
    (285/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066185692 seconds)
    (286/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.091161042 seconds)
  done (took 35.776248089 seconds)
done (took 36.651890931 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099264369 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147142578 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095389671 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135447071 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122181099 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090994015 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117861496 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097759049 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122209999 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123933008 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097208411 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092225551 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095928839 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118720691 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095550634 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138252397 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122702696 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092666533 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118088696 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085434589 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119923007 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086027114 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.110601198 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069939334 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12043692 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093464269 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115341468 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118999699 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.085433763 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109889946 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089242254 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.11660531 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085860712 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12252227 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.091752225 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118234597 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095727777 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119027753 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.110421536 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.085114355 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117260233 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08545953 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115548855 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093726131 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.114509597 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091152141 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117484046 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098805331 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.137723475 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113776874 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094618516 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120052604 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095475622 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116087777 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089818377 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119235059 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091497045 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.137587596 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.117878085 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09099464 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118312917 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093579101 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.114609574 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09417344 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117274956 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119130919 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097191349 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114724818 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096707287 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114822198 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086833047 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118132148 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089334153 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109427687 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095777821 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120260847 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086004982 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.114914671 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116491013 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09096845 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108336595 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088007041 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.110186503 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.091954686 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111440666 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069065644 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113040947 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.091594848 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109465837 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.094760136 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.1153032 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093318321 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111341082 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097719875 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.10948901 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091438945 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110540246 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086524969 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112332398 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090522183 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110006435 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088860857 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119148824 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087836083 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.115706241 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122724038 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086196055 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116342433 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085825731 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109340143 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102162802 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120339974 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086349658 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115244112 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085400359 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.116884324 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086218035 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.10985447 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086447488 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110088771 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092594618 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110078364 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089114405 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.117037702 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124471947 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086406187 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114457838 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089278146 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109575704 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092559648 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110917724 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086843831 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.1122478 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077360728 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113317089 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087535988 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117834697 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089585544 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119027204 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088454216 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.118981709 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091560545 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116226726 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091895507 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109628952 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074495415 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115654848 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089673499 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112265888 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087370734 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112619944 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086124091 seconds)
done (took 16.777679897 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086974616 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182381265 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149309947 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141561467 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.105816988 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.1111795 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121012767 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117008886 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112702188 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141051285 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110115568 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130658864 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146908028 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08636747 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111087374 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091059424 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112327016 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101541381 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144910378 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131784059 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.162183989 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086816283 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145480163 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134140329 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120109543 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.11337525 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111566057 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091129509 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114140958 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102106458 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131024465 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114812856 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087377925 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133125014 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103778929 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119029249 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08722005 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118278934 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087105493 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.110391667 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139835715 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132165461 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092354354 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116898282 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091409708 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.1141673 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089076378 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119933334 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096564903 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115198669 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125324713 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154184351 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090404571 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12042524 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085927512 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121909871 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120968356 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089784924 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111827503 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089483835 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110759018 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090278373 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.125797825 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14044243 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09168248 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120971 seconds)
  done (took 8.53601456 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103650786 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139002113 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.107461361 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130210593 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11178476 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087567601 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112197912 seconds)
  done (took 1.731640836 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087525048 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133970114 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111399959 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134811081 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131486256 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.111535849 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122803105 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088108685 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130586401 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089324133 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132943066 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149614926 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090724438 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119903176 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.13739992 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08857574 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137553562 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08784509 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116078823 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111471991 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115489658 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134872355 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089530775 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11257451 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101945932 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113165362 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16038672 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093363937 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114181043 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091917104 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111536444 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.150178267 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102790485 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124939321 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088831532 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128513062 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128192567 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08639964 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.125191765 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093126155 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127078183 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089450651 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114332946 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087388287 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118096149 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.09894507 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117474791 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.088898369 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115753369 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133432965 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.106220948 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127331209 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088725046 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117138897 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089833794 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119196072 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097936304 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113376847 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132721946 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08968154 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129593556 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104729247 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.126687602 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.12972531 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090659866 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127125867 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102765933 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115961185 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090219016 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116551231 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105004424 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11047205 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.090056287 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.124151288 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116532417 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11227042 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137106638 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090509694 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12410581 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.088553635 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114101698 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.088363187 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.136389084 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117268399 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089066895 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11811132 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091327409 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11129232 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087519052 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117221003 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087037836 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117706797 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091573222 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114504879 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091274591 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130387585 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114651872 seconds)
  done (took 11.748568116 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089798286 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114132629 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.090632348 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113392463 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089328969 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114065791 seconds)
  done (took 1.56179336 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113882254 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115900961 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103098498 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119837071 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155578324 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103027659 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.128248236 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123315137 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.10706154 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126920283 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.127779784 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104477603 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135116988 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120887834 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103136518 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119550149 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10308686 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124203132 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126685847 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096571764 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135936739 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120021631 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095865924 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131074459 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117347185 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.094890823 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124629434 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101479053 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.125980518 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122357517 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098327663 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117382123 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09471327 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121887481 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128727827 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09595517 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119713882 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117728244 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.098734109 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117137543 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103878764 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120135815 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125957818 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093241712 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123359399 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119741051 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093671235 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124322687 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.1026655 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118520937 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118555591 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095243622 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117465464 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093937994 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120402161 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123444963 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093426579 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128129352 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122652843 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096691369 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119194358 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092522733 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125920769 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117255641 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10427729 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118198804 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.12086345 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095903708 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121117668 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095749444 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118380028 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092859942 seconds)
  done (took 9.150075521 seconds)
done (took 33.668051666 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.68681558 seconds)
  done (took 1.637812227 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.818901564 seconds)
  done (took 1.77119892 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.923473598 seconds)
  done (took 17.904208698 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.489501377 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 3.462529211 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.991172713 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.17868035 seconds)
  done (took 6.073745022 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.945661367 seconds)
  done (took 1.917168796 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.282031527 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234360033 seconds)
  done (took 1.476260971 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.765349236 seconds)
  done (took 1.735192097 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.361551021 seconds)
  done (took 2.319006007 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326485005 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18328003 seconds)
  done (took 1.473940695 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.54656879 seconds)
  done (took 1.511599328 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.11372054 seconds)
  done (took 12.084494906 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.266707139 seconds)
  done (took 1.242186916 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.299372351 seconds)
  done (took 1.264283976 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.491225497 seconds)
  done (took 4.462217617 seconds)
done (took 57.836353178 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.097833675 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126751823 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101627925 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123622228 seconds)
  done (took 1.414319991 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101113508 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120098937 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101075016 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119854958 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125324509 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095926466 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122274382 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100616274 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119836158 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095480244 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120184888 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118987538 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098201048 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121978061 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09247329 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123552152 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099272693 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120243254 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124088567 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095743236 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118167871 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097728549 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124371224 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094114032 seconds)
  done (took 3.624704117 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099465544 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118043328 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096229977 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117956409 seconds)
  done (took 1.410985749 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099998959 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13023276 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104968519 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12518254 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130741252 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.104736446 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117359802 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.091390678 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.118823482 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099120545 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.114923828 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138004505 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.105857407 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123190029 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101333462 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113428491 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091066799 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130635591 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123676568 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100331661 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.117441259 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.09885866 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.11390041 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.107270282 seconds)
  done (took 3.678074032 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169589028 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.125816717 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137358005 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094410025 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.15921839 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139210157 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087375047 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.13958723 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087189818 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130876251 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117818272 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132885939 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128789504 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087599583 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11350442 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087633356 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127782011 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.12836392 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090712245 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126724522 seconds)
  done (took 3.394838079 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097489187 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116736323 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087659695 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115637475 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098409428 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120336985 seconds)
  done (took 1.616896236 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.089822169 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113899971 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089431384 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113452107 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094729244 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113680088 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088191884 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114791721 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.0889345 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114602511 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.08929545 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11360153 seconds)
  done (took 2.206567256 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.499484444 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118834285 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119602454 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090366384 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121028066 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089281679 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128988526 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091880269 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140030276 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088398947 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115203932 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.08991019 seconds)
  done (took 2.673813841 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232953256 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125037123 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279332811 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367929281 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154433928 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16477644 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276989431 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158112468 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.220377168 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148210135 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201632526 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194371151 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15019937 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213647248 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111687543 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144929887 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186615233 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243707817 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152123481 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233623306 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181218322 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166341564 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178853408 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149388586 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138078763 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170076057 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118933268 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103152171 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233115328 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175375851 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214624711 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161345077 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145740139 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207356678 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250805182 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218727053 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281371616 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134692242 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.139752926 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166139452 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259099787 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135951791 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201460579 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154550298 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13078589 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214698288 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164169394 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174805143 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.145092519 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111220057 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221057997 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236648375 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191241365 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137094429 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302650931 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147845135 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.156112219 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19189647 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249262273 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22531909 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187808142 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.11917766 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18727951 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189905658 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209758284 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151370962 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.180702305 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147725305 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18083934 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187150523 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189318171 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177831029 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184520708 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138654276 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169106161 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169587706 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17097113 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255916881 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210392075 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.094463594 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166989508 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148521658 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132748706 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193927553 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098253643 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237678751 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144100936 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.162460252 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213972251 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157469205 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161047514 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192987801 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210167538 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120962371 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110992506 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153353328 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153019942 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175815241 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138742869 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154803379 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155497647 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.102713866 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16837024 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124518144 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183591373 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117415883 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171106178 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181906991 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126790915 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159466715 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150888286 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.122573699 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19994852 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199437526 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141858993 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132209298 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20847357 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177732701 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140438107 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175168975 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199554324 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.143782703 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148473995 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225971386 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215269241 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140246942 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225605104 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129157313 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13466286 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131605742 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181655267 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153873493 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161178488 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133987894 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182586765 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23156816 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098976775 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138759167 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192973113 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133403789 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131937968 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154834657 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146528335 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110631341 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.141571711 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.144235614 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174557658 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177333246 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154363126 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163708369 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151782473 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251924513 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14182067 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150742953 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148132145 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093493048 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.217303929 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199729751 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129741374 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205233082 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.168204951 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227868215 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168716307 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13352611 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176072367 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102788781 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119977955 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193460358 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166431399 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159544175 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.221922251 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199481638 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.204648301 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.184315882 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164982033 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173004916 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16541655 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156585042 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.137865162 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158967062 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157180711 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.095497611 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.138745486 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133468911 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146549443 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114400646 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133660058 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221564601 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170265748 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189627853 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158943651 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149353591 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18011006 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128404709 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173593802 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177350667 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148769601 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.224784379 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193812441 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185033323 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143511155 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226207872 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093859587 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124175441 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.113822702 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194012727 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106616079 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136257051 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162488866 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180790657 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177727088 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196704474 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210023414 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170798864 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216373521 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094246337 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168036015 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183811383 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178579371 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.178778068 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1407996 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149260745 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174900925 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15675005 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25398337 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169755446 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174592925 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230780983 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.122708053 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130968662 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149560979 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178396087 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154177855 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174203593 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146442387 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141795915 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160452455 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102175097 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18717056 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183939727 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162213426 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186524381 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149221157 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210625399 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100435044 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16234636 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160043208 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164570824 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108033425 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17403634 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201664648 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148726251 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166174579 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214079902 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103718153 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306956449 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232530168 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191772412 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137396941 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154713321 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16130748 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162321124 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169238426 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177787916 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158690601 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188705693 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15893759 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136485482 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140978321 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148478144 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122016718 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131038722 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147269956 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175609826 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138148832 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18480849 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155005005 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159445999 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172622883 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149134731 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144244322 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150020939 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213897919 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210751177 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209792253 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151506866 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.176826829 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233799409 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097906699 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132337035 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132807664 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178481682 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10797368 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220744031 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188188709 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231196562 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181908828 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178163563 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138852932 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119024355 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12972749 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166791201 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233019671 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151448991 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.147119931 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200175918 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.137490535 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130655252 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165456719 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288534267 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144504291 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19586242 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.07867819 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.304021828 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100786224 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133069939 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162285168 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207308019 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136206716 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.17771727 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17099044 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161607342 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162499176 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148873048 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190495141 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242837937 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200161907 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207413064 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105176245 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155102101 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173891767 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218269554 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158287848 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.110389534 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232171939 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195263094 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.193668071 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143251398 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168677549 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168084316 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157660313 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214385958 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106150957 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23429105 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133822523 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194416827 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151719715 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138208033 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175946528 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.188874188 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141177904 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213200855 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183341493 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135115119 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105123077 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168911299 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205101588 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155319827 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.098958792 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206164156 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097355131 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223466858 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23002152 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134993171 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155567243 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146583251 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107547565 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153845113 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157056488 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140506607 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16414299 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200583472 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134311672 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188667243 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230928792 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169706034 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172888164 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145309149 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691882718 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130802908 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194139697 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147991405 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232240428 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121336777 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171484079 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157788851 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166824962 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222230169 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160913826 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229536849 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193144595 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.204994282 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104126145 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156146763 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155672797 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144016035 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151635888 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167497589 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159873015 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.144045197 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179062393 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16388129 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135643226 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138869755 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199261289 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148067179 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181988642 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179230583 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138207543 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174392807 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18634774 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134630302 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178777455 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237904078 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141640196 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151439541 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106071806 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.149632744 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262086708 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124597547 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18918569 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183578596 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158747908 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168749562 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147183751 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221247985 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157666537 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185574226 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141307807 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157995463 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156044107 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13695276 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102458981 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155448235 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166983203 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149350063 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158848706 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.162413477 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195126287 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095162021 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144513092 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316148746 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177185182 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214222785 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134934417 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134036487 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160743724 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121285262 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.203519136 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179628901 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135440224 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107922343 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136934721 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129013555 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.134035517 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157576518 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196943024 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16408079 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234250192 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.108006287 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278378315 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140156932 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154903837 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088657708 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132339349 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149867616 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145002813 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158437463 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191670407 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263703038 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148983692 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106081744 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149269722 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125576941 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107604018 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163522286 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163615987 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204496693 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116144549 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.108981865 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157236837 seconds)
  done (took 82.153357426 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16206618 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131486606 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146627889 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202019751 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174755096 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269431687 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.2096142 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25414122 seconds)
  done (took 2.62302518 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092894953 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145615476 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157335261 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132917208 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091442117 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119097288 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.344069832 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132843686 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.115791307 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120633463 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.171807487 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093656558 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.549796313 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090377371 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118944783 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106387099 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091889804 seconds)
  done (took 3.740566726 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 47.181651826 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.506694157 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.961515027 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.19587264 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.805488555 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.099597319 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.71627238 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.167893751 seconds)
  done (took 60.706781058 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.113735242 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135695225 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122650191 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.15265038 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140168013 seconds)
  done (took 1.732606909 seconds)
done (took 171.944312236 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.09677032 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127165849 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09674453 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129150643 seconds)
  done (took 1.512099547 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094208635 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070374192 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100036655 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074358077 seconds)
  done (took 1.40885429 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.18877238 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.167579637 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.405392007 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071138212 seconds)
  done (took 1.581862291 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113371911 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132105368 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103469279 seconds)
  done (took 1.430433589 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105321328 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12827693 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102137638 seconds)
  done (took 1.412668222 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104781248 seconds)
  done (took 1.181212665 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107279654 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136114086 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108004908 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135447835 seconds)
  done (took 1.564258323 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097413629 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12553232 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108597167 seconds)
  done (took 1.407656665 seconds)
done (took 12.928224684 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10314866 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.415097715 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383961244 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143680007 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721631445 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.378998267 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.029273364 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14468546 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164671484 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092239286 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138070041 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672070081 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.057329472 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.370323542 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.017466837 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.369730382 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.67526348 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120161255 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117626183 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093188602 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.012567509 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09080326 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121462496 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091673065 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701388618 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424418597 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093432311 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.368465648 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091409689 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125421775 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38213846 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121907117 seconds)
  done (took 16.89933376 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094287334 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172862805 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097514551 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136254432 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122698791 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095464042 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123767597 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092595825 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179534738 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122111905 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11126902 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120630595 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124490828 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09426493 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14001703 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092291176 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123785691 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091307812 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120632938 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120887434 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110786138 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119027284 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094211277 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120174325 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093542099 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134556819 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121339633 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092345464 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119462906 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098284443 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125908975 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094317364 seconds)
  done (took 4.779904302 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139793944 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180889259 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126799751 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126704278 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167834987 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123439442 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197615149 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116608003 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18112492 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121309148 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137992322 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092426188 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15586542 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093886364 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141263728 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120323165 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096069806 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120627293 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092092884 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122339934 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139199488 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091810462 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121142462 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093040149 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122100384 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106481096 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122485782 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120197884 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093182864 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125210015 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099171501 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123055254 seconds)
  done (took 5.096773396 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096714204 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125236368 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108911709 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137620411 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094997501 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12529206 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09638707 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124126094 seconds)
  done (took 1.991849152 seconds)
done (took 29.846882705 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110378525 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126247862 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106414565 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133876082 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101797726 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131195556 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.089939869 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132831832 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132766369 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101624753 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135980957 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091015094 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121781835 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091677826 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134430707 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096499112 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131909174 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10184472 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133051234 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131684843 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094783352 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132206442 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102370381 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132340681 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103131234 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132503276 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136614095 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098233292 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122273716 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093380911 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124202037 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103103096 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123758461 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104533604 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125945905 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096816912 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122509449 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093336132 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133049597 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132613693 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099074478 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132531941 seconds)
  done (took 5.950530446 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107103896 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138939016 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105069204 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080294022 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116133174 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079919311 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136780938 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078575823 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109100521 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107149008 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073588866 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105274125 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077554301 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101017012 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076384423 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074404055 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107156862 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075413443 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075780704 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105230784 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079255955 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071589424 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107299655 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077996899 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073979314 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109667364 seconds)
  done (took 3.541947155 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099142348 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133607731 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112081609 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183546981 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160163282 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099164999 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131032909 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139067818 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.107783895 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119581333 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096334251 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148559264 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109187103 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128714051 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091264144 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137504224 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135380401 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093437012 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127748146 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111390815 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137593048 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101387715 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.14117605 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132524376 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092435789 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123139191 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096380276 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134885935 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096957871 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130363453 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095660972 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124951861 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122398 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103601746 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125031763 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093497999 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141585521 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101586499 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129962729 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091833345 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.128953823 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.12115276 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.112664517 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.159867255 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090729716 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12888698 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094491853 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.131934742 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120803458 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110060123 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130189185 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091271469 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.123889892 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091038244 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.120825675 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105839875 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123226782 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09424851 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130340462 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126105016 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104707664 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124077147 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107893875 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12109491 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099507607 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.12139243 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092421746 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119943991 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143255152 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093937059 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160455097 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.0924418 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123304999 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100770125 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129186519 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127235162 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092695343 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135847935 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102489022 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124855459 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.100975086 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.124928351 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095072373 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140184092 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.122616899 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094844257 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121648293 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.098865988 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123189609 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093566846 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135236876 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091579143 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124726158 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109457632 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121518942 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092912135 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.127415691 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125899251 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091912767 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134743504 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097863275 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122442263 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.101468235 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.12186797 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123806768 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102683993 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125245871 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.090984666 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126965683 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.09866906 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122218287 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093915689 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124931117 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.092917412 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131492711 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099493323 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127332007 seconds)
  done (took 14.711266999 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227514477 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214478782 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204687973 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.29043765 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134517436 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116896439 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.21019213 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.154481615 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123500253 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159120997 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17264128 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181110155 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.167720834 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180527577 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169156948 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.091627491 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141369629 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.13356827 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.243454277 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.257406064 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142634582 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100629041 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159470595 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158849597 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.13738803 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.130726791 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109812511 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133803876 seconds)
  done (took 5.754375893 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106857252 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155445972 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097740058 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144384993 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147119812 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092545545 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.1270002 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094144863 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134677532 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134237916 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091789123 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128871342 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.09883327 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131456742 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121667434 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102815475 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130536778 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094066602 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125329665 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096974303 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132640283 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101753454 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126137576 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120316891 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102385523 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120843729 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085767134 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141857813 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121318149 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115004728 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120239749 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101417521 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135747896 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092453403 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121722768 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.09470266 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124545194 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094253445 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12357232 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091140531 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.12145333 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077355584 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121359193 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135533751 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100527016 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079678322 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129043478 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127404229 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094853301 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119807609 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095677747 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124296244 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.095874297 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130322804 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095627944 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123538322 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096022522 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115218024 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099711715 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124145035 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084302458 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120096216 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097698346 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118043402 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102048801 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127448796 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091741195 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124305256 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09674014 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129127155 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094376229 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.12857633 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090240147 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.124801595 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094789636 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127452578 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095858901 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.120881805 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121021265 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093484228 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074183925 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122588589 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.072796863 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.1252111 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091415729 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.120904956 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094335711 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128835597 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13573794 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094957452 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130878804 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093314525 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122234538 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095933402 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112679897 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096369247 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138763313 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139935456 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093375539 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120663844 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107240787 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125171238 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092478912 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105580668 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10167373 seconds)
  done (took 12.863908042 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.125558468 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152377103 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094036237 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.140865205 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155638025 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156101615 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099281116 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129800957 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.0953293 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.14128588 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093260254 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131295832 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092919906 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.136841294 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155576965 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102545437 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123899007 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107294265 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127194013 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168496069 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110681381 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141668178 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110048904 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.1234437 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098155813 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.139043751 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160773724 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107159147 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136065879 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141177389 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107329327 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.159372517 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.113062638 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128197602 seconds)
  done (took 5.427474005 seconds)
done (took 49.332603811 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.204200134 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.409763605 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.184513636 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.115079059 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.190046735 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.186009911 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.200402087 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.185823277 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.640583251 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.19126269 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.440846284 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.788449982 seconds)
done (took 59.854785409 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.220553586 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.321462198 seconds)
    (2/2) benchmarking "String"...
    done (took 1.449146337 seconds)
  done (took 3.886594368 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.557025203 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.115418111 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.449126116 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.185375057 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.186358618 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.481041723 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.982275939 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.836406991 seconds)
  done (took 28.352198611 seconds)
done (took 42.133106137 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.168393906 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.218827935 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.207364884 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.172324449 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.299204436 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.207692014 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.532899426 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.192964817 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.203416512 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.165246728 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.207161709 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.190513428 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.192525504 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.561415747 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.193091248 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.200246134 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.223217795 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.750167691 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.592808691 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.190151189 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.19469866 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.207245062 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.186751441 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.190466505 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.219597444 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.19241446 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.18859205 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.18906919 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.73836572 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.188082044 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.202239961 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.726223845 seconds)
  done (took 190.211289512 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.187219891 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.221895043 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.309273989 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.212461498 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.632623317 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.389648469 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.335126927 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.714836103 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.210535047 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.208701307 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.415198322 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.192668294 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.488282496 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.16300468 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.219373528 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.288355338 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.384815725 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.490716583 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.22942258 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.349016499 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.206432867 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.508346025 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.5039901 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.366932601 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.216058339 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.267811372 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.213280848 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.21518754 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.388702458 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.30910531 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.239497538 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.218348462 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.82088802 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.041346951 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.198104005 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.204006945 seconds)
  done (took 149.681838262 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.190645295 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.190574474 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.190363808 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.191585618 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.222536188 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.189797475 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.775183111 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.778444103 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.693287045 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.716656303 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.602874106 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.460538625 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.19127463 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.285374142 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.204680215 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.191857252 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.206213935 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.233618286 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.195090859 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.191312441 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.770371612 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.207875783 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.234226067 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.371572864 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.207287535 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.223046514 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.582576941 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.190963699 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.224300907 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.523209607 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.244917011 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.192391829 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.588558815 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.731625851 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306172073 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.193046317 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.225340687 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.191327496 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.4721273 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.192013906 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.193092717 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.195574869 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.87728963 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.196638137 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.779047465 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196102924 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.168872612 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.196899928 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.192350163 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.593744132 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.906998573 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.213542887 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.192789647 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.196145239 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.192813289 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.193345855 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.226699925 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.57167423 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.290184697 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.211091143 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.192673046 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.198001164 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226392236 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.1938736 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.437512651 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.209933452 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.696557737 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.251772182 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.410975201 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.776342769 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198611848 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.194547617 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.291391901 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316411289 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.194174127 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.19521724 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.194490679 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.195168132 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.306736853 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.195002488 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.615623166 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.373999731 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.21106496 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.615637911 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.298153568 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.196601001 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.59915228 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.199936738 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.195552704 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.959540398 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.294464063 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.196691238 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.196199282 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196485223 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.619179726 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.781159357 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.467075551 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.200247939 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.572776516 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.199413661 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.195652583 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.634761203 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.75490948 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.898722937 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.200565857 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308557913 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.374002335 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.213702722 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.196711375 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.606797057 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.200266162 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.255690584 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.19631235 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.595061757 seconds)
  done (took 366.184019753 seconds)
done (took 707.19140982 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.794601962 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.778173393 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.893527759 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.773191792 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.738474961 seconds)
  done (took 10.104977979 seconds)
done (took 11.229607819 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.383688916 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.383718094 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257300834 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.38490181 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.229992277 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.403228449 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.363014599 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.217599412 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.299323602 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.279841762 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.299340613 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252019954 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232147465 seconds)
  done (took 18.112924797 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.509093233 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.520087243 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262262248 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.515141891 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23848198 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.511135427 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.403829142 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.411467779 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.41574496 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.231632312 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.210795649 seconds)
  done (took 16.35898842 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.510923559 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.526153824 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26855168 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.51962465 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244334345 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.560438345 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.410232905 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.419291298 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.416213475 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233193077 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.212008342 seconds)
  done (took 16.449547546 seconds)
done (took 52.045309667 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.208139978 seconds)
  done (took 2.336718754 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.242341134 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.408855105 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.227508339 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.214823703 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.209124347 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.209915776 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.214066842 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.209259428 seconds)
  done (took 11.066427494 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.207999389 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.205746722 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.207959378 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.208552777 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.208600511 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.2083354 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.208048208 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.209034687 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.205827252 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.205514101 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.205174755 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.205797797 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.205405962 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.209066549 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.206074075 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.205933382 seconds)
  done (took 20.443624892 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.20837612 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.206198728 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.206045557 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.20666723 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.206951093 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.207152807 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.207508805 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.206225565 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.206546804 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.2060983 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.207783054 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.20580852 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.20712035 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.207037541 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.206022803 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.208963339 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.206730223 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.207492726 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.21164181 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.207240253 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.207986167 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.207753476 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.207313505 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.208779923 seconds)
  done (took 30.108516954 seconds)
done (took 65.081298201 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.838933073 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.899263842 seconds)
  done (took 6.870237253 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.210828184 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.209515759 seconds)
  done (took 3.556615182 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.210434126 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.209675667 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.211056061 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.210882614 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.209590494 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.210080293 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.210105323 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.210789079 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.210501234 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.209544733 seconds)
  done (took 13.234326641 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.210663901 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.210449009 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.208306137 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.210025628 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.210275048 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.207919298 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.210640887 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.210706504 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.209672737 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.20876382 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.210998148 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.209081064 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.212034881 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.209283748 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.210902323 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.208208315 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.208689636 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.208628869 seconds)
  done (took 22.907954335 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.211354028 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.211025719 seconds)
  done (took 3.554938222 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.208981326 seconds)
    (2/7) benchmarking "second"...
    done (took 1.209126416 seconds)
    (3/7) benchmarking "month"...
    done (took 1.209416416 seconds)
    (4/7) benchmarking "year"...
    done (took 1.20972026 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.209017653 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.210507491 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.209980773 seconds)
  done (took 9.600376203 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.212600572 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.386791805 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.464733919 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.789996799 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.212762711 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.216375117 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.053627658 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.216786395 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.2192331 seconds)
  done (took 13.907596213 seconds)
done (took 74.761315439 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.245407607 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.228847639 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.442215399 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.232422681 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.228304618 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.551679472 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.220289263 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.331333742 seconds)
done (took 37.61268443 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.219129807 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.193801237 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.975238136 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.189604414 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.23890289 seconds)
  done (took 18.733480396 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.260512669 seconds)
    (2/2) benchmarking "read"...
    done (took 1.546824385 seconds)
  done (took 4.944784077 seconds)
done (took 31.03101774 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214759431 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.211617975 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.214036973 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.215292687 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.211904376 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.214154508 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.211209753 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.211569476 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.215138377 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.213992898 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.213706965 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.211581865 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.21483349 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215443688 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211703741 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212525241 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215139934 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.212109672 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211352365 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212782868 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.215407123 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214928549 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.212318654 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.21244008 seconds)
  done (took 30.256660289 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.216366022 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.213989489 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.215381427 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.216369293 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.213099573 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.214810582 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.215751785 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.213459613 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.217251089 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.216712333 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212973888 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.213517942 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.216830315 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.213914193 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216942518 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.214343185 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.216409145 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214383932 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217272228 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.214186242 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.216755815 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213085898 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.213491536 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216788244 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.213498875 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.213039549 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.217093893 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.215398735 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217077794 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.2151449 seconds)
  done (took 37.593247745 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.221698536 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.224181095 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.217179626 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.218008151 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.217361853 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.21829456 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.217104145 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.21727328 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.217345211 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.217375692 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.217340685 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.217875953 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.218926422 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.218080319 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.218269 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.217958325 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.216712926 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.217828249 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.217941612 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.217827794 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.218479915 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.217795144 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.219145213 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.218646239 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.218318205 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.217385188 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.219452556 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.21954121 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.217854418 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.219288428 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.21899093 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.218774432 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.218749546 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.219625047 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.219318131 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.21815777 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.224940281 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.226708868 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.219811733 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.21877089 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.219951282 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.220030606 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.220367261 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.220104409 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.220583724 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.22016575 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.219229967 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.220227714 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.220209928 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.220877243 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.221029036 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.220077544 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.221029317 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.221030351 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.221544287 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.221131501 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.220619249 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.220762114 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.221819625 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.219926965 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.220617506 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.221467237 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.220639577 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.221849692 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.22171235 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.220911219 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.220807629 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.220920493 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.221353037 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.221127473 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.221120835 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.221205408 seconds)
  done (took 88.959510115 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.22238552 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.21916008 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.218562872 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.219408254 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220087733 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.221194796 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.220135567 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222517982 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219121483 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.22137232 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221679552 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.219192282 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219486019 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.222647481 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222874151 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.220250126 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.221605803 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219950253 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.222267877 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.223001626 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222642802 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.220020652 seconds)
  done (took 28.003422951 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222655073 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.226536612 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.220950753 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.223213058 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221042422 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223084708 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.223620606 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225582586 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22378011 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221117666 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220304573 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224037856 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.22101738 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221425324 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220618577 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.223269737 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224696768 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.222593989 seconds)
  done (took 23.154124663 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.221628589 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.221398406 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.223791804 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.221510341 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.222520652 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.224308146 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221917947 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.22471365 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.224174876 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.222695594 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.225456025 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223658967 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.225441218 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222185041 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224824225 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.222112566 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.226394418 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222522797 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225265614 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.222342872 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.222258603 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.226735369 seconds)
  done (took 28.062555062 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226683933 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.225121599 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.223314526 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.22270991 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.222811899 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.2263775 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.22522869 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.22268717 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.226394868 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.225522785 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223103043 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.225757347 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.224749034 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.224833443 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.223062368 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223402515 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.225955864 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.224986617 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226098165 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.224481108 seconds)
  done (took 25.640901336 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.226673501 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.227329726 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.227706452 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.228407009 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.228399902 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.227133148 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.228417168 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.228359552 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.228190862 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.228339801 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.2281115 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.228369259 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228753122 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.227998127 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.229017049 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.228824391 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.228221237 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230256501 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.228731225 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229487316 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.228991664 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.228985719 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.229730829 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.228656481 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.229405701 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.229563217 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229003408 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.230994698 seconds)
  done (took 35.549978257 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230497327 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.229080749 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.227219652 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.226291378 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.226524885 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.22553406 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.227156672 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.225681048 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.228982443 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.225771291 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.229740066 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.229224672 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.230067243 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.229113248 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229861696 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.230178784 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229710614 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.227534505 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227006348 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227545069 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.23049677 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229652712 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.230146578 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228384427 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227561979 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.230858564 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227964446 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.228539188 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230347457 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.228003465 seconds)
  done (took 38.00498025 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.249111634 seconds)
    (2/2) benchmarking "in"...
    done (took 1.248590474 seconds)
  done (took 3.648896267 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.228746562 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231794519 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.23146554 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.228575495 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.228983554 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.232497803 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.231317457 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228612023 seconds)
  done (took 10.994073652 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.232231259 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.231280458 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.231717372 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.232360296 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.231504727 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.232463971 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238162895 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.251214963 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.23128833 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.233574417 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.238810581 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.239139529 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.234664796 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.231941598 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.230475382 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234722982 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.232485285 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.23197887 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.233579558 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.23303207 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.232119865 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.2352172 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233999776 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.229627663 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.234027537 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.242502369 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.2559962 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.233511237 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.232954865 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.236563274 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.233108247 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.230901952 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.233135156 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.233972597 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.234778483 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.234061992 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242736248 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252625488 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.23880149 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254827345 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23442408 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.231332208 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.233871074 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.2355891 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.234934163 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.234442601 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.236309922 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.232718974 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.233709287 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.237990694 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.238224423 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234386284 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.232158375 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236588988 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.234678217 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240571686 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.254919419 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.23864671 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.244024508 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.245824508 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.267278107 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.259751066 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237074861 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.235562982 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246751913 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.258577747 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.242867934 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.253209138 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.233875103 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.237000209 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.24275199 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269047675 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.262421115 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.237413802 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237567997 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.236716287 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237006266 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.237541826 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24289997 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.259406694 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.237024276 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237240504 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.247004976 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258979858 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.238082303 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.237346009 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.237853412 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.237819697 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.238124617 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247259973 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.256756137 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.239427569 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.23629917 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.237551681 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.23828707 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.238020044 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.237019183 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237690943 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.2361063 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.238427142 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239560316 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.242486493 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.246670808 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.238098386 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239706505 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.2445896 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.259720981 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238621221 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.245072039 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.239136868 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238695397 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.240823702 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.245892119 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.23654399 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.241677606 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.247570744 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.238695323 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.239207479 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.238286388 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.239436906 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.249457003 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.263931294 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.240218577 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.239189004 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.242965805 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.25092874 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239596649 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.242386961 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.239748282 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.237643098 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.237843892 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.24109305 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.246689485 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.240840773 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238842249 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240762399 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.239422944 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.240265376 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.240399746 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.240966175 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.241356758 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.241395109 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.241613355 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.242395447 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.24161786 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.242491475 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.247397093 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.260133291 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.241505628 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.24078906 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.238045485 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242116969 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.241591378 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.241757483 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.240976943 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.240926417 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.241000432 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.241953506 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242096866 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.241542976 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242288084 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.24208022 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245983591 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.241851187 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.246125869 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.242483116 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.239600911 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.243333897 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.242171611 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.2421712 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.242583063 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.241564274 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.245554022 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.251222517 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.242753755 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.242130188 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.245027991 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.242787249 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.243187161 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242859238 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.246121341 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.251388657 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.24259825 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.248682166 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.263584343 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24380882 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.245208381 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.242498544 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.242337322 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244296976 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.246622354 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.251575745 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25680475 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269770457 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.244565011 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.249140821 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.244724698 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.247713446 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.246902204 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.24467648 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.245618587 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245003013 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244730397 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245627575 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.246247025 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.245656458 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.243757754 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.24515861 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.244163561 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.246212867 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246398512 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.245701913 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.245344926 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.242666747 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.245970138 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245175932 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.244416277 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.243505442 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.244760038 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.246587993 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.247133346 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.247923593 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.251888357 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.244108591 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.2463015 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247724602 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.245077097 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.245587029 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.246663669 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247860114 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.245974103 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253641931 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.266348724 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.247510239 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253643997 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.266735531 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.247230946 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.249471226 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.247351367 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.244875756 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.249466761 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.255252047 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.249200995 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.248110342 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.247636338 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247100144 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248658027 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.25370292 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.265930888 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.247530992 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.248555439 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.247513718 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.245322113 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.248280011 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.248757236 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.248629205 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249209802 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248769265 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.24884622 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248202457 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.247760498 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.248940944 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.24855978 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250796402 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.255881009 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.253158512 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.248652068 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.250064626 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.249368366 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.252825692 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.248637483 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.24928431 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.248818845 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.260725298 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.274027163 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254685229 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.269922947 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.249289339 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255018179 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.270186834 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.253544924 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250201815 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24969873 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.248528993 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.248685818 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.24860861 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.250262391 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.251087068 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.250468934 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.252365227 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.254415929 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.249765546 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.249691738 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.250747919 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.251370653 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.251888187 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.250017385 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.251220713 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.25312121 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25162551 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.251009403 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.252187136 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258149589 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273319339 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.251322316 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.250774466 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.251616681 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.250601894 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.252549264 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.251778805 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.254686899 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.260304911 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.255336934 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.261240514 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.254537613 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261384242 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.252574346 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.255320152 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.260593496 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.250663275 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.251617343 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.253032982 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.253585761 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259018558 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.274344112 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.254386643 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.257831358 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253007314 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.253931005 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.253158701 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.25355062 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253904597 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.253505949 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261327577 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.273204442 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.257561736 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254869119 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.252027805 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.253540348 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.254564002 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.252919189 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257774292 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.253476466 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.254635796 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.253890354 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.253936086 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.255213067 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.253983744 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.254937078 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.251956235 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.254220682 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261461562 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.27652416 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259321778 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.254451304 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.261911425 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275164434 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261160393 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.276185762 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.254791443 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.254972517 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.256194605 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.256075264 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.255452228 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.256239889 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.256012972 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.25635433 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.259268164 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.256352771 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.257077123 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.256426359 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.256207294 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.25592314 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265089242 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279210314 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.257623786 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261918629 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.253693324 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.25676278 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.260510999 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.25634826 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.254881362 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.259072667 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.266378865 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265174617 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.256876919 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.257325542 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257039769 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256973784 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.256597657 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.257883081 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.257492383 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.258422147 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.256974964 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.257823857 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259469085 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.258493338 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.257345292 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258451495 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.259274714 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.267242509 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.279256902 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.258953084 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257872265 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.259174091 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.258279127 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.257357899 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.259171506 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258577125 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258831592 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.259523193 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265284281 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.264348358 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.261534859 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.257458609 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.259076756 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.257742143 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.259054351 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259730945 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.258481096 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259389153 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.260019425 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.259225106 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.258829262 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.257521099 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.260217542 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.259461509 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.26004331 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.261729449 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.267832483 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260840702 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.25799448 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.260267163 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261338065 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.257975313 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.259548221 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.266938282 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284589695 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.270296994 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.268809537 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.264570817 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.259827004 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263983994 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.26775318 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.258982006 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.261457421 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.260886571 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.259855201 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.261449123 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.263735462 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262059776 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.266256257 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.281393855 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.260287525 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.269505034 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.281244765 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261723371 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.263004885 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.265327523 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.261011768 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.261198924 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.263601645 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.261643075 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270426442 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.284554872 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26423367 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26511844 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.261593102 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.265824847 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266723705 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.262021228 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.263669224 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.259735157 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.263156338 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262428097 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.262441234 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.261185614 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.261450098 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.263061945 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.267470301 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.268297117 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.261046652 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26370635 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.26299225 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.26446399 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263729144 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265219155 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.260925342 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.261538966 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.262722245 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264012794 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.26321363 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.26494994 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.261762655 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.26510647 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.265953135 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265001026 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.267060048 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.27371231 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.271933241 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.261667263 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.263959985 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.264263525 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.267074212 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265699148 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.263968231 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26443531 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.264031016 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.265223551 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.264258502 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.264735901 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.267513224 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279320779 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.285055402 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265046352 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.264993835 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268886246 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.266126792 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.262146601 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.266218027 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.266794274 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.267852013 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.273187342 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.265854641 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271444815 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.285045936 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.266576593 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.270067708 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.268719935 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.271712583 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.268700932 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265600336 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.266177338 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.269952848 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.280591624 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267231095 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.277608089 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.295473248 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.286556072 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.267213703 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.267120771 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266109392 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.267971801 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.268495099 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.267023814 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.266313387 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267695159 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.267624352 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.267966742 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272245922 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.268348308 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.26971992 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.267839926 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.267339812 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.268493469 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.265237561 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.268123059 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.267431277 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.269075526 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.267801244 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.268020225 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.267445325 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279875059 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.295234891 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.268464954 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.267379996 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.265546673 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.270927234 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.27149684 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278892056 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.276552882 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.269148034 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.26861346 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.269544779 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269245236 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.267485433 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.269284327 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.269578807 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269527096 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.266298632 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.281915326 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.29614944 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.273714343 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.269006318 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271048456 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.269749289 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270534579 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270593899 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269706483 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.270081294 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.271386129 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273608281 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.270007284 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.270846406 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.27302196 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.277632447 seconds)
  done (took 748.5504042 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.268153426 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267665463 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.268796985 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.267450923 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268348883 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268486745 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267998107 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.268414482 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.267980597 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.268606491 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.269085218 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26844429 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268721511 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.269366352 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.268963669 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.268714546 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268336538 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.269306508 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.269406728 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268597017 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.269238765 seconds)
  done (took 27.828030348 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.271977489 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.270251625 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.269525704 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.271879555 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269108802 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.271987624 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.270281556 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273251677 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.271680795 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269946445 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.271757636 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272916528 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.270179103 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.270556577 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270431851 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273016731 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.274673888 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.269693512 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.272687175 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.270204031 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.272962159 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.270658878 seconds)
  done (took 29.159505677 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.274000822 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.273091477 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.272576823 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.271089132 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.272879924 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.270965451 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.273668198 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.273605094 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.273329268 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.272914676 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.274017626 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.274850365 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.279301434 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.278688194 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.275346048 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.2730683 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.417757626 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.273308033 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.274674368 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.275171303 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.271893874 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.278373206 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.29425005 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.271192331 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.273217811 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.274408049 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.274332215 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.273336733 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.274460495 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.275018703 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.278476028 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.275042046 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.274729245 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.277277903 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.273178668 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.275698378 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.279139639 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.275012756 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.272576898 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.275881941 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.285159554 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.295713259 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.275154075 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.28151377 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.297675089 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.276096754 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.279192634 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.282349255 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.274288693 seconds)
  done (took 63.880343706 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.275986282 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.277221086 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.273686954 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.276716301 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.276417235 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.27580568 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.276299721 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.277838216 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.274962469 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.274479341 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.27781944 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.275263673 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.275703001 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.277298549 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.277829995 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.275305819 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.275655353 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.275431337 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.275848605 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.27514559 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.276180636 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.277708326 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.276878168 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.275807042 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.278029031 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.276492406 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.275386388 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.277141835 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.27532347 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.275611095 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.27800702 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.278453728 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.278988109 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.276906591 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.275481222 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.278046375 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.278906259 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.276213118 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.279364534 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.277546637 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.278682844 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.279852633 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.279408452 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.278071515 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.275955583 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.276935659 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.276429743 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.277096379 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.277865294 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.279833232 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.279490229 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.276602067 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.27965051 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.277316886 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.280270562 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.280518477 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.277584941 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.277661331 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.279713981 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.277260075 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.278206086 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.28081203 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.277356656 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.279836251 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.28064303 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.277926633 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.278215282 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.280055844 seconds)
  done (took 88.058125264 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280214931 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.279220554 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279947965 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279718513 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280295797 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.281102613 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.280426865 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.280891857 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.279954515 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.280095682 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.28022139 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.279980571 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.280987514 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.280796613 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.280777707 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.281481308 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.281416516 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281086688 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.280872939 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281043682 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.281927874 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.281794185 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.28131453 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.282041688 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281292804 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.281377185 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.281371464 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.281540259 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28198609 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.280764369 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.281934143 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.282942188 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.282377631 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.282701465 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.282960855 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.282170037 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.282202068 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282203063 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.283278327 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.283179053 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.28134201 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.282495512 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.282948456 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.283166284 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.282168318 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.282578875 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.282543319 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.28381701 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.283275705 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.282254611 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.283120742 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.282773678 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283068499 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.282847565 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.282861948 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.283371018 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283485819 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284337357 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282486049 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.283217307 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.283533021 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.284549273 seconds)
  done (took 80.676602429 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284159467 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.284610671 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.281960019 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.281557348 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.283952725 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.282100751 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.285028904 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.286084405 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.285503677 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.285458076 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285131219 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28343654 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28200667 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285542906 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.282938923 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283198089 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282860571 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.281800332 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285315368 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.283048877 seconds)
  done (took 26.876383549 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.283563707 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.286277306 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.283615362 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.283416465 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.284849673 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.284000378 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.287373662 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286199122 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283325021 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286139139 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.286979169 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.287161676 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283288741 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.284378515 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.287009279 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.284858594 seconds)
  done (took 21.764269385 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.284553975 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.286913852 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.286420019 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.286846563 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.284211017 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.285206367 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.287012729 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.28561127 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.284880257 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.288694533 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.28756583 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.288361132 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.287603857 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.287305822 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.28529285 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.289552019 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.285338838 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.285851452 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.289369496 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.288702886 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.285402587 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.285190355 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.288086697 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.289605797 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.286112136 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.286928536 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.285517651 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.28641854 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.285054111 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.288284406 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.286764094 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.287790048 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.285925326 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.284963659 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.289497302 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.286280708 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.288784813 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.28886652 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.289723995 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.288257385 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.288899393 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.286705622 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.288261612 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.288757866 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.286805783 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.290242939 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.287077716 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.287040199 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.286852038 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.286511055 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.289572691 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.289378636 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.289432368 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.289933298 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.288977056 seconds)
  done (took 72.007349555 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290497235 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.290118197 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.286843911 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.290540985 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.291107007 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.288279775 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.289409344 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.289085479 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288031883 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.289695888 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.28825361 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.292564833 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.288186306 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.291781179 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.290584257 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291612195 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.288312146 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.289688354 seconds)
  done (took 24.42091735 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.28954712 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.288705562 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.291265704 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.289258849 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.288497712 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.292053581 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289207864 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.290933248 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292213742 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.29128843 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289309025 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.291692231 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293197584 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.29235785 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.290087511 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289054434 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.292001818 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292543467 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.289998074 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289774654 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292852919 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292914754 seconds)
  done (took 29.606734586 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.290356526 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.290016335 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.290289473 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.307953492 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.30914357 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.314452825 seconds)
  done (took 9.010199342 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299499879 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292555203 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290134675 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293697363 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293287362 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290888658 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290564361 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291416545 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292264732 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291967037 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29099478 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293493045 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293724161 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291945778 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293962914 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293496623 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290943304 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291883084 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293161518 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294630715 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291396397 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29474151 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291497124 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291689343 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292790784 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291922647 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293930099 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293396191 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29162197 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294219621 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295266559 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291748477 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294508205 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292919027 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294890045 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295408268 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292913758 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294968061 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295241259 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292683389 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295333822 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295193629 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294539253 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292724452 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296276711 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291979164 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294142788 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293571945 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292895734 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295907593 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296381167 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293209414 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295252975 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297047243 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296710351 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296463013 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295208395 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294059971 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295954803 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294420182 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29356324 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297126188 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2949543 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294862996 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296470188 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294482335 seconds)
  done (took 86.624371188 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294574697 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294365563 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294151677 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29675162 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29372171 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294708677 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294611715 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294290847 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294968753 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295083253 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297298058 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293917611 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295577548 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294751496 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295578586 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295123741 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29465364 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295457551 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29594718 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29810756 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295370324 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295479696 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295270877 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294659166 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295263347 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297953816 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295175643 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296709737 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294897372 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295567055 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296103249 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296099408 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296988152 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296489099 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296144906 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296655026 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296197765 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297096862 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296885693 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299885489 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296502015 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299879607 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297944366 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297546183 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297558268 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297319315 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297471922 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297481621 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296848427 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297625299 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29757682 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298624507 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297672673 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29876824 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29786179 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298786478 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298610893 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299047982 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298336404 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301718958 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299240516 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298406429 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30162051 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298426669 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299440922 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29876001 seconds)
  done (took 86.803376804 seconds)
done (took 1746.267513261 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.470628018 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.425511825 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.29928042 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.323502994 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.299754081 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.315373454 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.297937582 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.299433114 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.299827974 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.299058617 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.299147045 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.493939127 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.296117751 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.300717225 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.299755295 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.39418485 seconds)
  done (took 42.631994311 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.329505075 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.306783816 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.424629633 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.324796481 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.329334072 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.502452727 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.357628715 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.306281703 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.489788819 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.349172858 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.966285451 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.329659733 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.305336168 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.486550369 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.324965198 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.503189539 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.570430668 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.972010993 seconds)
  done (took 30.395663752 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.788798044 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.301533626 seconds)
  done (took 9.308857327 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.325660595 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.311934961 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.307192373 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.304077963 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.296128123 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.315396911 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.303329496 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.300829126 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.280429786 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.445549276 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.307299544 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.312943426 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.326005271 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.305709238 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.303583306 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.342260838 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.480674182 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.304353008 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.302849675 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.311344867 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.305377939 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.409000034 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.349547938 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.305122346 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.440735686 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.284132233 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.313537732 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.313388932 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.461749434 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.306128951 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.305036871 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.305216201 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.307869041 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.923145251 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.816127391 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.320839891 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.332273627 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.315428825 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.304590075 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.462752186 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.307653727 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.313763862 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.311839842 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.805079136 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.440667195 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.431633704 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.6487577 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.33195843 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.307787941 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.3738752 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.314097341 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.309302123 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.339199095 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.104682348 seconds)
  done (took 110.942447653 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.363361054 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.690517098 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.470130424 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.322399013 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.056195247 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.979454124 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.319526142 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.611639678 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.342939749 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.301687244 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.652334547 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.837218132 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.322950653 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.368000223 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.78589999 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.372167529 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.300580366 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.216586639 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.325437666 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.30737646 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.814355823 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308285421 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.325658981 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.574065235 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.342478498 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.780978715 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.874705443 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.800631714 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.320406176 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.30281435 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.805499673 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.330983098 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.352645521 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.305645211 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.574857439 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.684848922 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.676485042 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.320463337 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.319638304 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.307744747 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.322376004 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.776837744 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.687348291 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.321513395 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.322175787 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.781020485 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.321581428 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.308039096 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.302618 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.513731464 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.178680242 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.302631826 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.86532607 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.30962185 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.643982495 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.367678719 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.351428475 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.809908117 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322163026 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.486463314 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.331425867 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.30500323 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.311062829 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.304422793 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.307160917 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.675161044 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.661192674 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.310095053 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.671275471 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.810020884 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.323109466 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.861050463 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.18628839 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.332695298 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.346607722 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.303314538 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.035265866 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.832118341 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.357499828 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.305098951 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.660856663 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.328546599 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.637617767 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.323855936 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.305535545 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.825412207 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.314296091 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.352782069 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.305952765 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.31206912 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.093532113 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.304750254 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.60606873 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.362105384 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.305726965 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.305977482 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.309260352 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.305767414 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.306708378 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.307864615 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.862347965 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.338226998 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.294679158 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.328027127 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306062913 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.331793717 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.308764219 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.306303132 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.534024739 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.736548389 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.329485413 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.306826621 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.306747599 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.311530129 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.590379837 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.309679749 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.637145514 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.3263004 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323291578 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.311815475 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.016475659 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.349922619 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308880867 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.311868277 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.242124421 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.520013254 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.343251608 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.308264308 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.308332812 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.327119789 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.637044751 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.328961757 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.328475636 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.308055031 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.042282656 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.365901854 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.324917654 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.841944246 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.312872304 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.308517306 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.312661287 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.309787311 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.602553242 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.587035562 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.598442415 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.313040334 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.327750664 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.015446438 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.363279628 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.457712847 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.329076058 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.315157252 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.508770613 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.490411494 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.310624059 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.912172544 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.309420936 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.533239324 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.321696225 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.615077614 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.826769702 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.328673542 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.311186987 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.044290066 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.026267291 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.976590738 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.309613788 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.645428606 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.313699256 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.776952749 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.310961003 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.311285967 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.904564056 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.313922639 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.317731468 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.311721658 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.311441148 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.36850363 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.484973529 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.688381771 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.315770639 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.785642077 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.381181401 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312282508 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.320411226 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.316063288 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.662366875 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.378464475 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.316207638 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.332655835 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.312234685 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.313770304 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.807373897 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.240806489 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.316744213 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.466832394 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.97044215 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.331123614 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.314268151 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.871770991 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.552208598 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.880443836 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.375820285 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.643847256 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.339236207 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.35217099 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.97009729 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.332400427 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.808079228 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.333042124 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.313539446 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.934050914 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.331149544 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.374233175 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.313076649 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.315785142 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.874612938 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.331787876 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.319598672 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.646696004 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.334209565 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.572671973 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.314945139 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.355641478 seconds)
  done (took 1108.07901506 seconds)
done (took 1302.571921872 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.316977451 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.315764125 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.300390923 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.319310425 seconds)
  done (took 26.489060187 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.32484259 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.321216899 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.321787907 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.320515214 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.328415192 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.321439183 seconds)
  done (took 9.175887368 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.488402773 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.31547093 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.319515406 seconds)
  done (took 19.359656785 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.538102506 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.694022112 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.698978995 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.645505404 seconds)
  done (took 10.814844233 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.321577995 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.319860606 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.320895515 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.322695884 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.323456233 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.323320731 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.321331248 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.322080233 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.325459632 seconds)
  done (took 13.134633215 seconds)
done (took 80.207402521 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.37877373 seconds)
    (2/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.59592895 seconds)
    (3/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.163927549 seconds)
    (4/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.881660143 seconds)
    (5/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.602797955 seconds)
    (6/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.337436418 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.581357158 seconds)
    (8/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.364531914 seconds)
    (9/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.298594022 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.356458909 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.34113795 seconds)
    (12/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.574036476 seconds)
    (13/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.31195733 seconds)
    (14/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.294797428 seconds)
    (15/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.319699614 seconds)
    (16/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.927201613 seconds)
    (17/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.406441161 seconds)
    (18/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.037887843 seconds)
    (19/286) benchmarking ("sort", Float64, true)...
    done (took 6.320350328 seconds)
    (20/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.604021856 seconds)
    (21/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.434609834 seconds)
    (22/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.655538001 seconds)
    (23/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.192698736 seconds)
    (24/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.020146612 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 6.321841134 seconds)
    (26/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.301588492 seconds)
    (27/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.330490211 seconds)
    (28/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.422738439 seconds)
    (29/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.325008667 seconds)
    (30/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.29583563 seconds)
    (31/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.414551568 seconds)
    (32/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.338103955 seconds)
    (33/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.175048156 seconds)
    (34/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.731213739 seconds)
    (35/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.801471687 seconds)
    (36/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.300058762 seconds)
    (37/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.898722478 seconds)
    (38/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.702952718 seconds)
    (39/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.921545044 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.941544113 seconds)
    (41/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.806854212 seconds)
    (42/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.045108955 seconds)
    (43/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.303628364 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.427430309 seconds)
    (45/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.906660635 seconds)
    (46/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.401103383 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.569103036 seconds)
    (48/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.14915342 seconds)
    (49/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.318663513 seconds)
    (50/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.456435807 seconds)
    (51/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.304608128 seconds)
    (52/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.504972923 seconds)
    (53/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.931969828 seconds)
    (54/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.457991595 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.375710779 seconds)
    (56/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.297500036 seconds)
    (57/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.688574449 seconds)
    (58/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.302413421 seconds)
    (59/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.435983059 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.339667312 seconds)
    (61/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.453752789 seconds)
    (62/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.835349846 seconds)
    (63/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.298653744 seconds)
    (64/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.417172935 seconds)
    (65/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.408888716 seconds)
    (66/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.299692982 seconds)
    (67/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.86163327 seconds)
    (68/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.405681347 seconds)
    (69/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.840050941 seconds)
    (70/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.530806807 seconds)
    (71/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.274354348 seconds)
    (72/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.816108753 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 5.614317241 seconds)
    (74/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.347755084 seconds)
    (75/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.315865657 seconds)
    (76/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.316632446 seconds)
    (77/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.351691288 seconds)
    (78/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.361215223 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.285281192 seconds)
    (80/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.465109127 seconds)
    (81/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.346027845 seconds)
    (82/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.988856031 seconds)
    (83/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.543680025 seconds)
    (84/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.363824256 seconds)
    (85/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.631324619 seconds)
    (86/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.389766572 seconds)
    (87/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.926584404 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.001399187 seconds)
    (89/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.09421312 seconds)
    (90/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.848757286 seconds)
    (91/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.697629514 seconds)
    (92/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.330427864 seconds)
    (93/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.404094425 seconds)
    (94/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.536623398 seconds)
    (95/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.222795973 seconds)
    (96/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.4517871 seconds)
    (97/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.300143207 seconds)
    (98/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.440409581 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.310218219 seconds)
    (100/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.315644657 seconds)
    (101/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.408282108 seconds)
    (102/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.301377552 seconds)
    (103/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.848336187 seconds)
    (104/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.828876593 seconds)
    (105/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.318098856 seconds)
    (106/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.325789575 seconds)
    (107/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.33789327 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.102998449 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.03572732 seconds)
    (110/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.563205738 seconds)
    (111/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.509876274 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 1.86412765 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.370226033 seconds)
    (114/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.321225457 seconds)
    (115/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.57907283 seconds)
    (116/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.421428717 seconds)
    (117/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.302048651 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.158594001 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.103314316 seconds)
    (120/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.581163096 seconds)
    (121/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.334281043 seconds)
    (122/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.411108097 seconds)
    (123/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.779523086 seconds)
    (124/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.724617797 seconds)
    (125/286) benchmarking ("sort", Int8, true)...
    done (took 6.322296862 seconds)
    (126/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.319401713 seconds)
    (127/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.384151748 seconds)
    (128/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.431595982 seconds)
    (129/286) benchmarking ("sort", Int8, false)...
    done (took 4.385114128 seconds)
    (130/286) benchmarking ("sort", BigInt, true)...
    done (took 6.323081576 seconds)
    (131/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.345062881 seconds)
    (132/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.864121522 seconds)
    (133/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.341420065 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.255243227 seconds)
    (135/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.18436389 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.151855286 seconds)
    (137/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.34979202 seconds)
    (138/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.724875538 seconds)
    (139/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.349383677 seconds)
    (140/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.349475371 seconds)
    (141/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.309065607 seconds)
    (142/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.066369201 seconds)
    (143/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.453477893 seconds)
    (144/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.306114768 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.353800436 seconds)
    (146/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.014012228 seconds)
    (147/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.322750991 seconds)
    (148/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.275797858 seconds)
    (149/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.21567741 seconds)
    (150/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.395410859 seconds)
    (151/286) benchmarking ("sort", Float32, false)...
    done (took 5.380275266 seconds)
    (152/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.305995882 seconds)
    (153/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.021396774 seconds)
    (154/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.321313284 seconds)
    (155/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.343494303 seconds)
    (156/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.901356004 seconds)
    (157/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.386846582 seconds)
    (158/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.319915555 seconds)
    (159/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.353528756 seconds)
    (160/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.152607266 seconds)
    (161/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.325286168 seconds)
    (162/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.354741435 seconds)
    (163/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.326291712 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.755979461 seconds)
    (165/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.343622816 seconds)
    (166/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.361515069 seconds)
    (167/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.312652386 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.354066774 seconds)
    (169/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.14368993 seconds)
    (170/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.388434086 seconds)
    (171/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.305502202 seconds)
    (172/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.409654254 seconds)
    (173/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.730998575 seconds)
    (174/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.800927713 seconds)
    (175/286) benchmarking ("sort", Bool, true)...
    done (took 5.42483476 seconds)
    (176/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.430187228 seconds)
    (177/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.384566158 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.691380579 seconds)
    (179/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.325051787 seconds)
    (180/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.326935266 seconds)
    (181/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.354657915 seconds)
    (182/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.176871195 seconds)
    (183/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.313268409 seconds)
    (184/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.331070465 seconds)
    (185/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.377874442 seconds)
    (186/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.271203247 seconds)
    (187/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.453460684 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.693121761 seconds)
    (189/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.469770864 seconds)
    (190/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.545853921 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.96190046 seconds)
    (192/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.41118263 seconds)
    (193/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.354200528 seconds)
    (194/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.002726339 seconds)
    (195/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.39290479 seconds)
    (196/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.306719303 seconds)
    (197/286) benchmarking ("sort", BigInt, false)...
    done (took 6.347969825 seconds)
    (198/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.736690349 seconds)
    (199/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.378682328 seconds)
    (200/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.513387259 seconds)
    (201/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.332096613 seconds)
    (202/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.325563644 seconds)
    (203/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.310157787 seconds)
    (204/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.016991421 seconds)
    (205/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.352065998 seconds)
    (206/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.338179161 seconds)
    (207/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.165025044 seconds)
    (208/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.369648557 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.043450473 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.372104829 seconds)
    (211/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.349248755 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.753094987 seconds)
    (213/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.644487194 seconds)
    (214/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.321294273 seconds)
    (215/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.250177894 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.749991076 seconds)
    (217/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.58892016 seconds)
    (218/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.32350985 seconds)
    (219/286) benchmarking ("sort", Float64, false)...
    done (took 5.705869498 seconds)
    (220/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.446810815 seconds)
    (221/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.34361487 seconds)
    (222/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.349702473 seconds)
    (223/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.59052226 seconds)
    (224/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.359488888 seconds)
    (225/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.35574809 seconds)
    (226/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.455939011 seconds)
    (227/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.358196269 seconds)
    (228/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.310556211 seconds)
    (229/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.025034532 seconds)
    (230/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.565245229 seconds)
    (231/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.091981416 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.348818309 seconds)
    (233/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.334644282 seconds)
    (234/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.332503612 seconds)
    (235/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.310452615 seconds)
    (236/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.458522247 seconds)
    (237/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.324425866 seconds)
    (238/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.838322647 seconds)
    (239/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.3361253 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.360560937 seconds)
    (241/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.52115214 seconds)
    (242/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.810354492 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.724542486 seconds)
    (244/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.893462631 seconds)
    (245/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.32575739 seconds)
    (246/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.378258355 seconds)
    (247/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.33220155 seconds)
    (248/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.351837936 seconds)
    (249/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.342820273 seconds)
    (250/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.313477282 seconds)
    (251/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.434302285 seconds)
    (252/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.341493495 seconds)
    (253/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.845359132 seconds)
    (254/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.393661708 seconds)
    (255/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.197244791 seconds)
    (256/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.368844835 seconds)
    (257/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.104863102 seconds)
    (258/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.726285928 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.426835419 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.326981059 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.415408541 seconds)
    (262/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.350976955 seconds)
    (263/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.240949041 seconds)
    (264/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.458677114 seconds)
    (265/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.446684816 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.450118052 seconds)
    (267/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.411072318 seconds)
    (268/286) benchmarking ("sort", Float32, true)...
    done (took 6.353056341 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.138401017 seconds)
    (270/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.44087652 seconds)
    (271/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.332389122 seconds)
    (272/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.266573574 seconds)
    (273/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.441332426 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.758352785 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.393652487 seconds)
    (276/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.864043792 seconds)
    (277/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.333347777 seconds)
    (278/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.989327852 seconds)
    (279/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.369205826 seconds)
    (280/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.154651713 seconds)
    (281/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.382024184 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.357608341 seconds)
    (283/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.358048221 seconds)
    (284/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.009111171 seconds)
    (285/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.122549362 seconds)
    (286/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.011204385 seconds)
  done (took 947.069925777 seconds)
done (took 948.302400198 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.370037047 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365492896 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.347198654 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.369026662 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.458627491 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.373964203 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.359407481 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.349304641 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.395284305 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.399099543 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.34469646 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.373435995 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.34836224 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.348139651 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.348527488 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362226985 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.475413173 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.348593217 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.363558838 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.359751467 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.364047125 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.345137551 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.398356037 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.376310258 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.352587555 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.352512633 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.350458735 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.367083017 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.459927824 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.350884499 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.35202961 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.360372568 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.475179853 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.347705994 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.343155338 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.367349641 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.359402793 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.35872489 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.353431198 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.380229722 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.918075637 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.367183732 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.349392888 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.351371882 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.351669292 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.356289426 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.350868232 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.358209382 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362721451 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364943327 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.902953031 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.38330954 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.35245296 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.352592843 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.362474759 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.350367954 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.3549434 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.368010231 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.369629693 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368400351 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.463965986 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.355476707 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.353683437 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.368169227 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.357740895 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.942359718 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.365635382 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.356770734 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.918372519 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.376162774 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.942105767 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.378448199 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.3545701 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.36389748 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.38387056 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.478615519 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.346991593 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.352988274 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.358641373 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.348912438 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.363875461 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365734216 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.358279882 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.354454684 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.369123785 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.378514734 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.364796095 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.353792598 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.362155696 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.372083903 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.360469985 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.363621164 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.356625757 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.34966247 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.364230535 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.358099525 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.357238076 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.355942857 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.35852398 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.365398613 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.919345433 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390381862 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.353085013 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.351813363 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.354916658 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.366346166 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.919107501 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.373125495 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.37728433 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.401950973 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.356898897 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.468987478 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.358681099 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371949696 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.365918392 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.359311263 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.351971078 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.472067667 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.914046102 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.389305823 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.358012774 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.35385453 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372010219 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.358314163 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.353689984 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.485790667 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.357610583 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.370257528 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.476998574 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.366800868 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.387193382 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.354147816 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.36005134 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.378621186 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.374040541 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.387878824 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.359690169 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372637327 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.372115513 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.353154616 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.36735673 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.367254059 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.358513874 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.363585232 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.352192864 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.379473033 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368971431 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369540613 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.378125952 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.476486185 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.356245459 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.47521607 seconds)
done (took 230.209615044 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.413337628 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.344899823 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.437013297 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.350827809 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.453262522 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.452689952 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.349344441 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.348842812 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.349376577 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.729869133 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.350022366 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.35002245 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.350614728 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.34916252 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.435902151 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.35189019 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.350252753 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.694464967 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.352678676 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.421937945 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.352371135 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.350516618 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.352545238 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.736617082 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.349472769 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.351716916 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.423331856 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.352932782 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.702725452 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.348134833 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.352422236 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.704240022 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.442997895 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.372376909 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.36312825 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.361841708 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.455679475 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.374995436 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.433572325 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.433806156 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.437969445 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.391476897 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.354628415 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.345908089 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.354807195 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.356221393 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.351788076 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.380968958 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.353432197 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.351217332 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.697211462 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.365319952 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.363132562 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.353062099 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.352561482 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.374726702 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.352506314 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.35587653 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.445335366 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.355749072 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.417168049 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.740313128 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.73490153 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.356188264 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.357330414 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.353944949 seconds)
  done (took 149.770967688 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.420956213 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.427903647 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.4732059 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.374250961 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.404984397 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.477055389 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.374035806 seconds)
  done (took 11.219793632 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.362644036 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.35758941 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.406266085 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.404534031 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.35724617 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.545758558 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.35698386 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.36843757 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.355675798 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.410500583 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.35889571 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.358293555 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.364591729 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.35725015 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.405709388 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.367862866 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.471067785 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.357343121 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.358815856 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.516969203 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.355786958 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.364210197 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.408561271 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.367909696 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.357313416 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.362185893 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.173421746 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.359552682 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356292447 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.358772774 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35578085 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.432456505 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.358996591 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.35462362 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354989992 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.47279067 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.359276798 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356222488 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.358390253 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.352994578 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.359408098 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.358800159 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.358292074 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.355836062 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.359917902 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.380500504 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.35964518 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.359538708 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.35906112 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.360566825 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.410844102 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.360755539 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.356162551 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.357628852 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.414336287 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366733464 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.361076259 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.356220609 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.360621642 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356588443 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.515562386 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.406086536 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.359290328 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.407035412 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.360552477 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.359545783 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.360582262 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.3603518 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.414442534 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.360737458 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.40736767 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.356416869 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.545402047 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.382531211 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.362289698 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.361743138 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.364268891 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.360305637 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.357824097 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.367156969 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.360794709 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.362542601 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.365800672 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.359090956 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359531346 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.527315989 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.468971283 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.358292737 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.373353225 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.368302662 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.359280312 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.413385052 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.362071685 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.359294404 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.413347366 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.475651437 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.413831399 seconds)
  done (took 156.117116203 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.365819483 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.368653356 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.362549629 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.377043342 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.362275035 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.362671125 seconds)
  done (took 9.47164023 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.364217587 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.365172099 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.362545086 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.363230173 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.362249662 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.362588125 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.363390686 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.364845464 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.367035565 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.362881985 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.363644206 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.364503772 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.364038701 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.364407187 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.363683606 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.363940086 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.364337372 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.361365858 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.363610162 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365835986 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.46864871 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.363889095 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.364871292 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.366046991 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.369924975 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.365481913 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.372103243 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.365400107 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.366052028 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.369891347 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.386372461 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.365404481 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.366307644 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.371018553 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.369732967 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.366317255 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371640544 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.366556864 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.363305765 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.366250856 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.366542003 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366882244 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.36610316 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.366052041 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.366749773 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.369417188 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.37172458 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.373641737 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.365953261 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.366960851 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.367680725 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.366520707 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.366246933 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.367688826 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.367193259 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.389752623 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.371359316 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.367618615 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.368357256 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.367677378 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.36871037 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.367599756 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.369632294 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.37047784 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.366866755 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.367851328 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.36860616 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.372974362 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.369373479 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.367332379 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.368115467 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.365678299 seconds)
  done (took 100.822659814 seconds)
done (took 428.662461946 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.397115588 seconds)
  done (took 7.676223511 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.581790258 seconds)
  done (took 7.862163589 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.760513743 seconds)
  done (took 25.04757318 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.438421813 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 8.28071397 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.401835868 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.360889906 seconds)
  done (took 28.763685132 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.460766847 seconds)
  done (took 7.740805381 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.360449746 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.362378538 seconds)
  done (took 14.004138546 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.555631601 seconds)
  done (took 7.83564773 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.468729614 seconds)
  done (took 7.754887287 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.361696049 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.378582506 seconds)
  done (took 14.033616849 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.342859387 seconds)
  done (took 7.622270605 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.680278602 seconds)
  done (took 12.964325833 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.377241448 seconds)
  done (took 7.660669877 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.441014878 seconds)
  done (took 7.722615073 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.289929529 seconds)
  done (took 10.571966476 seconds)
done (took 168.536248082 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.363296954 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.366444259 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.36394383 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.362407432 seconds)
  done (took 26.737876318 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.419871715 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.422895879 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.406348333 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.41482543 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.408788161 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.404224748 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.39739647 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.396767394 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.415970652 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.408216776 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.40622043 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.40711116 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.406379696 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.397269456 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.408860198 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.408075241 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.416258706 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.406343473 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.398777102 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.408545762 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.373345971 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.417324485 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.409431236 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.374203492 seconds)
  done (took 35.017375347 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.893512293 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.443472945 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.526766202 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.425202978 seconds)
  done (took 7.572248307 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.42476897 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.426965171 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.439243374 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.477704812 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.50327269 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.437014909 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.399817361 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.394756501 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.381779001 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.427177313 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.502590738 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.44280007 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.513442142 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.374078639 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.556671267 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.373711349 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.374482298 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.425899096 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.477646571 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.491375959 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.374715875 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.42769813 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.43005871 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.444234464 seconds)
  done (took 35.806361325 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.373829184 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.392682458 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.372170769 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.372159782 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.382787015 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.373182916 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.375169965 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.374100631 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.374221978 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.380810266 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.372850911 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.38537398 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.373467951 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.374162458 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.379345522 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.374820605 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.380755567 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.373164995 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.373506521 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.380435432 seconds)
  done (took 28.824964614 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.368327526 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.259160608 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.718643274 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.624416329 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.369784941 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.372329708 seconds)
  done (took 27.999152025 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.455343795 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.62670487 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.38182561 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.776206429 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.886421158 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.397829719 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.378006516 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.647620679 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.015819149 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.005163372 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.443093782 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.451700841 seconds)
  done (took 20.754028575 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.384788237 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.370216954 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.382145544 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.387443684 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.438641228 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.400582408 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.382537859 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.369263233 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.440093828 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.474408196 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.402272522 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.438788059 seconds)
  done (took 38.160704039 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457650442 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.419547203 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.459419152 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441202827 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.096722331 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58334389 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.408825206 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.821669335 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.379788993 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644990763 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372462203 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461531427 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.629236563 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384025919 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.37661557 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.4533037 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623241152 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918761702 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378136607 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.780192283 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40099291 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.383102064 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.803659067 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.407517044 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.585378042 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.519159623 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.633520034 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.150708917 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700327306 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385113906 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384895371 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373991526 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647851116 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074852284 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492989406 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383866861 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384785441 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.923480433 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.373901387 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.768511989 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390465139 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376561397 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385971123 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374093127 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.311349326 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373926 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.831247269 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.385306382 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.085519259 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.373818695 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38638576 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469795045 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.378376043 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.948284488 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385146837 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.381074824 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.378401825 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470297366 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965321127 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.261241379 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384262556 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.314882739 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374953827 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.694001263 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064665547 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.400586762 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.378281138 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379634847 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310420974 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.789813779 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395576655 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514500037 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.399620292 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.038050436 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141602298 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.401561368 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.307082544 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964981127 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378099444 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.316288348 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605625576 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.162787674 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315382627 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.322184394 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.311517042 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158770249 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388848486 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.864390695 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402467027 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.848504542 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.392681099 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396955204 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400854482 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.601625836 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.256475326 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378731375 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.379018629 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496579861 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39895587 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.827807917 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316144861 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.381752891 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638041545 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.590675766 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378251299 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.467261898 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619677154 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399812188 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.405331628 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384935609 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.396303299 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.012921829 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410637628 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.271437814 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398960415 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.156490878 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19173143 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39791059 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.387263852 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384936557 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650871122 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.215336388 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.267516987 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447938646 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384709955 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.3794706 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.804809326 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.982501384 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.261594928 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.376619614 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395724817 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.398099866 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.380752763 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337394314 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.378575901 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378998924 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.157409252 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.605194628 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385026113 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659588779 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315795704 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545671144 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.396855605 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.604947229 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.690123768 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.405594362 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64307417 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394423983 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.390071285 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397820279 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400542136 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483208086 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403883293 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.39741039 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.644646442 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.385050241 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.386279814 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.807997114 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.165906224 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387116457 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.387096402 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390448222 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036327192 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379687539 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.385399647 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.287771958 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.395905927 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449839977 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387862087 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.392892121 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.418299733 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407585423 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.393434568 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.39413419 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606502056 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39399815 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.738460694 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.46613871 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.596748943 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.042830491 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421287362 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.31675119 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.095431622 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.075959094 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382891158 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.574677878 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385091348 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395223916 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395665447 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.384668746 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.059022429 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412171756 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.750164196 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.397692149 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395610007 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.391472956 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385090511 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.394083216 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.318720342 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395725491 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.403270402 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529019392 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.399066682 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.318811723 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.902196539 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390285879 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384781784 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.163505806 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419451886 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.727394787 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894700516 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648277219 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406498753 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398254249 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.930153096 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.428942798 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.401043134 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386097143 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403397388 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.403472333 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41462268 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.396973829 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.851470206 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.762638059 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952660121 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187489211 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007266107 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.459029516 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.399002269 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.288253586 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.84128802 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327391628 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.046448222 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597184765 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.860553292 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347399606 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604487076 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.754550313 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.256605069 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400305776 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615630935 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43143817 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.405220391 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404920157 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599887908 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421657085 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.387474432 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.320818106 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.684089062 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636264845 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389675967 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489697467 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844973097 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401822945 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.173360075 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.4287181 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.858303909 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.601567339 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.942539186 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.784240214 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.389314148 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.404996136 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890687438 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.393591189 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.918727413 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061107218 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.410731543 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.614136371 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334748613 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.401617593 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.399836001 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.386128855 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.946905114 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.410205189 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.654997512 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400429498 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324929996 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401198489 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988168255 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.268634134 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.396441432 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391555859 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216102056 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402964315 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.723709446 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.406881935 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.435513382 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418723015 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.325135447 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326143843 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.084447173 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392406029 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361564539 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94715467 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.395518739 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410239901 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407156562 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243746409 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.650719889 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.405642752 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.036913733 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637520401 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407290837 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415758844 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.395714494 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405963847 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.378416706 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.289111473 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.628754752 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405610929 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.617643826 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.509291378 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.294905508 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.912610954 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608542818 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.291370274 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393518232 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.678509481 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.123481486 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.407498713 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173568505 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43843988 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408296202 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.417807195 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.394865373 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415955242 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485103815 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404192627 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.404791211 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.404244854 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.581918072 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41508867 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397482659 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.407481311 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487614588 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.323449325 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.428845149 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.172165855 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056357958 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249639834 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.074160113 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432349964 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394606969 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394417447 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328706978 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546865232 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.923594344 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675590318 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514615607 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.39717006 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42268611 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397519959 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419411583 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61385229 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669908923 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.36957968 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407342641 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.186919411 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.27834239 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.40661226 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.606190168 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961809585 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042193276 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524923985 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.396437467 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.855741566 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674630854 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.490503342 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395286005 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.992342053 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.411241843 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.84792144 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.425635308 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404991566 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551316419 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.406359987 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114985586 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.429547935 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.55565387 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.170065334 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.841391537 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.66255827 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.98254319 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.416754582 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060008361 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.216949834 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670199699 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467043365 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407628369 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.512723091 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547705246 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.395888733 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.282795837 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397663378 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247097608 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.107183867 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.407033188 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.045196425 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682178944 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.401290678 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.397849958 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424757186 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.408275573 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.621514469 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183662244 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.630651104 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.410121639 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399419023 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.973314697 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047273682 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430753094 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333961308 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.402438567 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671148469 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.656957255 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421526055 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.852044435 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.112131472 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024617676 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.379866551 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419524984 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411954068 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.199354153 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056029326 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.463710166 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981225454 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.068157619 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400287043 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698098858 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.40622698 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.402993938 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684254848 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.404070441 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.413004543 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418686019 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.045878975 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.290668398 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.418306709 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.89414619 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.344231795 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.627692251 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.502324309 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34290118 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400915948 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.594058231 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.409608388 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520789208 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412631152 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.397800517 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439028597 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.141721833 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.693778346 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.408346376 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.388698011 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.389479339 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.414279986 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503564302 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.654803555 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408348278 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.078719619 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.75483399 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.660650528 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.416672551 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.389105406 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.406479859 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402537781 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.128274082 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.47100791 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400774811 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05894001 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.408720913 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.439697233 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407481591 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.618463518 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616088712 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.40622918 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.422675198 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406208901 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425390566 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.274818735 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.185938774 seconds)
  done (took 1665.574661962 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.425094393 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.418643685 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.434026297 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.426185311 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.452300578 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.498721845 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.428524882 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.477100964 seconds)
  done (took 52.878712694 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.420972898 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.562990417 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.437230114 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.414498286 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.411385544 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.403318111 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.929947465 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.427778201 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.413677396 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.413367562 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.40659694 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.40635787 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.129372192 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.416107175 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.416103154 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.403907124 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.41109517 seconds)
  done (took 66.750798897 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 53.300003795 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.359611963 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.826554676 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.420428213 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.760705634 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.410245501 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.933437415 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.461905187 seconds)
  done (took 101.793969127 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.422140849 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.422951441 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.422632045 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.421841479 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.422939378 seconds)
  done (took 8.434548377 seconds)
done (took 2117.585158873 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.41060644 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.413194254 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.409944081 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.412782277 seconds)
  done (took 6.96715426 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.385285989 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.11154683 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.387337049 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.405219033 seconds)
  done (took 18.611335437 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.414465424 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.422603868 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.210076255 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.119465359 seconds)
  done (took 5.651531965 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.157358169 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.172549097 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.151411976 seconds)
  done (took 7.801341659 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.40356171 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.407028636 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.40932035 seconds)
  done (took 20.539178629 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.700557441 seconds)
  done (took 3.020723046 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.551428032 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.604056205 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.793239613 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.74196433 seconds)
  done (took 8.011188547 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.788485925 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.775496596 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.591873491 seconds)
  done (took 6.475264862 seconds)
done (took 91.231664579 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.607439548 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.426531946 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.611182119 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.575289733 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.635440247 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.609459267 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.681123188 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.538408249 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.313343319 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.079992983 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.579420412 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.637870201 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.853588198 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.426463687 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.849963729 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.430235251 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.637972454 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.662254344 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.263171162 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.412150244 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.677386641 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.216155395 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.409113518 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.471942666 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.64085044 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.565024313 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.797001906 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.431471192 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.405689646 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.820347292 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.562760987 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.405489267 seconds)
  done (took 198.55587692 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.406999204 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.406506979 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.424950835 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.430998596 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.405860103 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.42724035 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.426281782 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.406936529 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.41353255 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.405695876 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.429067699 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.410045341 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.408391671 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.434123861 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.40926384 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.422495103 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.4072279 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.406593159 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.425858445 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.407724657 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.428572371 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.427720318 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.408088669 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.441496506 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.41011257 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.408455219 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.427882404 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.426821373 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.407917677 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.407998501 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.413418696 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.413869614 seconds)
  done (took 206.661612274 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.406920947 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.412377999 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.410137035 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.439197001 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.419035984 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.413005169 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.435105586 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.43316506 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.420619916 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.42682474 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.409892593 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.409309713 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.406907794 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.420971673 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.412587637 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.408763549 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.43068496 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.429404424 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.429595356 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.412099174 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.411072724 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.431785931 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.40958176 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.412490543 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.41185257 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.412312576 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.409756878 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.428733404 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.428694416 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.409564425 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.420452146 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.431251312 seconds)
  done (took 206.728879273 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.607367828 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.417728605 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.41883652 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.358412317 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.418937141 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.418225194 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.415897249 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.616484535 seconds)
  done (took 14.996873646 seconds)
done (took 628.260173192 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.865966692 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.567245343 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.628906255 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.439435166 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.2922811 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.459265503 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.438582276 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.625540664 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.373015639 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.632485029 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.786162065 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.45572796 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.938292229 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.436646386 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.709233563 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.54512501 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.340404848 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.468377697 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.774520759 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.067363726 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.718528661 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.966334867 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.646783074 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.383375478 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.95346357 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.969734267 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.252382118 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.329916086 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.458263555 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.783057355 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.2319318 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.517386548 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.509416548 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.506973158 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.565782943 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.544516317 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.515142921 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.509299537 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.653727454 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.766699795 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.056235854 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.186530016 seconds)
  done (took 97.198174888 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.403306302 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.403565337 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.402160292 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.403168915 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.404505129 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.40247808 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.401669644 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.40273191 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.404204524 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.400942573 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.403208443 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.404403932 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.404152176 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.404367413 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.402454496 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.402899215 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.40345435 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.405532711 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.405226887 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.403623886 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.405416527 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.403779606 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.404249348 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.403540364 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.405016789 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.40506665 seconds)
  done (took 37.823980728 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.422816339 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.683127951 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.862096197 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.428755263 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.423603729 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.427259092 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.511898165 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.425747528 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.42790438 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.427164164 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.602159062 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.427373969 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.461121673 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.892866543 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.427451417 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.425548935 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.42635446 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.424979702 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.691615732 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.43448399 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.537774098 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.428355949 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.513258989 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.43403558 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.449580977 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.424393928 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.429834274 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.001740955 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.447234065 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.603657193 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.323206429 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.513199411 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.956087681 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.89254141 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.326223594 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.431097883 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.425724288 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.607166997 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.427175689 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.42579704 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.512934549 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.426206745 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.872866776 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.096750149 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.446816175 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.427781975 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.022480175 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.627135002 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.708763648 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.442355526 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.898960894 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.429163 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.42833575 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.427539112 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.702160748 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.434344452 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.427247363 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.015396822 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.45354707 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.513396822 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.428025005 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.426738776 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.700743735 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.427094711 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.688332037 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.429225796 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.436228667 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.448396734 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.875411415 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.428756578 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.123901499 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.447603811 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.429655096 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.603789802 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.688151289 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.062586107 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.451906471 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.704719791 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.970675247 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.531511116 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.432090411 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.994872032 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.536186379 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.431996917 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.431684147 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.43081677 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.428639218 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.475052588 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.512704299 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.057744544 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.129296249 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.044456946 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.53751759 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.441788006 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.428454966 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.017076704 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.451032636 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.430751042 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.870055984 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.123003933 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.448999178 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.437889571 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.124855979 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.4508145 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.521582499 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.443492341 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.889518798 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.434515533 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.476422516 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.431504951 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.437295115 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.455206905 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.519006167 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.436579885 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.431077471 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.093460886 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.633212225 seconds)
  done (took 188.675644682 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.424726524 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.424579406 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.424326576 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.445321642 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.43187815 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.432567772 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.423934662 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.424628949 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.430470464 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.424767657 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.423638395 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.427499433 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.426431952 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.431780166 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.457144638 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.432623993 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.036011517 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.426238606 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.425474662 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.425505076 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.249162329 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.429926157 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.423887505 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.425962837 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.425660356 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.426134131 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.452242818 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.428614041 seconds)
  done (took 154.801306322 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.433821435 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.077049272 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.457384234 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.579592419 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.458180109 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.431612263 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.577181524 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.497521461 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.453393666 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.433346589 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.432832345 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.768929399 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.436376096 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.035710964 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.655446567 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.602891838 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.009689939 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.454540748 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.433892741 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.431521795 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.582065823 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.439770091 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.786701549 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.102037842 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.458592481 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.098347708 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.422035087 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.435995251 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.433367734 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.100512683 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.456534989 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.791598884 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.524650803 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.500452565 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.119474211 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.032684577 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.029086756 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.599919119 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.433705163 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.433919311 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.433367707 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.417979649 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.066665825 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.457246936 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.435851517 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.057416902 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.456235661 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.43741577 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.441269152 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.435373094 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.50174156 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.521945693 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.794737169 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.074818702 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.541012636 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.449560361 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.582932877 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.829591782 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.438927214 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.010585341 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.418525391 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.073689669 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.457562914 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.420094638 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.436247514 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.44274393 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.604596844 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.58307743 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.01095317 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.456160329 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.011836213 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.623111806 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.434323325 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.435411676 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.438985846 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.071606446 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.032120873 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.623688968 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.585759547 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.656259168 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.42155629 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.435982334 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.421269278 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.522387467 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.437230529 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.074471594 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.032539006 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.458090712 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.439658141 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.439516177 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.439980804 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.638054752 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.125807162 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.543649031 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.002589782 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.804808168 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.779862685 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.440448088 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.503734619 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.458396736 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.779795964 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.441763308 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.503842772 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.898801004 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.782212237 seconds)
  done (took 172.814172817 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.701760853 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.751715765 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.535055598 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.591617259 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.070852521 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.03574412 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.7873545 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.590602748 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.558943721 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.719643136 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.730032978 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.528947808 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.669945023 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.522876856 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.220779507 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.533814943 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.558293975 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.595798625 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.604614887 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.502670207 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.143278977 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.745784458 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.638673837 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.461741647 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.54176189 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.299563075 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.033884912 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.01219077 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.627083307 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.909505705 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.021255209 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.609591839 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.464758298 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.189764614 seconds)
  done (took 69.857162682 seconds)
done (took 722.493492612 seconds)
SAVING RESULT...
DONE!
