cset: moving following pidspec: 18042
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.406254598 seconds)
loading group "string"... done (took 0.57038241 seconds)
loading group "linalg"... done (took 7.238633932 seconds)
loading group "parallel"... done (took 0.160689312 seconds)
loading group "find"... done (took 1.171180278 seconds)
loading group "tuple"... done (took 1.792279998 seconds)
loading group "dates"... done (took 1.255457422 seconds)
loading group "micro"... done (took 0.223289906 seconds)
loading group "io"... done (took 1.02021544 seconds)
loading group "scalar"... done (took 39.391513089 seconds)
loading group "sparse"... done (took 12.152041769 seconds)
loading group "broadcast"... done (took 0.928152555 seconds)
loading group "union"... done (took 12.185544667 seconds)
loading group "simd"... done (took 4.455107515 seconds)
loading group "random"... done (took 9.800901475 seconds)
loading group "problem"... done (took 1.881195807 seconds)
loading group "array"... done (took 21.192815945 seconds)
loading group "misc"... done (took 1.688529296 seconds)
loading group "sort"... done (took 3.353736526 seconds)
loading group "collection"... done (took 17.303603284 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.519274852 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12484131 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118715742 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120384126 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147377927 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114577045 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123389894 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084316786 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.777859282 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149737528 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118098657 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.43380737 seconds)
done (took 5.13632376 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175744872 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085938974 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082713426 seconds)
  done (took 1.297868229 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066646699 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125560838 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066338809 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066667391 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066337843 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065875153 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065804268 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065904638 seconds)
  done (took 1.651247713 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075321759 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069342963 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069150276 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068594101 seconds)
  done (took 1.412789162 seconds)
done (took 5.744375175 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.798958658 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202899119 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18722821 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.413307284 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133935468 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.16244607 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.638517642 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.337393658 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.188825914 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079788551 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10472255 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.329134771 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108438969 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.634643679 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077393042 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.093283299 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139375743 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.426341523 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066654308 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081536425 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088112514 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128030841 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084505725 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074007868 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142968487 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06713845 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136722698 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079606723 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065785593 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.212793317 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17203038 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.677781345 seconds)
  done (took 10.304026976 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099497208 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100453505 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071018161 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12473384 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09667117 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069766771 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07084172 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067202994 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087635087 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128568283 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089020224 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102561429 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065021706 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06893549 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084379046 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204186607 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083072835 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083426955 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071218461 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076670898 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109476897 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078131668 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078571047 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077496384 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128609728 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179444894 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09954441 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099282982 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068414004 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08217458 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11556356 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128030404 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065415494 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065727155 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124601644 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094065393 seconds)
  done (took 4.602654962 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.013970533 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14777935 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092446356 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.138731974 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066274588 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112241164 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067551756 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083687387 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.214888705 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.455959996 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.600360919 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110753094 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103907107 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066837704 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068135122 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066826155 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.502244844 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.099285106 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109575958 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084167222 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072962851 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072095886 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.35871983 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070279612 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065672321 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070232867 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058198209 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129617371 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070145665 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.958566611 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126224885 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066126499 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100204345 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169706597 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090696401 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14497692 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067364612 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.195928506 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153332693 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.112178141 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069373766 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065202905 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083897776 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102627255 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112304728 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065687167 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066306719 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162070545 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066403677 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080686008 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.670757488 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154408708 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076252086 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065701975 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.259798261 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088907129 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069283022 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065554516 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066182659 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.210817325 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136443059 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069741051 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068534288 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070104484 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.072335511 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065247768 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067341801 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.373988495 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070322152 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079880173 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.170531937 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072954229 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069492639 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072541118 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072323721 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088093708 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065677962 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074955413 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065867323 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065482564 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06672136 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083453772 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.37531572 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066207194 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06787204 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065332372 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088697635 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097452327 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066006222 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06491276 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100789042 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068174654 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.0664092 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105965633 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068073184 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08486225 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069066798 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113043007 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065488875 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.199244189 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068080444 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099629807 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.06986361 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098575791 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080276867 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06722408 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.420457919 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066064431 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066059845 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069703379 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066166079 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070074248 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067709087 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065486149 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081416604 seconds)
  done (took 21.588281281 seconds)
done (took 38.635936263 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245197806 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078218765 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078100768 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081770926 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078498187 seconds)
  done (took 1.781365917 seconds)
done (took 2.977620393 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126136841 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103157004 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06588812 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099976697 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06649471 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105148191 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104190151 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08501624 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103281142 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06580799 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099938169 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065812958 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065625603 seconds)
  done (took 2.377352034 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086711377 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085990173 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071611037 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.0856831 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065284182 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085450335 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083549991 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092143663 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08348417 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074681416 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065443328 seconds)
  done (took 2.073536987 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084502084 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086147202 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071446263 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087630457 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065539777 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084299409 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084028702 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088878814 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084407574 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075553419 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066040967 seconds)
  done (took 2.067025642 seconds)
done (took 7.703362572 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079703665 seconds)
  done (took 1.260003681 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.607344965 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.172491928 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081499001 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112814976 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189240588 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120499817 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.279855525 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.089999388 seconds)
  done (took 9.025228281 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.092209453 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084426004 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069521567 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073401809 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072915086 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072495332 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07132111 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070064375 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074266993 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073964107 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073396571 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070449202 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070035267 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070250415 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070663387 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069054093 seconds)
  done (took 2.444831404 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094481714 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093002256 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075572045 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07672173 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074007923 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073340804 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07550722 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075481056 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072427979 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073454561 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075893837 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075261661 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073302581 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065895418 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075582315 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077170608 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072310446 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075482921 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075737111 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076531424 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076415669 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065516274 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072564734 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075684519 seconds)
  done (took 3.123144571 seconds)
done (took 17.040996759 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.117028288 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072592671 seconds)
  done (took 1.382730818 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084620343 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085753408 seconds)
  done (took 1.368446207 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086398448 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067298993 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094397864 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080532364 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068126844 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067987288 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091144218 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067613673 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067712738 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068266912 seconds)
  done (took 1.957279213 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070974254 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080924383 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071969735 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08266396 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075829479 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065391622 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074713895 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069499738 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080597439 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063945967 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07306494 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084668262 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073042648 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086305072 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075026356 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070493691 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07250673 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068461776 seconds)
  done (took 2.540836641 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067958115 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068544078 seconds)
  done (took 1.345334539 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069179767 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065209732 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069034663 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067916404 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065511809 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063961214 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06475482 seconds)
  done (took 1.670679678 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.398445775 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.1154509 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.319771649 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072186997 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084053572 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.26208342 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067009547 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071993767 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072039248 seconds)
  done (took 2.714357279 seconds)
done (took 14.1874696 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081712113 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087962595 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098484184 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.38621789 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093480223 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066813239 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115521454 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193549846 seconds)
done (took 2.33663008 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215099632 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.641372474 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.398832257 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204036902 seconds)
  done (took 2.448435586 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348563074 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089629014 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059455099 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068538321 seconds)
  done (took 1.777919345 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067800118 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070243714 seconds)
  done (took 1.343662413 seconds)
done (took 6.993162343 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068440736 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084824326 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067202677 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064925279 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067901285 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065002309 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065267849 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065435333 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067896904 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.069000025 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070632745 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068262266 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.067783546 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067683762 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065309602 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065014349 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067282398 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065142598 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065311722 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065207014 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067233173 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064772109 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06499435 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067145609 seconds)
  done (took 2.861670537 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087631628 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.0678637 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074039849 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073593418 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070917617 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07211876 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071773501 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067969825 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073129957 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070386042 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071048791 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071982397 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069749768 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072127802 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070113758 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071299756 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073275837 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068324326 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069826661 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071757155 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073184629 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067574964 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071678815 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0726898 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070904215 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072358332 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06974756 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068101733 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073246914 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071047366 seconds)
  done (took 3.368788586 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071939481 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065269797 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06579336 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072979124 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065498242 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066409108 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065192889 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065175441 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066242505 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064891359 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065880127 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064988853 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065036096 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066428055 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066038079 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068842899 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081162776 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065865285 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065167558 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065707411 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06860696 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065352456 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066265675 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064519049 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065116534 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064891757 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065592102 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064961726 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066056487 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064846222 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068430197 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068466251 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064816019 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071753438 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068389061 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064179285 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069172398 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064156088 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065370129 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064470561 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064051369 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064062877 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06432226 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071739645 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064866102 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06666841 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065508278 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066213224 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065315069 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.184216647 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064379274 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064476531 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067289031 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066419824 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069188352 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064398961 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06540342 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064605557 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065321551 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064432986 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06408974 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064372242 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067367534 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065142259 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079773265 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071617989 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064519718 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066672199 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065487683 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067382137 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066304758 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079196399 seconds)
  done (took 6.143526463 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092431123 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089995562 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067279017 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066521529 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06331387 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065486903 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072188877 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065902102 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066863863 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083982364 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065824199 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066803863 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066743113 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06819073 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063776244 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064953307 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071858204 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061439463 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063745712 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067083218 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063772073 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069925343 seconds)
  done (took 2.758448399 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159562311 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072682414 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105672186 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074910762 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069342056 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074782421 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068802241 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069402048 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070234868 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067680977 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067048811 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069758264 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069802979 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068557809 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069269137 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069391309 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071474896 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06925866 seconds)
  done (took 2.611879956 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079188126 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067937152 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089340664 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067944556 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06758259 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069845796 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07247861 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076264687 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069699627 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067632671 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075569957 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069588956 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069574176 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067456373 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069186822 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066928916 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069800688 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067334323 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075775776 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071463069 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071694782 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075727978 seconds)
  done (took 2.807644966 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081895186 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069915925 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084032022 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069312519 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062940703 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065669616 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071564146 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067162864 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071682619 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06903648 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066964964 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065650951 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070516051 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065843502 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069013905 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066640363 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06921847 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066989858 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069078943 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063148304 seconds)
  done (took 2.615203784 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089044052 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069237276 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069018241 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076947885 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069080277 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069007769 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076493915 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068840403 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068528028 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089622694 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069274335 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068416871 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076782604 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073762819 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068657697 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076187258 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076397235 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076439332 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068834067 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068525974 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089667188 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068529065 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075971066 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068554769 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068540613 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068664137 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068350901 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073135177 seconds)
  done (took 3.281138225 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068175045 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067400494 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062145729 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063066421 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06304348 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062588874 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062348229 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062633634 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065226532 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062825466 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065511846 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.0659293 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065126924 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065599159 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065297217 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06556204 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065130604 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06322878 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063040416 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062963835 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065731587 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065526774 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065093825 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062685732 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062745912 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065748016 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063007769 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062716686 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065492434 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06317127 seconds)
  done (took 3.163472 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077176874 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075059603 seconds)
  done (took 1.386562703 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065130908 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081325671 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064390531 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071842546 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071062432 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067876028 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075201315 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071034246 seconds)
  done (took 1.794601572 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083985646 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080254725 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069552472 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081627631 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07893591 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08467267 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137319041 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069327759 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07483743 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065897831 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.0812327 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066560747 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074307972 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067805375 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07317124 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074117961 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065284032 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073488597 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069957173 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066390464 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068732705 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07637041 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070262442 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063165051 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068812437 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090307702 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079428185 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067198016 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071126701 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075908864 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073644666 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061411778 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067938266 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068160332 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06588917 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077816359 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083206408 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070068556 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076892925 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068759984 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07863492 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062753014 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072330374 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074381043 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077786501 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067913985 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068419838 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062770216 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065159391 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069752966 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063035194 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070509618 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061966719 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074644804 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070895049 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078224786 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066111162 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069264408 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070535018 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071240911 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074665036 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069932381 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070566442 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066898959 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076595875 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07081051 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074758763 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060778669 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059497398 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064874232 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077692633 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091621533 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074464192 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068257757 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068559932 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065284577 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07133175 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068697351 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074039885 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074299248 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06756372 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073521359 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075165646 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067993416 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070540655 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075777687 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065544105 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070748003 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065335274 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084841489 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066368682 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064554102 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064470575 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077045738 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070414115 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065399105 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063897625 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072605241 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059567318 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065854486 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066668039 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066329735 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075957252 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068729912 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06904351 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073122481 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072233407 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065195699 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067535838 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061699478 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065213182 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06340988 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071168571 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058726405 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067215312 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066007345 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064937174 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072622683 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062545032 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064299662 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.19590971 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072411088 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065386774 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063006398 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069425433 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066180844 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069317552 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074098528 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064495704 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061225635 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061391184 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069979002 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06598332 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069926915 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072488905 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069700413 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060630031 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064226971 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072437851 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077069915 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068705578 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069109659 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07473742 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069813311 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067728304 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075173266 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07027986 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06776907 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074450777 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069466301 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06335771 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071112831 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071030239 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066599791 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072094827 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071175992 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070719391 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069053795 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067069932 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076075854 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068637288 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067636257 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068802329 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067049429 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079135441 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068953755 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062603773 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065476845 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078508514 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064986679 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065940673 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06497436 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068143563 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066805469 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064594126 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065460863 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067970101 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076626011 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070099765 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066706574 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070856254 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076542756 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066069425 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068848258 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065630969 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06763895 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066793916 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074563912 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07143836 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070906607 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068436998 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06248598 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071351647 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074461283 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067343778 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065945108 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066391169 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072683801 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073800697 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072013506 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068967225 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065932805 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068499139 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071425981 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070771648 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067409628 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066505945 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074742464 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06576303 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075148229 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068656685 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078522312 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071010323 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062961214 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071155672 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065792637 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073965841 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062934255 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065323478 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066789088 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068580385 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06674267 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070881283 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061723134 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074767183 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075661675 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067974069 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067289403 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066748474 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073556857 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067923211 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070948215 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07009313 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072635404 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077290127 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06625582 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070300506 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078089059 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066600348 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059529958 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069836288 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063207834 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06359171 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063384207 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062742796 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.194010933 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075491262 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073115651 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060945715 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070596338 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06561531 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065206349 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063248751 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072280681 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071332588 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070044982 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075575157 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06924512 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068632171 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072666319 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067863573 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069485674 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069519031 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071272829 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069714666 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070386008 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067681602 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071536278 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067422443 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066056472 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070174354 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068775291 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068795948 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074251099 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068356128 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067940339 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070527053 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069494626 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068642201 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068528438 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067525908 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071110115 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069902609 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068614018 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07044596 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062925607 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075734156 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067890784 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076179767 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068817628 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065047195 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073603527 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068101557 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071768309 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067435765 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067866331 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067828775 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066152094 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069291552 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073596647 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064036462 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077005742 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075373459 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067619709 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068611208 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065606019 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068759336 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065802657 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066716009 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067058958 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065831822 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.0656135 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070353886 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067712789 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06625502 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068455425 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066526245 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066311418 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067151953 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060014551 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065718517 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065555991 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066620855 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077485265 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067829366 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067097804 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067007004 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068753383 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066805859 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064993696 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076136968 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077298308 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068423342 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075109264 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067150832 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069703625 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079147649 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061581355 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065675333 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06530775 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065849879 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075016085 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068847374 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077747712 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067511392 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067097127 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06497047 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068619125 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066686744 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061882526 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064473573 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069205871 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065524442 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066205565 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066738637 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068228123 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066899822 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074266208 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064043916 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065705318 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064729264 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062282154 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064174905 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064261207 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067273175 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065326516 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062922842 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062213233 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064063482 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065936036 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066771886 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067081168 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066305831 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.202483169 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066557511 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069813075 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069823963 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061330285 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069697858 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066618869 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065854391 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064989753 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070002552 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069540066 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067961881 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074882853 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066096639 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06783983 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066163516 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063878037 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066382442 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066618495 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065889847 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06553091 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067437673 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073622251 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064231886 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069672792 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066269903 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067316985 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073260243 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067578962 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069381368 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073194062 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066013294 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068465499 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074294477 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071502378 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069219334 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067234623 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067990598 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072464638 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064974914 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.071951944 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066629715 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067173404 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067736557 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063968828 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065886004 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066487592 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064640776 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072575243 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067028115 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064906377 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065733289 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063026396 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067437545 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069368158 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073744028 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068040991 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069065295 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060765745 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063171838 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066815391 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064060983 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068252004 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068166186 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071739013 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068684859 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06659385 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065262778 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074523338 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071435995 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069264098 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063526032 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069918805 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066321701 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068017175 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067131256 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066426764 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067661565 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069692224 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067259429 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065330862 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0733491 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070718094 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068540507 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068220465 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066742598 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066033296 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061681936 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066382652 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068386305 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071422369 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068135138 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066309728 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076456905 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063846251 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066938223 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069391543 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06573734 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070673451 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061478692 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067804936 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067214145 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067495812 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06095667 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064917191 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06375424 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067861427 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064960019 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060863074 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076595742 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074516361 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068676044 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06447804 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064029737 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060775501 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060125378 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064173716 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065439159 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066299931 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.074636245 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064304159 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063656212 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059930957 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065005168 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06742425 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067739055 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061685273 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06028148 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063508481 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.19896683 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.0728326 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065056549 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066038183 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069335078 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068420628 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063923373 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069686002 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063700744 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07071622 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078804042 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067039977 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067321035 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072660412 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074346757 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066740363 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061699052 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067354798 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069336724 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067335989 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067740607 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068183841 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081441149 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068939844 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065259358 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06564419 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069241825 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065684893 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074243132 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067502793 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067445862 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070613883 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06842575 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075532254 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06972286 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07331836 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069258422 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069328351 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065372963 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066218517 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064746468 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065566005 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068011501 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067459169 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071758364 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073894933 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066393348 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077467554 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075052649 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068479923 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062959482 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065320591 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065348071 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062928879 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066620638 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064778112 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064171526 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064456856 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065507144 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067779248 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072029483 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066820575 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067771202 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06537225 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060415848 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068981116 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067797995 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066880471 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063086607 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066396508 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066496193 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069889512 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069207393 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063649093 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06729809 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067025635 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066818569 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061246612 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072261678 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064550874 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068253771 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064795721 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066022452 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066519647 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069032755 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07091581 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066697378 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06875882 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071384496 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069760718 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063752998 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063338445 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071638947 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065216917 seconds)
  done (took 42.755556645 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102938191 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063598854 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060988918 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061453676 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073311906 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06277178 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061181744 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062622856 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062478366 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06475476 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061347581 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061427898 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070326346 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076554083 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073139842 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065613776 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061281303 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062059404 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061002709 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06187624 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069740332 seconds)
  done (took 2.732534731 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075727983 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079567304 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076862193 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081747083 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0705421 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06934293 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074689384 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07019454 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078478339 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071891767 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077761037 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069786529 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071612162 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071931321 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071589381 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069686865 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077832836 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070180942 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069624757 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075333019 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069910114 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074685689 seconds)
  done (took 2.932923771 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068442757 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067615491 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070067416 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062758927 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067483177 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060626395 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069080801 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063257083 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.076905533 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064162079 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.063853278 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06449841 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066741632 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060546595 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06497111 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063363103 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106968969 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067775372 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064885561 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065860801 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060015958 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066837287 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060473283 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061220045 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06392355 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068195669 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065962825 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062885734 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064914459 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064526915 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064911932 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062945988 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066218139 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065592488 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064182716 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063961531 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064722929 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06474031 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060315919 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063317424 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065645181 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061296212 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065212842 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066296324 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064313328 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063617507 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06838102 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066161299 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060297755 seconds)
  done (took 4.535877386 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081655213 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109843622 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066325528 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088035541 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082690341 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072115801 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068848204 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089808757 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062497944 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063693797 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080916804 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078920164 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064566358 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069829898 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069211531 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064526068 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066416188 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063661709 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069157628 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064217249 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068669844 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071031851 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079322291 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077330004 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068642119 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064000962 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064074163 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068668397 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.0773327 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069226475 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069364666 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070159753 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079840155 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069787803 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063932455 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067219334 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080992302 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065357986 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067073423 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062458649 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067284854 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069109544 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072062119 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080758915 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065155567 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069899551 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064232995 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061794052 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077122976 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067077816 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072362081 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078781633 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068353251 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064820075 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069515646 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079909811 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065103499 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06336536 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068071167 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077537528 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062578278 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069017844 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078398286 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067221506 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071731264 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078736955 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069922504 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068629948 seconds)
  done (took 6.304604955 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077895599 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096901276 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085011975 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085046613 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076533405 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076394757 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074663157 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074328792 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074442809 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079440042 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074912874 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116937273 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072480759 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079825004 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076767121 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076973928 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076753904 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076673122 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077344609 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077041852 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074763561 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082383015 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074481588 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082158912 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079586147 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069775151 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073946754 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074592755 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082096744 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074250645 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078946878 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074204885 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07446946 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082743742 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078365823 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075856567 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066506675 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076589034 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076594056 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076554631 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072606884 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085147906 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076602182 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072017016 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075605819 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074342202 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082522272 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078907894 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076920799 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079435965 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074821302 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081904976 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074830151 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074724695 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082211386 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085386024 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081994067 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082548314 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074893069 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082420027 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082344685 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085784609 seconds)
  done (took 6.209128822 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085039091 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076753034 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083389078 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062424022 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06457031 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071671148 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063216796 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063776509 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07400429 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073632236 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076436502 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071067996 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074155185 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075983523 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071567519 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074438079 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071199236 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071154937 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074138419 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071452151 seconds)
  done (took 2.783320473 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076266762 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085486839 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068741393 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074613192 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070599316 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073178519 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069462169 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070417871 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066938686 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06862634 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075773766 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075496679 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065966474 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07067968 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075804229 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070774015 seconds)
  done (took 2.485710363 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087207695 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07508355 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081274649 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067519881 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068799074 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063963056 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067159866 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062638421 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063529831 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079839177 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066991946 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07717916 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066605988 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064779133 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061961078 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071016684 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061347907 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063658889 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066907161 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079641939 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071699064 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065115049 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070106642 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067298956 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069908245 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071549944 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06558291 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066051272 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062397977 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065254689 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068195956 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068478456 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06243814 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062862717 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063598514 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062896938 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065173119 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065672689 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070338866 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064693954 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063048383 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067008775 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065024235 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065893835 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061406368 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06550151 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061878406 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067307381 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063423964 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068630315 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064977213 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068933738 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066759283 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073385661 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069467257 seconds)
  done (took 5.048238205 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082318437 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07080444 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06312938 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064037663 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068606302 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067188427 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068790525 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066605542 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06678442 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063691711 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066902861 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068237501 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066588963 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069015418 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066705473 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068799579 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061377478 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06634776 seconds)
  done (took 2.554271295 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073182682 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067100124 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074882479 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066606658 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065949725 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067716052 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061159594 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063841236 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064265231 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06525135 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065572298 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067578321 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064078873 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067438319 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065274402 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065231937 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067384415 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063474786 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065440155 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06125317 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066965928 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063546323 seconds)
  done (took 2.78281593 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096002837 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084799557 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142800846 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079550098 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08507679 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071089842 seconds)
  done (took 1.889570858 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092184833 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101762245 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06644272 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069105243 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075421787 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068930697 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068985497 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069301398 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077513311 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075192087 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069399547 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078119787 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078385483 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077415341 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075531274 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075353744 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069528549 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069785784 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065940213 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083494796 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069803631 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078220118 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069762746 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069421508 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069939562 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07761025 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079054525 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075533033 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069291027 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078155052 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075410962 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069494412 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078401488 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075328984 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068495026 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078133166 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069786447 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084255254 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075382498 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077367951 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068247159 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075241929 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078127498 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074550917 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078211895 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069597582 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07407145 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069381008 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0693565 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085584494 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075912239 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077180089 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077914714 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078386863 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077919454 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085407943 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075396563 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07694648 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075167983 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075161358 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077470013 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075340851 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077055644 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075488596 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075506162 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077602816 seconds)
  done (took 6.306373411 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106612777 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069367676 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071415695 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078247622 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079693293 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072013492 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070199251 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069444398 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069680367 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066516825 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108588822 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070335275 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077362737 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077373138 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070052422 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06956737 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06988685 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077685287 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067028308 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08608974 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06981544 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077209663 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078014277 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077308608 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075623719 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075351064 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069707124 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069642669 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069609142 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070027968 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074215371 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070038003 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077833634 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066265161 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078807955 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070169879 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069394149 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074456182 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069599823 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075619341 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077252567 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083240862 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069843488 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069366276 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075434518 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069871073 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069038609 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066502804 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069607883 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066405124 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075928032 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07565239 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075421677 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07695026 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069889186 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069685859 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069488441 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069666356 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069695135 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075058731 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077202981 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070021008 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085312509 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069810588 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069609281 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077585936 seconds)
  done (took 6.229676537 seconds)
done (took 129.544514864 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186893227 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165422571 seconds)
  done (took 1.678263989 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070679677 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101501339 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080120045 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13020687 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066014026 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099817564 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098904796 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077430055 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065432728 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066147112 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065753108 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068003514 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130716407 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066222343 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065941444 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068247525 seconds)
  done (took 2.6617599 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101537221 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.165959864 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102429753 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064358654 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098772497 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072146808 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064522526 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074585482 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070617739 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064366307 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072193223 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070020716 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064278676 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070012361 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070324377 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072606197 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06642878 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073696345 seconds)
  done (took 2.782138704 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101041953 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093534747 seconds)
  done (took 1.544682493 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.162216522 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104238799 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144126323 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.350853752 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166084693 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.126891851 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.125926609 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126258406 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.122153167 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122904777 seconds)
  done (took 2.895954781 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10186608 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.156250364 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.269422924 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11640658 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07203496 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09380687 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117361367 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077223422 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079988215 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079346349 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079283272 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075813761 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099049171 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072711809 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07296671 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075463755 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103056593 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072126373 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074154628 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076668933 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100892393 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065194573 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073075208 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072195213 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077138246 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.0782016 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065452538 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064997943 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076449099 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074430194 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07663204 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093444897 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077244805 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106109396 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07057582 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107329766 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076293845 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07359892 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074622203 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073567524 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077886576 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077917656 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071842809 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075851327 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065307403 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076055733 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065205951 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06487033 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077144192 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066081146 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077515457 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077599827 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106173267 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066570202 seconds)
  done (took 5.963683716 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106664399 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106306446 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071868718 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112840382 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102110608 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07202492 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102676073 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094957936 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10363262 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069523495 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067811798 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070333701 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082881979 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085198313 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115559052 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106962659 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072878369 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070484487 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105777623 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104783915 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068449382 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096446611 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090822478 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103587422 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06691049 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0701083 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067228018 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069946944 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076458194 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079965907 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071600992 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083155294 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08824636 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077921873 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066730773 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069154182 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069903654 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07933073 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078871117 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078496922 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077559812 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068387812 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068712672 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069261476 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069697187 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06743533 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078203142 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080464328 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078107616 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069722967 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071116489 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069126456 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070840982 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081136517 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077774293 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080417379 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079548395 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068091794 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067966803 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072506641 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081284282 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080364652 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080605697 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069529268 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078428835 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069680259 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081880019 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08422659 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068545089 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070025661 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06806762 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069969756 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069264952 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077735713 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077805072 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069417172 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068899022 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068262313 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080957953 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079907024 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069239768 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078135193 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066597539 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068633957 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069036493 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068934464 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077161703 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079524958 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069283404 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067651664 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068556386 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068405218 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067266155 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076512875 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080553224 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078908429 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077308648 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068534756 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077489258 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077585066 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068641566 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077732659 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066721678 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068761658 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067743689 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076062252 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.203423872 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08001552 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070351109 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068978376 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078558634 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081007506 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06832037 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078801831 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081004374 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080340472 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068416312 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081175741 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069280422 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079965317 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070425648 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080925965 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068614605 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079425377 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068304865 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067620157 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068603488 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079744709 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073452103 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06837138 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069587958 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069931943 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079028129 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082639752 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070078598 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079107106 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077870728 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070051229 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079463172 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069564929 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078935373 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068741202 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06981106 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06699063 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082437349 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068520946 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068054461 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06977659 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080816061 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068214907 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080653204 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077849033 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067438781 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081067987 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080153007 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077518796 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081170569 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070179095 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067891808 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068723452 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068615577 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078075736 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079564385 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070198155 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06831897 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078094318 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079975834 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066926015 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078219868 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078178305 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078254942 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068677375 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069002499 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080071298 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08046944 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078232123 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078094384 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078352352 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06811646 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076975785 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077485191 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067999518 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084358187 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067701313 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08231808 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078461515 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076242058 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078612066 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079960485 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079864764 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079470612 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08262514 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067690086 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067934477 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07909536 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067664298 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068870322 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078338597 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068982502 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068856525 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083221883 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068069145 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079350192 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067628336 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077125498 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06539899 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069057492 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081788245 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066566555 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067918492 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07750045 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068253168 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075026582 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078375027 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.206048451 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068745927 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069930512 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080174911 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078852449 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068185056 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068000451 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070306792 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077637368 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076810254 seconds)
  done (took 18.625239289 seconds)
done (took 37.502297123 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.219880413 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153746449 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183277935 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119132888 seconds)
  done (took 2.132856402 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121715905 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104607685 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.0937388 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065019375 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098767222 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064935447 seconds)
  done (took 1.934110118 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.322517211 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213978651 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18900201 seconds)
  done (took 2.104478428 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.20890897 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193102997 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.42376611 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.264253261 seconds)
  done (took 2.586649322 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.149621822 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092960208 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069894609 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086613063 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138144011 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160945375 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100915817 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125835332 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078064491 seconds)
  done (took 2.443729298 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149742326 seconds)
done (took 12.741823136 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.168212079 seconds)
    (2/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.199405643 seconds)
    (3/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.197165747 seconds)
    (4/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.097029953 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.127579973 seconds)
    (6/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088154196 seconds)
    (7/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.177721699 seconds)
    (8/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076502814 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.193090627 seconds)
    (10/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080463243 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065730266 seconds)
    (12/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.227005513 seconds)
    (13/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.187148714 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.07143878 seconds)
    (15/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.175829219 seconds)
    (16/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.244827783 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077582437 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073026857 seconds)
    (19/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070762804 seconds)
    (20/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075807969 seconds)
    (21/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072785062 seconds)
    (22/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076242109 seconds)
    (23/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.05032064 seconds)
    (24/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.106669755 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.097890715 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.121353523 seconds)
    (27/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.116702518 seconds)
    (28/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.197318197 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.199295001 seconds)
    (30/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.050899249 seconds)
    (31/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.154198699 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.142988924 seconds)
    (33/309) benchmarking ("sort", BigInt, false)...
    done (took 0.190015389 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.180452825 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090651479 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.106033996 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.101058395 seconds)
    (38/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181001501 seconds)
    (39/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073314626 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071268537 seconds)
    (41/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.179287039 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06715764 seconds)
    (43/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.099680188 seconds)
    (44/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077306402 seconds)
    (45/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.203204523 seconds)
    (46/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.171626175 seconds)
    (47/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050269243 seconds)
    (48/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075103256 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174940138 seconds)
    (50/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.142869476 seconds)
    (51/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074831863 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091695434 seconds)
    (53/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.06190432 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.185256453 seconds)
    (55/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073054913 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096430514 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.103897788 seconds)
    (58/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072682382 seconds)
    (59/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.219864019 seconds)
    (60/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.154400233 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.092954651 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073103538 seconds)
    (63/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17126101 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085408051 seconds)
    (65/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066343279 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066872261 seconds)
    (67/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.147744423 seconds)
    (68/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071747271 seconds)
    (69/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066636613 seconds)
    (70/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.073138016 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143852615 seconds)
    (72/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070403878 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089647374 seconds)
    (74/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.155923469 seconds)
    (75/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090204852 seconds)
    (76/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077004641 seconds)
    (77/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109948034 seconds)
    (78/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.193067066 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.08887012 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.139035566 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071531888 seconds)
    (82/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.202922001 seconds)
    (83/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.064979471 seconds)
    (84/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.195338714 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.20786995 seconds)
    (86/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077384262 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06552819 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091676519 seconds)
    (89/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.162946202 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095615369 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.076646488 seconds)
    (92/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.101642023 seconds)
    (93/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076027666 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 0.066236898 seconds)
    (95/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050927337 seconds)
    (96/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.101271855 seconds)
    (97/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082086989 seconds)
    (98/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072524883 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092071585 seconds)
    (100/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.100992523 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144263484 seconds)
    (102/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050912109 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093693495 seconds)
    (104/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074868993 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099481359 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073074188 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072011937 seconds)
    (108/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.08238837 seconds)
    (109/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069722414 seconds)
    (110/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.183653115 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142068515 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.086768264 seconds)
    (113/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.155906569 seconds)
    (114/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.184089837 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.0655743 seconds)
    (116/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050592255 seconds)
    (117/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.063426809 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139893111 seconds)
    (119/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050609937 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120265881 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090816838 seconds)
    (122/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.161508366 seconds)
    (123/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080856892 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.20931482 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.13699449 seconds)
    (126/309) benchmarking ("sort", Int8, false)...
    done (took 0.143459554 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073845472 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071938048 seconds)
    (129/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05160634 seconds)
    (130/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07311635 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050387521 seconds)
    (132/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06110187 seconds)
    (133/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070701209 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07153606 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065207607 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071733023 seconds)
    (137/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061065239 seconds)
    (138/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.194554542 seconds)
    (139/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.154073998 seconds)
    (140/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065134258 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064664965 seconds)
    (142/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075428036 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065903157 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136247235 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064970365 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071841218 seconds)
    (147/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07225673 seconds)
    (148/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072308611 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064582984 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051846666 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110636789 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092323651 seconds)
    (153/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.161390614 seconds)
    (154/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.100069632 seconds)
    (155/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061023782 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.076366421 seconds)
    (157/309) benchmarking ("sort", Float32, false)...
    done (took 0.131630218 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138701452 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064334823 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072671062 seconds)
    (161/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051382865 seconds)
    (162/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.0508529 seconds)
    (163/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068245389 seconds)
    (164/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.049829375 seconds)
    (165/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.386100301 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072884125 seconds)
    (167/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06937841 seconds)
    (168/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.102486622 seconds)
    (169/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050265205 seconds)
    (170/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.051779399 seconds)
    (171/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.140532409 seconds)
    (172/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073244182 seconds)
    (173/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.073037888 seconds)
    (174/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.180163862 seconds)
    (175/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.06148242 seconds)
    (176/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071792672 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05050017 seconds)
    (178/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065912986 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064246817 seconds)
    (180/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079204021 seconds)
    (181/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071389303 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.107048771 seconds)
    (183/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078990801 seconds)
    (184/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068131711 seconds)
    (185/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.049748915 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.178963705 seconds)
    (187/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071326576 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.049627653 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071702372 seconds)
    (190/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069476624 seconds)
    (191/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05001119 seconds)
    (192/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066706865 seconds)
    (193/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07263479 seconds)
    (194/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.04995078 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089082491 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.138212739 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072652608 seconds)
    (198/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.201637365 seconds)
    (199/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.101359627 seconds)
    (200/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069750779 seconds)
    (201/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.15653267 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.097372007 seconds)
    (203/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072269505 seconds)
    (204/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.161771072 seconds)
    (205/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076415535 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182600384 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063377248 seconds)
    (208/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089017074 seconds)
    (209/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07688007 seconds)
    (210/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.117326989 seconds)
    (211/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051462375 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091454625 seconds)
    (213/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069476763 seconds)
    (214/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068511999 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091771377 seconds)
    (216/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050720109 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066306194 seconds)
    (218/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077428737 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08793167 seconds)
    (220/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089439158 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074450484 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07278108 seconds)
    (223/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069115953 seconds)
    (224/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087817972 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065094159 seconds)
    (226/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065846069 seconds)
    (227/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051725531 seconds)
    (228/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052098287 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070790845 seconds)
    (230/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.096757834 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064140134 seconds)
    (232/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054014776 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108180532 seconds)
    (234/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06447146 seconds)
    (235/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064215573 seconds)
    (236/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052230712 seconds)
    (237/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050573446 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136080679 seconds)
    (239/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074111936 seconds)
    (240/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051437059 seconds)
    (241/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.14903618 seconds)
    (242/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077825937 seconds)
    (243/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063941622 seconds)
    (244/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070515058 seconds)
    (245/309) benchmarking ("sort", Float64, false)...
    done (took 0.13069201 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.05276384 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065725473 seconds)
    (248/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050224152 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065291196 seconds)
    (250/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063058827 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.123362545 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087346104 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065918808 seconds)
    (254/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050065609 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064702298 seconds)
    (256/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.064321428 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064948958 seconds)
    (258/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062927697 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05260077 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071703256 seconds)
    (261/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072118035 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064108028 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072927499 seconds)
    (264/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067784372 seconds)
    (265/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.050974729 seconds)
    (266/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070999519 seconds)
    (267/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06397857 seconds)
    (268/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.05131833 seconds)
    (269/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052324742 seconds)
    (270/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051316516 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092346893 seconds)
    (272/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060269355 seconds)
    (273/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050578697 seconds)
    (274/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109576171 seconds)
    (275/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065592918 seconds)
    (276/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051841266 seconds)
    (277/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06569815 seconds)
    (278/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.0682593 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087019387 seconds)
    (280/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061439027 seconds)
    (281/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080074298 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072786812 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063243724 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063585226 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.140169939 seconds)
    (286/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050472227 seconds)
    (287/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05167373 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072645215 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100551637 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06483917 seconds)
    (291/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050451343 seconds)
    (292/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051109318 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070989279 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064251277 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064622423 seconds)
    (296/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064411879 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088114693 seconds)
    (298/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071036395 seconds)
    (299/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072890932 seconds)
    (300/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050465833 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070404426 seconds)
    (302/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064741756 seconds)
    (303/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06654818 seconds)
    (304/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06641307 seconds)
    (305/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087096386 seconds)
    (306/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082015238 seconds)
    (307/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050852029 seconds)
    (308/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050433369 seconds)
    (309/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050590044 seconds)
  done (took 30.78157841 seconds)
done (took 32.173678652 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088877478 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092513696 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07511849 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093050654 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080251532 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075849708 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072481012 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078753521 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079682581 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081971253 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077511798 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054297569 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073683005 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073926705 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074374983 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090658522 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078088275 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072534121 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07235257 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063891464 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072421911 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065450537 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066505418 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053290829 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077873786 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071611518 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072379953 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073338927 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064683316 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065256658 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068420008 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073272345 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06463991 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077816339 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07194852 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072448537 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074129306 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076294424 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066573233 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065187906 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073720416 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064663479 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072065327 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073371936 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071450781 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071428585 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073056167 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077118875 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090490723 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067107577 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074403323 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075281893 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075544782 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072074774 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069506297 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073130103 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070460653 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090452283 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073270278 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067103092 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073953185 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073753079 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070762954 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072513198 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072474183 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074518655 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074765796 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070747921 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074109298 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070899709 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064157646 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072148995 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068561294 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064421439 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075713671 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07664409 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06362946 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070809796 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072091431 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070214477 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063469058 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06659001 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066125383 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071727315 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06674582 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053253377 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068985843 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071255232 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063648581 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072797929 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071335173 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071925611 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066448084 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075248487 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06436854 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069620852 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064824394 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064669214 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066051084 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068910153 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064245304 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066725508 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074492062 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065783468 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071402469 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078263761 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064692371 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071100231 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063645271 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063558655 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078825657 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074334165 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065161694 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067136659 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064403414 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072362816 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063629741 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064106963 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064331607 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064312541 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070874172 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064253751 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066297245 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072158382 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077144361 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063792815 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067514495 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065755687 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063529791 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.06970735 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063925701 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063723126 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065124617 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060268402 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065662332 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063432681 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071297879 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.200179071 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074192319 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066774256 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073489148 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070566792 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07192294 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07090192 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064206589 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.05825221 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066908626 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067539189 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067336269 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065377541 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067348713 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064542033 seconds)
done (took 12.351304216 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067956463 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141971402 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098368256 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094996413 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08629649 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066135563 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075406929 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.1003822 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067016051 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101354163 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086828482 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084358751 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111069459 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064308248 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065000273 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069110396 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06652419 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080850519 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101145204 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085959582 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11545212 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064466232 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094393995 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089462304 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086166332 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091875451 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068715246 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068866401 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06954324 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099303688 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085797862 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068919587 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065382269 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097408019 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092018784 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082608151 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065809863 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082048389 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065754492 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064973077 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066709205 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09697739 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078815404 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079526497 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06899994 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06848147 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066522752 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082311029 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088313338 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077381939 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085591181 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102294194 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067573305 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064991862 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063987017 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084493776 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064446848 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06804121 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065295987 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06768004 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064940996 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068608894 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080197643 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080934353 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068550369 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079424551 seconds)
  done (took 6.737446641 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086150376 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091354998 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084103773 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083867019 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064672472 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065650526 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065646866 seconds)
  done (took 2.029582192 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068954075 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087969788 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088396848 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088796858 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083798674 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086870046 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075145787 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065445779 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080338758 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066768762 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086442771 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101122316 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066596675 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072554627 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090903069 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065810455 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089680722 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066216805 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06858023 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089990252 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067040051 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081611392 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069286848 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066277156 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08056805 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066351774 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113160833 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070303258 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06766817 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068863233 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064347579 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107561108 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079957333 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075586277 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066083228 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080601569 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080501802 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064456785 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082548108 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071324981 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.07990391 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066687584 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066982719 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064621129 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070730041 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076421989 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067105239 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067323123 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068736136 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086571575 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067292444 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079905438 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069228844 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068742415 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067441023 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069747148 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07623081 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067122119 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085901325 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067459274 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083230107 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082339809 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080300206 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082551746 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068585407 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.0799302 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08101217 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068725749 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067959086 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069494556 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082358882 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064207529 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067211366 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076892931 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068110103 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089018974 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089005038 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067254698 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075378035 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066979098 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066199833 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065934974 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089030875 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068513431 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066093016 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071079531 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069216567 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064597416 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06506421 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069914993 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064435897 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06771767 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069609698 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06934748 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068801327 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08312724 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069518171 seconds)
  done (took 8.724266899 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071964084 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067559884 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069604544 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067581035 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067856935 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067425416 seconds)
  done (took 1.921093282 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097361047 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069693404 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080993817 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072826649 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105434895 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087203087 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08700787 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077835879 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084166127 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078531558 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086747169 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089058892 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093269366 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072452663 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086825459 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071718953 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087694013 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075748877 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078849294 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072698634 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086205448 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07253233 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072967283 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081543661 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076080917 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072553448 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067424891 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07906317 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078160136 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07805732 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072425997 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076251854 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070378188 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077857336 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087355796 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070835319 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071707319 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076746054 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072393124 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075637205 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088047378 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072283025 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074403098 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077207652 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077829158 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070180107 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077044599 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075644089 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086483486 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077459571 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077284845 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071254303 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075283661 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077788033 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070322644 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078013747 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076992928 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087002725 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072522835 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070435678 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068845865 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076400289 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077737192 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075005867 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078358265 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077134854 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069975764 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073158504 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072251694 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071131767 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076900733 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068516375 seconds)
  done (took 7.077949614 seconds)
done (took 27.963979161 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.53803443 seconds)
  done (took 2.00698152 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.627827313 seconds)
  done (took 2.128981112 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.548365331 seconds)
  done (took 8.046177451 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.410830524 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.497161553 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.719717813 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132371822 seconds)
  done (took 3.294622691 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.707491251 seconds)
  done (took 2.213527547 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.216343322 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.200635612 seconds)
  done (took 1.93240532 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.381827711 seconds)
  done (took 1.882586535 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.132808528 seconds)
  done (took 2.632983811 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.266606487 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175836396 seconds)
  done (took 1.950309315 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.480273085 seconds)
  done (took 1.985876662 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.869489799 seconds)
  done (took 6.377816863 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215624864 seconds)
  done (took 1.763904597 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244746772 seconds)
  done (took 1.750633545 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.70575754 seconds)
  done (took 3.205454407 seconds)
done (took 42.671825669 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082568964 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08067286 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080760793 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078055207 seconds)
  done (took 1.807573854 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078044645 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07301922 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075997563 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072600004 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076881845 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072913704 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074784601 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077248476 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072955604 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072921139 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072754986 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072168117 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074990781 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074267286 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071169856 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075104882 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076581225 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072883572 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075512597 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072622843 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070696435 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075004969 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074587314 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071903162 seconds)
  done (took 3.279684048 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079146516 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073269524 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074741272 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071156752 seconds)
  done (took 1.806906913 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080678968 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095983999 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088959107 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078830194 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092449039 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086130514 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06912431 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069102944 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070481242 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077152585 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067606956 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096853065 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088236049 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077201508 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079641165 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065426816 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068088776 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087674202 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078030964 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078057311 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070002107 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077477132 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067871386 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088887369 seconds)
  done (took 3.405350056 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080271183 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105289873 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07790864 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08913974 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091251792 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065543738 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074328497 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090520549 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126689943 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066533218 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070374912 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065510285 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072499534 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064920068 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076390645 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106781223 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111109601 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068190525 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096597873 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064864146 seconds)
  done (took 3.181069747 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074962115 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069182189 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06596844 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068397183 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076831497 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072079602 seconds)
  done (took 1.94314333 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070002502 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06795027 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067428877 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066168718 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072077165 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067538883 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065762788 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06692559 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066806369 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06663086 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066208674 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06562073 seconds)
  done (took 2.320045405 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.20585153 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068302926 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068824532 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066321008 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069924185 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06618179 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080211676 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067558392 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090747173 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065794213 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065826789 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067812666 seconds)
  done (took 2.496189723 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213288104 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07657931 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239270959 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139753867 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11134086 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115659689 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103997334 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113878073 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142382204 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101083576 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168268379 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168354616 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107771021 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137968982 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089023147 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099978082 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155586474 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163292814 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105294221 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167157382 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147207125 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125801462 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148628605 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10687321 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10653257 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122681069 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071036158 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079771868 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171044423 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133947755 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145362831 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11179498 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093097873 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177488323 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173651642 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142486432 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137382567 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084182219 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104923354 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.136755678 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205436129 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088734636 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16106604 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107989998 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21717922 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135809851 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121290587 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121794269 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107012822 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090021375 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146967213 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186228822 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138574999 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088115291 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115542566 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114959262 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116496968 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104617088 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183824821 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163740376 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129524206 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071703617 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100213033 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154861052 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135001073 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.1097434 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125832087 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093804574 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136712895 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156719189 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120674578 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145930195 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.130886801 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088595791 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120048481 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141057568 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128753291 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162038395 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124996157 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072886713 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125522129 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102591643 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08045526 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145424923 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074978289 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176924413 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098566101 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108506509 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114537942 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109068528 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108945392 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160164406 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14517252 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102419985 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064907246 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244604585 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12335469 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147873081 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087720502 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109199689 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119067676 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078641723 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14021472 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075551737 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124541507 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077779902 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128916308 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130576045 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077488207 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123111698 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105062588 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101557917 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133221928 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162525077 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088300107 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08200446 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171251893 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123787832 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104553505 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144850886 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157553448 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101957742 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102274189 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150414222 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179873807 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089304725 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164947047 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107663474 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083255279 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087769733 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125126313 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112228103 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124713814 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081486572 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118967157 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169092731 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074907926 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095952189 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13446521 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078849907 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080985626 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106249728 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105314589 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095261252 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099771696 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103171457 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137259943 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123185919 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105161736 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123515913 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097716627 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316216242 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089507011 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102401973 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105476994 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070545327 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137787102 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159350708 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079784855 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165008728 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.125021072 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107172588 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120339489 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084019513 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140853791 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079550083 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070402317 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145374779 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11228892 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111583293 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.154761478 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105708927 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128550985 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119472985 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135314749 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132309523 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131717137 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10617254 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088770732 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112850909 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127301293 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072941576 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090969295 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080328501 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105227466 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096653364 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082944164 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142644971 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124073669 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101342388 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112427874 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09669184 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148890995 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076121437 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128583003 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119782729 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09614113 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153294103 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153316176 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13219985 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09864139 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137217284 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069934245 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073240913 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088446924 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122476174 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082163479 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082055735 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258123051 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150534812 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13100194 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13947467 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114504305 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121404094 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157788085 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069861732 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117819788 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149001197 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122418458 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104621353 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090480468 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099319204 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145110071 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109375825 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183787069 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117443021 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124600916 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154416964 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102309679 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07979181 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103725984 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137351775 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105042841 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145137199 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099985244 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088855623 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110127912 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074562121 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099354612 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127294388 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120260719 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135710636 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115843919 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133037332 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077553967 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117020535 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121577379 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123407354 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064129665 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120631129 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163332182 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094119243 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118594971 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154004397 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078657903 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.12671046 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1754513 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144972316 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08472579 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253032762 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120631866 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131218039 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122120526 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142174039 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110074039 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138348998 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111274661 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087212165 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088948085 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097510534 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105398686 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095139774 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107313132 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11423484 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095415884 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133205979 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1054394 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111472928 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119785016 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098711932 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091246355 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097750456 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177934919 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119835086 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171714294 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100316607 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145454077 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164533633 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074699792 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079726395 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078487543 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139320598 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084312591 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130748893 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.099805549 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107609207 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125993713 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143623164 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096044691 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068205665 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10929362 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134642375 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114058236 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098538134 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105164508 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164612682 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101598059 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079404616 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113742323 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105620898 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102802322 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172280631 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061011757 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097721296 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075617627 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080002504 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127516896 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292273239 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081847035 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.1037689 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120533209 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112712396 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129992849 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101925698 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101985986 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116689868 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151190695 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128482709 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090614575 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112617376 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147962971 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158195833 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10597946 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096650582 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176115997 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154596975 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161830547 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088861307 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115200045 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11492351 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108692515 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139145198 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083044887 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164185005 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081915251 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136404934 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104565917 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08962006 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130332445 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.100476804 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088083569 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148838355 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118330579 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083091593 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07752872 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119265578 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120283862 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107299767 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075892186 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139538896 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073742286 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132797063 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160481412 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080590126 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107650435 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096203148 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079355688 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106436926 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101712793 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087092612 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.238432938 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177554816 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088809687 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153822354 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134697717 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114315179 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139295772 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103346113 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641687743 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079375748 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15545002 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117980569 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176382158 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10116701 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120131568 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111309777 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125323551 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146185349 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105139381 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182527209 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13471407 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118762664 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07965752 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103018333 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105103383 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088496105 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108763848 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114758752 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117602895 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093576459 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117540468 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126391009 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081918297 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096215377 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158163011 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117449146 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144203514 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140723721 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085457615 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118744071 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13871301 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080583539 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122227605 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152104366 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105962446 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098459499 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081078447 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10098054 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158853891 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072921442 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159617488 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258168525 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111971618 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114536246 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114344735 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132930321 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108261223 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12214823 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094182054 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111197178 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114619735 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082413924 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078120137 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105532695 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113538113 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09883911 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097816561 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098921212 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153174992 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07225193 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09967278 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105644546 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146251069 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175862332 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089076705 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082422026 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120163791 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114297273 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113256105 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122426546 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079147809 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082329253 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081316408 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077702595 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109288258 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113458279 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105107526 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111425981 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163764673 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082873756 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231174164 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095930331 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105391805 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069514427 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078317759 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096429544 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099465972 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108108816 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101778337 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16076839 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095441254 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.09021154 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09263326 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073888798 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083389776 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12966992 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109582581 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117743295 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097900293 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06156654 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107920221 seconds)
  done (took 59.065521543 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.11318755 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08234632 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097294821 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14532206 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122536303 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202781158 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153240296 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18915768 seconds)
  done (took 2.749351442 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070481901 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095156596 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10294152 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08375111 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065927346 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069517433 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.232611667 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082944088 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066493142 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089342092 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079895191 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070108054 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.427276385 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065834278 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068930266 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063226617 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067214414 seconds)
  done (took 3.418134005 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.390125696 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.612115307 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.383200545 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073103731 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.521842031 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089008593 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.211742757 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129353613 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07343563 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.5356062 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.703956118 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127319843 seconds)
  done (took 18.474646891 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078343604 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069403281 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084068376 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08318895 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073683534 seconds)
  done (took 2.009746986 seconds)
done (took 107.511477772 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082559421 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.381615048 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052937856 seconds)
  done (took 2.084590334 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088171932 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087343155 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085227423 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08285769 seconds)
  done (took 1.973022526 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076910914 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076961418 seconds)
  done (took 1.777508208 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233476459 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.168722399 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088293798 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084917573 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079844629 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.07978502 seconds)
  done (took 1.872001699 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074289337 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074986831 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07250883 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076097543 seconds)
  done (took 1.920574051 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078409448 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052928739 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054873905 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058123393 seconds)
  done (took 1.868090484 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088442294 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079499387 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079231623 seconds)
  done (took 1.87136414 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105057952 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08615937 seconds)
  done (took 1.81666303 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084681554 seconds)
  done (took 1.712078683 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10159266 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.105119276 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133214836 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112301989 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140603368 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.111851204 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085056988 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086386829 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076697336 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087465741 seconds)
  done (took 2.670133529 seconds)
done (took 21.756264411 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080800617 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.363237389 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360357888 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090683104 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668702531 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356253733 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.985604105 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092883396 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115486866 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06748209 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08492836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649506297 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.978657087 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323841103 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.96384144 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324084934 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65074166 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068057557 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0681257 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068468114 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.972275593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067483565 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067587851 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068611125 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.661361169 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372147316 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068340673 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323458316 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067788721 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06969104 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355351377 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06799487 seconds)
  done (took 16.135445118 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071656708 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122029578 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073530188 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084848769 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070498845 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069767161 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07135005 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069001348 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122547919 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067948425 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085401225 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06802596 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071708297 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068340034 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087849327 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067943654 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068353329 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068293839 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067826043 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068278461 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086586519 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06748248 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067915025 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068125317 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067710604 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080149891 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068208407 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06778118 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068232113 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069644791 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071045481 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068610329 seconds)
  done (took 4.035157748 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121239142 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128085809 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075174803 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105110771 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114490965 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069705207 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14772464 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093441937 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129838809 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068060345 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085019711 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067941588 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102423767 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069137073 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088199974 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068312805 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069336034 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069303308 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0684953 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068890192 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087902469 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068048128 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068316654 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068851727 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068863039 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082027394 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068680582 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068157441 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068333696 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070533531 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071789946 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06886718 seconds)
  done (took 4.308533839 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074323457 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075407205 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084041788 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084965402 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06972741 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072162824 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073487847 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069862099 seconds)
  done (took 2.245953783 seconds)
done (took 28.359668434 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081164327 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069021313 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073148465 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082382624 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073098961 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078897113 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067238267 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075631749 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072248434 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073341763 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075549543 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067616818 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071408652 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067121615 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073802956 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067771248 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079162113 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072150112 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079113512 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079373844 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070460371 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073492172 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075053367 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079405992 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079137047 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079248263 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077731068 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072824278 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070049256 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070726367 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077558846 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084538951 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068616638 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079805596 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06799673 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068241799 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072340969 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068069975 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079309122 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077413229 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069842134 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076807259 seconds)
  done (took 4.740487897 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090046726 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094224865 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085353026 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061312261 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067086298 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065948358 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089710819 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060081321 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.05928599 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088678181 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055425606 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060199094 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063178204 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05320177 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062642229 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056853708 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062167643 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055184789 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060302127 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059588463 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088973862 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053292283 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077570235 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063549296 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055704892 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061585543 seconds)
  done (took 3.402829876 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076794962 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087920003 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089982158 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130003124 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105870103 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079383902 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080702178 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095841732 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.08887584 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066861299 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071578322 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093122245 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091923794 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074486593 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067918514 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087133057 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08410938 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069611722 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073932929 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096539018 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087958579 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087160329 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099781816 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084424481 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067491583 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070635677 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071651833 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082392105 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072697706 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077873482 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072799539 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071295547 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070044781 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080113733 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071368853 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070291383 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093453508 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077830495 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07906634 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068153991 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070895562 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068670369 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093460424 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132942158 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066746172 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074154132 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075863399 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076938484 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067349311 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08746745 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078723792 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067039162 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07038276 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066243223 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066948013 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080605551 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069063684 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069261814 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07643243 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070140894 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091941743 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071572685 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082950631 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066902572 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07487894 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06654566 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067762795 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066583203 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095469085 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068613673 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11108862 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067932581 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067905037 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076259861 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074878768 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073201967 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067441792 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08275478 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078011138 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070947798 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076324199 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070547046 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069773865 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091121883 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069667834 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069414102 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068283519 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073311709 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069684565 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068722596 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08081198 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067381342 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070287661 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084284409 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066549288 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068566558 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073149335 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071690048 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066766916 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077932369 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072011504 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068320979 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076932735 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06686628 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070337139 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080189929 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073535672 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066765539 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071633619 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073369574 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067862818 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069093902 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070202132 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068991825 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076000293 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073958432 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071544386 seconds)
  done (took 10.647338632 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.167891136 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.169109337 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069993511 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150188371 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076940786 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078965528 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151220345 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09575574 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067815346 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068532124 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068601388 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110920687 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106351429 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116339804 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078647088 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067615622 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084825908 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115517241 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153298089 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147500571 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08474463 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076794751 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069995165 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069169404 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070409831 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078314136 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085648369 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077218717 seconds)
  done (took 4.434635657 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083649681 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.101092666 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075007365 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091165353 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091394052 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067902478 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070314755 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069582991 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081613413 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078595416 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067520115 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073340195 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074944023 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071239139 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068835732 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074622189 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074932504 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069397536 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071659047 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073313045 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077915193 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092209763 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071452789 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067657445 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07292857 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06699343 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063576245 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084605671 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068121479 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094893511 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066053931 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076425566 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081876727 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068877828 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067565449 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06795602 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067283172 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06725802 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069159558 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066325127 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.0662774 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056819665 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066856133 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079136068 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073892499 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056132078 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072228003 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073042516 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073529684 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065316722 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070422841 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070385756 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070753052 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07527551 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07278022 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072765145 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068403838 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073972111 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076418205 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066908274 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064718398 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065806314 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072340293 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065273248 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075967196 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071975111 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065861303 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066831488 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069424416 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074503563 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067065474 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071070965 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065204352 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06935538 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072098283 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068901627 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068334569 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065814175 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066860361 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067641218 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054995748 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067341954 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053043805 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070232752 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065773481 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065849206 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067220992 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07230545 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079697181 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069399196 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073143412 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068559553 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06620629 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070476395 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059745641 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070219732 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083230191 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08281719 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067680728 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065421829 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08243309 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072251671 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066419859 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055614811 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075227028 seconds)
  done (took 9.160588044 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093902862 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070391741 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087175612 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094421724 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087828475 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075960023 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078234601 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069907078 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083931193 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074570606 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077458557 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068338712 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078281401 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077185304 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070055804 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07784309 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072489373 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085368999 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08317598 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068642386 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076995726 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081049921 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090498928 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082398776 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081014765 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082357426 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.0905724 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072196595 seconds)
  done (took 3.919943782 seconds)
done (took 37.942724162 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.720011082 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.895469733 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.721187685 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.096601711 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.023197027 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.732377502 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.884735174 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.716416219 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.774484808 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.755299235 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.954972974 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.830249124 seconds)
done (took 64.753726432 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.755121931 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.863615573 seconds)
    (2/2) benchmarking "String"...
    done (took 1.987138676 seconds)
  done (took 5.506048454 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.99806656 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.284522764 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.969259102 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.717054187 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.720465207 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.061130362 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.521698917 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.242583378 seconds)
  done (took 30.173251231 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.818830859 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.948697589 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.384427092 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.418117458 seconds)
  done (took 15.269189728 seconds)
done (took 62.442868446 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.717978374 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.729277058 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.720538064 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.698798498 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.776965018 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.730216793 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.11025666 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.760319791 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.716167 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.708907709 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.719669498 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.158817487 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.728366116 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.09770784 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.718061067 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.722708222 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.73532699 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.25417927 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.874275603 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.73059972 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.734235419 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.72797252 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.719789827 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.72759075 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.77218104 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.718306531 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.139079337 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.724847108 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.342206866 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.716952231 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.75023361 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.219825802 seconds)
  done (took 202.35532758 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.721525092 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.840277598 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.906048745 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.761892378 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.297071851 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.903357636 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.841698087 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.323286932 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.72451481 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.752719628 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.985551356 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.725927784 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.011046217 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.666967841 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.750605584 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.813176095 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.012292434 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.025099292 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.755809425 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.852697001 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.725781826 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.914016569 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.879147853 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.968658145 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.747288925 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.722043137 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.871957647 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.749065821 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.907773937 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.9849237 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.761183104 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.766372957 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.941685854 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.595633725 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.736932014 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.737735853 seconds)
  done (took 169.337084788 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.103560156 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.723046155 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.719385665 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.721369955 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.733106877 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.716756695 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.841622913 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.842814853 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.326493014 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.814268703 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.772925788 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.555576012 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.720515403 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.789435309 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.735458027 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.722615841 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.735212102 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.744870389 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.720163686 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.720737006 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.839607404 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.734446761 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.842976197 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.729552381 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.720178618 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.727025726 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.098179179 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.71866963 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.728080538 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.983142905 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.72208696 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.723338821 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.610619656 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.032677782 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.80885311 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.721835965 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.725172559 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.723385467 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.941755239 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.71967629 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.722158863 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.723023358 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.725638948 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.891416597 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.718313278 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.842150252 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.722164292 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.221086001 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.719120503 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.722529307 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.48386208 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.401360946 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.724601838 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.725421023 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.725302358 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.722878549 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.722955781 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.729951652 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.723170415 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.427486975 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.79659775 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.723529684 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.725514757 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.72769645 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.723343614 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.721678033 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.721932319 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.768117302 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.777381871 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.964653083 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.135645386 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.843556811 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.726488144 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.791868384 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.817539637 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.722356369 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.724459567 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.722165735 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.724571103 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.806542772 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.722537445 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.854165055 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.730936098 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.724875931 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.778110261 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.790849714 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.72450851 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.620350755 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.724157675 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.724984792 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.027679178 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.787003308 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.725123384 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.723951603 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.724523472 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.852916827 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.846918037 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.49194545 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.72600955 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.437227062 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.726182465 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.864720924 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.723255915 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.909452379 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.724376031 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.805547748 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.729736137 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.728398816 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.72529473 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.757166708 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.725572566 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.784821462 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.725386759 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.728481054 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.09915687 seconds)
  done (took 396.736891552 seconds)
done (took 772.243610067 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.405334086 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.355544137 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.467992829 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.382602603 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.356799072 seconds)
  done (took 13.629835492 seconds)
done (took 15.29259144 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.812676893 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.819067831 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.749472366 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.81460052 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.744261726 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.813700928 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.797847265 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.752072854 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.782340405 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.752650663 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.787449281 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.752259748 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.739711986 seconds)
  done (took 24.778165292 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.958213186 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.959946705 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.795036278 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.97563353 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.774042639 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.9710072 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.891495017 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.880393733 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.882114869 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.743674049 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.739279007 seconds)
  done (took 22.236529733 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.963214061 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.963846638 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.804828823 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.968576583 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.779148131 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.96608264 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.894171626 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.88433885 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.886087903 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.744411547 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.741333333 seconds)
  done (took 22.259555922 seconds)
done (took 70.937097075 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.736800679 seconds)
  done (took 3.397079345 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.761287454 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.915819011 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.744609454 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.741536496 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.73512697 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.735260922 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.737035064 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.733859616 seconds)
  done (took 15.769845314 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.73448597 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.737822424 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.732558204 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.737471049 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.737155753 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.736495126 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.73167175 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.734388406 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.737203987 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.73595017 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.738363524 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.735037434 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.735845179 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.734820949 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.73853677 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.734236087 seconds)
  done (took 29.437980429 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.734500341 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.73529206 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.733910178 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.736055769 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.734928792 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.734773136 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.736499124 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.73424649 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.733936781 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.732478363 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.732008003 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.735622023 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.735876755 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.735078731 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.732008816 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.73383395 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.734884267 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.73473234 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.737525881 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.73377348 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.734874585 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.736795643 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.735512574 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.734404141 seconds)
  done (took 43.302186515 seconds)
done (took 93.570976637 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.586611246 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.092786733 seconds)
  done (took 8.343845069 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.741402481 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.739462796 seconds)
  done (took 5.177883108 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.738505286 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.738483204 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.736766143 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.737055195 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.739999706 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.739197909 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.737254299 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.737544313 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.73804527 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.740380995 seconds)
  done (took 19.047178805 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.737388545 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.741190881 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.736839403 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.740112359 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.738786773 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.737751319 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.738224933 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.738397484 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.741114851 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.737280857 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.740351608 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.734883151 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.73744526 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.736327299 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.739067606 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.739411989 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.737233813 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.738746533 seconds)
  done (took 32.956569441 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.740821519 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.739288691 seconds)
  done (took 5.148817355 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.738377777 seconds)
    (2/7) benchmarking "second"...
    done (took 1.736621664 seconds)
    (3/7) benchmarking "month"...
    done (took 1.736662244 seconds)
    (4/7) benchmarking "year"...
    done (took 1.737689988 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.736423185 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.737371865 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.73737889 seconds)
  done (took 13.827161232 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.740585843 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.895506828 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.965300929 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.368153943 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.741505579 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.742934251 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.708416558 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.743921279 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.743094562 seconds)
  done (took 19.316832436 seconds)
done (took 105.480881615 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.572018547 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.738189138 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.090208986 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.828723208 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.749809189 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.030953828 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.766752383 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.043256957 seconds)
done (took 42.489908825 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.780441086 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.295563465 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.321268546 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.55250599 seconds)
  done (took 12.838381954 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.719419751 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.255278349 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.764561561 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.330347841 seconds)
  done (took 19.784733251 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.102236961 seconds)
    (2/2) benchmarking "read"...
    done (took 2.078093309 seconds)
  done (took 5.854783169 seconds)
done (took 46.928360898 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.739509088 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.738491541 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.742271835 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.736087909 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.740396987 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.739076195 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.740104258 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.740549693 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.741628673 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.738889295 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.741214874 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.740441823 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.74074687 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741545994 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.736240338 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738275457 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.742456942 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.737180163 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739143713 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.738010881 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.741863625 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.737250554 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.740654639 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.739781646 seconds)
  done (took 43.420342018 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.744348242 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.741152083 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.74634304 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.74160738 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.741904721 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.742885096 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.742804975 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.741778131 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.745238481 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.743458191 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.741438496 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.741708022 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.742456104 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.737970849 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.740994911 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.737911734 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.743358305 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741668804 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743678861 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.739917678 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.741817125 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740716166 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.744086961 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.741299755 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.740720478 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.741845038 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.746521256 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.743446966 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.743771015 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.741180862 seconds)
  done (took 53.939914578 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.749542825 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.756973949 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.742252746 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.744513728 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.745512441 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.74272808 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.744073572 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.744852096 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.746956367 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.744334617 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.744294512 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.746979946 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.742417844 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.744370367 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.746753973 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.744008847 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.744381943 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.745362845 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.74603837 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.744799928 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.747626323 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.74578495 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.745256528 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.743983726 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.745042895 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.74486789 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.746057182 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.746122873 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.744581223 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.746059036 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.746036219 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.744514916 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.745548237 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.74781077 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.745178687 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.748122769 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.753432624 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.753617283 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.744194749 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.747593768 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.749097513 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.747323516 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.746382755 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.748413754 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.746175836 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.745858493 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.747400761 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.747290114 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.747298799 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.747320472 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.749543589 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.748112127 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.749536114 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.747514833 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.750137492 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.749908048 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.747744443 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.747925627 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.750406733 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.747559897 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.750719393 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.74874551 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.747365384 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.750735383 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.748543286 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.749196609 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.748372986 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.746899353 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.746777171 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.749350983 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.746772472 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.749875864 seconds)
  done (took 127.461788852 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.748390381 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.748478861 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.74687516 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.745621131 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.74579834 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.749798963 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.744890494 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.749846781 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74901902 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.750705119 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748308541 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.745300223 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742962213 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.748918356 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.748876541 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.745086075 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.74745361 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.744605736 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.749145987 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.750407464 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.749027326 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.745388442 seconds)
  done (took 40.121105834 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.749436215 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.749885131 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.746111953 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.750865797 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.747699101 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.748192801 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.749261418 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.750419216 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.752933999 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.747806995 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746178301 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752696199 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.747221612 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747400738 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.747808027 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.748292592 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.751856347 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.747573499 seconds)
  done (took 33.158341262 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.747914673 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.750071222 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.75235874 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.747487964 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.748226469 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.752174116 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.751865366 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.752670146 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.751146103 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.749604244 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.753814071 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.75304309 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.751008866 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746099547 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.75026464 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.747264523 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.750759054 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752122382 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.753482632 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.750435825 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.749588716 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.754350834 seconds)
  done (took 40.193495018 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.753540964 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.751567045 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.748775299 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.751170923 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.751367346 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.750605758 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.752346781 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.748777271 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.752304561 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.753713868 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.749243966 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.751831354 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.7498851 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.750854571 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.749557678 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.749735814 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.751593593 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.750874973 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.751625923 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.751242763 seconds)
  done (took 36.700793077 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.752643217 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.751571212 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.754336995 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.750489656 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.75381402 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.754859573 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.75544905 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.75649774 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.751772634 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.751626563 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.753624373 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.753505601 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.752717938 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.752599423 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.754512435 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.753606794 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.754502062 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.753007841 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.754008878 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.755932471 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.753657656 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.754923426 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.755657511 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.752695057 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.755006985 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.755025554 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.753910081 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.756070741 seconds)
  done (took 50.7908994 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.750859732 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.75594717 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.750907805 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.74824397 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.749689198 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.753174681 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.749735338 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.751818918 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.750748417 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.747655216 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.75799183 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.753606242 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.753993291 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.754824487 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.752708791 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.754771672 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757031719 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.752925625 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.751001629 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747790577 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.754154807 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752940082 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.752792236 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.750129327 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754999331 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.75664746 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.752974361 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.751138319 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.754757582 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.751850671 seconds)
  done (took 54.256813637 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.77357667 seconds)
    (2/2) benchmarking "in"...
    done (took 1.774484249 seconds)
  done (took 5.228370172 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.75463619 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.752557108 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.753456099 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.75088152 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.753717476 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.755281159 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.755711545 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.751055399 seconds)
  done (took 15.708365499 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.754360415 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.75119514 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.757434402 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.754532742 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.751180974 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.753956311 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.76090464 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.756033665 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.757419379 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.758191203 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.761805497 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.763912797 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.755793974 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.757431475 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.755878034 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.755093681 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.755794293 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.754383927 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.75827405 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.754731481 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.755427827 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.757179337 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.759882574 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.752456829 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.758912296 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.768362746 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.759302221 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.757048398 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.755887214 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.762162326 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.75646058 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.752816579 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.754877705 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.758148174 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.756698256 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.757195986 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.764824167 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.757772127 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.763237783 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.756831487 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.756278554 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.753597406 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.758740986 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.757474172 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.75911465 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.758491802 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.755117829 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.750375055 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.757184736 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.761282344 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.760778861 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.754652833 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.75683727 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.762583832 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.759221814 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.761761689 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.759162825 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.761847011 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.768415076 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.767898475 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.772297373 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.766925237 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.760398935 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.75807575 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.769491563 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.786948369 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.763742836 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.75781104 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.756162778 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.761009805 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.766861929 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.773281528 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.770054715 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.758984109 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.759320746 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.76049234 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.761228348 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.76114179 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.766003054 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.761120595 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.757821271 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.761023887 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.771411069 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.785627547 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.760443141 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.759508531 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.760491386 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.758942776 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.76358097 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.770987606 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.7593148 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.758409252 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.760906765 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.758468105 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.761139391 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.762671863 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.758879358 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.759759116 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.757395846 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.759429071 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.758132038 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.76474338 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.770490793 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.761522099 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.762619118 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.767895383 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.759520083 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.760886476 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.769237554 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.760427493 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.760191575 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.758529322 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.766679704 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.760453124 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.76576747 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.770476986 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.762630812 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.761633412 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.760936715 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.759308515 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.770672385 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.790542802 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.761034865 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.760135299 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.766524593 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.776104395 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.760280126 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.764868898 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.760760131 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.755889024 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.75607639 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.759957198 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.762780595 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.761550708 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.764403749 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.76649724 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.764694279 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.762247079 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.762838406 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.762499502 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.764941951 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.766441018 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.765338132 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.766782956 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.764787412 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.767379867 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.768648154 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.763076166 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.762028977 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.761950856 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.758976445 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.758973962 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.766102553 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.760885502 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.762355834 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.759013128 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.762203865 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.765245646 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.760884134 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.765288466 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.761430871 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.764333494 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.765764489 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.763164641 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.766634167 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.760989974 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.761154825 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.761942944 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.764651127 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.762436634 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.765142593 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.762803035 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.765174395 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.774042817 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.766590972 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.764229953 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.768734312 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.761498571 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.763162223 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.764607629 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.767817137 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.772927005 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.764174371 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.771628075 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.765394008 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.765339523 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.762249549 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.763915309 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.763651061 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.762282152 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.768060633 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.772775122 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.780625869 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.776926701 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.766094057 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.77246536 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.766517596 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.767545982 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.768611514 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.764051578 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.7664055 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.768760109 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.767077899 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.76452491 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.768904958 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.764216633 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.761496699 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.764041145 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.764755757 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.763052585 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.763655843 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.76346047 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.766208431 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.759654334 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.767185518 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.764508221 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.766242443 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.764285028 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.76206264 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.763200759 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.764627714 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.764825719 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.769176476 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.759097332 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.764628275 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.764899535 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.764768036 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.764184396 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.765549526 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.7649937 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.762981531 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.771919413 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.764333441 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.764310751 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.770241807 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.764778855 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.762856656 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.768582133 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.766653957 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.761392862 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.770541939 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.77603171 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.766487691 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.765176864 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.767705095 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.764749332 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.767867584 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.774814735 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.76203621 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.764509692 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.765362911 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.768517232 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.762490218 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.765743395 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.767975863 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.767000088 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.766751027 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.765573024 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.764597154 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.767426486 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.766990599 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.764652392 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.764776291 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.768392504 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.774415775 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.772163646 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.766890378 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.768685414 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.76807283 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.770373639 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.76714421 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.767133178 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.764774013 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.778832396 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.775308382 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.77217071 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.768542294 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.768173765 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.769134893 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.769296588 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.772541923 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.769298518 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.768784272 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.766935957 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.76547669 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.764897336 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.768663202 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.765920174 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.767496308 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.768880604 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.77119221 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.765861391 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.765945796 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.767507231 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.765704455 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.767647901 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.768973573 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.770068199 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.771055106 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.770793767 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.766487983 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.769725525 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.77429169 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.768004893 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.768972145 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.770412113 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.769028541 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.766704057 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.768170589 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.768466819 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.770760358 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.780594646 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.773225493 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.779663508 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.770363526 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.777698364 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.769436971 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.7716916 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.778014627 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.766839471 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.767513813 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.767687053 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.770106308 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.77583049 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.771266736 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.770773448 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.773502158 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.76901313 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.770050286 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.77054582 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.769513338 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.769463517 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.772159333 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.780900322 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.772617545 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.774150829 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.770534004 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.766667332 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.770554481 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.769484512 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.768989061 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.77346161 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.77174889 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.770556258 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.769335497 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.771321599 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.772051436 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.771833698 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.771715116 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.767978675 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.770248424 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.777934494 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.77286155 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.776165832 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.769407942 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.778530393 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.770750448 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.777418335 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.772192456 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.771162377 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.771380159 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.771733664 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.773514694 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.771681179 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.771368688 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.770372463 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.772713772 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.775828509 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.772758466 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.773407012 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.772187989 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.770763134 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.771298316 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.782093384 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.798520549 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.773804775 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.778153617 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.767664659 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.773745819 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.774044022 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.772734023 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.772003934 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.775083846 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.783800383 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.783228081 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.773086737 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.773516349 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.773747683 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.77263316 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.772220267 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.773901163 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.772818443 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.772297313 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.771540007 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.770819794 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.776268584 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.770133376 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.772493433 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.773867857 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.774756864 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.784382362 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.773796596 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.773007003 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.774892317 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.775231108 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.773560885 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.773601938 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.773432034 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.775757852 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.775540696 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.774951397 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.783128242 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.782165198 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.775212715 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.773992842 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.774331656 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.774955226 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.776619596 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.774219735 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.774056742 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.776110912 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.774744444 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.774441551 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.776844971 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.773870893 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.774019038 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.7754782 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.773738198 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.776698704 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.783112834 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.77481079 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.770312351 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.774947356 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.775913 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.77443718 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.775995377 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.783307901 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.778490516 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.789068293 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.786444765 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.780437354 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.776702134 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.777145945 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.7846634 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.774282533 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.776163043 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.776602985 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.777459742 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.777674826 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.779707543 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.775310513 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.781520661 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.777609241 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.777989419 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.784697582 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.776129479 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.775957115 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.778940307 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.783151786 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.776793585 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.773811286 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.77524771 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.77582876 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.785024256 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.779706007 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.777969329 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.777865222 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.775189359 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.777565469 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.782711024 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.777326361 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.777757154 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.773821336 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.777997334 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.777054928 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.778176832 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.773858761 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.776555028 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.776427492 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.781239282 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.783876291 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.77390235 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.778275775 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.778721823 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.780484957 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.777134683 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.776630137 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.775123627 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.775656698 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.777475308 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.778491453 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.780057522 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.779737734 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.779335109 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.777621537 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.779338977 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.777208767 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.782240518 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.789259968 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.786986772 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.774956152 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.780289256 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.777780664 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.780398295 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.780463407 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.778214256 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.778930628 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.780859307 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.778562831 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.779412731 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.779665382 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.78106379 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.796334315 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.781094448 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.77960624 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.780580093 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.784468676 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.780038239 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.776340536 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.779869069 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.782590901 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.782870709 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.789472369 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.780950628 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.785554844 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.781955259 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.78105874 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.785122305 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.783296933 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.789458304 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.782509836 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.781553409 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.781438263 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.784640676 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.798221072 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.780239029 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.789079371 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.813290532 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.781177209 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.781181165 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.781032007 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.780026761 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.779990915 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.783513329 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.780378319 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.782515423 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.780798241 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.781558386 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.781921122 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.788379593 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.781555356 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.780752014 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.780618533 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.782760212 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.78162477 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.778306909 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.781285301 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.782334064 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.779794054 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.780153808 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.781769266 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.783120006 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.795589019 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.792427118 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.780981932 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.781757015 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.777834581 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.784086494 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.784948234 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.7945797 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.789703573 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.781423326 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.781967808 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.783177869 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.782792831 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.779965391 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.782261549 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.780614761 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.779932365 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.778223507 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.795757216 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.792453161 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.788307291 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.783100258 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.783844144 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.783337617 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.784558083 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.784237603 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.782072212 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.785439379 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.782638227 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.786364242 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.782793931 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.781978163 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.786716068 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.793031736 seconds)
  done (took 1057.122134672 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.779835252 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.780430135 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.780647911 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.780380943 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.779445244 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.778256255 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781117841 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.778905127 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.783175472 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.780428893 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.779744576 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.780476986 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.780895899 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.783435712 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781288053 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.779785811 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.78180163 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.782189894 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.779755787 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.780161875 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.781812172 seconds)
  done (took 39.102031354 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.786322099 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.780444372 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.781417185 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.785215662 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.780622042 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.782344888 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.783764146 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783559128 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.783389175 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782706685 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.782738531 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783684681 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.781053355 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.78323356 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780808511 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.783927044 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.785153297 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.780238846 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.785972306 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.781152845 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.784907843 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.782629212 seconds)
  done (took 40.937226021 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.787254956 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.784340614 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.78465613 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.783336119 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.785815935 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.78337412 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.786102595 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.786931988 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.787502365 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.786860408 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.785099623 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.789010339 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.793090629 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.792858445 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.788336617 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.786184164 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.928931149 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.785196147 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.784857886 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.78590272 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.785642193 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.789715063 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.784647909 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.783178818 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.784694248 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.785805752 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.786210199 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.784769078 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.788121692 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.785896369 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.790417089 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.785952179 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.786437443 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.78939269 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.788079858 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.787769995 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.790188209 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.788317928 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.784401839 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.785958232 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.79569736 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.811508798 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.788455129 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.794698606 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.787757364 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.788238699 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.791775229 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.7968205 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.785727649 seconds)
  done (took 89.465200313 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.787518824 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.788606222 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.785127329 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.787024617 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.787396615 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.787239685 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.786683491 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.787387355 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.785105979 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.785515463 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.788779306 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.787085583 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.78443397 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.787676051 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.78612038 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.784404407 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.784345277 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.784999323 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.784234009 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.786948548 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.785527227 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.788734193 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.789950042 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.785576638 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.788254422 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.786526965 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.786609844 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.789440097 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.785232137 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.78689181 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.789658836 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.790189812 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.787960909 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.787137731 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.78489663 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.790054046 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.788910362 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.786177889 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.788391868 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.787197086 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.790065196 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.790866568 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.788567251 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.789658589 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.787403617 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.787050316 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.785754709 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.786128631 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.786774069 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.789381863 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.790090522 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.788596757 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.790643588 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.786656279 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.791525877 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.790594639 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.788269466 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.787153418 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.790134104 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.788188553 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.788781246 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.790128384 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.789161216 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.792076781 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.792383554 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.787637238 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.786604777 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.791142214 seconds)
  done (took 123.288259458 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.791533862 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.790578777 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.791347107 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.790495946 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.790271142 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.791538309 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.792163601 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.790335518 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.792741753 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.792718671 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.795125388 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.794183497 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.793072575 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.793115572 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.79311862 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.794510445 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.794073115 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.793975638 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.795372079 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.796239911 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.794154953 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.794342864 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.792859364 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.793684034 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.79577347 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.796305771 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.797235396 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.794742635 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.795231454 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.795191141 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.796999055 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.791213055 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.792288439 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.792619039 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.795856073 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.796718391 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.796472504 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.792545822 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.795914091 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.795745149 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.796750345 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.79251569 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.797603166 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.795365211 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.796577586 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.794124042 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.795843397 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.796628811 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.797469756 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.796146141 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.796514416 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.799146466 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.798886405 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.794597987 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.793128152 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.796847135 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794315745 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.797567319 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.795443701 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.79689083 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.796604218 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.797414799 seconds)
  done (took 112.988879706 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.797529839 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.795057905 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.79463645 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.796869461 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.794850169 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.793959307 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.797660307 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.796636001 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.796149394 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.797072563 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797433082 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.794327124 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796599796 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798729602 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.794877776 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794731495 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.792449522 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.795801726 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.796993276 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.794852595 seconds)
  done (took 37.640006785 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.794747128 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.796088544 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.795729881 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.797229252 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.797786072 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.795273185 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.800285142 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79561351 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795428068 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796604382 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.79591588 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.797664942 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793698845 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.791412466 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.795918641 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.793522755 seconds)
  done (took 30.456160151 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.79259014 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.796155073 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.798986783 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.796382896 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.791881945 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.796707806 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.795680302 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.796197306 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.792501159 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.799185451 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.799811395 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.797499337 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.797687085 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.796726096 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.794938201 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.79858059 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.793820701 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.794633904 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.79898109 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.798993376 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.790728567 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.794415606 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.797956748 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.796519771 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.794222131 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.797070854 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.79592193 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.794209781 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.795552177 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.798796613 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.793592694 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.797761379 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.794046534 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.796750329 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.798434844 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.793940895 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.798007735 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.799231847 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.801264759 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.799661654 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.80116282 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.797520896 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.799475502 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.796051806 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.79757441 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.799494616 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.793059127 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.794277296 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.797657731 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.798387809 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.799347711 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.801343169 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.797357551 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.797537359 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.80036762 seconds)
  done (took 100.552406478 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.801232806 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.798358341 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.796584398 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.800083159 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.798349912 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.797174381 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.798915118 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.801020689 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.795628596 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.797446009 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.793786007 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.799034631 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.797545412 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.799415016 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.79768074 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.799533822 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.795272163 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.794380059 seconds)
  done (took 34.087217533 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.796750974 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.791439635 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.798935351 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.795000274 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.797414535 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.799897096 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.796793671 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.797785847 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798443399 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.795166522 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795543552 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.799952597 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7968361 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.797122841 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.7975191 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793851171 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.799854387 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.800253705 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.79818169 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.792976649 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.797690211 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.79817654 seconds)
  done (took 41.260496096 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.79603474 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.796827306 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.816769887 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.825301534 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.822224607 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.840318447 seconds)
  done (took 12.620633222 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796365781 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.800454908 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.795891575 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798274796 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80079786 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795030432 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795526618 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796441294 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796215017 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794980984 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797285062 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795904209 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796676317 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798847303 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799980886 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800653542 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.798849218 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798621138 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799709624 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797855767 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.796901981 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.801789077 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797357978 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795258527 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.798261298 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798064269 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.800517831 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798665204 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.798260726 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.801567497 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802383509 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799752023 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801576606 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.796487523 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80150722 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804206761 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79800828 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796611193 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800955817 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797988349 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.803646049 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804119977 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798459727 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800172358 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799873713 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.796023969 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799788161 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799676038 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795731342 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.800470632 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797107213 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793497131 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802678059 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796762743 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797831138 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.801443309 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799531353 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.800173144 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801551917 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.796527372 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802372262 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798862781 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80046951 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799325166 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799551685 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.798871479 seconds)
  done (took 120.451280948 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795053508 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.797449203 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799932321 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798679068 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797449019 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.796696227 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799253552 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799155379 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80066072 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800637367 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804302127 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797589866 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803900541 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802686861 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798111247 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801215861 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801868905 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800571989 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801386956 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.799036727 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792732715 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.799315602 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796756759 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796973859 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.800831889 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.799120583 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79598071 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796640058 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799337915 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795178007 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796203661 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797711207 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796428887 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.796479102 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79575402 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797389665 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793504192 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797025454 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795321752 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798970084 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794899152 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800180159 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795162715 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796307731 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797282834 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796219556 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.796741927 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793391609 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796608266 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795586716 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795570726 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795312775 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.798439874 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797197987 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794898517 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79394533 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794777029 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795521712 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795438602 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799607359 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797823315 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794227934 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7991886 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796455003 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797226209 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797713283 seconds)
  done (took 120.369205462 seconds)
done (took 2462.990483809 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.82348424 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.859716832 seconds)
  done (took 15.406388517 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.9623236 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.912944946 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.799351747 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.796183063 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.795582491 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.81773912 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.812813837 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.798005605 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.798753246 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.798890057 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.799260311 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.98408717 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.799982355 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.797944949 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.801883581 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.889513945 seconds)
  done (took 51.097344827 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.802013109 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.802596514 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.817097577 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.807405799 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.802745446 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.812731702 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.836549948 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.807230473 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.837277391 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.813525618 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.872942371 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.81387779 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.802275525 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.851680914 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.813827156 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.818552262 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.895711177 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.878154388 seconds)
  done (took 34.614228486 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.878907252 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.808438979 seconds)
  done (took 10.424175579 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.798717485 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.822476435 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.820628824 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.815879521 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.796300149 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.807973187 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.803035366 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.794609526 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.801716658 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.78736152 seconds)
  done (took 69.779389866 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.799522318 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.7931423 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.795363914 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.791153404 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.787063847 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.779930197 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.78139299 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.779413286 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.473204339 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.818107108 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.791316444 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.793488021 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.790567544 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.793818258 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.784690926 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.81287431 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.915750246 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.786641077 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.784992038 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.798041521 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.788777649 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.853787454 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.803158145 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.790409571 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.82284512 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.481803562 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.795449466 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.796149438 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.921165624 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.789693598 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.791170883 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.7907363 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.790239277 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.168523957 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.062774747 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.788265985 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.798232301 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.795712157 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.789159628 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.902845334 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.79438477 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.794898687 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.732826627 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.038273464 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.905741479 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.834094769 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.182345307 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.794927328 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.792426822 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.819525654 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.796458901 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.790265053 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.803867216 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.302453364 seconds)
  done (took 128.278247793 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.784579379 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.05704846 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.939248222 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.789013159 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.07368163 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.991954532 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.783032235 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.829379995 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.783588587 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.014169602 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.948350605 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.895036835 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.781715819 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.784534216 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.777523573 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.777999351 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.949285452 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.855646284 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.784284081 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.781559472 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.809515234 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.027930949 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.90653026 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.777490455 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.800019023 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.989898933 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.904571624 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.883312434 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.116020338 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.772617519 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.843133039 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.77688144 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.772509509 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.773819122 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.935836539 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.871028473 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.861114068 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.776160853 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.773173472 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.776122369 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.445248713 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.971484573 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.873470829 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.918689438 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.02344868 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.978219593 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.561909789 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.775277924 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.507862841 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.938926855 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.009086926 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.011181738 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.899161163 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.776155426 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.291014463 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.770730247 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.770946735 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.009523486 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.002958269 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.878703234 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.777176893 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.772137474 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.769408715 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.019510578 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.770723618 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.868660539 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.774329521 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.769835043 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.870448135 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.880539635 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.005436432 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.988027724 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.808673902 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.092993248 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.248237828 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.021639879 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.839518282 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.008114375 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.769262432 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.768299312 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.855792454 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.616035141 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.929834022 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.025654517 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.027242808 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.808822703 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.498227953 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.767921478 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.001288445 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.996050983 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.072497481 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.011230918 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.920923163 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.972060586 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.769660713 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.76697466 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.024632209 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.902098533 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.772513121 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.130145071 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.008299137 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.336081708 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.79795169 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.080711968 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.903269709 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.768324035 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.409590411 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.771549779 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.998602909 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.812465435 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.769368053 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.766028136 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.988942926 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.845891051 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.767075932 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.402983209 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.833065178 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.768485518 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.008036909 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.769880939 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.033025216 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.773425637 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006758025 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.895637359 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.799588487 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.99521305 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.005272403 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.76981038 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.028206139 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.018537422 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.886005665 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.986291472 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.390527463 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.769788644 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.058655499 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.771847391 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.767655829 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.939082158 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.767579821 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.942791422 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.766503608 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.107410915 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.793174232 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.924793025 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.76420824 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.024368665 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.799707014 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.819473818 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.770249637 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.894101283 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.76696834 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.637892511 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.920677539 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.770996839 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.76483765 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.481295661 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.761165862 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.924484641 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.004246347 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.794685731 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.839005116 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.435921259 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.769189537 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.85730352 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.792632413 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.106680185 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.767936709 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.924792578 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.765441734 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.298628142 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.770272418 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.008832115 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.954491177 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.772054101 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.765760774 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.67718837 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.766005606 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.766934554 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.926682063 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.230449469 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.767195932 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.972546972 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.771904211 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.896373948 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.767190117 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.840340972 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.11999054 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.769505103 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.766001304 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.764375147 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.771493099 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.767781256 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.033453005 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.799447028 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.299163501 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.907042914 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039446441 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.087903383 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.020866745 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.817053818 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.773427305 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.015736042 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.7738095 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.832502804 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.771950693 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.792201851 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.003997233 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.777623183 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.981095662 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.055369213 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.707171378 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.817274979 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.772212017 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.770847635 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.643800231 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.923281994 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.86055422 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.771395986 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.766184831 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.884683098 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.892075659 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.98267762 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.770032517 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.930293302 seconds)
  done (took 881.714063634 seconds)
done (took 1193.038610263 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.769780399 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.770372221 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.752352529 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.769554918 seconds)
  done (took 28.7676943 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.779852609 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.774665525 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.774617513 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.774171102 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.777806121 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.777301704 seconds)
  done (took 12.361496001 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.800963678 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.769153169 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.768086897 seconds)
  done (took 21.041295216 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.844377848 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.180149417 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.883436996 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.21241878 seconds)
  done (took 9.823161313 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.778106929 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.777707647 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.777801438 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.782091602 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.778235541 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.780017779 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.781002484 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.77985554 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.77929827 seconds)
  done (took 17.719061449 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.195773654 seconds)
done (took 95.607820641 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.898364135 seconds)
    (2/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.981557642 seconds)
    (3/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.003505715 seconds)
    (4/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.862456227 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.893236001 seconds)
    (6/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.881145591 seconds)
    (7/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.126172114 seconds)
    (8/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.702210245 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.86279686 seconds)
    (10/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.778132842 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.196689252 seconds)
    (12/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.119821245 seconds)
    (13/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.521041314 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.912491683 seconds)
    (15/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.8493026 seconds)
    (16/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.265348954 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.818330643 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.799776566 seconds)
    (19/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.860655505 seconds)
    (20/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.783386972 seconds)
    (21/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.18307796 seconds)
    (22/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.95496483 seconds)
    (23/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.916926034 seconds)
    (24/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.944839837 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.779848038 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 4.212217617 seconds)
    (27/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.895321644 seconds)
    (28/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.256813919 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.759256722 seconds)
    (30/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 3.6361053 seconds)
    (31/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.876066525 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.799621774 seconds)
    (33/309) benchmarking ("sort", BigInt, false)...
    done (took 6.773040272 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.097181814 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.693589883 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.783239031 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.159037056 seconds)
    (38/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.776360805 seconds)
    (39/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.800234352 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.883093397 seconds)
    (41/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.778586285 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.775820012 seconds)
    (43/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.9259268 seconds)
    (44/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.896029639 seconds)
    (45/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.073764554 seconds)
    (46/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.077104153 seconds)
    (47/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.705504224 seconds)
    (48/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.861340254 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.779828651 seconds)
    (50/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.77954804 seconds)
    (51/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.774721132 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.921084848 seconds)
    (53/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.875657703 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.780015377 seconds)
    (55/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.88146508 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.781554905 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.415618587 seconds)
    (58/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.815550299 seconds)
    (59/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.386747757 seconds)
    (60/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.984495369 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.475560434 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.885177447 seconds)
    (63/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.007786046 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.035114951 seconds)
    (65/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.882719472 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.837749119 seconds)
    (67/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.974675499 seconds)
    (68/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.871440539 seconds)
    (69/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.893067592 seconds)
    (70/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.90869482 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.892762481 seconds)
    (72/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.922594255 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.157414929 seconds)
    (74/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.765036757 seconds)
    (75/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.830584597 seconds)
    (76/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.936220843 seconds)
    (77/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.984843966 seconds)
    (78/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.771783474 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.128986145 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.876457907 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.052303812 seconds)
    (82/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.931938721 seconds)
    (83/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.712937905 seconds)
    (84/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.221057265 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.762667455 seconds)
    (86/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.110309727 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.208430924 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.689106804 seconds)
    (89/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.25949132 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.835397761 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.080466088 seconds)
    (92/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.926864798 seconds)
    (93/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.78459106 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 5.49300224 seconds)
    (95/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.766323402 seconds)
    (96/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.129073187 seconds)
    (97/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.690190264 seconds)
    (98/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.194705001 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.421891226 seconds)
    (100/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.921113661 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.78664083 seconds)
    (102/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.716053148 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.841049387 seconds)
    (104/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.863334542 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.858684973 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.10725408 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.000217574 seconds)
    (108/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.920221153 seconds)
    (109/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.765868743 seconds)
    (110/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.980645133 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.783352858 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.986088207 seconds)
    (113/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.889742903 seconds)
    (114/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.170561487 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.028065362 seconds)
    (116/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.876797097 seconds)
    (117/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.945160717 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.786864344 seconds)
    (119/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.0161485 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.348864945 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.104813594 seconds)
    (122/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.341115978 seconds)
    (123/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.597675589 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.092511969 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 2.219061177 seconds)
    (126/309) benchmarking ("sort", Int8, false)...
    done (took 4.800965389 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.804347503 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.039905308 seconds)
    (129/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.766630979 seconds)
    (130/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.791661725 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.091953362 seconds)
    (132/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.2959802 seconds)
    (133/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.915279822 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.998391656 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.073314102 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.039227484 seconds)
    (137/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.061047237 seconds)
    (138/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.384694201 seconds)
    (139/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.985989796 seconds)
    (140/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.792425841 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.199518484 seconds)
    (142/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.870624301 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.784997604 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 8.401114849 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.10398623 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.895460363 seconds)
    (147/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.806405724 seconds)
    (148/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.809687254 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.998367689 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.127154371 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.861370483 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.569171776 seconds)
    (153/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.982052682 seconds)
    (154/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.929309688 seconds)
    (155/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.062487477 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.077171461 seconds)
    (157/309) benchmarking ("sort", Float32, false)...
    done (took 5.519636804 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.783012652 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.005816959 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.810405419 seconds)
    (161/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.110323501 seconds)
    (162/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.914860016 seconds)
    (163/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.629060262 seconds)
    (164/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.175154427 seconds)
    (165/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.253937764 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.811007609 seconds)
    (167/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.903368874 seconds)
    (168/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.954267623 seconds)
    (169/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.164963056 seconds)
    (170/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.770472348 seconds)
    (171/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 3.617535134 seconds)
    (172/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.810197799 seconds)
    (173/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.978895141 seconds)
    (174/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.763773113 seconds)
    (175/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.995541455 seconds)
    (176/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.807696074 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.948581014 seconds)
    (178/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.843774111 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.156401232 seconds)
    (180/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.297495339 seconds)
    (181/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.819963521 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.770254732 seconds)
    (183/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.33108526 seconds)
    (184/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.858190769 seconds)
    (185/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.86672115 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.976080343 seconds)
    (187/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.812422018 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.168012268 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.812323168 seconds)
    (190/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.347558784 seconds)
    (191/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.954093332 seconds)
    (192/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.954833007 seconds)
    (193/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.736598076 seconds)
    (194/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.250831836 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.585042439 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.903235129 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.818373116 seconds)
    (198/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.248393034 seconds)
    (199/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.919454547 seconds)
    (200/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.464484428 seconds)
    (201/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.024241441 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.891879519 seconds)
    (203/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.905213991 seconds)
    (204/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.975755846 seconds)
    (205/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.804060218 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.785669361 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.84517312 seconds)
    (208/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.815659835 seconds)
    (209/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.802672253 seconds)
    (210/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.988516919 seconds)
    (211/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.825138458 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.30085933 seconds)
    (213/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.852453541 seconds)
    (214/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.870455703 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.47571977 seconds)
    (216/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.154785501 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.481163758 seconds)
    (218/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.787294239 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.778962278 seconds)
    (220/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.881816744 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.595271951 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.996100951 seconds)
    (223/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.805467726 seconds)
    (224/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.802705074 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.110543843 seconds)
    (226/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.787324971 seconds)
    (227/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.308843997 seconds)
    (228/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.358793119 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.803830653 seconds)
    (230/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.807568305 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.834024012 seconds)
    (232/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.769108467 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 8.251042283 seconds)
    (234/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.980958429 seconds)
    (235/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.874916154 seconds)
    (236/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.359917154 seconds)
    (237/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.086616943 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.737929086 seconds)
    (239/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.800525342 seconds)
    (240/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.773537233 seconds)
    (241/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.821825572 seconds)
    (242/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.478862857 seconds)
    (243/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.901211745 seconds)
    (244/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.809585411 seconds)
    (245/309) benchmarking ("sort", Float64, false)...
    done (took 5.554430237 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.772314513 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.998691743 seconds)
    (248/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.015329263 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.12570959 seconds)
    (250/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.340981609 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.813933325 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.719276389 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.793517005 seconds)
    (254/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.152197946 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.877033242 seconds)
    (256/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.789381324 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.161188426 seconds)
    (258/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.776000193 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.826175792 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.816914886 seconds)
    (261/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.814929964 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.045384469 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.154268955 seconds)
    (264/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.853230616 seconds)
    (265/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.921116596 seconds)
    (266/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.95549169 seconds)
    (267/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.729308505 seconds)
    (268/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.774628107 seconds)
    (269/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.771703065 seconds)
    (270/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 3.795291534 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.85550536 seconds)
    (272/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.967673106 seconds)
    (273/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.16656984 seconds)
    (274/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.28551415 seconds)
    (275/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.793241299 seconds)
    (276/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.185453183 seconds)
    (277/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.402042028 seconds)
    (278/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.962838578 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.770495222 seconds)
    (280/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.11645979 seconds)
    (281/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.361598239 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.889268071 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.871112041 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.934673838 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.789888014 seconds)
    (286/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.984543844 seconds)
    (287/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.269389867 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.601166988 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.865767041 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.128259298 seconds)
    (291/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.035826902 seconds)
    (292/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.127079574 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.822338211 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.039706469 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.427977064 seconds)
    (296/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.878234864 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.008991063 seconds)
    (298/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.876543216 seconds)
    (299/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.81000034 seconds)
    (300/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.04823417 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.810839138 seconds)
    (302/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.190596462 seconds)
    (303/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.915112626 seconds)
    (304/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.91164987 seconds)
    (305/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.809494077 seconds)
    (306/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.611455397 seconds)
    (307/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.904655784 seconds)
    (308/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.099919745 seconds)
    (309/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.997415352 seconds)
  done (took 989.482485665 seconds)
done (took 991.453519158 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.824515844 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.817362324 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.7998025 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.822540414 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.912951241 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.830453562 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.811720353 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.807693448 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.850762447 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.852190659 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.802002234 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.830301464 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.804391958 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.800226568 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.802811076 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.816268918 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.110660651 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.826423115 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.817882284 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.810877535 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.820204634 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.803449945 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.85056718 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.835431565 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.808404317 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.804665402 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.807479307 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.821374662 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.91323151 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.804960837 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.804534476 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.814340708 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.109145256 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.827973278 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.8004699 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.822878855 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.814810707 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.812019514 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.806579834 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.836847066 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.248525969 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.804752207 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.803197053 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.804297748 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.804672083 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.808599525 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.806993496 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.812557341 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.815244106 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.81841944 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.247480719 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.820246824 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.80865118 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.803362542 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.814447312 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.804728248 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.811558853 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.818960732 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.826040782 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.820119133 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.105985799 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.82907481 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.804814945 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.821541018 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.812641068 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.281378283 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.80387889 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.811298557 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.247812635 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.809897493 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.285240801 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.816684967 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.805080042 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.815937222 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.838539054 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.111348853 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.824312822 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.807032189 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.812777531 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.805967583 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.81513095 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.819650542 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.808449927 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.805958128 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.819852061 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.836752327 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.817258571 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.805992734 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.81906335 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.827399667 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.814115315 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.817747715 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.809465056 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.806949238 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.816190913 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.813781152 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.811561309 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.810243949 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.812284292 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.818967237 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.248578161 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.8267346 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.80606078 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.803535933 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.80699092 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.822247916 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.245636747 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.808789366 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.829951665 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.856248841 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.812604112 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.108753221 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.833712043 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.82528572 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.817721068 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.809974222 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.804666131 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.10871916 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.272818854 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.82682946 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.814411716 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.807498106 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.826129003 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.810400132 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.805941476 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.113964936 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.832935241 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.821530865 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.928292434 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.817448327 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.839832093 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.807764621 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.812104426 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.839837772 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.824512013 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.84329515 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.814923881 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.828145924 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.82913335 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.804213799 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.820038932 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.822314421 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.811110767 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.814876149 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.80376674 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.839017125 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.821582667 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.823063922 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.832497216 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.931881212 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.807184593 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.105262417 seconds)
done (took 284.194487635 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.879841844 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.805670845 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.910189964 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.809286262 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.887440999 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.892069592 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.804940955 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.804456207 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.804807233 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.181162774 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.80512292 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.806054064 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.805044866 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.805356657 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.890930155 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.808065638 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.80359915 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.142365318 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.810074631 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.881687497 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.800674653 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.806790333 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.806340935 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.182411983 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.806171647 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.802681613 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.88019974 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.807267272 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.144500345 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.807650579 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.809053455 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.145987926 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.898758308 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.826604029 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.818008366 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.813828685 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.89225621 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.814231544 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.892646801 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.889974013 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.911492388 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.848856171 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.808326288 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.806645101 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.811864713 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.811670903 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.806311413 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.835844927 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.803707673 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.807238814 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.143732419 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.818077575 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.817285293 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.808259448 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.80798 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.833004799 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.807497971 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.81133398 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.899605396 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.808961567 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.86923427 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.185871688 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.179959082 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.809488236 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.809216218 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.810930393 seconds)
  done (took 180.187238696 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.87539436 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.884964282 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.879281248 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.814479607 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.858483352 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.877601875 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.81442859 seconds)
  done (took 14.738403473 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.817210089 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.811258247 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.86275875 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.861616517 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.81152856 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.961971779 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.811798029 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.821780988 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.807853989 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.863025887 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.809699881 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.812145629 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.81516135 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.811242664 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.859278517 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.822421483 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.927673852 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.814160728 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.810255935 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.962378907 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.8105469 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.815501589 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.866356265 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.821000459 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.810574014 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.814461163 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.404423459 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.811551662 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.810782442 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.811930631 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.809837313 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.854785131 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.809428456 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.812409416 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.810224554 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.927680075 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.811555381 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.81036133 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.810634221 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.812811012 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.813877375 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.811945767 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.813627091 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.81025234 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.813682562 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.837023285 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.810469915 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.817942042 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.811765528 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.815792912 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.862046008 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.813364509 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.809212409 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.812414413 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.86630084 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.819711543 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.814052601 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.81076288 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.814457115 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.813034731 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.964265068 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.862823353 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.811546499 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.862755476 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.817114079 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.815470591 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.814271924 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.813048864 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.907999046 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.817687172 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.862707713 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.812722061 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.974604882 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.840071032 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.819604963 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.81893811 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.81639833 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.814749028 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.807503335 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.821438098 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.809913304 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.817371714 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.819140881 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.820112323 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.809453524 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.928105709 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.922907449 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.813287614 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.829895105 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.822002172 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.811080374 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.867124511 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.815113877 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.811778145 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.870034042 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.928315374 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.874249181 seconds)
  done (took 200.295444788 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.820439139 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.826935513 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.815108191 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.832764528 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.816163615 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.815765502 seconds)
  done (took 12.668294468 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.817559601 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.815243354 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.81799928 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.816450217 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.81449023 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.817915124 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.814372801 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.81715144 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.819020694 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.816889131 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.822797092 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.810214823 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.814025918 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.810919719 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.811577055 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.809674102 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.814372591 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.805060868 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.81085154 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.811315476 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.956219287 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.810852566 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.810502309 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.80999529 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.818371989 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.811006842 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.823652578 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.810052833 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.812191472 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.820928771 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.816968275 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.814239731 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.818581548 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.817436072 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.815858579 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.810654415 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.815675746 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.8154221 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.808669243 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.812629279 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.813424551 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.811448375 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.811714454 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.816355419 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.814024862 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.816022067 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.818366364 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.819363016 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.812651276 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.812999378 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.811472155 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.812858206 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.815345636 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.813317006 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.816474949 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.817193501 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.818380847 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.813349499 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.811668616 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.816362479 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.815600963 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.814746863 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.814314662 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.819327895 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.820505274 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.815216059 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.814871955 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.818919646 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.814085257 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.814810583 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.81649086 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.811844683 seconds)
  done (took 133.547049576 seconds)
done (took 543.183753811 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.930976325 seconds)
  done (took 8.670386648 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.885544904 seconds)
  done (took 8.726371669 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.310638525 seconds)
  done (took 10.048237844 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.827488913 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.834162944 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.80951699 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.81781057 seconds)
  done (took 29.037151231 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.808616441 seconds)
  done (took 8.548714112 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.818779514 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.806370173 seconds)
  done (took 15.401085405 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.91861644 seconds)
  done (took 8.658381505 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.922850298 seconds)
  done (took 8.668831501 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.830210987 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.848121368 seconds)
  done (took 15.433120454 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.797004719 seconds)
  done (took 8.5379325 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.492433484 seconds)
  done (took 11.241359026 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.814625569 seconds)
  done (took 8.569790765 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.889672312 seconds)
  done (took 8.62895835 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.903592036 seconds)
  done (took 9.643917776 seconds)
done (took 161.552917238 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.813460547 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.80806922 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.809420005 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.81221187 seconds)
  done (took 28.984132133 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.850022365 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.849924261 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.851589115 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.86214614 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.854599192 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.849357689 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.843693383 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.843149127 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.86252497 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.855104814 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.851502286 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.855700759 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.852539914 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.845154405 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.855746569 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.854796779 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.864161046 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.852413299 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.846558671 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.854242502 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.820442294 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.861575488 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.854251646 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.822495865 seconds)
  done (took 46.155190346 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.017479827 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.891681246 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.972479189 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.872236139 seconds)
  done (took 9.494510604 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.870148892 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.871711866 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.884146785 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.924259964 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.947748288 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.881474941 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.839917729 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.838481353 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.826457871 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.872383191 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.947322444 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.867270861 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.957985894 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.818462503 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.007554204 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.819071985 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.817737827 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.87084467 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.922443184 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.936810137 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.819019006 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.871788215 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.873685937 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.867599036 seconds)
  done (took 46.899351943 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.817116715 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.825615063 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.82413605 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.819812978 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.819406521 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.818520101 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.823535935 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.820537846 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.840187704 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.820810342 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.817291707 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.822743605 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.816882385 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.819097529 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.82098797 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.831745353 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.832097356 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.818588797 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.822782699 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.824904196 seconds)
  done (took 38.20153155 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.812796957 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.741560146 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.165496905 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.067584647 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.814520349 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.814597957 seconds)
  done (took 31.16078689 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.830248604 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.829730616 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.81922548 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.872679672 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.953047014 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.822463914 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.822342596 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.828152873 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.862013796 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.878287785 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.833192624 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.84645583 seconds)
  done (took 23.943465659 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.815445326 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.814264804 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.811156844 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.82885726 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.828679045 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.82702124 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.825344423 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.814034765 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.831178074 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.837175082 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.832041456 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.829978131 seconds)
  done (took 43.640952621 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903113281 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.704129976 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.851514332 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.500411478 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.281800377 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.024770676 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.343089733 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.149902125 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.815604328 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.088292475 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.875003432 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920988994 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.069717263 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.814801095 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.836337777 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.298664439 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112685949 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042878924 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842324525 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.638682399 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866817877 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.312905064 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.662146212 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.874319913 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.025526469 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.94260889 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.074885378 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.773661674 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951159163 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854000121 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826445355 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.825270553 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.088148095 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199504016 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918958686 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826472107 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.436266211 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.526819875 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.807787237 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.591698389 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.630187361 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.942821498 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823966418 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815723698 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.75319338 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.276172667 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18937979 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.820987128 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.529169675 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.816301281 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.826630676 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905265015 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.82131725 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.632090764 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.735737624 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.09025241 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.814941866 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824692218 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.388265423 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.947542171 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.310464894 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.787199366 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.010648412 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.611551185 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217528824 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.969873518 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.820119132 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.821742742 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.755526681 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.598394535 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.868664332 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.964828745 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.837246617 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.468314866 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.126552904 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.955038752 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.761066984 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.527571289 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.5568017 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.788367706 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.045907519 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.772053719 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.751173924 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.67877378 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.752302697 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.085403773 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856189268 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.452483912 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86035545 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.151364153 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.826921257 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835554937 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826029907 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.043043749 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.701308005 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81911311 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.647037672 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.964592044 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839275046 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.154041143 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750998134 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.819286489 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074494509 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.029648316 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.007344039 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.330247078 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977181098 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.817976484 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.897319629 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.702303662 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.867424283 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.099420747 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889621926 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.95511559 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878012462 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.785873562 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121296715 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845960986 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.983878558 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.885771864 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.944573431 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.158372808 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.107502076 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884060945 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.823457985 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.820739296 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.717007001 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.372306397 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.086060627 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.820646155 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.283727978 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.86662665 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.820063655 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.75532068 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.415520614 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.893711657 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.789006597 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.043390101 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.721516331 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131799372 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.756213091 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.967279418 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.933318916 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.042454097 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.468729433 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.903285069 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077664131 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.25030112 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.04926454 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866959008 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842844777 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93851886 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844021521 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.18006592 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.109041579 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.824234673 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.824799068 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.627803675 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.818017695 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.821879825 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.826531314 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.576012999 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097611031 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.848004459 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.824365896 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.711616896 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.838027545 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890067458 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.827995421 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.833524416 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.362779111 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.529457634 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.830024763 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.439774814 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044849812 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.834114326 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.602694251 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93543374 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.906956953 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.107058221 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885412087 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.755076678 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.532227374 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.516225164 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823643006 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.757281683 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.825411721 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831966593 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.83545581 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.204052715 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.103550627 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871349424 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.628211331 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.866589227 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.834021051 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.831258152 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825972655 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.363832166 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.963280307 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315101557 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.869416675 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962660759 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.837836147 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.758610767 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.825782555 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82826369 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.825008429 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.778511219 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875993508 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.639952545 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208991555 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082468902 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.437967666 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.837472333 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.648244198 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.883297074 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.899971644 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.70053792 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.716786686 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.913582904 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835958138 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.834250404 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.632023793 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.51914717 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.39205973 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145763818 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142393427 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275468085 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.257673781 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.128909489 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.162483 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062768919 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.355204612 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.882803681 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.167107474 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767786949 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908842179 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.47474747 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180285912 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839946418 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056793677 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.216191239 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.618538278 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996682618 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.039436012 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863195814 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.710837329 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.787003767 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.030632461 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969742405 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.617568976 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030793253 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160099693 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.531725559 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.922886463 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.828791829 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.511526067 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914354126 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.538430262 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.189772011 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.334587466 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.824378643 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305124091 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.829777454 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.272898739 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183084267 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.104603224 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.948128483 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.76089341 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.838350183 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.838567838 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.82786262 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.819628717 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.682879195 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.083137962 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837189881 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066813133 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.055402212 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124428383 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.737414876 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.833076366 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829847672 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131303519 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.56705884 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99751512 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.219290485 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.348692593 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8315116 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.76310814 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.763885911 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.521640597 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.839422252 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.805092585 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061193 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.018571008 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.744339795 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.294370937 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073035016 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.085312037 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.841175763 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.108058884 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110024195 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.529166917 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853232959 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.929560752 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.542430513 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.944079408 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.099595407 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.064830279 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.58527252 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.054317612 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.875168517 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.653251246 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.830718882 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.042451241 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.099180148 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.787096317 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071771035 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.553696261 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.920643333 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153750007 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891350695 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.763907536 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.984672518 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.02535524 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839815488 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916239552 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840249575 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.842213305 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.842326858 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878243589 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.754882635 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.957671447 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.842696317 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920515507 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.985803602 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.358979348 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.837038874 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112690252 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203886205 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.166095489 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894483248 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.831031209 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831153783 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768277963 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966172514 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.281022862 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.103681518 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.960970852 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.129445224 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859375086 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.556409083 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.169842089 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07266374 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106024697 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.729150106 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832219747 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.863761666 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.100398252 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845184734 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.043881097 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073450953 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163606622 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305677409 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.028036691 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.196276011 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.103431041 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.203021595 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.832389268 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.423593482 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.933568765 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.518933032 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.87951504 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.843009264 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103038062 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846583216 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224131978 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.857454592 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.032537714 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.349391955 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.639135852 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.121594865 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.833333987 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.900978232 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118022004 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.239280543 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149903764 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903382507 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846339185 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.536344214 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971300909 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.700875877 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.10574976 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.834291919 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046048142 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.544355077 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.844666673 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117434235 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147381732 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.829963914 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.728248986 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843331782 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.845965223 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.057847242 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.103018657 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.089259408 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.843311362 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.843895944 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.652391047 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113070381 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899201635 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767749837 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.838532536 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93555444 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.084052315 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.856645807 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.52423495 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.545165506 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134041462 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.75485108 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856565498 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.287296463 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.202738262 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166774953 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.377411687 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061325064 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.3956318 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.755097755 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139460375 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.840832798 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.331815582 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.146939735 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.840266255 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.419808129 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875940532 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.111631749 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155679766 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.928032983 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.642789971 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.806621306 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058852414 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.395064147 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.774033016 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.835550489 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.899690145 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.833882736 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.965451438 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.846578578 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.725802877 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.73664407 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.58507869 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331752427 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.83944853 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.824808534 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.604369831 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.427272131 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872438524 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984443777 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844642588 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.549933601 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.132723868 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.091906519 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.399426199 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.847754735 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.843181508 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839522215 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.766592618 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.03518626 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.215099416 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137992359 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.221551661 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.874266855 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.84261028 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.054212661 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04890528 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.763666538 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980579326 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294879651 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87650916 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.61128857 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.520057113 seconds)
  done (took 1664.710219843 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.837943767 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.85336093 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.852643478 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.901122291 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.865803821 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.89411774 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.859583651 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.876826034 seconds)
  done (took 56.710654179 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.84103804 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.042437804 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.850846696 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.841703899 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.848626743 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.839705735 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.015421059 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.85383345 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.848458495 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.85253877 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.842066455 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.837770457 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.164208695 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.865537191 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.842994575 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.826415173 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.848336661 seconds)
  done (took 73.837096424 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.84518774 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.045628119 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.88030224 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.858929209 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.773785179 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.855197391 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.78516299 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.843863328 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.842744388 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.057302018 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.474190137 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.853149123 seconds)
  done (took 89.886864597 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.851814545 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.850061342 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.848339299 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.851469135 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.850496258 seconds)
  done (took 11.029628677 seconds)
done (took 2166.42157806 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.092046162 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.077398354 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.085035503 seconds)
  done (took 5.934554003 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.993256497 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.041396853 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.158561311 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.166649627 seconds)
  done (took 10.134637645 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.13959425 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.227032576 seconds)
  done (took 6.140950135 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.247551144 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.850524679 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.237081474 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.844819431 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.841845349 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.844065043 seconds)
  done (took 22.307387059 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.84902244 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.848195481 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.846377916 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.848344573 seconds)
  done (took 9.16457967 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.827578203 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.524710056 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.829310938 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.845638026 seconds)
  done (took 20.801423165 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.596079799 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.243883991 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.588280279 seconds)
  done (took 9.199254468 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.404366273 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.741780099 seconds)
  done (took 8.91956372 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.115122727 seconds)
  done (took 3.886938152 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.98031637 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.123679635 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.365630271 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.379628362 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.464006907 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.698345809 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.155671171 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.081484625 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.258096924 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.281851902 seconds)
  done (took 24.562212978 seconds)
done (took 136.249740251 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.221773928 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.080416444 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.046362953 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.188865467 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.066581039 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.047002106 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.04709 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.173656162 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.6859879 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.684901965 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.186272135 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.066493797 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.003767993 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.079860427 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.010376807 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.081160756 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.082524836 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.2356581 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.885229915 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.082624198 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.056813171 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.818154185 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.032849826 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.830791034 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.087202038 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.998559491 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.406807271 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.082923331 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.038115646 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.416831343 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.021301424 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.23540814 seconds)
  done (took 171.75649249 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.579777623 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.846399597 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.846177624 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.843844052 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.035195942 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.846572808 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.846215878 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.845555211 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.982245973 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.967506927 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.844283119 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.045554862 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.845031445 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.846612193 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.846821213 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.843439295 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.106500022 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.65213182 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.858037356 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.864625358 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.872258689 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.956123337 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.871909625 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.022203755 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.149264342 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.873297117 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.834422931 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.872028329 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.850263779 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.823953897 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.856180374 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.846269132 seconds)
  done (took 205.999213518 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.846711446 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.846757164 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.845891184 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.846015992 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.845807844 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.851532765 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.848052267 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.844693016 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.513387283 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.510896361 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.854777146 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.851039012 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.852138481 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.846249589 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.85256322 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.846745075 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.851851692 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.852004176 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.85152811 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.851925853 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.85711591 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.535769101 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.853935095 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.552242141 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.851505737 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.853706299 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.846662814 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.853489516 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.856570693 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.855437721 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.856869726 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.846527432 seconds)
  done (took 219.72361343 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.049489952 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.8557214 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.856015897 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.796571442 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.857517175 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.853969698 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.801964139 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.053239167 seconds)
  done (took 18.917346498 seconds)
done (took 618.181230894 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.283495195 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.136145138 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.021494807 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.879582521 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.13626327 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.910242296 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.876266438 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.943033065 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.601339283 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.939622554 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.564747339 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.890315828 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.658889258 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.893701053 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.996914566 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.934667617 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.416747061 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.506172722 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.054294531 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.947871798 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.046651723 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.803467715 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.948688379 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.617990085 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.676039261 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.844688206 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.038625357 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.416896166 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.885289172 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.036437073 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.602853584 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.246782676 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.882275338 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.874857893 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.932667194 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.909244396 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.220125554 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.879976776 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.995472616 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.615988493 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.949645152 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.486213085 seconds)
  done (took 102.279885328 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.846975728 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.845253246 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.845818411 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.845908306 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.84771805 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.846109279 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.847370237 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.846397397 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.847425699 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.846828913 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.844251253 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.84880839 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.847449111 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.846752015 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.845872091 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.84414612 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.847642689 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.850676094 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.846057614 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.844773864 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.844630075 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.846475338 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.861469059 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.846004985 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.847461594 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.84665944 seconds)
  done (took 49.816938919 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.860479022 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.007977437 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.11152276 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.876176114 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.859093278 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.865550472 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.877220141 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.864917503 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.861710556 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.863155177 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.966645319 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.863393518 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.876846107 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.110767721 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.871493892 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.862186571 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.859449162 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.859246897 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.010701816 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.872841203 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.877173279 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.863460939 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.878064366 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.871587257 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.858844417 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.862132081 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.865424472 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.312568655 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.864744811 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.963307307 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.898144272 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.879547873 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.297830197 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.115735759 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.904659371 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.860765053 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.856412066 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.964311377 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.858777237 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.853117007 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.872038537 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.858885321 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.100747138 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.344970679 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.863464927 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.85291951 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.31962033 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.967527025 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.88970481 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.862719404 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.10340246 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.869934239 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.84761362 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.84624196 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.882275225 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.856800169 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.847170445 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.188841875 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.853667341 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.864045298 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.848805879 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.845860965 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.007593923 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.850287464 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.990250613 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.851404109 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.84984851 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.84733685 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.097518109 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.858163079 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.341802055 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.854601849 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.842419395 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.948594491 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.99357968 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.331503223 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.852406505 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.000714841 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.294784931 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.861016373 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.844865022 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.285151253 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.866075424 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.845093028 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.840268249 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.840648672 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.8393144 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.883569961 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.852311579 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.260865492 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.337148636 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.192100499 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.864610045 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.850721937 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.835526715 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.178353653 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.84274449 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.839495704 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.079259568 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.341110305 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.845335466 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.844471611 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.323664545 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.850429284 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.85587694 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.844002728 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.093648313 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.848919704 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.880233288 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.836275328 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.84389253 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.839895945 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.855040789 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.841096031 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.838708376 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.309994372 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.958459447 seconds)
  done (took 229.584782202 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.833185399 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.833256182 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.830397161 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.830597389 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.830998587 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.836450656 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.831450382 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.831606935 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.836359481 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.831447632 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.833661049 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.832826581 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.832600012 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.83315707 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.864631823 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.841837833 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.451101017 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.836652877 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.835923098 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.831455181 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.483060429 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.839465597 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.833914535 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.839185621 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.834093079 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.832094088 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.840284183 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.854340496 seconds)
  done (took 166.437795213 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.838442755 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.949294602 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.850275852 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.865357749 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.843928793 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.833873249 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.860928366 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.852446645 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.842389929 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.834888548 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.835242428 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.895078911 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.84517906 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.934124366 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.864513835 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.868146267 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.936237117 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.840879593 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.835656027 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.833358249 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.865612796 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.829406177 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.897529997 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.956349443 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.849905347 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.950636257 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.838143424 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.841218339 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.839483139 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.952770044 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.848702721 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.896186573 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.860363014 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.855458681 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.957451629 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.949239306 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.937409751 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.862391906 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.843078018 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.839206905 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.836732955 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.828292015 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.953858777 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.852001127 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.838847203 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.944628633 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.852040635 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.841356521 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.848142995 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.836441312 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.85273204 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.854906741 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.90449092 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.965073283 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.867410054 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.861643969 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.862719614 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.113333741 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.84930752 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.936122908 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.828558889 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.957772873 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.854834268 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.8287767 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.839131328 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.845635551 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.866793139 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.869906496 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.942478871 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.845362833 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.93758028 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.870156332 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.844713482 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.839615851 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.841564853 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.951615794 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.953599902 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.871651161 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.873236389 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.869900196 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.834571157 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.839598149 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.828214256 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.856735846 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.84274036 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.953533917 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.952034538 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.845721393 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.842363332 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.843283787 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.839613705 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.865475149 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.958407969 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.87164445 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.933984853 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.903366039 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.908890022 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.853562106 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.853635728 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.840691598 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.903583929 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.852503907 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.85213561 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.161707241 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.911119604 seconds)
  done (took 199.075989051 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.318704643 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.890087737 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.896745984 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.157014279 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.259907496 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.683140666 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.884830516 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.891561652 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.913465345 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.080458642 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.956532276 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.910059487 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.875835434 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.862964918 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.887644735 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.910451532 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.896435066 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.200541993 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.020315524 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.972339458 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.865872594 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.201521004 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.206521533 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.280657858 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.922259817 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.227799887 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.55581455 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.133207984 seconds)
  done (took 60.633317894 seconds)
done (took 809.606217354 seconds)
SAVING RESULT...
DONE!
