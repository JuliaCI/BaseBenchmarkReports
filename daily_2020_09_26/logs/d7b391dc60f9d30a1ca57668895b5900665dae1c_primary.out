cset: moving following pidspec: 2615
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.731286815 seconds)
loading group "shootout"... done (took 1.167119932 seconds)
loading group "string"... done (took 0.438355006 seconds)
loading group "linalg"... done (took 8.106433059 seconds)
loading group "parallel"... done (took 0.165158526 seconds)
loading group "find"... done (took 1.366032062 seconds)
loading group "tuple"... done (took 1.998868548 seconds)
loading group "union"... done (took 12.939585004 seconds)
loading group "dates"... done (took 1.383958303 seconds)
loading group "micro"... done (took 0.210309809 seconds)
loading group "simd"... done (took 4.577795691 seconds)
loading group "io"... done (took 1.047614 seconds)
loading group "random"... done (took 9.087210365 seconds)
loading group "problem"... done (took 1.493596585 seconds)
loading group "array"... done (took 20.218702922 seconds)
loading group "misc"... done (took 1.532469674 seconds)
loading group "scalar"... done (took 41.091259493 seconds)
loading group "sort"... done (took 3.254726091 seconds)
loading group "sparse"... done (took 12.211736916 seconds)
loading group "collection"... done (took 17.471530456 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.517231694 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121531031 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.126342089 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118973767 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.205415018 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118669689 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12649064 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.0840516 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.814655852 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.135260156 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113725793 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.425836096 seconds)
done (took 5.249956637 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.168080216 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089784591 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081854878 seconds)
  done (took 1.27150049 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063710685 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.133720133 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065157755 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065348221 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065415007 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064611619 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06509539 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064544277 seconds)
  done (took 1.624583455 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.070484869 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066107354 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064404073 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066068848 seconds)
  done (took 1.372249232 seconds)
done (took 5.61772705 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.238559776 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.098755449 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.288911699 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.441121585 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.603849714 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.091499188 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.073762677 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.068683411 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.126116298 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.319457831 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101218083 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.178869456 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088233904 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.167018965 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.976567467 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.118697353 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084652117 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.121428859 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09371365 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13039071 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.390555267 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076045763 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.073992646 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.069075916 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.070294678 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.641385697 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661740018 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.120291379 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082378564 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.16003973 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.115118979 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.646987688 seconds)
  done (took 10.655449392 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09092696 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.087982394 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067175939 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12181739 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.090933851 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068482932 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07357739 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066163941 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086298693 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.121629977 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087385753 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.095974744 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065114212 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067521171 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.072383615 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.193522467 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.077871893 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079202049 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066671547 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079548345 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103465094 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076487102 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076241362 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076493728 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127030149 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.166890251 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095262702 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09705671 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.064474044 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083371696 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113528147 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123571421 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06489183 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.063988915 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117803418 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093932091 seconds)
  done (took 4.454823798 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.964538918 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.093484152 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.097980653 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.626187713 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064366428 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.150558658 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.23731413 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071541534 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.412414216 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.149125019 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.138414015 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.144790641 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.115194699 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067675886 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.237271043 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.115536317 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.513075525 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066168966 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.065286142 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.063672605 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.066279852 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065783733 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062230959 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06749253 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093582412 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.085785113 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.165074057 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.775414772 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.277824994 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066248036 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162468329 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.08074157 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.354557658 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.068713823 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079097394 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.42317924 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.11900472 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.062140715 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161392327 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.111810003 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.061784256 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.114454138 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.07481276 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.065820222 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.066035459 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.065089259 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067558234 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.074958107 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.097782968 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.064185348 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.062596639 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163699817 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.061932926 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063288693 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.063557899 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.146626325 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.061203676 seconds)
    (57/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.13244229 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.060643319 seconds)
    (59/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064829292 seconds)
    (60/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.097053593 seconds)
    (61/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064380618 seconds)
    (62/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.078188889 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.084212189 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.3263183 seconds)
    (65/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.046762685 seconds)
    (66/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.063110067 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.043561928 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076994476 seconds)
    (69/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.061502563 seconds)
    (70/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065510241 seconds)
    (71/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.0623021 seconds)
    (72/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.062988941 seconds)
    (73/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06285454 seconds)
    (74/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.06601906 seconds)
    (75/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065755994 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064092984 seconds)
    (77/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103112402 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.062481856 seconds)
    (79/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065017689 seconds)
    (80/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.06177438 seconds)
    (81/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.06676437 seconds)
    (82/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.092821805 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.060864191 seconds)
    (84/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.470715963 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.077670772 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.060829118 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.093236785 seconds)
    (88/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.060004362 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062048617 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.069709815 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.099611867 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062323604 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.066021005 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.063718158 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062488672 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061226465 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063173052 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06431425 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.090217375 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065242552 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.108246626 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.252658895 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069467738 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067571509 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.072843564 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.067443075 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070317119 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071274861 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068130063 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070762525 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069652141 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066134065 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.106961329 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067704137 seconds)
  done (took 21.431465639 seconds)
done (took 38.607925586 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.256758148 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079326867 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079282025 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079009558 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079628636 seconds)
  done (took 1.806259944 seconds)
done (took 3.041017845 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.111177677 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.064951364 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.10127232 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.100212009 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.06469722 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.064712665 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.098773472 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.064601736 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.098512942 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.099738643 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.10110736 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.100526261 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.063611425 seconds)
  done (took 2.362504019 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.070159069 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081567197 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082910296 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061324607 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071548342 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.082026233 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061917596 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081149939 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.086591664 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.082077743 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081372866 seconds)
  done (took 2.056995477 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.071921044 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081615564 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083407286 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061774715 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.073052545 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.082150615 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061588728 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081486676 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084146066 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081684635 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.083923609 seconds)
  done (took 2.053004726 seconds)
done (took 7.679826413 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.065514838 seconds)
  done (took 1.255521895 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.509669255 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.152546173 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.067246302 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.085170613 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191920556 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.091764996 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.198397064 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.070831156 seconds)
  done (took 7.732204689 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097195128 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069443813 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067173565 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067510111 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069240598 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.06844132 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070509135 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.066894604 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068111205 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067482987 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067412216 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068076159 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.068815396 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068582992 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.068580209 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.067228125 seconds)
  done (took 2.413568238 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099113063 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09801191 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07206103 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072240399 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070751049 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070479143 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.072393124 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071889484 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.068992017 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070589621 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.072216471 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.070938051 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070769441 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.061885868 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072242228 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072708426 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.06921701 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072050422 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073029189 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073804578 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.072159456 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.061685996 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070673994 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07131856 seconds)
  done (took 3.067892434 seconds)
done (took 15.675367888 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.178613493 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073265516 seconds)
  done (took 1.450973846 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.06730353 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068267424 seconds)
  done (took 1.350123161 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.072077358 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.060099196 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.077270712 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.069056382 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.060662384 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.060786592 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.076038385 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.060795191 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.061023191 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.0607079 seconds)
  done (took 1.87339767 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.063051887 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.068422068 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066066814 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.06792322 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.065841451 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.061675091 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.064074788 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.061851127 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.067891004 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061073587 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064870231 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080609104 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064741599 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082732768 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.064125087 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064682452 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.066390832 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064112798 seconds)
  done (took 2.41807179 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060579547 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.061216506 seconds)
  done (took 1.345397632 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064103014 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061662018 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063427856 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06316332 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.061182012 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060788942 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061551076 seconds)
  done (took 1.652119355 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.409923006 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121742271 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.336407435 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.068476608 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.075439737 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.251673062 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063432887 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.067661046 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.067764996 seconds)
  done (took 2.722766042 seconds)
done (took 14.038414934 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081164224 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.177538256 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.087614471 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.411147487 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090958412 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066493877 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113112974 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.166275721 seconds)
done (took 2.434408626 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.229155792 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.334042165 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.904490883 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.069403558 seconds)
  done (took 3.534318214 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.331942459 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.079192636 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078043568 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067171337 seconds)
  done (took 1.792248827 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065131477 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071183854 seconds)
  done (took 1.367734701 seconds)
done (took 8.161469529 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06366668 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.091947901 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063407787 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.063116051 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063527649 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.063502698 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063354349 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063620743 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.063598426 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.063295132 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063856413 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.063449931 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.062662508 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.063391213 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063235255 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063131304 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063446167 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063235991 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063340144 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063759719 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063613926 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063237678 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063178439 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063300574 seconds)
  done (took 2.810588383 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.078346314 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065703873 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.066363913 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066530343 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066523833 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.06609513 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.066018848 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065027132 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.066133654 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.064440167 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066766708 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.066514744 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.064720091 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.066372335 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064411614 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.066597871 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.065726311 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065003638 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064690239 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.066529284 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066046101 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065025558 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066255376 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066545205 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066193863 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06677335 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.065295858 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065207616 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066099766 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06686471 seconds)
  done (took 3.234554815 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.064216112 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059543947 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060067736 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068800354 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059482362 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.060343453 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060031706 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.058976767 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.059602608 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.060448845 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060199001 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.059615161 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060234484 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059242055 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059401654 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.059860517 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.064364139 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078349131 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060784347 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.05950781 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.064275596 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.059565569 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059236357 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.059554455 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.060394337 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.060348062 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.059253894 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.059692767 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.059383253 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.059987992 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.059524316 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063591676 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.064704758 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.06874477 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069339877 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.064309313 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.059490114 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.063653034 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.060828194 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059493928 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059345738 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059527752 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.060422846 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.059170794 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069887345 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.059399493 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.060492441 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.060126125 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.059514432 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.059065417 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.060009056 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.061051616 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.064818787 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060844953 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.059282485 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.060355843 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059315042 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060399772 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.059243431 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059773106 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.059593657 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063272126 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.060620538 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060261195 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078790841 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.06151373 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069928478 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06040629 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060325322 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.063466019 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.060128025 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076685881 seconds)
  done (took 5.701090241 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082651208 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085152032 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064326719 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064480108 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059875197 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.059665361 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067365849 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06005681 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064802666 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07996762 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.05986788 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064400579 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064967085 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064104173 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060010007 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064401923 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067347218 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060093513 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060171048 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064735239 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060062457 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067635203 seconds)
  done (took 2.707014891 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.137532113 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065425063 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104888474 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073635123 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06799092 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073355205 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065676112 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06541345 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065811674 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066140276 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066049504 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06562186 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067554658 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065606551 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065865367 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066133215 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06532439 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065709 seconds)
  done (took 2.565528004 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075958151 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066177684 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086218056 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065039816 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065550789 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064357803 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068666711 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.06913465 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.064817629 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06512556 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068414508 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064985444 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.064970391 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064877299 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064994938 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065088634 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.064556693 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064964284 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068359107 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068589223 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068435025 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068410693 seconds)
  done (took 2.740321361 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075862426 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064407767 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079073508 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066294663 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060212846 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060418317 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.064896913 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064687963 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.064975202 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064284517 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064196945 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059872154 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.065855604 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064719654 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066263905 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064407402 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063759074 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064341546 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06372353 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059464776 seconds)
  done (took 2.555450512 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085866688 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062326278 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062240983 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081222975 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062608351 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.062151896 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081861589 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.062146876 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063028315 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08329178 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062093584 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062157403 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081644023 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081653495 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.062357035 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081481666 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081184037 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082352096 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062026262 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062176935 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08400674 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.062126102 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082078975 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062505059 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062149982 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.062514639 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062253525 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081852905 seconds)
  done (took 3.242774883 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063746476 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063114562 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063457149 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062991547 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063235917 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063371909 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063562582 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063260134 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063266952 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063326863 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.062887561 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.062917246 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062674984 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.063015448 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062707091 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062818453 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063229284 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063573322 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063444057 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063955301 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062913962 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062556506 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062802146 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063263187 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063360683 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064197307 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064095928 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063505471 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06243753 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062859714 seconds)
  done (took 3.158511218 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.072818746 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07089252 seconds)
  done (took 1.406248403 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061579761 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076432364 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059060385 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071880486 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068244673 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063819555 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.0678411 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067593457 seconds)
  done (took 1.793776099 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.066063269 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.088503744 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.061731023 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.062302965 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.064563311 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.120902692 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.073691614 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072518192 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074658357 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064130251 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.061560157 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.0728769 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.063257251 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074088522 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062484355 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070170947 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068318934 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073271004 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073575335 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.059672212 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073455959 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061866608 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059666576 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061965992 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060750051 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067867146 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07630039 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073185087 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069245709 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.05914137 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.079447838 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.059929035 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060737796 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069806021 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063710721 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.059700962 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.096265274 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.060508421 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064789399 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059922087 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071853655 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080356969 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074009308 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.07804914 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.061649798 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.061783609 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059780864 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.062174782 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063790201 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06905168 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060389876 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067876352 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059914054 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.061342612 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070928965 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06055324 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.06497985 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069856476 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073474887 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070786086 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068858172 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075451165 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068982885 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.067712667 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.060834376 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079373469 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.062659115 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073157367 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075337679 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.061139307 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073212397 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060161012 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.05963287 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.059756581 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093043245 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.061859242 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.062627268 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.059939229 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060197947 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.061757986 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069563633 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065239767 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067336979 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063375037 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075699766 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06917184 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.059814579 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.066132911 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.077066551 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063677054 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06009981 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.076106762 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063535566 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.059370652 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077328698 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069601159 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.061616367 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.061133229 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063536341 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07308616 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.061158392 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058885333 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068516952 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.061535076 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.062531877 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.063940403 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067836516 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.060039749 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069895902 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064507507 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.06161315 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058891692 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064353867 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.060568533 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058484153 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069181092 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.059508751 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074250691 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066542898 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.074040031 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074192123 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.070093364 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074468896 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059124107 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.058029473 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.076113463 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067935797 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.060603579 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075926235 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.058622757 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069392109 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.191337613 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.062792032 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.071359347 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060920563 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063169755 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.061855986 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.065306283 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.062972713 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063040351 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066096982 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068984414 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072818533 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.061605245 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069578962 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061165552 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076312863 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070728767 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065284424 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064186102 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.061279683 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071768122 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067433865 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069656072 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060061872 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.061388817 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06056824 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071036345 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.0696662 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.062939423 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067466179 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065133092 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.060857668 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.061365024 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.061168763 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065183437 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065532223 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062408684 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069966487 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069196762 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.074524291 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067396531 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.0692985 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059391542 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.060115754 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.064267336 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060164166 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064613596 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069841508 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075220435 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072326936 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081502423 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.060044489 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069653362 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.061510291 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078467369 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073532939 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060880122 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064472587 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059327967 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061847965 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069399475 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071462984 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.073766949 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074972135 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065066993 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064671055 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060182134 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075001651 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.060319432 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068708982 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.069481097 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.064475025 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.06054841 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.061932409 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069493911 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065253629 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.060530422 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.075592921 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.066450133 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059794512 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074177645 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.060208641 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.0709817 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060587959 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063914947 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065432121 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06186384 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069738415 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075333803 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059182083 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06098045 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075676764 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.062473849 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061945775 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06958592 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.075314364 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065301303 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068790039 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070782923 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070595031 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064944041 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069686551 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.061094895 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.069318252 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.063277547 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071672658 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.060543914 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077841212 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059488791 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.074817065 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060337151 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.070546121 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060760295 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069062684 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.060752345 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.076086244 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.06128352 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.06054142 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071827913 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.058855469 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068685234 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059667269 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064736453 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066162412 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.068924879 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.061550599 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068951947 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.0611375 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067914331 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064022769 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067540104 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.068430628 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063703664 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.05868048 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067444336 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069651232 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066987481 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.198933674 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.063405547 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062537786 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071290245 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062836245 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062501883 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069054934 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065958331 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066568279 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062596519 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.062616584 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061582664 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069149578 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07014326 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078710409 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069184569 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067879884 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070587733 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06041963 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076124245 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.060147008 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068521315 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.059343383 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066023257 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069996039 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.060263219 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079636333 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.061751571 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068910731 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072466055 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068789313 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063903935 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078161221 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.063784645 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069023517 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068059667 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065175063 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06720538 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061638581 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06877217 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070372373 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071028104 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.061840972 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068481923 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069224852 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062279041 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.067506224 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.062234471 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068532179 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.062265079 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059325677 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065272603 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071362912 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065097407 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065466187 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.060765835 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059673102 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.060534888 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.066870324 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065021256 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068774176 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07550956 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059385087 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.061147659 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.059914266 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063893848 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078144797 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069790508 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068718232 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065404092 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062210347 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.061547395 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.061962072 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.060232579 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063476739 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059583993 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060177996 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070416591 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.061828006 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064662648 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060580274 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.061395361 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069585528 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.06517592 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.060586589 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06660324 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.060342429 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065650312 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059606018 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.061683221 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064903678 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059797269 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064192194 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.070774091 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.076557747 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066973947 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069156928 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061654917 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068025932 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075754488 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.066993628 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061204186 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069869155 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059545786 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.078536468 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069419266 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069741743 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07023484 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.061465829 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076571004 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065022417 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070123437 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075239244 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060868784 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.065925208 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.059312711 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074890617 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06451263 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.059311724 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067632666 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067841738 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065747608 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071099142 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.060297346 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067356252 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064510723 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.062924567 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.060698002 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.060229803 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068097105 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074514598 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.059643486 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.062972626 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06703006 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067465616 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063586136 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.212827463 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070203759 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063060402 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06320404 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065184903 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.061593214 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072494993 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061284063 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065257911 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064937475 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.060262931 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068262241 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076904818 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070023336 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070480294 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060192594 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.059592261 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.077431464 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064275832 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.063982578 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069083167 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069652681 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07341176 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070107815 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077232297 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.061070637 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066617917 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072833594 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.061134412 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.060577745 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064451175 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062237719 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06978792 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070200637 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068249744 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062154656 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067554974 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074257762 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.061938971 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065556476 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.065435235 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.060879231 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071093343 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068096748 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069445025 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.061933133 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060041185 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064065287 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068913503 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068080063 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069572536 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061218765 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.06622584 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.073409711 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06791593 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063265636 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060306056 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063283285 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068876609 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.064516621 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059701507 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064801484 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064252319 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067100049 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06949157 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064658086 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059893085 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076713249 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067919316 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.06948621 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.061766527 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.061787759 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060405854 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060164331 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071044226 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060059113 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.061703023 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065104422 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061724057 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.077192433 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068702018 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.07632612 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06131248 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06474199 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060154518 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069673603 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064887201 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.060498212 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070922365 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.059866187 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075182065 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.07190101 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.065317683 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059770872 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06555296 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068336102 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07684015 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069984089 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069115487 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.063811089 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069967456 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.06201483 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.07088144 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.060131865 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.059185828 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069996751 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068824326 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072951412 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059660275 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.070291466 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.061832882 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068080572 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067840134 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06217275 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061822777 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.061582126 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06875054 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065216917 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068757985 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067030529 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076482368 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.060496231 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070295283 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068332873 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.070084736 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073043728 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071479938 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.06703569 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.05993377 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066926906 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.067226584 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.060316607 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064383137 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.062083946 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079565304 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.060336488 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.198302385 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075276928 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.069504053 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.061101878 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.067108721 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065638392 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.070868117 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.062070329 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.070889519 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.064863936 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061325388 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065052387 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066031551 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059527952 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059950474 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060492625 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07067064 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065033354 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061519427 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078777621 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061875988 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069559656 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071714377 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06688244 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.062402336 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059366417 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06154079 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073529522 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076434445 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064421844 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06938247 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062374584 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069951299 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059909581 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069401845 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069124333 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069641405 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078139831 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060684423 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075287366 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07568355 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065875694 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070141639 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06925355 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061951806 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.081514051 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069433389 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061766617 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.07093666 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062738606 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.05936129 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.059585477 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.061507073 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071591004 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060089826 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062625711 seconds)
  done (took 41.498911295 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.097929931 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061408435 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060078017 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060091759 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070821371 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061275869 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060611565 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060755402 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061090699 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062619718 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059978604 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059934701 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07035256 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072896189 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070481173 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063415638 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060070496 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060773743 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060215221 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060583273 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069458985 seconds)
  done (took 2.731034013 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.066190783 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075280823 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070760284 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076209399 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068241261 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064331622 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070897335 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063850792 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07112167 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069122468 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071208887 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063805553 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069022802 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072770713 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069281444 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064344127 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.0714556 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068551822 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.064409506 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07043576 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064213054 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070842806 seconds)
  done (took 2.864111866 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.061907932 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.060591333 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068466362 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.059524063 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.059703227 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.063676806 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.059464088 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.06410541 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.064321622 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.064286335 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069011922 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.060519288 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.059271702 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.06542499 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.0597197 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.060846278 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.101207539 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.060924665 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.060516118 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.059414467 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.062141011 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068727318 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059647133 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059566879 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066526688 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062811954 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059377915 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.062184831 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.060651244 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063749746 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.060369143 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058843353 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06830827 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067598427 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063933777 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064108077 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.06156236 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.060110922 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059640186 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059210298 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067991644 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060811478 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.059700192 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.060953082 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068539853 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059810795 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.059038757 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068485962 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059523722 seconds)
  done (took 4.444405861 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.069470919 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110853968 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065493474 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091627177 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.072344659 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.065200859 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065091667 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092470863 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060784473 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061458028 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.072736314 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07305525 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062515711 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.063619337 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.066354958 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062204248 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062782584 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061735609 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06477479 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062086727 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065136711 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.066179465 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.071470271 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.072307551 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063802122 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061293454 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062221815 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.063571589 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.071997978 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.065613513 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.06416099 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064203133 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.072167492 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06740114 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061906988 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.061793939 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.072810202 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062372592 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06206819 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061202722 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.062145726 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.063593751 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066331871 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.072893099 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062183499 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066984351 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06212392 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060709718 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.072641274 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.061902449 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.066151264 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.074493383 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063327835 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062459526 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06358597 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.072291135 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062319092 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061316437 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06301739 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.072148502 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06084257 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063036974 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.072759785 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061663673 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.065391904 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.073217586 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067034283 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06365334 seconds)
  done (took 6.025256889 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069309324 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09437153 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070964503 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070810889 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069866213 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070559452 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070405266 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070227104 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070022967 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070314152 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070159162 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108335047 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066573195 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074184633 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070401378 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069896648 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070175545 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069951812 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069820128 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069619599 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069994502 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070376149 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070472549 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070532466 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072636494 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06667768 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069555657 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.06971093 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07061198 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07001072 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.072360004 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070089448 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069903546 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070322519 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.072617176 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069865275 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060579675 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069903973 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070234344 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07039182 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066734116 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070791741 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069976205 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066668255 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069825496 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069765997 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070501747 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.072765899 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076392895 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070704153 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070210026 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070586929 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069980893 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070267669 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070646649 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.076427171 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070487243 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070628908 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07032519 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070652184 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07069032 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.076358714 seconds)
  done (took 5.806253768 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073849851 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066788282 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078855059 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06029121 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059583983 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069604893 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060041461 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060073029 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068384166 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.06616273 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068009174 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068711525 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070481276 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067999597 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068983078 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071155983 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068720959 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068835911 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066088499 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068581844 seconds)
  done (took 2.728026784 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074519357 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.078874951 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065669616 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068961234 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.065087474 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068674767 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06430206 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065463332 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065999902 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065798711 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072285309 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069822945 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06579871 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068749442 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.0693188 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068390145 seconds)
  done (took 2.463384202 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.06702828 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066602633 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.066797522 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.061593369 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064903501 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.060321755 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060876455 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.059741743 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060232756 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.074103731 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.061061069 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072728277 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061263806 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.060127453 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.060444614 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.0662369 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.060097644 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060729015 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.061099845 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065463903 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.067185034 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061455812 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064880994 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060723711 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065730084 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.06710827 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061889761 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064548368 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060442414 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060893692 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06600712 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067022626 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.060477798 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061220927 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.060132528 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.060530989 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060734726 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.061082752 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065884077 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060769602 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.059466567 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065235345 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060629933 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.061085851 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060296502 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.061303794 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059548928 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065963594 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.061344094 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06674155 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.061358757 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.064078523 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063390567 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.067882793 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062835879 seconds)
  done (took 4.837217675 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076510657 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065507981 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059411939 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.05949491 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065055243 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.065304177 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065426464 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065299954 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065651029 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059718591 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065417634 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.064988474 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065656712 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064983906 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065495634 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065201803 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.05938658 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065234354 seconds)
  done (took 2.543717632 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071162176 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064993401 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070090996 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064355421 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.0642904 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063784153 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.05959113 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.059815963 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059796711 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064816943 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06451826 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064063272 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059951997 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064214796 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064297858 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064325826 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.064251866 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060125248 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064449307 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059816672 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064063614 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059954701 seconds)
  done (took 2.768335599 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.086972432 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083191701 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.125224928 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079079454 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086952858 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070733084 seconds)
  done (took 1.905110419 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092623452 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102457206 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065143988 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065181216 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073083118 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067335181 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067394416 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067636923 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072542968 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071055219 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067543869 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072476522 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07276121 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069306945 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072847328 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074694006 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06782681 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067704767 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064465698 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075035052 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067547757 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072607623 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067699465 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067886319 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067863438 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069407598 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074898902 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071392626 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06778593 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072778166 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074838066 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067579044 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072928532 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073834194 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065185487 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072833122 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067735504 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07501076 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072603013 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069570718 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065192606 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072874328 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073250833 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069088358 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074961135 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068058397 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069696522 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068731401 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069910995 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079273342 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075191673 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071172309 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074897621 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077576681 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077672523 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07945539 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072627016 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069687629 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072978107 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071733378 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069605669 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073341043 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073565326 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071443672 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075075577 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069247125 seconds)
  done (took 6.126240545 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098000767 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065584014 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067785832 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07135159 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069463064 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067999161 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067781156 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067674945 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06810746 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065008056 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102499198 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068008305 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069671736 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068995343 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068205361 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067486335 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067917829 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069374859 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065396109 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077243628 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06761114 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069524742 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070001352 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069651098 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071201073 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074970726 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067572057 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067386156 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06778877 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067815237 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069390155 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067717008 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069417183 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064797446 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069048474 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067623512 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06736737 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069220006 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067581587 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073020105 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069511197 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075338297 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067710394 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067949658 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071272866 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067408912 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067644789 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064947887 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067677059 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065496257 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070958467 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071922135 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071458558 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069308353 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067824945 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068216761 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067706068 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06780325 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068129201 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075280312 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069096734 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067680512 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07692306 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067841239 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06808645 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069431165 seconds)
  done (took 6.015215612 seconds)
done (took 125.908735719 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209595889 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.181254501 seconds)
  done (took 1.753088024 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073174463 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095545221 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.073956685 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132702285 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070999638 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104672311 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102962918 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.073800809 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070196853 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070406737 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070450293 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073172034 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135330228 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070505735 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070253395 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073203532 seconds)
  done (took 2.740455171 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105161057 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.180161396 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112047286 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06910176 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105702157 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074837436 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068953174 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079500719 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072061014 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070677792 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07477128 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073526021 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070403199 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07374259 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071797135 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075055383 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070360483 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074629973 seconds)
  done (took 2.905680948 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.095896336 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.085155247 seconds)
  done (took 1.566243225 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156833756 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105705753 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.143036133 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.319931922 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.127170352 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.12541107 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129816816 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.125433874 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11162265 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.121187519 seconds)
  done (took 2.845982327 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104806733 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173651021 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.310157642 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118730267 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074754906 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095834618 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120565561 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080527046 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078025463 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077473488 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077545963 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075122975 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100299453 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074671978 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073481271 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077339203 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102571231 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072994571 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073754716 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074362391 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104089472 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069216286 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074431002 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072800978 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075732876 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076346955 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070532116 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.0693655 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074405124 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073459835 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075801661 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093354335 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076178936 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.096176892 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073653411 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.097093158 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.073079871 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072607294 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073754944 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072601145 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074666546 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075036125 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078407654 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075067142 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070530681 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.073349247 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071250234 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069269182 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076735871 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069297878 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07630266 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075656294 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.095425695 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070116199 seconds)
  done (took 6.050558685 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10595982 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104159409 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068686027 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110932491 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103112822 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06873733 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102364093 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098343283 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.106196411 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068204159 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06819352 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067627549 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074001637 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.07702266 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113515151 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106297616 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069923902 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068057913 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105685656 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105310783 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06757474 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100319388 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098470656 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10460009 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067235375 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068427606 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066864745 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067735343 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072420201 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.073525399 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067694571 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073994006 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.078823732 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073217147 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066855726 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067107834 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06753176 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.073658123 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074489183 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074282016 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.072858465 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066597075 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067335891 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067578397 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068104088 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066795498 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07322494 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.073699091 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.073046323 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067547889 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067719587 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067087905 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067821545 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073318255 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07277265 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.074233016 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073691521 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06721026 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067544132 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068703839 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074812975 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074847716 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074086177 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068203691 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075438659 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067556212 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076035243 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079152914 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067542541 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06856932 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069520651 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068608858 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06954057 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074979233 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.073221199 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06752859 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06749975 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067250109 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074792902 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073620008 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066983486 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072321223 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066375887 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066688233 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067304663 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068088104 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.072193939 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.074145497 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068748396 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067023125 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066864329 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067869742 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066384495 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.072157509 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073524024 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.073942467 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.073009776 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067122545 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.073267092 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07300586 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067590817 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.072628659 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067375083 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067337543 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067416547 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072827354 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.072248018 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.073721271 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066669701 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065600944 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07151446 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07396641 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065925552 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.071330099 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07367297 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.204809134 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068246088 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077006234 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068428805 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07575516 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068589355 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075521853 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070377741 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073460435 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06776464 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066944485 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068269519 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.074346666 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068253956 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068277054 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067921258 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068085437 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07398069 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077081496 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068797729 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07376599 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.073747276 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068491216 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073374837 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06781266 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074798443 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068250517 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068429018 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067031622 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076362257 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067609463 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067610238 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067863505 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075626185 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067729002 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075755805 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.072738912 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066598097 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077628518 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07574252 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073424289 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076342867 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068724235 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067469747 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067256085 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067711198 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072947886 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074206199 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067873499 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068186083 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073008809 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.075221074 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067212332 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073343757 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.072827814 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.073406798 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067491292 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067224832 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076309167 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075204838 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.073913931 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.072987427 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073505761 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067416475 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072686932 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073482088 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067187104 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078964466 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067399881 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.077367215 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07315076 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072480184 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073530803 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.074745238 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075414763 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.075581306 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.077533941 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06712539 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067763274 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.073685559 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067243996 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067391061 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07292286 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068457681 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067851681 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078114167 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067527071 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075618331 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067266636 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.073837428 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067241854 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068244232 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077778428 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067623847 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067885993 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073006126 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06762832 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073115586 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075392104 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.073044328 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067005036 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067691312 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073131405 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.073885889 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067282806 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067676834 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067999591 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.072550013 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07233498 seconds)
  done (took 17.90340613 seconds)
done (took 37.166742734 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.217366906 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.164088166 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199176688 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.113459989 seconds)
  done (took 2.18503049 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.089818052 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097632009 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.073972361 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064697298 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.07857183 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064346195 seconds)
  done (took 1.898971715 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.247896536 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.183919491 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169703974 seconds)
  done (took 2.025818514 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.21218817 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189427519 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.489890086 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.301447543 seconds)
  done (took 2.717563234 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.126282192 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.075945734 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.062591735 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.072660515 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.100603355 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.129366923 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.082909484 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.104331306 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073717783 seconds)
  done (took 2.314393826 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.128182351 seconds)
done (took 12.718647039 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.105320114 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.125442095 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.10340909 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07179309 seconds)
    (5/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.225685595 seconds)
    (6/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.176289331 seconds)
    (7/309) benchmarking ("sort", Float64, false)...
    done (took 0.136612048 seconds)
    (8/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.100388855 seconds)
    (9/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.064874907 seconds)
    (10/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.07873128 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074981855 seconds)
    (12/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.122218794 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.161640431 seconds)
    (14/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.180243102 seconds)
    (15/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07644112 seconds)
    (16/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.197153351 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091760874 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.073262493 seconds)
    (19/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.197490035 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072511192 seconds)
    (21/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.29311501 seconds)
    (22/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.196668119 seconds)
    (23/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074908353 seconds)
    (24/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074374355 seconds)
    (25/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.185126521 seconds)
    (26/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076821143 seconds)
    (27/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.173136604 seconds)
    (28/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072909957 seconds)
    (29/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.177409677 seconds)
    (30/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.063529685 seconds)
    (31/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.233411627 seconds)
    (32/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.063519723 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08839656 seconds)
    (34/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.232846994 seconds)
    (35/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.093669047 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.080668482 seconds)
    (37/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.077044639 seconds)
    (38/309) benchmarking ("sort", Bool, false)...
    done (took 0.147189283 seconds)
    (39/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.06472443 seconds)
    (40/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.09205237 seconds)
    (41/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.211200858 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.064765928 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.128895318 seconds)
    (44/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069329934 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.063615368 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.207343228 seconds)
    (47/309) benchmarking ("sort", Int64, false)...
    done (took 0.065868377 seconds)
    (48/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073231047 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.081016868 seconds)
    (50/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063545286 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087408331 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177996937 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.223456167 seconds)
    (54/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063949483 seconds)
    (55/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07341423 seconds)
    (56/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087097779 seconds)
    (57/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.200155729 seconds)
    (58/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.138604764 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062805358 seconds)
    (60/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.173019859 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093886194 seconds)
    (62/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073686607 seconds)
    (63/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.1682777 seconds)
    (64/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.197118082 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085370405 seconds)
    (66/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.071605691 seconds)
    (67/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.075255874 seconds)
    (68/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067029012 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.090658226 seconds)
    (70/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064285918 seconds)
    (71/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.064510307 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131722084 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065159064 seconds)
    (74/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.174302887 seconds)
    (75/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.173050993 seconds)
    (76/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.07600432 seconds)
    (77/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.206921204 seconds)
    (78/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072663213 seconds)
    (79/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.195963982 seconds)
    (80/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.155593754 seconds)
    (81/309) benchmarking ("sort", Float32, false)...
    done (took 0.135213765 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.082311994 seconds)
    (83/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.063443906 seconds)
    (84/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090486247 seconds)
    (85/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.134097108 seconds)
    (86/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.31362233 seconds)
    (87/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.161140464 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091520406 seconds)
    (89/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.064425905 seconds)
    (90/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.065555275 seconds)
    (91/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075672296 seconds)
    (92/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.158902563 seconds)
    (93/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07210342 seconds)
    (94/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070219215 seconds)
    (95/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.18241394 seconds)
    (96/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.159332017 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086475399 seconds)
    (98/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071670181 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.064158458 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173870661 seconds)
    (101/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067831854 seconds)
    (102/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074243174 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.089007393 seconds)
    (104/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.164596565 seconds)
    (105/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.075897334 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.15155206 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.081915435 seconds)
    (108/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072991492 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086284703 seconds)
    (110/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.143787894 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121387368 seconds)
    (112/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.196118954 seconds)
    (113/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.158323458 seconds)
    (114/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065638292 seconds)
    (115/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.195771228 seconds)
    (116/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.064949269 seconds)
    (117/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.064523475 seconds)
    (118/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070211545 seconds)
    (119/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065096912 seconds)
    (120/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074257579 seconds)
    (121/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06663691 seconds)
    (122/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073681457 seconds)
    (123/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.134730185 seconds)
    (124/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.222933897 seconds)
    (125/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075206838 seconds)
    (126/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071822777 seconds)
    (127/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.066807043 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.080694598 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.083029833 seconds)
    (130/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07514467 seconds)
    (131/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.186715759 seconds)
    (132/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.063138718 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064269239 seconds)
    (134/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.157842261 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074921752 seconds)
    (136/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072149548 seconds)
    (137/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06438907 seconds)
    (138/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.156702191 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094601856 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084571429 seconds)
    (141/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.065388007 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064454122 seconds)
    (143/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072084968 seconds)
    (144/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.21371368 seconds)
    (145/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071599536 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064353721 seconds)
    (147/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.225591591 seconds)
    (148/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.063521673 seconds)
    (149/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.139133675 seconds)
    (150/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071524691 seconds)
    (151/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064101614 seconds)
    (152/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.063048409 seconds)
    (153/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.19681156 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.079914594 seconds)
    (155/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06463233 seconds)
    (156/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.187613917 seconds)
    (157/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.071735015 seconds)
    (158/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.078680871 seconds)
    (159/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.063038289 seconds)
    (160/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168565376 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08505333 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.147223182 seconds)
    (163/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065845987 seconds)
    (164/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.065635925 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147950004 seconds)
    (166/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064925694 seconds)
    (167/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.063456444 seconds)
    (168/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.062876904 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086382974 seconds)
    (170/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.064140841 seconds)
    (171/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.063111066 seconds)
    (172/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088601895 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064070729 seconds)
    (174/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064771859 seconds)
    (175/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.063985143 seconds)
    (176/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.063356417 seconds)
    (177/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.064334284 seconds)
    (178/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.064621741 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.08467269 seconds)
    (180/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.127316124 seconds)
    (181/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.212254674 seconds)
    (182/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.134687494 seconds)
    (183/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.165466298 seconds)
    (184/309) benchmarking ("sort", Int8, false)...
    done (took 0.163765318 seconds)
    (185/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.064469366 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091285604 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.140370417 seconds)
    (188/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071723177 seconds)
    (189/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072733384 seconds)
    (190/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.064657704 seconds)
    (191/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.070518461 seconds)
    (192/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.063119362 seconds)
    (193/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.180886142 seconds)
    (194/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.222062888 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066725001 seconds)
    (196/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073761774 seconds)
    (197/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074336212 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122741132 seconds)
    (199/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073800852 seconds)
    (200/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.065971098 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066720226 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.121863863 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.076395395 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.121481741 seconds)
    (205/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065568215 seconds)
    (206/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.139950644 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.152767789 seconds)
    (208/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064954206 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065891523 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072335996 seconds)
    (211/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.065149716 seconds)
    (212/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073956788 seconds)
    (213/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064918233 seconds)
    (214/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.065606007 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064693778 seconds)
    (216/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.076762416 seconds)
    (217/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076521326 seconds)
    (218/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.064470413 seconds)
    (219/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063720792 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075139366 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076416424 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.146825971 seconds)
    (223/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067423903 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.139744529 seconds)
    (225/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.063625073 seconds)
    (226/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065288581 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064618178 seconds)
    (228/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.065065916 seconds)
    (229/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.063991973 seconds)
    (230/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065745781 seconds)
    (231/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071907677 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.0720685 seconds)
    (233/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.141274025 seconds)
    (234/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.064604052 seconds)
    (235/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.077133733 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130484736 seconds)
    (237/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.073095418 seconds)
    (238/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.06562416 seconds)
    (239/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.064343041 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.146131698 seconds)
    (241/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.064904143 seconds)
    (242/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072942235 seconds)
    (243/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071198196 seconds)
    (244/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.069057224 seconds)
    (245/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.065226407 seconds)
    (246/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071606584 seconds)
    (247/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064539118 seconds)
    (248/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065012439 seconds)
    (249/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.071418382 seconds)
    (250/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071342339 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.109854837 seconds)
    (252/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.063796136 seconds)
    (253/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.063922632 seconds)
    (254/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.063382961 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064446199 seconds)
    (256/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.06386428 seconds)
    (257/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072148348 seconds)
    (258/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.075311101 seconds)
    (259/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077225421 seconds)
    (260/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.063523725 seconds)
    (261/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.063782984 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066323249 seconds)
    (263/309) benchmarking ("sort", BigInt, false)...
    done (took 0.258772971 seconds)
    (264/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.064111404 seconds)
    (265/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.063763649 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089550158 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089573751 seconds)
    (268/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.065282922 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071545972 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064344541 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065983034 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.066266087 seconds)
    (273/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081066709 seconds)
    (274/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.063163539 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064277458 seconds)
    (276/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066983494 seconds)
    (277/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.063382189 seconds)
    (278/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090891605 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170417046 seconds)
    (280/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.066208575 seconds)
    (281/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.063156868 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150025548 seconds)
    (283/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.063501159 seconds)
    (284/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.066039228 seconds)
    (285/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.064561308 seconds)
    (286/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064182276 seconds)
    (287/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.06382935 seconds)
    (288/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.063260748 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113209353 seconds)
    (290/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.065007398 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148066834 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075611209 seconds)
    (293/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.071677237 seconds)
    (294/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.064655438 seconds)
    (295/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.064412065 seconds)
    (296/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.068690335 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.070989229 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.084493949 seconds)
    (299/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.063175168 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121788864 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.150036756 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.144513753 seconds)
    (303/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.062724053 seconds)
    (304/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073510837 seconds)
    (305/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066486585 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.063603063 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063881802 seconds)
    (308/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.063023301 seconds)
    (309/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.077662453 seconds)
  done (took 32.73942161 seconds)
done (took 34.184365038 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085320182 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089305382 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072436425 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.083724569 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079565838 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098204628 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072851684 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077149625 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079742413 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078080042 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077506854 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071083353 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073994769 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073952001 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.071722449 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086929821 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079736046 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073090548 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072710076 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063489427 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072822876 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064398204 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.063783048 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071057148 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076543621 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070958807 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073653333 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073638983 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064847861 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064935225 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069768102 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.0735707 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064002971 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076366835 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072848571 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072908282 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076199432 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077241694 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.063803605 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065109524 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.0756773 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064777147 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072945009 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.070984967 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.0699059 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072086025 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073154396 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076389936 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086615393 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069169042 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075482924 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076045697 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076046673 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070547082 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069997804 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072821589 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071498254 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086290083 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073490479 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06882992 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075295728 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074232494 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071814222 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07287985 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072726665 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075662937 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075790155 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071963145 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075214107 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07257059 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.063883851 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073570678 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069524525 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064598024 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076388404 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078481243 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063779288 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.068862422 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07241244 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073079832 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063896578 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068746386 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063528351 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069924318 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068876062 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071260563 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070267898 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072134632 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063267763 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072935349 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071831648 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072173276 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.063377119 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075829996 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063534446 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07121911 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064721552 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064595939 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.063442281 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070143992 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064243435 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068815632 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073236681 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.063326061 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069367099 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077573805 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064435585 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071973688 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063553591 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063741136 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.074863119 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078031763 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064506591 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068611681 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06306173 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.069873563 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063349652 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064121393 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064165275 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064307599 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.06887456 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064635448 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068633965 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070110419 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076239171 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064199365 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069376199 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068812299 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064370927 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071367439 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065268219 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064552518 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.062968809 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077402602 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068661364 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064438256 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070442879 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068239164 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07234183 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.062481396 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072487498 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.06955811 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.067940481 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069957523 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062052067 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07504116 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067522897 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067670475 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.201977157 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065643115 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064548195 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065105213 seconds)
done (took 12.503162027 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065562706 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.10255216 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.071542012 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.079898608 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.076523078 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065506137 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.067761877 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.080139072 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067799865 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.083169597 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089116413 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085607814 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.090780456 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06393952 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064907746 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.066112063 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06335535 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.072107735 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.079037074 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087469657 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.09241206 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064807283 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.07316085 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.080787697 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.075562153 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.080530589 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066056899 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.065686235 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.067503418 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.081830665 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090077401 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.064879812 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066532818 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.077848698 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.07851238 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.071114861 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065418532 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068708788 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065974996 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06491783 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066486289 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.079169996 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068477096 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.068650737 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.065967412 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.065978452 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065363149 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.069624347 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.077315715 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.068191953 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.072240346 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.076085963 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066503778 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065163154 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063123414 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.068428338 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066366657 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065347924 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065245567 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06445225 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065139599 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067588479 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.065841698 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.06542051 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.067941121 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067109634 seconds)
  done (took 6.251972751 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082390789 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092622219 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081234163 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08193698 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064798099 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065665784 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065580437 seconds)
  done (took 2.076904447 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065608786 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.076889362 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079872349 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079976825 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.073011475 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08221919 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065712489 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095428447 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064503493 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.077276875 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.109303253 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080983382 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067959423 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076842201 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065770197 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.071985873 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065276588 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074139772 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072577889 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080716471 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069281101 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094062053 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079260205 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065741321 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.084357605 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.068726201 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.064669254 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065604076 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066165309 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066992725 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066108592 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103363397 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068433111 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079568071 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0664289 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.065050674 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070690961 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068347343 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067482818 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071252032 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069987774 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065914171 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.063657048 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066920921 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067485339 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.068695054 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064054711 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06626793 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.066058089 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.075866727 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064178524 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068619984 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068394889 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070029699 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071621476 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069480281 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074747658 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06696868 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.075902516 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.07293689 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066630731 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073148761 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.0728676 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103151323 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072570074 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.069756576 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.068701339 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.069401323 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065656858 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.067368515 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066926689 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072436842 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.064535123 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.067794427 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068637669 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067118808 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.068539278 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.081248641 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.080851889 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078622184 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067417899 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066528769 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068994839 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.081436217 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069630124 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06609902 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068670057 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064658193 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070074762 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06637474 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071805642 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.066530154 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.073695088 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.067475987 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06937478 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072935071 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065020927 seconds)
  done (took 8.507001312 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06765325 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066624517 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067300648 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066034516 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066291959 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066389577 seconds)
  done (took 1.973310032 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.086620202 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065719619 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080593555 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.066257419 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.100355756 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.071898984 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.071910084 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072555356 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.078314362 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078316661 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.071840688 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.074359618 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.071573775 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.067154821 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.070980459 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066557026 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.071332041 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068578511 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07769569 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0670598 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.077640839 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.06725356 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066752554 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.076519632 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.068044276 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.066010746 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066150329 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077868095 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077250896 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.072740939 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.06707674 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.068095627 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073658511 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.074585153 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.071450431 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073169685 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065525529 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070909219 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067666473 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.067900392 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.073276879 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067016851 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.067455061 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.071037666 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.072901771 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073633359 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070963259 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.06975575 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.071128789 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070416998 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071075179 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.065698357 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.067909205 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070944531 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073435027 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072810632 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070482568 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.071888089 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067528078 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073415041 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065915499 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.068078236 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072143128 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.067999055 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07000046 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.070706481 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073884137 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.067184881 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067280459 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065493326 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070860891 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065258924 seconds)
  done (took 6.674816731 seconds)
done (took 27.013708382 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539986105 seconds)
  done (took 2.06070161 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.566317381 seconds)
  done (took 2.126421733 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.16112456 seconds)
  done (took 8.71741577 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.283849274 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.308868047 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.72020123 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.12888387 seconds)
  done (took 3.027551805 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.743496585 seconds)
  done (took 2.306456769 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.230312779 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222724057 seconds)
  done (took 2.027420341 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.338456094 seconds)
  done (took 1.895360175 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.112352404 seconds)
  done (took 2.664198379 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.218105381 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159021673 seconds)
  done (took 1.941958663 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.482009761 seconds)
  done (took 2.039643208 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.106316331 seconds)
  done (took 5.669551356 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.227624394 seconds)
  done (took 1.825037547 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.232553149 seconds)
  done (took 1.797203821 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.763221096 seconds)
  done (took 3.322374606 seconds)
done (took 42.987531679 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081373108 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084393749 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083530165 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079437278 seconds)
  done (took 1.866518544 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.071655588 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.067819615 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071275879 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071349058 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069491247 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070841752 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.070686263 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.067523634 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069320587 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.067860115 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.066906208 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067879965 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070737689 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067753288 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.06988933 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.071879274 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.068254981 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.067556641 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070386121 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067415116 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.07028796 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.067531766 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.067099696 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.067737105 seconds)
  done (took 3.218756423 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076317848 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070800743 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073751452 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069262822 seconds)
  done (took 1.858070517 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.074571859 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.081483028 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.082677203 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.087447402 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074487284 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074029618 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.080134421 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.081488902 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.063924694 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.083110473 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.066132426 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.064594817 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.064920373 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.082560035 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.080443593 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.061061468 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.061879748 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074483402 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.073562728 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.075710562 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.066646529 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063803068 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.074414981 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.073591346 seconds)
  done (took 3.335142386 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076858645 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.063760054 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.075857057 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088153197 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090600795 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064016255 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.076436806 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090837548 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.120391385 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.063753631 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069832925 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.063620519 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.101719357 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063828498 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078105287 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104155215 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107253067 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067778141 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095783491 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.063957296 seconds)
  done (took 3.203495483 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074289718 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068143409 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.068848755 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064315698 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075398681 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071627078 seconds)
  done (took 2.001810509 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066804163 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066331205 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066060139 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066107687 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070143863 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066022902 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064433623 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06612785 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066233668 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065858714 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064918702 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064197933 seconds)
  done (took 2.366244394 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.162307704 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067038937 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068331748 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064453813 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069644193 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064713438 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079544283 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068824461 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.082048595 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065604932 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065129629 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066977541 seconds)
  done (took 2.498176456 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.095648543 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.097857472 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.14152962 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112760457 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090815814 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.091521743 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.154340918 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.132145588 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113213548 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.06733835 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084217004 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097471398 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096400525 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.129771713 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109125228 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070781852 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.109070292 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078302205 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11090945 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119700459 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112075435 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.118402053 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.090515975 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095485249 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103689028 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114816095 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.069781442 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.06871199 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145640254 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.097519306 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.089957276 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.096855528 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106108094 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.067433729 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.084852042 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.103730703 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082366701 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113027666 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085994482 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095960674 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078262034 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.128299056 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10286344 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100598454 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128043981 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090927651 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107849951 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.103734332 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08035264 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.116521807 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095723904 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088761212 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077929898 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.155226594 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086782614 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.107859163 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109117719 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.07959307 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.085767089 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097872241 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.125216815 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.102340833 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110156735 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.25213485 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.089831771 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090033991 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.127971699 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083502352 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.097460401 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126747498 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.090261496 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074149516 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.094539884 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068352664 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.0939857 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103951366 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089706807 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10909499 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075547961 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125061165 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.107176494 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071367917 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.114348835 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096812843 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.151899479 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092233658 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.097647502 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089136612 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.146110102 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083438742 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078509985 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095720069 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125327032 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091607209 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093377919 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12548807 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094437763 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085035523 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073317072 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.087276181 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09830173 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104661579 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099277966 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086892837 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084810776 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093664513 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.073312006 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079289454 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.09862586 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08267897 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.121642183 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10621443 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.120466607 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076789682 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102489732 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.094138043 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126013555 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.115028427 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.081866166 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105502776 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137282227 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.110839776 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082797822 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.097762224 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108458161 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105260827 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093463807 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.133907138 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113147923 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086714776 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.091193506 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.240692923 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.111157788 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152115397 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088288183 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.102168919 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.135057355 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.11107027 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089109313 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081892585 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.093582071 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103217388 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.137924465 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.093842085 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.068916713 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090305367 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128202763 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074848675 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097524822 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.09053438 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.081796704 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079503862 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.06713949 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099094359 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132699254 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.111038875 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095964134 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.103391081 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067710353 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096474246 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101854176 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138984722 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113656092 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095739113 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.096410415 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10186055 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.077685416 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.130171198 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.130196235 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088986864 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088388822 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120016264 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.093563147 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.10207888 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111402662 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101306904 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.099472748 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.138922493 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118392776 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.121264702 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102856593 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121346511 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080568056 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113778247 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.073199098 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101376664 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.075364842 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103829287 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.077426139 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.108481013 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.077155444 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.096325365 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.067246047 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.071463262 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.106400792 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.238949871 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084976996 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.131780464 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.128504237 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.080265745 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099916808 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.098006795 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099458341 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.106498521 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.088053413 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089048138 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.076639794 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.078520902 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096301858 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091254008 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104894128 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076796143 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073788801 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134904504 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100949501 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088356845 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09271707 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.117417308 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.087225221 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086097152 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101261044 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.136131141 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.115306518 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078470883 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.089135495 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.068693589 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.082852893 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.073697517 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10650976 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.07319682 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108378355 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067647882 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.127798862 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084534082 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.099622094 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095084381 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125742148 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.088610179 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125554518 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084874011 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105002844 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091748566 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.093946519 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.10699959 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.094107078 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102327511 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108430061 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090898109 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087664658 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117848907 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103503575 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114552024 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103488433 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.132570549 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109597652 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073650418 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101962867 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097791 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142482398 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09741374 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087456859 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093057763 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100337383 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078797339 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.288911245 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085264763 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.085162628 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110664764 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.087619357 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095430971 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074721363 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.098656609 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09216425 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110741129 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.098010952 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.091650766 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107159062 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108195122 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084642212 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084861723 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121651477 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.125355937 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.099366034 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091691112 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086015359 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095641242 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092510505 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.10642625 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078686379 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.074296688 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.066812584 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.070625927 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.116102008 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105838099 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095723042 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095896074 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.10032217 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070627121 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08572343 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087830531 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.081371812 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088034304 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.112411521 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101556126 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.125672719 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.098972156 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084097209 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.13816938 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.124769202 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083171265 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089986856 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098586394 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.072954978 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144289415 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11670709 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.076308905 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.082964887 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.075732238 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082174987 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070798348 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10164706 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101464685 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073874714 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100339441 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095932195 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.121160091 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094829558 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074882958 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.077928618 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073240052 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.073759252 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.100051571 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.076007351 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075286119 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128090064 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100716245 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104085433 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080818055 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072379538 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125344755 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.066367499 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125901562 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078645785 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105695262 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.077546681 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076140085 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085430801 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100807852 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100593274 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106817362 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.067810242 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098203588 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147998189 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072727711 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072407382 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.071377998 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104787288 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082825686 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134302856 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084977898 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087768904 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07350172 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121500739 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098016275 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079307205 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121803704 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.076336595 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.067973883 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.082245556 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.106183184 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.069833767 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.072082084 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109025321 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.504099882 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086832303 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.073255123 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084084548 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116385552 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07961004 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100267509 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.109626285 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099243003 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.179748678 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070794585 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084278078 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.096124813 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.091491171 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085725872 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076302606 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.080903673 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082435931 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.080252909 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099211988 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.075115615 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.085660029 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.075437532 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.095988164 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.119863909 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.078623766 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.09793681 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08157474 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084292423 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091287065 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103671977 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.099368303 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.081946199 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082821913 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.102534849 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.07963985 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.338088289 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098924403 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.077884909 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07941917 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.118859589 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.084312588 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.0953427 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104107608 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.090563099 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112946664 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.116565285 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110498261 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097044863 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079411373 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085982912 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.087572953 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074534987 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078402443 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074588276 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.070773292 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106663105 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084339688 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081146084 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.099604462 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.108370475 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099286129 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105819023 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089572472 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095402274 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098264412 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.124852752 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14355098 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097341691 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.121354161 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130173881 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075431619 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.074710433 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.079804182 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129125953 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.080509672 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090825033 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.236109614 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.076927471 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.080309839 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089480983 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105666053 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081935623 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078847028 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097272198 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10871792 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08312363 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079595683 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091519654 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.106625778 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.126305058 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087836725 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.074297085 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10637737 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099999836 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121118353 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.071665895 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079489466 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.126448095 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08547724 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102029393 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078208352 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120827405 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.129452735 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072694308 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087327879 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071490827 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086273419 seconds)
  done (took 49.769827595 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.14678078 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.143057817 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.081092633 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.096509575 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.185149228 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.194329126 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.116909557 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.093915222 seconds)
  done (took 2.811220593 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066671741 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.080668932 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.0992294 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081839558 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065412236 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.066413321 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.196500347 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079729337 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065123742 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.104433928 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.074755475 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067258098 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.354214114 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065501575 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06555115 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073627061 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.065620346 seconds)
  done (took 3.381735241 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.366374524 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.620828753 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.318047479 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073127564 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.926101899 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088537168 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.183364959 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137624371 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080955923 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.541260872 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.366238793 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130310985 seconds)
  done (took 18.552845091 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07569292 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075041089 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.077773205 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.077780314 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074547925 seconds)
  done (took 2.17507964 seconds)
done (took 98.62323394 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082698018 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.170328531 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.067483999 seconds)
  done (took 1.995697737 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.081613356 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.080450107 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.080050271 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.078035059 seconds)
  done (took 2.049270923 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074165794 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076159358 seconds)
  done (took 1.872209143 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.231165325 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167744266 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089498318 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082416549 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079453897 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080347778 seconds)
  done (took 1.977428116 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070956103 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.070689672 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071013478 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07131156 seconds)
  done (took 2.005964724 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.067051971 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066038016 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.06725124 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069871385 seconds)
  done (took 1.994127454 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.082027017 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077991008 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077340975 seconds)
  done (took 1.961363232 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107997426 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09599161 seconds)
  done (took 1.926247551 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.079227354 seconds)
  done (took 1.804093074 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.087847265 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.094986524 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.137497279 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.105860725 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138279514 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.123550842 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.076085739 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.076659164 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072326312 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.071506312 seconds)
  done (took 2.706836782 seconds)
done (took 22.586599002 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078268848 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366988771 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.358979997 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085726586 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669921034 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355582817 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.965756167 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090117317 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.098506874 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067635813 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083563067 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647943329 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.956872243 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325722185 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.941064553 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324954829 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649526672 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068382805 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067015117 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067645693 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.949453766 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066837855 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067478775 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068334422 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649845021 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374067897 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068808011 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327001508 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067269027 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069328717 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355325674 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068084363 seconds)
  done (took 16.106589391 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069931074 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121872311 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072424646 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082579147 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069234016 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068990092 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070606973 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068293454 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108867579 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067869568 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084955419 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067136904 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071358941 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068649812 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087104693 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067301989 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069457987 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068606292 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069294243 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069086743 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086755404 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068125038 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069327514 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07167684 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068733553 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081631777 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069708596 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068479329 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068497775 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071379397 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072360565 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069532419 seconds)
  done (took 4.131932127 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121267209 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124749721 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07278423 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108566935 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117525697 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069424965 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149971591 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090405087 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112247298 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068368967 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084982567 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067762528 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103663068 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069466374 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088764747 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068868452 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07041663 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069375226 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069036785 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069159626 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087216575 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068254989 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069128852 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06955783 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069418803 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084853651 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069354965 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068625089 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068842109 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071260823 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07336658 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070206371 seconds)
  done (took 4.411223975 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.06934966 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.070548892 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.079036998 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.079923141 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.065989891 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.068681192 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.070086999 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.066545561 seconds)
  done (took 2.320330385 seconds)
done (took 28.71393904 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078678087 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067295329 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.070643442 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087339221 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073309159 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.069706824 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064544527 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073636375 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070724982 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07082027 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.072643538 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066215079 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069794649 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.064911796 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.071922352 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.065667927 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07227461 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070022398 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.07072688 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.072086986 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.0692448 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071765865 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075122128 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.070761624 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.070690655 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.071017835 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.075267494 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072520119 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067075463 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069026582 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.067743085 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.07962753 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072528791 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.073372992 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066195771 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066344675 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070540579 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06878342 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.072951284 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075542939 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068724047 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075113251 seconds)
  done (took 4.712127767 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086397426 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092712033 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084366827 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081940624 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.10413331 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08197541 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088874163 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078735621 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077039329 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087845128 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072767186 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.078145637 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078836403 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.07161724 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077694655 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074522449 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.07921798 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072983892 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07882073 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078451239 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089451445 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071255169 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078878381 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07969349 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073800249 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.079800771 seconds)
  done (took 3.856256898 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.071906323 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087325018 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091328769 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139727207 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108816071 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082148184 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081249629 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.10216835 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.101165495 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068337312 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071461624 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093602502 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095975111 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074737272 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106762861 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08554078 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079325406 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069141626 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074632314 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10231854 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091371219 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087576143 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.101234328 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088057776 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067288896 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077660311 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075088499 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083117231 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075212174 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079516538 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071988011 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071603207 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068518574 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079111987 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071351399 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.065026715 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089346855 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079491901 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.0820989 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.10579761 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077202236 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.0687116 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097134096 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13382634 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066892093 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.069802231 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.070821401 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079548989 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068363132 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096740795 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085362487 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066853185 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.08568941 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068561463 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068563237 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082851794 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068815587 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069337021 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079214368 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073293584 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087823606 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071884269 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088721732 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067178615 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077808433 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068365306 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068769378 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066460894 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.10299036 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074620963 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11803952 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.06823161 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.065495384 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079394306 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07823341 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073752188 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066932549 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085204473 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078985982 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070951439 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078850156 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069905489 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070497957 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.103153201 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066262449 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.065659775 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.065081909 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.069537453 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070353418 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067610043 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080247786 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066782372 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070087704 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082048988 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067035173 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067552656 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.069536738 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.068126202 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066480365 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077071483 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070998568 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068803209 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079538295 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06858025 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070497332 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081957781 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076454032 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066526362 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068126332 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.069228423 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068659634 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07150168 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070839205 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068994195 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073308561 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074259455 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072587762 seconds)
  done (took 10.958119851 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160245209 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150530299 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068940363 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145672135 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075809244 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.072058472 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146794446 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.08692962 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067784615 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069547162 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067528072 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.095317973 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.090607309 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.102009881 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.071615468 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068712518 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.09313679 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.100215163 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148106933 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14407221 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091654039 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075706145 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07055244 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069764121 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069316725 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077264671 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084536364 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075705595 seconds)
  done (took 4.434841585 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.074220883 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.109810207 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07189149 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091509208 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086202123 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067868315 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069589458 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069052594 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084851088 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.074141531 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067921824 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072383137 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071142402 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.069699285 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068379704 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07454601 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074239333 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067012336 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071453435 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071987941 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077809047 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09230876 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071813443 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067722975 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.069891866 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067581077 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.073749884 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.076506282 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067295856 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097312273 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065264199 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.071894413 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081985787 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068789301 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067254002 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068443366 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068108173 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067782912 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.067969892 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066149322 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065329761 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072325923 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066182558 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07350639 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081685471 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.075228251 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.068506552 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.070144952 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.070009041 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064537752 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07074961 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070631499 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070373207 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075884741 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071538859 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.070120545 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069087929 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096520004 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073499593 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067528441 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06707942 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071291834 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.069567494 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.075274792 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084567051 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.069041956 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066449891 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06775622 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072075892 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081554691 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067382523 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072616881 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064956132 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067930855 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069892671 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070574437 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069023819 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066075999 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067453836 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068308348 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068128516 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067361474 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067296018 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070080735 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065850823 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066264973 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067985025 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.068671039 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073674501 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.066399534 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.06995285 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068906737 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066122945 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070481202 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072705606 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070520873 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087263041 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.075840944 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068194375 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065415534 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081696216 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069360024 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066824077 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073274951 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.071983608 seconds)
  done (took 9.365972394 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090469823 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069224741 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087059681 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094067353 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.07818222 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073002583 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.08082674 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069463075 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083294092 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067249713 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077215003 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066024837 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079976761 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07569727 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069207147 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077428427 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070087572 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087811434 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082713092 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066566456 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076148326 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080035384 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080306886 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085598103 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085172519 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085776247 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.079609097 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.070715073 seconds)
  done (took 3.986352234 seconds)
done (took 39.058867643 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.82123148 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.989079264 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.823740124 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.02873427 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.870838838 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.037463498 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.944960537 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.818009924 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.892090675 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.845583884 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.115229968 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.240818954 seconds)
done (took 67.243842609 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.845401018 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.966688128 seconds)
    (2/2) benchmarking "String"...
    done (took 2.033558614 seconds)
  done (took 5.752667466 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.964833278 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.448187991 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.096574019 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.815480867 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.820779197 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.328899879 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.626700303 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.301730128 seconds)
  done (took 31.192740545 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.946123659 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.043659654 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.518135888 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.553606152 seconds)
  done (took 15.862321949 seconds)
done (took 64.456259769 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.851262223 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.81748573 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.827626986 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.849588787 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.827281282 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.817879155 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.82162151 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.819789114 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.87779563 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.083291587 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.821345007 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.83509768 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.82146103 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.824277667 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.359158594 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.880314885 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.838993016 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.821901372 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.836017245 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.830238154 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.828011912 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.823875057 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.276121907 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.994438092 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.430301987 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.197448781 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.378537416 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.208942269 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.819787132 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.819667469 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.88839177 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.198451242 seconds)
  done (took 206.079510469 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.821106406 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.724408809 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.80493917 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.827327715 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.144395753 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.998232531 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.922445241 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.211269553 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.826959998 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.842806626 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.975857621 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.825916873 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.001463455 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.839980699 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.860437693 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.898171107 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.979129715 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.03119786 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.861713974 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.969043836 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.828165865 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.852369236 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.818895592 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.964348688 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.82762879 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.89509049 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.834690934 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.851214383 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.012308814 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.950988107 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.870504227 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.841630732 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.961463827 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.692132943 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.83312953 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.826150499 seconds)
  done (took 170.984463793 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.010129414 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.82953214 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.823267346 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.878445964 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.943683954 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.824899944 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.454210642 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.834627604 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.550823991 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.826984381 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.822217896 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.821877345 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.825519592 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.834692686 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.896566779 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.824712685 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.837175117 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.824205524 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.848006479 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.823989382 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.821771435 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.823312336 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.822266488 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.823610523 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.822891503 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.822818525 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.550752791 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.070461232 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.825867054 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.823541113 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.911417766 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.835423801 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.890811438 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.82706487 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.913455921 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.880496874 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.940496815 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.826725757 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.040617162 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.89283233 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.824909065 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.823792901 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.887765623 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.835584832 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.82907061 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.828051676 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.829910382 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.88914466 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.057779364 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.82659165 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.944053877 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.303303089 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.828578972 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.825612974 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.82351605 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.410504544 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.827577853 seconds)
    (57/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.824755078 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.829732164 seconds)
    (59/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.830407102 seconds)
    (60/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.824714446 seconds)
    (61/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.826143537 seconds)
    (62/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.209824277 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.895365492 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.889115464 seconds)
    (65/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.205187883 seconds)
    (66/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.830856089 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.735480797 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.009914917 seconds)
    (69/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.82505576 seconds)
    (70/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.825837267 seconds)
    (71/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.825456248 seconds)
    (72/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.827448834 seconds)
    (73/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.82611865 seconds)
    (74/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.829113577 seconds)
    (75/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.945498401 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.834827179 seconds)
    (77/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.955972713 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.908532544 seconds)
    (79/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.945097843 seconds)
    (80/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.828513907 seconds)
    (81/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.83745423 seconds)
    (82/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.656348811 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.897163371 seconds)
    (84/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.864653413 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.827116929 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.826208628 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.64965979 seconds)
    (88/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.827721277 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.827020506 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.200145982 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.595203753 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.83094398 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.82556244 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.837926949 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.827340546 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.826337987 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.827036212 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.905422868 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.826355247 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.946752275 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.53627313 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.258444373 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 2.023474684 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.827316615 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.837147644 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.827992997 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.923084285 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.986373449 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.827392284 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.892644821 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.833999217 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.829176595 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.973896083 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.829614797 seconds)
  done (took 408.22723952 seconds)
done (took 789.114060393 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.405749472 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.381090832 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.501446985 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.398632858 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.374365414 seconds)
  done (took 13.823291767 seconds)
done (took 15.585358369 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.841826443 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.834347398 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.890873893 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.914057635 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.847557287 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.84502785 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.909903255 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.850527369 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.878974818 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.882317336 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.911552495 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.913216362 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.851299918 seconds)
  done (took 26.134683247 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.837164517 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.974263321 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.048470932 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.872587186 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.838640222 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.055973483 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.896445237 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.96945146 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.971215163 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.056742392 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.068580955 seconds)
  done (took 23.354958873 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.836911678 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.975717002 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.053232212 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.874916645 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.837647498 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.0545093 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.903140573 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.978539068 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.975264432 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.059519718 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.075817166 seconds)
  done (took 23.39844075 seconds)
done (took 74.650092782 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.834283012 seconds)
  done (took 3.599211917 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.854052744 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.026698158 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.833528969 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.835411542 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.834969123 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.834064668 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.83502194 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.833602478 seconds)
  done (took 16.653228479 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.832937843 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.833804626 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.831923897 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.83339116 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.83423112 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.83353144 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.833660106 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.833967551 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.834291966 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.833280687 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.833791416 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.835007638 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.83346239 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.834922414 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.834437731 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.833821635 seconds)
  done (took 31.108434179 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.835582306 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.83409456 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.833982103 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.833770707 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.835271295 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.836906865 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.837287134 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.835564964 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.834770613 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.834344952 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.834486818 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.834422823 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.834569019 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.83392613 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.835901934 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.836025827 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.835298234 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.835901729 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.840014457 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.834996477 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.836044785 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.835054001 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.835959981 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.835737715 seconds)
  done (took 45.818970106 seconds)
done (took 98.953103598 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.648457067 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.60864662 seconds)
  done (took 10.026678314 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.836261885 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.835769694 seconds)
  done (took 5.444519816 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.836446681 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.836216029 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.835510015 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.835599341 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.836432473 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.835223949 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.836078705 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.836054418 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.835620258 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.835544533 seconds)
  done (took 20.128251856 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.835697156 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.835237879 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.835720371 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.836167925 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.836199259 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.836692222 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.836359978 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.836591049 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.837002202 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.837407492 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.836553537 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.837521473 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.83769096 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.837049787 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.837162978 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.837558966 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.838001578 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.837865425 seconds)
  done (took 34.832702714 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.838482889 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.837834528 seconds)
  done (took 5.446606053 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.838027223 seconds)
    (2/7) benchmarking "second"...
    done (took 1.838369186 seconds)
    (3/7) benchmarking "month"...
    done (took 1.838215826 seconds)
    (4/7) benchmarking "year"...
    done (took 1.837872545 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.838147912 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.83856543 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.83767763 seconds)
  done (took 14.638047338 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.837982613 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.983683859 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.033857254 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.436313626 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.839267692 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.83964617 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.71900615 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.840607954 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.841424436 seconds)
  done (took 20.142498633 seconds)
done (took 112.426872392 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.638447498 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.841224613 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.08624021 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.907495669 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.86732905 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.1766662 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.838514869 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.441920991 seconds)
done (took 42.569450537 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.892448636 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.835818192 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.881436814 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.883500232 seconds)
  done (took 22.372054515 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.836222517 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.162247137 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.861485361 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.690744824 seconds)
  done (took 22.332642459 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.217807855 seconds)
    (2/2) benchmarking "read"...
    done (took 2.184861729 seconds)
  done (took 6.178322286 seconds)
done (took 59.548084004 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.838261997 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.838548906 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.838755929 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.838643393 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.840016982 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.839168794 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.839166498 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.839907781 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.839654019 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.839521544 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.839513705 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.840069939 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.83950833 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.839656913 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839846238 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.839442644 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839161872 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838795495 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.839460504 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83995253 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.841140445 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.83987163 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.840101009 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.840521887 seconds)
  done (took 45.922066679 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.840317365 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.839899355 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.840338603 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.841038243 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.840728952 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.840735486 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.842351708 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.841208181 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.840803209 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.841840632 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.841089945 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.84113435 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.84100238 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.841116541 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.840605907 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.841515823 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.841409539 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.842203029 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841297415 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.841302933 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.841929235 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.841142449 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.841318874 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.841290649 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.84219731 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.840947598 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.842205386 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.842190081 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.841767861 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.843415537 seconds)
  done (took 57.015025859 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.841859852 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.842420672 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.843342008 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.842290888 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.842022629 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.842584974 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.843508989 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.84282447 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.842640214 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.841979274 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.84392958 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.843355092 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.841590873 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.844012697 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.842914987 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.843375195 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.842389534 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.842591401 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.843954047 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.844434745 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.844115891 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.843362688 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.843172275 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.844913435 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.844506158 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.843806445 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.843218487 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.844054153 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.843670422 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.844158137 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.84528995 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.843876983 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.84400995 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.843300968 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.843822004 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.844559756 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.84424371 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.843713721 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.844539889 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.844916759 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.844851454 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.844675964 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.844400347 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.845035572 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.844586165 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.845025981 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.845748397 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.845193863 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.845276949 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.844354746 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.845286988 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.846214571 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.845080221 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.845519519 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.846024772 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.845136647 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.845739881 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.846236829 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.846033222 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.846498527 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.846074215 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.845993889 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.846340202 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.846148781 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.845654902 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.845198293 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.844917859 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.846645648 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.845581843 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.844907159 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.845486491 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.846101523 seconds)
  done (took 134.574419288 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.846353382 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.845845755 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.845856156 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.84567655 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.847325874 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.847711489 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.847484387 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847037551 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846699755 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.846843135 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847438775 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.848203145 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.846705905 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.84683244 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.84675435 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.847946791 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.848243066 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.847702792 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.847958786 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.847564587 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846843488 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.846367876 seconds)
  done (took 42.415473946 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.847395111 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.848184211 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.848318391 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.848425854 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.847899746 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.847410062 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.847538209 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.847116646 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847577105 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.850147357 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847910906 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847824359 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.847949178 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.847461767 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.847444498 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.849458673 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.848357597 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.848260538 seconds)
  done (took 35.04732903 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.848584712 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.849007301 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.849151727 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.848437963 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.84841629 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.848614757 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.848418886 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.850274734 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.848506612 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.848303604 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.849590957 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849861908 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.849998214 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84897297 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84947058 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.850017623 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.848913206 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849106373 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.849464663 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.849136903 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.849179903 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.850272027 seconds)
  done (took 42.464153067 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.850153467 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.849978295 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.850097491 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.850272337 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.849968971 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.850112682 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.850592343 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.850267845 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.850074594 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.848985503 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.849873222 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.851357846 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.850497274 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.850213087 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.850488846 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.848778324 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.851023047 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.851055056 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.849900366 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.850500186 seconds)
  done (took 38.787770998 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.852386013 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.852491886 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.85251469 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.852060133 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.851636506 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.8523252 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.852809981 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.852863725 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.854040962 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.85182816 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.852226831 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.853323253 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.852749684 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.853391477 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.852266127 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.853700173 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.853768089 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.853837991 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.853651543 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.853915978 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.854156287 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.852416438 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.853432621 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.853710421 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.853141654 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.853306148 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.853635997 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.853148308 seconds)
  done (took 53.669531827 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.852687893 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.852482968 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.852314245 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.852751432 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.854450392 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.852330664 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.852684735 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.851942633 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.85316221 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.853890302 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.853401273 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.853178533 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.852528902 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.853323501 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.852663768 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.85343621 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853733539 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.853059775 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.853111912 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.853835118 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.854267086 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852801519 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.853710073 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.852959589 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.852675722 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.853559426 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.854845874 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.853989205 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.854020735 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.853994468 seconds)
  done (took 57.384316251 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.874454641 seconds)
    (2/2) benchmarking "in"...
    done (took 1.876801407 seconds)
  done (took 5.537633888 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.854645822 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.85403144 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.854553196 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.85387908 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.854371151 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.853830389 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.854942221 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.853893029 seconds)
  done (took 16.621061203 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.854956106 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.858386785 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.853502805 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.854823063 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.855878349 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.863453888 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.855703818 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.856284775 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.857349489 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.855296216 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.8618167 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.859714081 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.863443548 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.860058169 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.85542441 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.856946607 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.856526999 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.858381291 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.856309986 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.856215355 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.860379492 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.85754244 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.856581378 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.85798747 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.856725058 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.858774825 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.866532004 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.858715954 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.858437623 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.856299201 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.864070809 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.856241497 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.857074335 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.857440701 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.856712332 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.857193296 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.863799115 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.859519364 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.857061902 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.856540053 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.860449616 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.86000952 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.860986162 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.865353851 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.857655056 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.857028332 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.857229255 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.859319817 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.856811983 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.861529997 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.864298928 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.857300169 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.856874274 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.857417521 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.861435311 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.859489121 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.859359537 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.859591918 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.86490485 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.86535657 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.861911904 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.878852974 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.866910212 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.858073275 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.859825579 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.868896243 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.882996087 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.860523718 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.860654296 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.857879313 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.866415389 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.857288099 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.858802327 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.857719511 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.873290279 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.867162177 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.859364577 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.858163237 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.858563896 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.860651251 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.860775085 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.860091609 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.860439592 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.860682896 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.868730371 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.88336915 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.860824948 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.860712286 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.862104344 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.860675222 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.865100427 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.86222096 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.85868956 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.859151859 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.860703788 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.862269353 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.861938802 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.861042719 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.85950269 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.869410324 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.859037129 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.861163141 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.863759085 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.868390754 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.861108259 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.861415879 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.862872421 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.86291882 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.869718594 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.86222659 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.861320158 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.860614821 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.862261255 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.865541393 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.859707344 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.864807457 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.868800072 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.870923276 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.862677288 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.865141008 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.866034911 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.864094794 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.87115625 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.886287458 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.861066937 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.865428683 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.866777781 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.873911533 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.86611653 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.860898898 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.86573 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.861825274 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.861842706 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.865185128 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.862836124 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.864177891 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.862556323 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.863760205 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.861285008 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.86440129 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.866101766 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.863765287 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.864555829 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.863395457 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.867741186 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.86376688 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.865759526 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.869313779 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.863104478 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.864522865 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.863286491 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.865512995 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.864705911 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.863219783 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.861778935 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.863881876 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.864000022 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.863678206 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.865026141 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.863912774 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.864019527 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.863466513 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.867606067 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.864091186 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.864596171 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.865554823 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.864542 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.865591303 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.865526492 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.865154516 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.865859475 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.866249983 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.868139784 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.864149855 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.863502364 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.863842843 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.865291239 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.863515102 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.86785477 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.875768624 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.867597649 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.875091952 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.864259502 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.872711139 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.864256692 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.866795173 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.865588769 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.866542105 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.865780332 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.864398248 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.864356042 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.867917488 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.887924753 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.875558908 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.868025412 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.866357963 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.870438198 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.869287017 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.871014002 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.865405884 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.867716436 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.868228633 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.865934363 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.86652826 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.865359866 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.869612941 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.866183938 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.864081151 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.869634924 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.86745001 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.865714869 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.867654181 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.86585224 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.867872303 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.866463977 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.865850354 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.866780948 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.866081418 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.874778659 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.870112365 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.865536219 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.868233877 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.868728074 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.867779372 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.866998034 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.868308737 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.871612422 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.866843411 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.867638296 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.876159162 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.868367202 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.868353253 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.867761656 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.867253403 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.869097054 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.867448066 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.870600219 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.874997823 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.870771519 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.868091434 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.873017829 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.867858513 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.870665038 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.868893926 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.869224496 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.869633085 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.870038006 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.869338951 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.868312754 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.877053818 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.867043283 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.869820478 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.867438407 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.870690671 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.869697131 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.870757777 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.870082461 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.871882084 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.877229499 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.875056775 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.869103906 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.871883334 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.871830475 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.869701331 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.872870347 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.870312876 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.882711353 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.87797705 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.86970496 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.868467947 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.870386991 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.871558034 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.868757794 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.870463793 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.87727112 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.86964179 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.870840324 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.873529852 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.871556438 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.870373355 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.876634826 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.8713373 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.873786168 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.87364556 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.871246663 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.871625644 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.870198802 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.872786139 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.871977376 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.873176923 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.873274297 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.869559708 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.871631291 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.87137471 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.881630423 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.871411738 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.871802496 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.87983386 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.871804358 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.871459906 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.872293396 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.870989714 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.872786275 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.872655072 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.871570911 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.872820915 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.87259878 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.874741663 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.881405056 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.874749369 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.879614017 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.874263862 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.881581425 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.873367715 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.871582843 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.872499937 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.875380268 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.879778101 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.871420755 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.871398724 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.883719105 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.872956982 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.872287468 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.876511361 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.87191954 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.873402115 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.873825417 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.874141337 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.877673195 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.876740083 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.87188545 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.874696253 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.872031029 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.873048576 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.876264338 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.875319939 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.874874065 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.873921221 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.872732671 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.874129213 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.873808935 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.874583315 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.8760299 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.872697844 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.873166698 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.882904823 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.875986102 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.876158696 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.878930208 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.873249172 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.883383957 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.875874585 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.875839518 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.875964579 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.873610795 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.876104382 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.87538094 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.874902704 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.875001073 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.874242962 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.875074912 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.886259641 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.88320567 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.878862048 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.876377655 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.876143494 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.876541739 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.88445335 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.896843701 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.876015168 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.876934728 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.877547879 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.88183689 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.877763025 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.880653883 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.879528717 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.883680165 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.876779628 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.874962534 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.878871212 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.888214019 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.876597324 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.874735567 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.875049926 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.880489101 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.877534245 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.875091346 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.876827339 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.879953231 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.876175418 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.888526187 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.875527705 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.877948741 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.877092983 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.876315017 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.877063479 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.875678035 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.878725933 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.878407887 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.878359309 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.877429923 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.879259389 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.882072516 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.877209548 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.87989607 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.886453808 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.878605135 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.878932802 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.878774813 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.877862436 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.879775443 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.879534735 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.87652426 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.879040719 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.876546603 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.878441838 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.880153814 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.886560515 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.879325087 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.876416193 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.877237181 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.88165466 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.877515628 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.878098053 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.879138694 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.887232022 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.881299576 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.888882748 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.887697705 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.878893069 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.879512207 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.88576039 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.887220908 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.879635948 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.878246408 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.878827619 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.881765735 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.880959912 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.878309234 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.879143557 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.880612573 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.884361449 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.878378685 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.880480434 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.880382103 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.879036637 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.882631506 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.880603117 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.884754229 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.879580458 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.87779187 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.877496234 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.88083999 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.880671997 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.881266892 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.880963138 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.879589309 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.881467641 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.881844706 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.887730819 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.879887772 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.880621494 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.883177981 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.880356968 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.879821362 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.879161751 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.880208584 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.879261994 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.883448233 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.88922317 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.879971882 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.881613881 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.882764599 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.885557217 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.883145702 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.883412028 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.883003679 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.8812278 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.889903617 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.881367659 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.882271048 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.881987474 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.880631237 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.887880316 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.88310076 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.887042167 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.88258283 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.88215247 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.881906278 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.884276922 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.890286953 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.888361751 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.885391632 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.889646032 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.887131619 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.883819838 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.881924537 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.881278565 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.88287696 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.882247702 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.886460452 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.884231991 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.885275191 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.88410333 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.884802444 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.88419736 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.886175178 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.883673302 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.882753474 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.887279941 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.892732778 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.892849446 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.883255042 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.886024944 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.884681261 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.887101131 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.894784322 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.884547045 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.884336597 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.88379671 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.885277473 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.885018677 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.890736029 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.89069629 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.888343182 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.885601945 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.889272572 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.9005433 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.886486759 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.894151808 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.914711109 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.886470872 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.885016851 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.886448679 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.8844526 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.885026708 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.887574509 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.883908064 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.894332661 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.88630283 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.883714123 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.892987952 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.883902546 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.884264593 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.885814961 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.885668053 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.890460406 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.886601448 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.892465233 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.886467304 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.88452265 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.885455343 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.887956964 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.884528034 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.886623168 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.884879531 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.889190013 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.884745607 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.886201961 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.896349279 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.887982258 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.887533113 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.899845175 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.89586756 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.886048537 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.886861674 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.885590082 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.891277964 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.888762614 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.884308413 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.890802665 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.893067704 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.890219781 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.893352663 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.887342543 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.889701072 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.888488473 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.885520301 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.887022064 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.899557464 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.896257513 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.887411374 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.887170858 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.893702815 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.885559912 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.89311502 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.89318822 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.887868276 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.88875363 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.888956019 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.886373957 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.886867609 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.885473691 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.890619932 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.894328607 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.887510464 seconds)
  done (took 1118.620007893 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.887039892 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.885644143 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.887060543 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.887079492 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.887025984 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.889418349 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.887025339 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.887306744 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.888204545 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.888251484 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.888975525 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.888502337 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.886865489 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.888140499 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.887371648 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.889618647 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.888304793 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.888334331 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.887531308 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.887636661 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.8890584 seconds)
  done (took 41.464103209 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.888080675 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.888595795 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.88867312 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.888225291 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.889694683 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.889452387 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.888818133 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.889044094 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.888690489 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.889542545 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.889531143 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.889880386 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.888963882 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.889332712 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.889887657 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.888633935 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.889386744 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.888862774 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.889077723 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.890382857 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.889158674 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.88907504 seconds)
  done (took 43.383473692 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.889898658 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.88993288 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.89221096 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.888628648 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.888959875 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.892023603 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.889879417 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.891674132 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.891163117 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.890816096 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.897372591 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.89699921 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.889274269 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.893528718 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.888988351 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.890985605 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.036241571 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.891699282 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.891035237 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.891080844 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.892161837 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.899498775 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.891553047 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.891744319 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.890610634 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.891830865 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.891633153 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.891404088 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.892447937 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.894394862 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.897374325 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.891614526 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.892318649 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.894958382 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.891767997 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.891375204 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.896188484 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.892393873 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.891929335 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.892099222 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.902235579 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.914370646 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.891056313 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.892621964 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.899928441 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.892259817 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.891857976 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.895864702 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.899318552 seconds)
  done (took 94.733501588 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.892148607 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.891660148 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.891195824 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.891919647 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.891133648 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.893107543 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.89120918 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.89241983 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.892396567 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.892888803 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.893011529 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.892457795 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.892919744 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.895338419 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.892462434 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.892650103 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.892998943 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.89297597 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.89369275 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.892296752 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.893927007 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.893303115 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.892849305 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.892830199 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.893574853 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.893392323 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.89303813 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.893925222 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.893535808 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.894208032 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.894502354 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.894125604 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.892925224 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.89472898 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.894707811 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.893742598 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.89495279 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.893686558 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.893572145 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.89428477 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.893891229 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.893950697 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.893545347 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.894103324 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.894822143 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.894927648 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.894727321 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.896203617 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.89541795 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.894766639 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.895313613 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.8952745 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.895398213 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.896278553 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.896296858 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.895658641 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.895621662 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.896207173 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.894908342 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.895885756 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.895267822 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.894709242 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.894774342 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.895783594 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.896712293 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.895399478 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.89562767 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.895355664 seconds)
  done (took 130.618901314 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.896721309 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.897375028 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.897742522 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.898500129 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.897980137 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.898219408 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.898112899 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.897220865 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.89790631 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.898567925 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.898131265 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.897529932 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.897756501 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.897318812 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.898196875 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.898587959 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.897951273 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.898505602 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.897649101 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.899029376 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.898095065 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.899438537 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.898563871 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.898596005 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.89824502 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.898437741 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.8989823 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.897729957 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.899641819 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.899329415 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.898875187 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.898635493 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.899195097 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.899205412 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.899440775 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.901910491 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.900031663 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.89827788 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.898810502 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.89977253 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.898708304 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.899512506 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.899222605 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.900678295 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.899244286 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.899142932 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.899785609 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.900140629 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.897531805 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.900045493 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.899493208 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.900000015 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.899930435 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.899845722 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.899906447 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.898161451 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.90073564 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.900981336 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.901152138 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.901906959 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.899902924 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.899094038 seconds)
  done (took 119.56527602 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.899727491 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.899790215 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.899708081 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.900018879 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.899815904 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.898560393 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.899899074 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.899583871 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.899992767 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.899864541 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.89949571 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.899480221 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.901334969 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.899218359 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.899748152 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.900389259 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.89912506 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.899443063 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.89974607 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.900489231 seconds)
  done (took 39.826951613 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.900075988 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.89986601 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.900144879 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.90033799 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.900061042 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.89944001 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.899155702 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.900433871 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.900471074 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.900900562 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.901225066 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.900917597 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.901094325 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.900606768 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.899997897 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.901524584 seconds)
  done (took 32.237741331 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.901311941 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.900607998 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.902066059 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.902390992 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.900526068 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.902095185 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.901882792 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.90136178 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.901341415 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.901824471 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.901285546 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.902045533 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.902278922 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.903716313 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.903323519 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.901577283 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.903273182 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.902450656 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.902788432 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.902564569 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.90292818 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.902604154 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.902158046 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.902878946 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.902720559 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.902975627 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.902368786 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.902516537 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.901486826 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.902020419 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.905217599 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.902567046 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.901718828 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.902379707 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.904044493 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.902309529 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.903436727 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.902342922 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.903632659 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.903710572 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.902552045 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.902194105 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.902902594 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.903623149 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.902656333 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.903496201 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.904745627 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.902755143 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.902508559 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.903429584 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.902349381 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.905284886 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.902894121 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.903513045 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.903049935 seconds)
  done (took 106.480094428 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.903878659 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.903617922 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.903943529 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.90315404 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.904249778 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.903151949 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.905781518 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.904054627 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.905100952 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.904280898 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.903514735 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.904343746 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.90372435 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.904218009 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.905378017 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.905072759 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.905264197 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.905155971 seconds)
  done (took 36.112939652 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.905374432 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.905923406 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.904496497 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.905185171 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.904934614 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.904546942 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.905366805 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.904108537 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.904994435 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.905716037 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.904864563 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.905157045 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.904591157 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.905363541 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.905441404 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.904447731 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.906341305 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.906090266 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.906071707 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.905468447 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.906094408 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.90520061 seconds)
  done (took 43.751783867 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.90536548 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.905997958 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.920465361 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.9275794 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.926133484 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.941336935 seconds)
  done (took 13.363718374 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906396458 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906098572 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.906229073 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906777097 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.908613022 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.906812512 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906677543 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906691317 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.905853503 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906861194 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907964395 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906170952 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907256831 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907216812 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907258011 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906010475 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907893107 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907100564 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90772709 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907647909 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907064701 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908133909 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907274495 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908063773 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907153854 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907634975 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906372136 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909035728 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907234855 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907029886 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907269674 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908081609 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907191778 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908217149 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907895737 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907194595 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90822021 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908474656 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907535264 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.908583401 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.90754943 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908006068 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908621991 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90802498 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907373388 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908925595 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.9080515 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908580439 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907718285 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908646507 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.908672768 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908568999 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908517408 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.908739475 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908985123 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908881932 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.909331282 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908773266 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908119753 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908826892 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.909231272 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.908509301 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908958766 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.90976681 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909391543 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.909321194 seconds)
  done (took 127.757416369 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.910262603 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.909667929 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.910062461 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.910355467 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908878979 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.909469114 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.910821033 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.909499718 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.910690204 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910481686 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.91017778 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.911155747 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.910235689 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.911110045 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.90990293 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.910370603 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.910312039 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.910196072 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.910174058 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910001743 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910302693 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.91070631 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.910152978 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.910629753 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.910190407 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910839886 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.910645586 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.910485561 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.911391697 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910136647 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.911870945 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.911689925 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.910639257 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.911363428 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.911078826 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.911388703 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.909780539 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.912072234 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.911447625 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.911891282 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.912708166 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.91120274 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.912413123 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.91187269 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.912720114 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.912592521 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.911897124 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.911787453 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.912166655 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.912769784 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.911958025 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.912517573 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.913120721 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.911908313 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.911330479 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.912630973 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.91136694 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.912306115 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.912350959 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.911688466 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.91532007 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.913529947 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.914181167 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.91322462 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.914368627 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.915229603 seconds)
  done (took 127.996307874 seconds)
done (took 2607.129239949 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.946236976 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.957618082 seconds)
  done (took 15.74646981 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.081422983 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.033104099 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.919179717 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.919730768 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.919722858 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.944405493 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.941879806 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.920244619 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.919338673 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.920613019 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.919942773 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.101533458 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.975085684 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.919887565 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.920549775 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.01186721 seconds)
  done (took 53.219437435 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.925499145 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.922311143 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.935950215 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.922711206 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.924946866 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.938941909 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.953520204 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.929883759 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.961212272 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.939034644 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.996705867 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.93918928 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.925793218 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.977173275 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.939454167 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.940185446 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.020426939 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.003588597 seconds)
  done (took 36.943493972 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.003990159 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.930265285 seconds)
  done (took 10.786634174 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.948700934 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.931439808 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.936903408 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.945028747 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.941307255 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.924021636 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.949577704 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.946519725 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.952692451 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.941632924 seconds)
  done (took 71.280712641 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.924845279 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.923921401 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.924387162 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.91984135 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.917905215 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.923074601 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.920511028 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.922200894 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.609307751 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.962642506 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.933213214 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.929335948 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.921663586 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.9221927 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.918350254 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.946141322 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.088823873 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.91751826 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.917970438 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.927479467 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.920957167 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.977467731 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.935021736 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.922169534 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.9568521 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.609745916 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.936234462 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.92640413 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.082464551 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.918593622 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.921262205 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.13341367 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.929501711 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.371672583 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.236196226 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.930728467 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.930839103 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.929437057 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.919291374 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.091687844 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.923304522 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.929002371 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.76593354 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.211301196 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.026718793 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.966237309 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.271075295 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.926231042 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.922892238 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.955301089 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.925988237 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.924043281 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.942880385 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.431449282 seconds)
  done (took 135.924019175 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.922363429 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.169041184 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.071969717 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.920985265 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.176804332 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.134128558 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.922280411 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.965409391 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.9236313 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.118081492 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.178785006 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.023909563 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.923358265 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.921199116 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.920047332 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.918653547 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.061558684 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.989242875 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.923329121 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.920204108 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.944252354 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.121844538 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.042373895 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.922437466 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.947506238 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.129455109 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.043157866 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.022082041 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.780040718 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.920034613 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.983901201 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.924816653 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.921499493 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.91985632 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.097956924 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.013204419 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.003015003 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.923585464 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.921684201 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.920968089 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.685757763 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.126039758 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.015553589 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.041396381 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.173201265 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.138196481 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.531736716 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.920761163 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.550022638 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.090085467 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.125941643 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.125062465 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.041992448 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.925039578 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.462814289 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.921220333 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.921664633 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.144372402 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.143279848 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.021633827 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.925323845 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.922110145 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.922079969 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.212301721 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.92692279 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.019071219 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.926084676 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.921592324 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.015720778 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.023132082 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.153444172 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.142306093 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.955518383 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.262230457 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.422201989 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.125855432 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.988408032 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.146622353 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.927730889 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.923274744 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.999748922 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.771464676 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.175313584 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.203753838 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.122186643 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.953467134 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.548313863 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.924331615 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.111360333 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.108575397 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.162628135 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.172311395 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.163179879 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.236143509 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.923807814 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.924180059 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.298859542 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.037731742 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.866743794 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.27150293 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.159479515 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.405338719 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.95034043 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.210397038 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.054040343 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.927105828 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.575483449 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.924047023 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.133800024 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.962498608 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.926094413 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.925877015 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.114022219 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.840949915 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.926561009 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.899969791 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.986314225 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.930547994 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.128096157 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.928261262 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.172891048 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.929732366 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.159697801 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.504281785 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.955707152 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.155537892 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.17269392 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.552878245 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.16888273 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.168223317 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.03987692 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.203518023 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.915216567 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.929269946 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.188777266 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.92822165 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.926415747 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.096135196 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.928538304 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.069918981 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.929235189 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.197519464 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.948697898 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.159828843 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.930607601 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.161963231 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.959643355 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.977521169 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.930395186 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.051099177 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.930775615 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.874492736 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.089829643 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.932522909 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.927351435 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.749186476 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.928058784 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.082242148 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.153105396 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.948309643 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.997125895 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.472360893 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.908163156 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.007717624 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.950343628 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 4.471549333 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.928781238 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.181174831 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.906763363 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.39455054 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.92805326 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.21621933 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.167352731 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.93019121 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.929285032 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.773026625 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.891603028 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.927706258 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.084003117 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.271203337 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.69374067 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.129922332 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.934646251 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.05746095 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.933933345 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.008263393 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.265796836 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.931076243 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.930847547 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.930038803 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.929149171 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.930712164 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.19527616 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.956371335 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.363235417 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.065056095 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.185154088 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.235719509 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.128385506 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.970711937 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.932732846 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.237236006 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.935046948 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.99380091 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.933421458 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.950792277 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.162169168 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.934035515 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.191103719 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.165933309 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.795046117 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.978479741 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.936586967 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.930725788 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.859460024 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.076116954 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.016821288 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.935369389 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.930424385 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.045001354 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.051182453 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.113281746 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.623892017 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.072902644 seconds)
  done (took 915.272545433 seconds)
done (took 1241.017352549 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.932318264 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.934492489 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.935588186 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.936416531 seconds)
  done (took 29.600157414 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.939335839 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.933362031 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.935358185 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.933112739 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.934914336 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.933909627 seconds)
  done (took 13.473025569 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.932967579 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.932589953 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.938452658 seconds)
  done (took 22.667555928 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.012147186 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.341643701 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.081133015 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.365076477 seconds)
  done (took 10.663524187 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.935904756 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.934794793 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.93457961 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.934705931 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.939666655 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.940568879 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.935045227 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.935446951 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.940384973 seconds)
  done (took 19.295024231 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.994980012 seconds)
done (took 101.554888422 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.58168223 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.889341922 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.954521232 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.94747207 seconds)
    (5/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.196520833 seconds)
    (6/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.317203155 seconds)
    (7/309) benchmarking ("sort", Float64, false)...
    done (took 5.640588118 seconds)
    (8/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.948116738 seconds)
    (9/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.025583361 seconds)
    (10/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.938825066 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.020735232 seconds)
    (12/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.628326156 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.058202145 seconds)
    (14/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.13233849 seconds)
    (15/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.523605548 seconds)
    (16/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.674290826 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.94329953 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.095183286 seconds)
    (19/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.116106723 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.951903951 seconds)
    (21/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.027557835 seconds)
    (22/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.352810398 seconds)
    (23/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.036660471 seconds)
    (24/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.959053107 seconds)
    (25/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.182098716 seconds)
    (26/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.935059377 seconds)
    (27/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.019592005 seconds)
    (28/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.138649312 seconds)
    (29/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.083033574 seconds)
    (30/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.258190644 seconds)
    (31/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.24119121 seconds)
    (32/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.033813228 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.810419562 seconds)
    (34/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.943800915 seconds)
    (35/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.005130111 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.938588425 seconds)
    (37/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.353420777 seconds)
    (38/309) benchmarking ("sort", Bool, false)...
    done (took 2.154338993 seconds)
    (39/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.579271775 seconds)
    (40/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.549254031 seconds)
    (41/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.865044363 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.485565515 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.086299356 seconds)
    (44/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.95180937 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.243123203 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.943886999 seconds)
    (47/309) benchmarking ("sort", Int64, false)...
    done (took 5.53745625 seconds)
    (48/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.945734241 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.186142791 seconds)
    (50/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.016586256 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.033062687 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.941329861 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.188753874 seconds)
    (54/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.054356037 seconds)
    (55/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.958059601 seconds)
    (56/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.946656498 seconds)
    (57/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.120498102 seconds)
    (58/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.189444657 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.019514103 seconds)
    (60/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.053900191 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.942582368 seconds)
    (62/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.9522682 seconds)
    (63/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.065256891 seconds)
    (64/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.264309392 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.843136506 seconds)
    (66/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.36381921 seconds)
    (67/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.954860932 seconds)
    (68/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.999689126 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.936703011 seconds)
    (70/309) benchmarking ("map", abs, Int64, true)...
    done (took 3.925164544 seconds)
    (71/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.040783193 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.042517054 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.938471375 seconds)
    (74/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.147587257 seconds)
    (75/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.087812562 seconds)
    (76/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.077991741 seconds)
    (77/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.101843771 seconds)
    (78/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.160756071 seconds)
    (79/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.32018645 seconds)
    (80/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.197081906 seconds)
    (81/309) benchmarking ("sort", Float32, false)...
    done (took 5.608063231 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.184438898 seconds)
    (83/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.107217711 seconds)
    (84/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.951662272 seconds)
    (85/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.014317981 seconds)
    (86/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.087262443 seconds)
    (87/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.206567445 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.701672094 seconds)
    (89/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.311241658 seconds)
    (90/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.045142378 seconds)
    (91/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.944621584 seconds)
    (92/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.26086982 seconds)
    (93/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.957489539 seconds)
    (94/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.019238863 seconds)
    (95/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.939738952 seconds)
    (96/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.037479297 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.334869897 seconds)
    (98/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.057846409 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.325349916 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.94256792 seconds)
    (101/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.003712137 seconds)
    (102/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.507940065 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.349732609 seconds)
    (104/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.39478887 seconds)
    (105/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.075326107 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.942045943 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.244146127 seconds)
    (108/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.952030447 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.179871063 seconds)
    (110/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.949785501 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 9.805136186 seconds)
    (112/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.278790186 seconds)
    (113/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.126952694 seconds)
    (114/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.169812572 seconds)
    (115/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.336711734 seconds)
    (116/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.020359089 seconds)
    (117/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.944623191 seconds)
    (118/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.081180363 seconds)
    (119/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.94139105 seconds)
    (120/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.044069055 seconds)
    (121/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.075354044 seconds)
    (122/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.524746035 seconds)
    (123/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.521523437 seconds)
    (124/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.336630253 seconds)
    (125/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.948226144 seconds)
    (126/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.309696185 seconds)
    (127/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.043792917 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.193494482 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.332074425 seconds)
    (130/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.084249539 seconds)
    (131/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.945943378 seconds)
    (132/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.058144923 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.262007562 seconds)
    (134/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.073370262 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.242291746 seconds)
    (136/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.953309122 seconds)
    (137/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.578035841 seconds)
    (138/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.191646328 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.545481883 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.852100808 seconds)
    (141/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.253990959 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.267920334 seconds)
    (143/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.95928622 seconds)
    (144/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.322728956 seconds)
    (145/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.15261707 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.272878979 seconds)
    (147/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.804312895 seconds)
    (148/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.27667105 seconds)
    (149/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.141447342 seconds)
    (150/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.974189782 seconds)
    (151/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.130048898 seconds)
    (152/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.967472596 seconds)
    (153/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.386648473 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.297694712 seconds)
    (155/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.60479952 seconds)
    (156/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.35214125 seconds)
    (157/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.042258274 seconds)
    (158/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.409219178 seconds)
    (159/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.085520894 seconds)
    (160/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.948638014 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.821680054 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.978579422 seconds)
    (163/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.176459642 seconds)
    (164/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.297527575 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.94892597 seconds)
    (166/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.985218544 seconds)
    (167/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.150014726 seconds)
    (168/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.047523277 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.086813204 seconds)
    (170/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.08021299 seconds)
    (171/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.043535317 seconds)
    (172/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.962308207 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.257825989 seconds)
    (174/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.36685234 seconds)
    (175/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.246507956 seconds)
    (176/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.340148341 seconds)
    (177/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.883720865 seconds)
    (178/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.129290787 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.959232152 seconds)
    (180/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.950711051 seconds)
    (181/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.994105545 seconds)
    (182/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.101631949 seconds)
    (183/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.478145721 seconds)
    (184/309) benchmarking ("sort", Int8, false)...
    done (took 4.912593127 seconds)
    (185/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.750237194 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.540395399 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.088611592 seconds)
    (188/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.023489681 seconds)
    (189/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.954716525 seconds)
    (190/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.235738586 seconds)
    (191/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.03428483 seconds)
    (192/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.94736073 seconds)
    (193/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.944311011 seconds)
    (194/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.035591578 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.29103297 seconds)
    (196/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.962774873 seconds)
    (197/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.07071989 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.945286201 seconds)
    (199/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.023039432 seconds)
    (200/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.404261076 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.947439941 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 8.535693877 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.999985401 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.074451451 seconds)
    (205/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.944455982 seconds)
    (206/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.283783302 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.947607439 seconds)
    (208/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.217680682 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.949246852 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.18097008 seconds)
    (211/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.655106122 seconds)
    (212/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.622876094 seconds)
    (213/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.053691347 seconds)
    (214/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.312882614 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.35342293 seconds)
    (216/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.43122027 seconds)
    (217/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.615016686 seconds)
    (218/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.259430135 seconds)
    (219/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.0329383 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.239054207 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.591000125 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.9454282 seconds)
    (223/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.499661587 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.209933841 seconds)
    (225/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.406543872 seconds)
    (226/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.086054529 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.357755935 seconds)
    (228/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.950650675 seconds)
    (229/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 3.913230086 seconds)
    (230/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.602126218 seconds)
    (231/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.054343279 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.958152845 seconds)
    (233/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.192550727 seconds)
    (234/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.95072424 seconds)
    (235/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.850275879 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.056766251 seconds)
    (237/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.959053405 seconds)
    (238/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.17486345 seconds)
    (239/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.350267009 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.948311315 seconds)
    (241/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.220541179 seconds)
    (242/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.965221591 seconds)
    (243/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.026288346 seconds)
    (244/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.076321687 seconds)
    (245/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.268728911 seconds)
    (246/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.263303147 seconds)
    (247/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.204996861 seconds)
    (248/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.363699557 seconds)
    (249/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.954205146 seconds)
    (250/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.95061327 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.069958541 seconds)
    (252/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.946785574 seconds)
    (253/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.306379708 seconds)
    (254/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.969911661 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.281760486 seconds)
    (256/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.133899634 seconds)
    (257/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.965235434 seconds)
    (258/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.424065744 seconds)
    (259/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.512420299 seconds)
    (260/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.373208409 seconds)
    (261/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.137422295 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.958104724 seconds)
    (263/309) benchmarking ("sort", BigInt, false)...
    done (took 6.955233944 seconds)
    (264/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.727951492 seconds)
    (265/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.158054637 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.612198701 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.743022555 seconds)
    (268/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.040761064 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.969246744 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.296312262 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.953309128 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 8.376803596 seconds)
    (273/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.780844589 seconds)
    (274/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.040432644 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.250331751 seconds)
    (276/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.016710291 seconds)
    (277/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.711044225 seconds)
    (278/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.953463289 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.918142281 seconds)
    (280/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.96102083 seconds)
    (281/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.189226938 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.951793367 seconds)
    (283/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.070485659 seconds)
    (284/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.951999926 seconds)
    (285/309) benchmarking ("map", identity, Int64, false)...
    done (took 3.667357155 seconds)
    (286/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.328968 seconds)
    (287/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.241901516 seconds)
    (288/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.142612232 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.089497921 seconds)
    (290/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.161256223 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.987749506 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.88408186 seconds)
    (293/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.962312431 seconds)
    (294/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.712478246 seconds)
    (295/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.950784801 seconds)
    (296/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 4.020806077 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.987147284 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.852184299 seconds)
    (299/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.072371531 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.777381735 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.043478423 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.983513206 seconds)
    (303/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.032599251 seconds)
    (304/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.96035168 seconds)
    (305/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.01033259 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.035439328 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.166403947 seconds)
    (308/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.132224669 seconds)
    (309/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.758933932 seconds)
  done (took 1033.556009158 seconds)
done (took 1035.485552938 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.98327554 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.971125664 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.956030112 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.974359403 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.064568526 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.996322344 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.966075044 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.955846171 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.002124605 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.00121899 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.948814754 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.993050556 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.954075645 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.95086722 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.951186585 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.96770084 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.26006631 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.987498549 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.967564967 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.961511404 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.967481774 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.947557641 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.999655278 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.989953466 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.952852951 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.953551577 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.95174601 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.968255515 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.059831143 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.950323168 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.95290535 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.959257287 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.258566085 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.979311862 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.944914805 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.965946713 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.958406533 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.959108516 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.949294766 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.978846064 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.404577467 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.950909682 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.947761071 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.94397069 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.944043172 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.950367522 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.943148212 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.954222625 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.958401763 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.95953011 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.396259025 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.965431136 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.945766614 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.943014181 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.955891076 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.942030077 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.946469751 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.959746321 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.959743911 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.957581385 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.235869743 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.980064165 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.945093706 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.957171158 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.94868584 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.429030923 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.945532092 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.945998507 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.397440358 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.953759902 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.427132077 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.954144406 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.940399972 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.949640153 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.968397177 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.244657938 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.967559956 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.935239114 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.943836681 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.931837166 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.947375548 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.950174556 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.940258427 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.933073186 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.94937592 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.9779022 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.94757511 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.933639546 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.942850062 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.949431267 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.940258132 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.943629717 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.937150246 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.928732867 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.945341582 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.93612561 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.933634904 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.937415063 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.938265221 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.945245263 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.388485338 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.955735814 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.932894077 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.930219909 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.931337779 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.946594565 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.387813096 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.942022577 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.954933317 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.982333828 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.932656369 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.226141252 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.969682954 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.949144398 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.943144025 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.934718991 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.930729009 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.229490672 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.417677743 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.95329074 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.932126178 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.929545625 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.953702253 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.933841616 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.930013934 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.240330178 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.967993855 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.950964133 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.05164401 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.94379648 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.961844643 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.926680181 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.934777623 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.973095534 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.942815702 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.958603212 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.928973041 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.948996986 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.943302768 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.923087251 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.93756917 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.939318826 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.929463764 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.93381834 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.922556799 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.971033654 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.940142173 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.940826652 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.946145086 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.047798203 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.922916208 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.220458745 seconds)
done (took 304.911094386 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.005651987 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.919958608 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.01211436 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.920262461 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.027964238 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.998451092 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.925259459 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.918835014 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.919002962 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.433773901 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.918257135 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.930263423 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.919020307 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.917774977 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.009389733 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.917819051 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.916844812 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.200758605 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.918847109 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.00467193 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.915563424 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.919498023 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.915856376 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.440234503 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.91360812 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.914080723 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.000206 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.914381013 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.24033 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.914363717 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.911479465 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.203687218 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.995367555 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.92384066 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.918578485 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.919206887 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.007475018 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.920577258 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.98264143 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.982450488 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.002789728 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.946853587 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.908183616 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.90770284 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.911661964 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.909565518 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.90725564 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.938738134 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.909095489 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.914021907 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.190055889 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.909898878 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.912580782 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.904547352 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.909058413 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.916814267 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.904056727 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.904296019 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.98835222 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.907729767 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.974726443 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.478980687 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.415568855 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.902046499 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.903772832 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.901275201 seconds)
  done (took 187.721071474 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.970132489 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.972790744 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.967843031 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.905745964 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.949616906 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.970599995 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.905674485 seconds)
  done (took 15.473600617 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.906684851 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.899946024 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.961230113 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.958253689 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.900238849 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.079449383 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.91047456 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.908717389 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.926415302 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.901560061 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.560723129 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.959545766 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.906494173 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.898241016 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.911049305 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.96954917 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.901405682 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.901407242 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.008793523 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.04913324 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.903950666 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.906580286 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.926850847 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.911772672 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.899496144 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.900704973 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.901094211 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.907171 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.900416061 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.899390851 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.902532129 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.963901712 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.900352988 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.899149329 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.900679083 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.901946112 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.900791352 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.899653951 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.900787681 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.898729281 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.899864905 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.900354889 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.901248158 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.900288711 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.900709996 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.924196092 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.902036387 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.900858071 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.900968412 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.901480386 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.928346031 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.902493828 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.900381777 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.90702573 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.949434829 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.909406392 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.903410671 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.90027996 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.90237886 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.902355112 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.901122394 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.052166143 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.961726306 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.900878208 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.961299478 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.056500755 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.901778468 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.90317967 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.901990778 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.994607866 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.901819419 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.961189763 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.902057382 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.021703504 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.902334963 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.083024465 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.925875759 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.906302502 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.906227759 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.901779177 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.910212158 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.902801121 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.904543386 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.909468618 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.906828981 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.904110842 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.902773374 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.904689004 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.91024145 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.902794562 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.954049193 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.903360356 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.904282828 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.043811994 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.903937303 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.014219659 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.930077821 seconds)
  done (took 209.178748515 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.912065823 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.912147659 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.906153013 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.921308662 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.905629969 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.904401822 seconds)
  done (took 13.29529318 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.906062521 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.907842706 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.902942811 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.903079085 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.905938345 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.905338149 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.904227314 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.905705575 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.910096244 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.903807395 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.904938423 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.906153481 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.906641795 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.90461108 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.903712454 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.904585493 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.904334233 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.904516053 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.903994251 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.904891708 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.03906289 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.905483414 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.9058942 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.912305453 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.910191766 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.904748227 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.918300246 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.905185841 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.904855309 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.912895682 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.911191792 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.906900164 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.911518183 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.912575886 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.909500403 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.912468648 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.909758162 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.907247939 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.906341378 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.907403296 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.906522554 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.907372053 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.906464162 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.908261497 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.909822666 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.916661651 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.911358339 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.920602315 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.907043571 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.907664662 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.908222422 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.906568884 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.907943453 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.908248043 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.914746021 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.91497168 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.913262066 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.907798356 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.908333071 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.915276178 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.910990427 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.908820669 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.909420168 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.911576336 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.912794466 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.908486838 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.913574704 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.913057612 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.90968272 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.907841984 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.9087618 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.907095608 seconds)
  done (took 140.38456978 seconds)
done (took 567.926604823 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.926364534 seconds)
  done (took 8.763396346 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.137771059 seconds)
  done (took 9.117561699 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.900644216 seconds)
  done (took 10.789264721 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.987055425 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.007245214 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.975993945 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.957927468 seconds)
  done (took 29.826576003 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.199792297 seconds)
  done (took 9.086047147 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.968948237 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.955411119 seconds)
  done (took 15.880244308 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.092527329 seconds)
  done (took 8.979394258 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.383652371 seconds)
  done (took 9.284152392 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.967829189 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.965574357 seconds)
  done (took 15.842876725 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.956964214 seconds)
  done (took 8.841386855 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.741767215 seconds)
  done (took 9.714664096 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.959432012 seconds)
  done (took 8.86222876 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.036561543 seconds)
  done (took 8.918857411 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.121849179 seconds)
  done (took 9.001822058 seconds)
done (took 164.745577474 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.95724204 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.946699207 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.949389254 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.945253694 seconds)
  done (took 29.677265638 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.980745989 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.979039776 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.988879624 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.979334873 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.969897176 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.969812275 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.979653137 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.979664223 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.969823575 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.99549315 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.980460365 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.976235439 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.980389583 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.989993756 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.988532692 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.978097718 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.980147123 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.980343706 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.970248581 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.989864951 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.977530432 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.97960344 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.945669106 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.945969579 seconds)
  done (took 49.329620652 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.132471193 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.012064291 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.099510763 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.992587982 seconds)
  done (took 10.111827157 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.946705103 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.009958148 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.997734342 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.992351345 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.04030659 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.050008361 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.999445335 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.156558622 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.060835581 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.070171397 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.951811387 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.965201194 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.969668053 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.993611252 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.04547867 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.942247752 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.941992099 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.058486152 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.005344281 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.157518569 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.941685093 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.994840305 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.017938507 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.996726321 seconds)
  done (took 50.182847364 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.939197548 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.947566937 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.947841908 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.939795323 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.938942358 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.937976358 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.94575136 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.940274926 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.960743146 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.93795075 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.935842083 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.936495391 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.94189636 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.935762951 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.933439585 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.946768341 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.94764589 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.934278516 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.940942964 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.937058315 seconds)
  done (took 40.696036089 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.927315226 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.773075501 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.271566682 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.181756282 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.923976002 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.92385473 seconds)
  done (took 31.861176346 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.93368193 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.931456956 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.918921364 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.978727301 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.059192526 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.926851801 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.919065004 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.931474815 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.965606637 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.985089152 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.937409977 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.945565405 seconds)
  done (took 25.285975385 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.915021664 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.919959792 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.912908205 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.923111889 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.920821824 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.91854187 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.917501444 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.90949289 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.925335581 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.929531038 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.919384893 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.921815974 seconds)
  done (took 44.88523774 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.125751111 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.136273559 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.126741041 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.540729841 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.908943946 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.810416156 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.545219367 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.634328815 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.223246547 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.907654377 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.894339788 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.808024519 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.167774152 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.928022319 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.184589469 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.856330485 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.92753633 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197651563 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.928501795 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.929745327 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.229247554 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.985723778 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.140701853 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.974042401 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.141416046 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.423327175 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.182728172 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.185804383 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.264911682 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.985237933 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.252565582 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.982579397 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.937026133 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.94163568 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.930652754 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.93962413 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.198137718 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.929138516 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.052970183 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.931954872 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.85438615 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.289681788 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.052020901 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.340732735 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.048912252 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.16997388 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.933225895 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.135558161 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.99756694 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.227197499 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.042171551 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.141691527 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.85428058 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.292168192 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.061967816 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.931507531 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.933833517 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.62873619 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.170526981 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.010603414 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.291073301 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.05170121 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.931994099 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.018007839 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.930155678 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.042694114 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.301847437 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.935810699 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.930370628 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.937932878 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.02629069 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.143148508 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.929750484 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.930651899 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.950181816 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.933068875 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.282740585 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.51309988 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.92677719 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.494553972 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.428812029 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.907188686 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.427342109 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.983353004 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.209327861 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.152359429 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.114441726 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.175903567 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.834870304 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.935853554 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.737418606 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.012659662 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.008822661 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.931367342 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.141602872 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.284901824 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.056065862 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.9309297 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.857115869 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.943217091 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.132706203 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.42817204 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.996114501 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.932700825 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.932242387 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.935932568 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.933763 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.948625421 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.944973054 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.448855781 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.213145573 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.03641121 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.187903821 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.933179848 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.611910763 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.201722687 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.059259197 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.494213251 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.065921373 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.931576578 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.073407731 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.939825802 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.933232545 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.303811312 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.338290239 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.144117171 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.180863634 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.010699252 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.965477612 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.937145806 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.017632135 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.155961069 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.932124946 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.189590561 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.177261888 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.586523354 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.006957314 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.004671338 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.938886198 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.143481434 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.01172457 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.454854061 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.160342537 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.536089341 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.924286729 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.431855292 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.239236836 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.32206847 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.946164964 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.15022664 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.970572226 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.635410546 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.857077676 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.93514592 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.263849756 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.965586052 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.022723602 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.932648687 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.932086349 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.93895154 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.012994117 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.000765824 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.004933405 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.857981089 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.933384869 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.934215599 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.931682063 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.452688495 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.620073751 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.223504111 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.932116819 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.992069097 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.933237273 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.536162002 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.935956166 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.054779215 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.021569958 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.669981762 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.962287838 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.244734503 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.357047789 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.051273216 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.932653495 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.939587283 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.632323101 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.940997523 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.632568281 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.215793392 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.93500888 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.382717806 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.999071933 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.121214391 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.951208109 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.933881258 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.936041205 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.934744843 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.136804852 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.440888433 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.309276858 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.295805347 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.02221825 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.206172098 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.12764698 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.481362891 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.640614892 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.455553709 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.160543181 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.936421162 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.936943174 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.583952959 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.941541364 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.150533714 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.136957979 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.2072566 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.231797942 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.352597303 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.939028811 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.94937712 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.17719338 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.934725217 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.366684217 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.003562156 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.332689317 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.753476599 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.200205114 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.006998294 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.945867036 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.597385108 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.074583205 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.895032448 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.053380034 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.862164785 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.630989676 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234619513 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.21509871 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.919650774 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.277341243 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.234767832 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.248428045 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.572417797 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.936609731 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.983376289 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.017050417 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.943042558 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.493479196 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.985099027 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.9818899 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.940241026 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.936734353 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.938761516 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.612893918 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.016365116 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.056516246 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.697103783 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.468614799 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.855252456 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.207747662 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.995720977 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.3764465 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.981335216 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.150428285 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.942603239 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.541033911 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.993951122 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.211212204 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.899003163 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.150955649 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.141106282 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.972533845 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.944752085 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.8645798 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.81700551 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.942661738 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.158365832 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.840333554 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.941074304 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.235976469 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.58470928 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.981770834 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.940620051 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.317796237 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.404617246 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.226311298 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.947631812 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.152479637 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.061919883 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.858146402 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.429787732 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.521262406 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.6393235 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.953580049 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.141739955 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.323852415 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.274548885 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.984640827 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.011156531 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.213424126 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.921807051 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.939156997 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.460999235 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.037543957 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.181037976 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.248363849 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.483973845 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.365645663 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.347639108 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.998289534 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.155223625 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.303177872 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.187034943 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.942977118 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.032246991 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.15426307 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.220748766 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.828478091 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.650477887 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.182447629 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.94586317 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.891149277 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.14818516 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.439374087 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.293818658 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.483338886 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.166045822 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.976517045 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.432189572 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.957732402 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.881461204 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.945864892 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.893120243 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.159900089 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.164556422 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.989928647 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.50039603 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.261490403 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.364239193 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.220648565 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.989359816 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.869915183 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.640023055 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.897732705 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.019324383 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.987397501 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.017046641 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.948394366 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.147911272 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.383946695 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.991962587 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.477815242 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.148587427 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.251048773 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.217441617 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.250834576 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.90518021 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219253248 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.896207037 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.606296146 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.040021117 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.039481379 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.946543319 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.949290086 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217328992 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.323893354 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.571288819 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.988351387 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.332952303 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.055351542 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.94854062 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.952294707 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.456485109 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.187274259 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.160744252 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.024090031 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.075928093 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.020319384 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.46143418 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.952313267 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.951969489 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.084436761 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.948879926 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.664220925 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.250090449 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.68695624 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.150894861 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.467929707 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.85495488 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.172264355 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.99951886 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.947729832 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.054234012 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.952765193 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.188038127 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.219346718 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.713634858 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.953858588 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.949227794 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.858556703 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.600463619 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.185887964 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.962687616 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.007426739 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.952737482 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.067898153 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.952660376 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.2102409 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.004281094 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.948939672 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.956554144 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.163610811 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.463028334 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.96603876 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.649157458 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.152896854 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.95578828 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.43977641 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.400348976 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.236486315 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.999038001 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.17572962 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.199230133 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.469404317 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.17578772 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.955038591 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.177122503 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.952286379 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.220866529 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224692287 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.951424542 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.165396957 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.45743074 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249105945 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.963171584 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.839999316 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.954659943 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.21196049 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.005702031 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.950887145 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.959639356 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.491399687 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.636014371 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.413940274 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.105498083 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.293135345 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.710571238 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.70892355 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.954656613 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.9550831 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.60407431 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.675295276 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.165647899 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.23928943 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.897730939 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.155926096 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.657082507 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.953191766 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.217260443 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.878276265 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.955405741 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.609339388 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.231787001 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.88818347 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.958204441 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.517793625 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.952434379 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.038234689 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.954834941 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.070351849 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.217068692 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.340426565 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.070835373 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.592565962 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.628950246 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.89495644 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.99750744 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.75931126 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.519910766 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.624868829 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.977148516 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.970068439 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.879608048 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.956892122 seconds)
  done (took 1683.662925053 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.9762509 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.009506684 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.966362892 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.985284426 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.016759452 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.034247887 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.979967139 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.967503732 seconds)
  done (took 57.818410941 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.944632737 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.95772221 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.947848217 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.945516402 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.944250125 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.939003144 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.095429516 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.949575025 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.938184768 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.938559777 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.935354344 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.933789766 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.204576383 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.956208407 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.934792125 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.935473551 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.938834662 seconds)
  done (took 75.317928697 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.938256728 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.232818648 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.984023463 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.936266864 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.787648272 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.95100903 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.020642359 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.97491681 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.940405289 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.083546674 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.232621942 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.991899494 seconds)
  done (took 90.937983452 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.94205988 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.936362449 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.936618509 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.936398929 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.93623102 seconds)
  done (took 11.556419795 seconds)
done (took 2203.270849857 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.190875356 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.993823673 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.038382347 seconds)
  done (took 5.896145135 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.085169881 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.131207264 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.241532111 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.006799909 seconds)
  done (took 10.335516843 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.1956119 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.300730277 seconds)
  done (took 6.360832778 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.300880206 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.947382551 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.324653935 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.93966842 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.939166292 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.941726536 seconds)
  done (took 22.6899833 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.937869981 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.938137904 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.939111341 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.937707264 seconds)
  done (took 9.617684654 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.934539983 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.61978966 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.935884927 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.950822745 seconds)
  done (took 21.305609901 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.079852632 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.948031367 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.076475739 seconds)
  done (took 7.9693052 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.157767588 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.94775981 seconds)
  done (took 6.971499136 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.082066021 seconds)
  done (took 3.94748709 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.966045498 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.210592796 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.410392275 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.459212792 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.523633354 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.716177123 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.263091048 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.21495501 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.335397656 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.373400866 seconds)
  done (took 25.337937056 seconds)
done (took 136.059127445 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.301561252 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.966270422 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.139682689 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.303950654 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.164770694 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.140262414 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.154678749 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.287652168 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.977147408 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.966149024 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.301454384 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.165325423 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.097388524 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.959402141 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.106318564 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.960777001 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.161625481 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.314849269 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.976070734 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.196934685 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.161048696 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.950291303 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.143554336 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.964628751 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.162166381 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.091847551 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.490160776 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.961187749 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.128291229 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.501779705 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.094423855 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.346781486 seconds)
  done (took 170.505917041 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.940388399 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.940371667 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.941242415 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.941307884 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.237491407 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.940036698 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.941226443 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.939667977 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.20432278 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.189829441 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.940896889 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.228696792 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.940321187 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.940942942 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.943289654 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.94245558 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.351512543 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.941581166 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.940287761 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.94144809 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.942698273 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.079411992 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.941747798 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.08971011 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.333874087 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.940780304 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.942461252 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.941487897 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.944668465 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.942157905 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.94473606 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.942773525 seconds)
  done (took 210.185237299 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.898867848 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.941523484 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.941751942 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.942914448 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.943704461 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.94557456 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.944440194 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.94323794 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.623638771 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.611058408 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.942623805 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.944841989 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.943041859 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.944018715 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.943703612 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.944282085 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.941777311 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.937635046 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.942224686 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.943594126 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.944610653 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.62396271 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.947730016 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.634203391 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.943108188 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.944963942 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.943773017 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.944377768 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.948830095 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.948266461 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.947211348 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.945096972 seconds)
  done (took 222.753323875 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.183189433 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.945895654 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.946871232 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.956149417 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.94631338 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.944510522 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.953007518 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.19308244 seconds)
  done (took 19.946965565 seconds)
done (took 625.27288418 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.316982976 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.689104677 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.08338744 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.968863361 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.20853442 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.012068148 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.962686842 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.025370336 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.791410767 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.039633165 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.354340593 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.974043408 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.717379478 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.993544499 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.085880419 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.023377698 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.32367123 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.670305308 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.109812393 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.627281085 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.123366111 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.916952708 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.042887699 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.83107564 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.373266715 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.950728101 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.987262405 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.32882083 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.969469196 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.11864904 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.610838408 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.233552969 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.980716603 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.967062695 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.01759378 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.996222588 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.173288944 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.977959754 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.084181454 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.711526881 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.628379598 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.679133231 seconds)
  done (took 103.5546439 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.955580981 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.951616902 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.951998302 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.952134222 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.960851507 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.951875333 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.952479902 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.952267345 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.953207392 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.953093745 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.952257799 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.961611374 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.952336276 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.961053124 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.952120125 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.953554466 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.952496329 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.962030527 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.95333139 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.953179856 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.954815327 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.954150305 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.950285257 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.953375416 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.952835868 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.953993483 seconds)
  done (took 52.69715467 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.949005196 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.110643177 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.189084272 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.969864984 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.949174644 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.952068254 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.978295579 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.958142592 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.951876829 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.950453805 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.065003999 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.955385995 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.961938346 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.18871458 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.966930895 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.949707823 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.949706287 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.950664207 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.12050591 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.966919834 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.9808673 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.958616275 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.979367162 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.966632277 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.952349283 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.95084669 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.95344581 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.384739107 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.963275957 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.066037736 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.994830056 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.986519332 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.308088913 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.204480953 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.006834232 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.961018778 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.951462076 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.074215507 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.957397317 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.952964879 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.979653083 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.960476953 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.195349239 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.473850645 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.96771236 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.952017448 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.383972501 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.084338964 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.993475015 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.965509603 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.20118335 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.969704429 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.952530923 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.952861512 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.988946979 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.966183216 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.951887695 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.250987098 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.968010979 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.981103013 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.959884521 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.95272485 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.12659373 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.962446491 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.116719415 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.963521508 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.959055686 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.953906034 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.195263028 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.971368897 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.483711184 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.96833438 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.952891185 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.068574579 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.121496928 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.410961258 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.967618852 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.127829121 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.326562798 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.992140658 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.965013831 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.371105188 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.996234155 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.964950601 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.953589209 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.954998778 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.95312748 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.997707052 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.980446614 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.404476446 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.483168889 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.269925262 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.994952505 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.968014175 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.954562048 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.253307323 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.965550385 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.954298155 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.185103954 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.496639228 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.971182609 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.962192185 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.461908105 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.971157262 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.984486106 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.967276876 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.20726822 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.972624843 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.998588832 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.954580225 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.962167061 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.958126669 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.984994005 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.965901639 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.955973451 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.457965067 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.092250256 seconds)
  done (took 242.088828344 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.956971217 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.955095501 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.954750202 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.954072459 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.953604624 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.956183804 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.955000663 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.954348637 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.956223953 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.954229405 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.955140981 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.954331526 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.954925226 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.956297147 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.987872761 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.958239327 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.443674764 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.957011879 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.956512477 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.95632344 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.519356668 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.959986284 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.954688025 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.957594922 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.956936539 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.95454248 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.957743596 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.985171039 seconds)
  done (took 169.763559618 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.956768658 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.011431065 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.970667182 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.003895334 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.970712681 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.957173061 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.0514648 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.973433307 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.9618616 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.958675027 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.957286689 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.989360961 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.965165751 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.05330538 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.988031772 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.062295357 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.058378086 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.964828507 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.957949082 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.958158332 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.004778733 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.97357471 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.989321362 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.019958398 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.971343186 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.014343512 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.971201172 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.959316145 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.957373244 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.069658354 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.978865761 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.990444384 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.993971756 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.979761919 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.075566733 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.075149012 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.061759986 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.060763997 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.965029925 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.960055883 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.960484871 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.960543803 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.015423742 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.974194604 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.960739956 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.073968402 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.980243427 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.961489624 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.960008439 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.960581269 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.973247849 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.977610386 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.995465422 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.083793504 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.00904003 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.986065686 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.054378119 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.076966065 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.960639855 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.05586829 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.966178174 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.073261806 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.981707881 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.961177306 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.962454475 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.963585266 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.009510007 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.070966741 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.061549354 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.966442133 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.055944932 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.015067278 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.974303436 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.961724222 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.963068434 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.016508216 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.069723003 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.015940201 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.023024913 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.996943824 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.969558595 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.960908018 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.962771902 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.989773821 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.970134703 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.07562726 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.075603777 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.967775159 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.963344716 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.96270593 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.963599779 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.985935237 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.025586962 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.002872038 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.068503947 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.999200703 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.001815039 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.971642915 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.976981437 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.966319359 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.99800029 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.970446855 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.974846555 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.240329853 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.994839927 seconds)
  done (took 211.862406665 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.339907014 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.00685975 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.035211268 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.225586886 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.314825946 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.835154762 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.001140037 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.011473243 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.020058224 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.139138955 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.071437325 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.05254189 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.001198822 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.98531535 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.007511976 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.023350689 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.03607453 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.30942638 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.196432448 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.478880796 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.0016334 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.300630839 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.34420329 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.372198408 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.05418687 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.395322445 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.578903744 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.106842155 seconds)
  done (took 65.139163619 seconds)
done (took 846.977716921 seconds)
SAVING RESULT...
DONE!
