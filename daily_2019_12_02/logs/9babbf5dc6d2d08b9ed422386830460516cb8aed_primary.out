cset: moving following pidspec: 16258
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.40836484 seconds)
loading group "string"... done (took 0.580189851 seconds)
loading group "linalg"... done (took 7.288283997 seconds)
loading group "parallel"... done (took 0.157254757 seconds)
loading group "find"... done (took 1.168486485 seconds)
loading group "tuple"... done (took 1.820875186 seconds)
loading group "dates"... done (took 1.332193673 seconds)
loading group "micro"... done (took 0.221188584 seconds)
loading group "io"... done (took 0.957922318 seconds)
loading group "scalar"... done (took 38.372037027 seconds)
loading group "sparse"... done (took 12.067061729 seconds)
loading group "broadcast"... done (took 0.96374506 seconds)
loading group "union"... done (took 12.928914745 seconds)
loading group "simd"... done (took 4.445930602 seconds)
loading group "random"... done (took 9.150356635 seconds)
loading group "problem"... done (took 1.85038025 seconds)
loading group "array"... done (took 20.941509194 seconds)
loading group "misc"... done (took 1.688750234 seconds)
loading group "sort"... done (took 3.354212391 seconds)
loading group "collection"... done (took 17.40999553 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.521139012 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125531437 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118355906 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.1195767 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147353647 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11225868 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12352788 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084144808 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.791716418 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149898543 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117513381 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.432459517 seconds)
done (took 5.146621832 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176407719 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085884023 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084079076 seconds)
  done (took 1.295124354 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066745646 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126254546 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067458103 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066302202 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066161408 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066134718 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066161151 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065420222 seconds)
  done (took 1.648376711 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075584914 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070759199 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067669087 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067328115 seconds)
  done (took 1.408772793 seconds)
done (took 5.730419466 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.797565885 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.20222797 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187034615 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.411013518 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130692927 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158341023 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.654179829 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.307829337 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.188150055 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079815655 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104880644 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.327888667 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108817467 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.638745179 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077091502 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090147377 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136301168 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.41427283 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066630107 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081731748 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.08847597 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127821868 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08474912 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073793476 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145783461 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067261446 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.137130802 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080232474 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065933162 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.21316144 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172038864 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.699044271 seconds)
  done (took 10.286336207 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099920425 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098723993 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068465152 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123585233 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097801317 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069512699 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070750035 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066929627 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08716433 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128095183 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088461449 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10178389 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065069368 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06863821 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084704313 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204161178 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081812152 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081091505 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070691332 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075692743 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108391932 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077986713 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077335528 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077083128 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128712785 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179780085 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097571686 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097518196 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066414942 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080701283 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115790842 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125505104 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067414719 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06681003 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124133788 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093656897 seconds)
  done (took 4.579098815 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.006561065 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145978181 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089995879 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134745592 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064365742 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108706824 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065256789 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081293587 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210745915 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.383080372 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.588511761 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110884641 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10378508 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067361226 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068151342 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066496208 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.470598585 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.094850165 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105698834 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08103545 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069365727 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068411335 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366019899 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067189922 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063707563 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067390032 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056738461 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12479282 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06767358 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.952240127 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.131871082 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067341037 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100856491 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162022325 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087397931 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140735632 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066885619 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.195442451 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153036249 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070569543 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066589307 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084769211 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103056568 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112759758 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064912417 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066519191 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161728198 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063942449 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078675087 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.643007974 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154936338 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095809235 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063081817 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.255124946 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088391404 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068919547 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.091835378 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064254144 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.184053494 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135487729 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069858351 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068426772 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070356962 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071698628 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.37102487 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065595063 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.8996593 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070091715 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076256497 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068653685 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069199755 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075452202 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072162408 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08690777 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065788142 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074534116 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065605186 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065596504 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.065988145 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083056712 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064442927 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.374384518 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066049465 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068155897 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063517331 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063897546 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088832882 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096570209 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066673166 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06477246 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099751435 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067789089 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065242883 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10590359 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065897834 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083022227 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068822523 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112553299 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063931039 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.167891948 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.099135668 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06548753 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09631312 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069500701 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098105354 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08057597 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067615642 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.419653511 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064601371 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064778032 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067976816 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065206817 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067592419 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06582157 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078762772 seconds)
  done (took 21.023039023 seconds)
done (took 38.019620547 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.237836783 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074400925 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073724446 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081495507 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073581435 seconds)
  done (took 1.756365819 seconds)
done (took 2.950758441 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122920286 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099618741 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064022377 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097068662 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063847787 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101893295 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100680873 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081509524 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100419923 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063862338 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096942795 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06364449 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063811026 seconds)
  done (took 2.335420713 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085283586 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084163396 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069912201 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082987106 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063667597 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08257106 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081465013 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088858524 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080988111 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073202814 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063456177 seconds)
  done (took 2.047350036 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084742932 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087380846 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07227452 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084344169 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063624326 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082495888 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081680165 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08580336 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081995529 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07407499 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064417378 seconds)
  done (took 2.045332894 seconds)
done (took 7.609688738 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079507819 seconds)
  done (took 1.253323078 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.596718731 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.219142326 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08058874 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112057779 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.188222045 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118378271 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.274355401 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086139015 seconds)
  done (took 9.039966053 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.090436516 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068359752 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067768498 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.081281224 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068046771 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069288785 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06871936 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071424201 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071151414 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070237209 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071092517 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069940532 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070394389 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068276878 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068869794 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070907148 seconds)
  done (took 2.400834713 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094052262 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093677983 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075636218 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075425632 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071378849 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070846346 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07356357 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07272809 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070242295 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071483996 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073870191 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073247438 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070789692 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064151603 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073423074 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074646897 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07064494 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073465416 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.0736112 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074305006 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073871537 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063501445 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070865445 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073574352 seconds)
  done (took 3.064810404 seconds)
done (took 16.943412589 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.117528859 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073749769 seconds)
  done (took 1.373389029 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084073852 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084660865 seconds)
  done (took 1.360315292 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086619193 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064379345 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091008011 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077921795 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065579961 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065176541 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088684368 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065225234 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065990111 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066066439 seconds)
  done (took 1.928073643 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070304534 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080953919 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072504674 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083043487 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075302609 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063796992 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07205562 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066824923 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077350487 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061906466 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070718612 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082524323 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070400298 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083966553 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071857184 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068252892 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069941319 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067424781 seconds)
  done (took 2.504443065 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067612445 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068192388 seconds)
  done (took 1.334873082 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06888279 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065093279 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069008276 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067765678 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064501575 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06391956 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064852506 seconds)
  done (took 1.657424963 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.389497645 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111742398 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.314721597 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071208365 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082213675 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256028147 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066355722 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070159273 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070091175 seconds)
  done (took 2.672096053 seconds)
done (took 14.031744319 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082148366 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087961617 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099050718 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.374178208 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091185274 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.0655689 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113270191 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193028195 seconds)
done (took 2.318126189 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214238545 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.637383396 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.405589074 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204919934 seconds)
  done (took 2.447586749 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346303314 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087491084 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058732729 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066543341 seconds)
  done (took 1.769386349 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067911418 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070219696 seconds)
  done (took 1.34443224 seconds)
done (took 6.984557592 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068509218 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086261005 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06610621 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062963077 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066166768 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063013129 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062991909 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065711442 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06542015 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066137849 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068197433 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065796467 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0656823 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062970014 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063449061 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065540959 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063063213 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062875894 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06342473 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065878466 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062934863 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063457462 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063040504 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063113315 seconds)
  done (took 2.813359336 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087008768 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067982477 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072993478 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073046753 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071808835 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073023764 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07110719 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066048978 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071313957 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068390242 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068887291 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069308481 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068069221 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069176105 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067750092 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069594425 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071562667 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065780944 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068109985 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069714036 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070725786 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065914979 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069782305 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070669103 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.0689706 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070663085 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068036821 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06581561 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070881659 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069204418 seconds)
  done (took 3.316533387 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071233802 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06341707 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063686938 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07079769 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063211276 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06416441 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062670832 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063611017 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064168658 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062808239 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064505373 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062802395 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063181192 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064576479 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064122091 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067111657 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078705246 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063772425 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.0627496 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063503582 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066598643 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062836243 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063129863 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062812513 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063211277 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062826298 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063621187 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062622894 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063667396 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063070458 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06607479 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066279108 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062752711 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070181862 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066466649 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062430147 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066923694 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062066362 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06334518 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062326402 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062265048 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062632669 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062844572 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070288729 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062876946 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064429317 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062935401 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064412875 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063421221 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065586376 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.177118203 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062588944 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064532593 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063927169 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067535839 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061782864 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063456655 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062348931 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063160891 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062524767 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062046922 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06231969 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065369565 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062892431 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077160995 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069559533 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062343618 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063942124 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063498257 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065459654 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06470087 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076584307 seconds)
  done (took 5.990321277 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093607407 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087741866 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064965298 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06470038 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061628067 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063372517 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069475743 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063436689 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064825289 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081806009 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063944727 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064494165 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064465695 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06684858 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063441471 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064622369 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071994285 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060980508 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06354679 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066986914 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063393069 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069531468 seconds)
  done (took 2.727382021 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159482784 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069583803 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104978462 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074972915 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069302187 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074838568 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069162384 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069439132 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070105662 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067039693 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067197081 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069842438 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069344459 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067051143 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066631836 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066990501 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069258767 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066753777 seconds)
  done (took 2.5927845 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079067944 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067259854 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086099673 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066215993 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065550955 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068167784 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069875073 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073821576 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068135745 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065642695 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073208757 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067652586 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067806192 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065357722 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06770769 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065004982 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067586472 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065184732 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073280346 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069558012 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070044009 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073527701 seconds)
  done (took 2.75793457 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082165259 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067239377 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081648312 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067698526 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061725687 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063618378 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069668063 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06516834 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069892444 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067187118 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0645656 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063433522 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068325577 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064776132 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068231586 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064852748 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067015846 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064984578 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066910144 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060760693 seconds)
  done (took 2.573877234 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087302247 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066972925 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067684146 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075603016 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066695683 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066806324 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074479737 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066198737 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066830267 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087740687 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066701539 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066534207 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074655667 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07103318 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066480756 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074027527 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074693709 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07383698 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06607696 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066342121 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087607583 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066422309 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07417782 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066060299 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066518814 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066280913 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066295523 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071009501 seconds)
  done (took 3.216179905 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067845965 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066234508 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063632818 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063036711 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062730072 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062417849 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062595476 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062433181 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065193881 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062382518 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065371912 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065615362 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065309194 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065200195 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06614753 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065167748 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065153398 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062867083 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062600937 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062782212 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065433994 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065040827 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065056379 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062495517 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063114441 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065328561 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062910797 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062554236 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064981903 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062734686 seconds)
  done (took 3.15379879 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077402548 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072022229 seconds)
  done (took 1.378340579 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063706226 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079562043 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06265362 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069377154 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068526712 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065566159 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072893905 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068845171 seconds)
  done (took 1.776415724 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083548804 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07652319 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067686619 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080282053 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076002373 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082655834 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132571603 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066333332 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072546364 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063112589 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079193171 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06435324 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071487909 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065659315 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071755236 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071929481 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063560004 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071289568 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067745762 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063829952 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066770796 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073892575 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067835015 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060648533 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066677288 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087531969 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076583179 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064922139 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068249781 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072821959 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071226313 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059137326 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065212391 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065783633 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063168178 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075460809 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081216704 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068248159 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074070506 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066255719 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075624519 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060339151 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070185267 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072231424 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075503593 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065758644 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06585693 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060043853 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063314518 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067644061 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060471855 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068727579 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060113628 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072308383 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068901862 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076582011 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064378876 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067430633 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068390766 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068861479 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072450273 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067651917 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068500122 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065317687 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075599849 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070633466 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074638568 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060909878 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059819433 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063694873 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075002097 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088933717 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072006797 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066510172 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066412425 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.0636341 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068745962 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06719457 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071600454 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07156847 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065198172 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071049819 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072777208 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065716321 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068010436 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07372823 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063967396 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068441863 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063350657 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082070592 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064080524 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063675314 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063471738 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.0756163 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069331193 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065540163 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063318911 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073169625 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060104204 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067025932 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066978169 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066493377 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075938895 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069282219 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069304566 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073021676 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071519087 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064933929 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067463298 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060923294 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065249114 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063295362 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071762457 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058433503 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06694607 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064970316 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064687559 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072771882 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062080123 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064625166 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.198212225 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072535221 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065389567 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063205657 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070314106 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066696466 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068441198 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074020441 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064664681 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061735801 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060916803 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069340317 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06686191 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069553215 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07134118 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069263292 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060465245 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064690863 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071572002 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075379662 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066039487 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066644812 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071957074 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067813759 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065258336 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072114227 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068533369 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065228742 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072518497 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066530713 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061014328 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068993148 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068435376 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064756444 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069749862 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069215739 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068088825 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06665837 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065280154 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073190222 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066807265 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064883967 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065988645 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064781507 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077195823 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068941396 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061725003 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062446103 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074699394 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064113236 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065971524 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064612015 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067863366 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066225723 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064525858 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065357961 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067829198 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075913423 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07014222 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066229168 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071530484 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076797516 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065664642 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067867155 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065512509 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066777513 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066289548 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073940685 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070862385 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070530585 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068521506 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062451151 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071376087 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073320831 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064950393 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063450431 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064871999 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069926613 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072045792 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070251048 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066362894 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064432751 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066254216 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06915814 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068452483 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065534619 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064734863 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072301042 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063857813 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07237898 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066639432 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075746822 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068831734 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060543202 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068799851 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063688931 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072040878 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060401851 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063473425 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064776892 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066283236 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065066867 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068598069 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.05970682 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07224462 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07284294 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06586001 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064502203 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065388724 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071918943 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065662632 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068593276 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068028475 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070877457 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074257723 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063562506 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067721522 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074730773 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064389642 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059157712 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069735936 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062916402 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063167471 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063770758 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062649219 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067191973 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.204655273 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073479313 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.05998583 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068661845 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065400273 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065331094 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061188004 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071257233 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069112514 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067438072 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07308388 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066885851 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066481053 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069588578 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066032674 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06705917 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06758233 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069591105 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066829032 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06808063 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.0662402 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06962627 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065312113 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063645059 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067795128 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066414054 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066489596 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07058701 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06513278 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066382088 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068476835 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066606088 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066872601 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067018347 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065333333 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068865375 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067757804 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06695478 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068449135 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061343474 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073631982 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065793269 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073119804 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066514073 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062929146 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073695864 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067888248 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071935907 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066783826 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06684416 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068319698 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065736519 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068811648 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072757771 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063925219 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076402267 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072886252 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06662668 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068964785 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065740308 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06716209 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06520928 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067084915 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06656869 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066420317 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065482528 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070346914 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068900608 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065823458 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067394575 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065804595 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066409198 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06687956 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060180317 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064708677 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065108386 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065302424 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074991731 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066320057 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06528854 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064623672 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066694591 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064771189 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062229659 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074052025 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075332039 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066335718 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072652444 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064653648 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067228334 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07639723 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059692704 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063494491 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062902724 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063640788 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072609308 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06624231 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074981247 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065619145 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064757609 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062976755 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065987633 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06431896 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059939857 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063111519 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069225 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064854166 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064344978 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065468885 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067868186 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066015119 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074261569 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063832871 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065374271 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064288229 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062025685 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063574082 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063779748 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067916137 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065165098 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062879715 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061879361 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064067801 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066147381 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066165469 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066855429 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066401445 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0709029 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.197178684 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069210783 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069529076 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060992143 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069872319 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067282963 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066147188 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066197295 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070347954 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068932775 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067724889 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075051692 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066210524 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067143199 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066508329 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063813208 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065970932 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066196855 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066268507 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065121751 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067391729 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073814839 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063453941 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069594267 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06626663 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066190886 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072190021 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067884384 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069458959 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073049701 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06653372 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067851378 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074101926 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069609372 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068651591 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067085217 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06763306 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071852595 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064728004 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072251541 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065861153 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066227778 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067432444 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063940075 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065891516 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066750469 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065049864 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072544125 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066649604 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06526218 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06523771 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063826075 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066551571 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06931811 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073065663 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068482552 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069083819 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06113238 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062529029 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066807459 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063448143 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067216579 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067682961 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071459462 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068229154 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065667993 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064702255 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074502588 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071595185 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069214375 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063432144 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069530371 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066776439 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067551284 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06650686 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066337689 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066629129 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069198143 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067237505 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06520441 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07291504 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069507497 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066605504 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067219049 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067458788 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06588256 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061043583 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066274273 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06806759 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070636597 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067754172 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065699592 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075936788 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063159168 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065860919 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068608725 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064942955 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.06973837 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060662811 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06729012 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066318768 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066241362 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060577275 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064728812 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063636593 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067916665 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065164541 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060809732 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076747861 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07435342 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06855057 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064319255 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064042863 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060160058 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060385516 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063964567 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065775264 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066030203 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.074819384 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063560009 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06359628 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059478658 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064088995 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067331141 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067335696 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061966649 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059397989 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063723934 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.199368515 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072996235 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065406518 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066244395 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06942886 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068408657 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064864661 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068953152 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062507032 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070087591 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079270206 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06725928 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066835622 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072865557 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073366539 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068219468 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061466425 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067041365 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069610609 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066887118 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067306184 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067350278 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081044607 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06906826 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065811194 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064253553 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068984873 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066169636 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074973189 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067430827 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066579472 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070983222 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068188286 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07511854 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068736954 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07336122 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069274006 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069745152 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064620846 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066475912 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06418588 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064592764 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066765217 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067346837 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070372446 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073529044 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065362847 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076229793 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07491578 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068802204 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063235483 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065460722 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065190082 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06104206 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066383932 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064259317 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063624286 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064399952 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064916905 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066844755 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070320143 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067068214 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066090514 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065463071 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060049621 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068036665 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068577721 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066699789 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061949556 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065436613 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066722375 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069236094 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069025037 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06276734 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066944359 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067038993 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066824029 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060632268 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072280043 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064364647 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067544279 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06465214 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065921277 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066018807 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068739483 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070993395 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066457418 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068024408 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069662476 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067824426 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062812236 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06273848 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07100035 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063778756 seconds)
  done (took 42.131119415 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102678087 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06288394 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061317429 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061069652 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072703789 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062362608 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061194844 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062185181 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062047812 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064393757 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061075011 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060645025 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069987212 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076530261 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072712558 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065493536 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06057348 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061785418 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061308626 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061919263 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069460322 seconds)
  done (took 2.716832389 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075087321 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078917333 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075938139 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081470727 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069784811 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069334349 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074496755 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070105758 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077428548 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071470549 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077862059 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069716739 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07202321 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071835781 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071611799 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070114122 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077469585 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069994398 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069556422 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07431032 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069790483 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074369603 seconds)
  done (took 2.914354614 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068117728 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066213985 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066498169 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060833725 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064911002 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060775294 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068842086 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06318775 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068270492 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064059903 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064639298 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064049478 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066558947 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060568751 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06577962 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063320356 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10753512 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067952327 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064790799 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065522381 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060264041 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066270257 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060002169 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060796712 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063740441 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068126846 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065265747 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06315079 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064813171 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064024626 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064666147 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062365705 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066364831 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065220225 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063844838 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063659583 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064408085 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064314679 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060407192 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062775432 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065635492 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060969585 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065170018 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066159265 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062630745 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062419197 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066396485 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06499236 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059924627 seconds)
  done (took 4.496452291 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081219833 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110287464 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067167181 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088164489 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081744424 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071792388 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068657265 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088821988 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062525074 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063884487 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080469969 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078159727 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065150082 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06952664 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071542953 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064875098 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066437609 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063433765 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068724489 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064133727 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068227471 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071193656 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079225801 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.0780818 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068286603 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063719741 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063870911 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069472743 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077608474 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.06922725 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069181125 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069900306 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079123746 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069945584 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063911059 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066899934 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080721986 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064632036 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067292531 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062358777 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066785856 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069073041 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071968062 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080845542 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064769891 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069858189 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06435316 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06169833 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077017541 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06728341 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072281242 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079180483 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068144385 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064717793 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069321395 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079678502 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06465971 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063378559 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067802094 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077093438 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062417856 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068528453 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078312597 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066957116 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072000257 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078546329 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070442116 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068440311 seconds)
  done (took 6.295706127 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077723231 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09588719 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084083195 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083010778 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074488136 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074629494 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074680265 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074659 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074400303 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079636185 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074488082 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114873606 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070072311 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077762988 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074191402 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074260939 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074281159 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074706218 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074585406 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074521226 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074490673 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081619705 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074933605 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081730457 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078459969 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069988275 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074166703 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074111617 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082517628 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074317619 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078927973 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074188524 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083391251 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082088359 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078087428 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073932548 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064042835 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073945343 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074369587 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074676139 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069563895 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082435713 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07440856 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069422178 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07459748 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074139537 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082346775 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078550888 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077612048 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079091388 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074626824 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082170188 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07427859 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075020627 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082428671 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.086266476 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082110111 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081903892 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074340711 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082030724 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081837407 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085503685 seconds)
  done (took 6.155170492 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08498667 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076219964 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.084504673 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062780735 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065893244 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073662619 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065468367 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065384765 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075725527 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075825023 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07826509 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073303907 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076377279 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07751078 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072811679 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074176474 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070861507 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070938307 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073027405 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071169224 seconds)
  done (took 2.79737337 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076273885 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082156695 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066120234 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071610167 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068602751 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070536854 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067684549 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06809064 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065861144 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068271635 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074856536 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075045677 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065724318 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070630663 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074974833 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070571083 seconds)
  done (took 2.459746484 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086611026 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.075574742 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081951385 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06748293 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067529868 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063293568 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067107133 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062280787 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063322752 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079514545 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066984711 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077594521 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066824736 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065318152 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063691288 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.072288866 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063123051 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064324678 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066246012 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079580429 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071243767 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065219424 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069954672 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066673744 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069033899 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070993466 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065981595 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066804019 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063008207 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065167963 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068081882 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068249326 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062885917 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064620112 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065467314 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064180112 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066687659 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067259574 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072168843 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066559129 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064745709 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068947659 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066770459 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067539761 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062862567 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067409924 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063410514 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06894464 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064950677 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069294294 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066647115 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069452491 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067452258 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073325681 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069929678 seconds)
  done (took 5.0756893 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081413425 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070783292 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063532242 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065041503 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070535378 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06704391 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068732556 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066894372 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066222764 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06397514 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0667473 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068151919 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06701976 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071019135 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068521306 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070545055 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062894887 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068257723 seconds)
  done (took 2.562643931 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07303576 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06713905 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07489352 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067475578 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065411414 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067620817 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061069246 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063539411 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063932285 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064819082 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065119098 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067171916 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063709869 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067272528 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064793431 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064604059 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067428714 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06340331 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064553124 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06086546 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066709344 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063239457 seconds)
  done (took 2.775098211 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096448018 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083314968 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139857521 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078315629 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083551495 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070539368 seconds)
  done (took 1.881059129 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092455929 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100172784 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06581637 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06868472 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075114283 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069276818 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069095161 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069186896 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077850586 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075250538 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069462432 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078051373 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077697927 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077350559 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075487347 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075541832 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069331387 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069581726 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065499512 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083538338 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069713414 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077674685 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069602287 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069580438 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069613181 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076933726 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078215535 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074987206 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069727744 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077949509 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074796545 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0693412 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078054125 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074939444 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068402544 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077989781 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069780724 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083822307 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075246207 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077906885 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06854445 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075805873 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078135365 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074546414 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078584912 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070095244 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074878606 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069421413 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069769256 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085445854 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075239245 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077117293 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077956428 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0786604 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077992028 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085132793 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075637201 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077051708 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075469236 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075840808 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077081633 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075120902 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077672685 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075665537 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075353537 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077171257 seconds)
  done (took 6.299454179 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106212221 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067097464 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069882838 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076321987 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077255574 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069569874 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06986336 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070503828 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069523332 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066490708 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107752108 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069708678 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077921786 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07717117 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069724263 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069752102 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069809921 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077333091 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066542648 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085939367 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070382749 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077012789 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077636387 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077220536 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075859751 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075536482 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06981763 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069460122 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069974135 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069478502 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074523345 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069536357 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077160551 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066007784 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077353976 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069409528 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069187696 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073917695 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069183808 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074866762 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07695005 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082981143 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069278297 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069549659 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075473414 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069218127 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069208666 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06596483 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06949204 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066469045 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076413923 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075419715 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075708344 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076960356 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069295394 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069330921 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069432495 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069629195 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069684374 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075087553 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077132647 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06924307 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085577695 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069878836 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069645451 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076991749 seconds)
  done (took 6.204787921 seconds)
done (took 128.265687192 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.187116583 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164841289 seconds)
  done (took 1.67308797 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071015765 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100225337 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077972039 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127810752 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066388362 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099536996 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098799247 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077905689 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065521495 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06567917 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065603761 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068334187 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131350246 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066104322 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065522655 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068586461 seconds)
  done (took 2.652134309 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102039329 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.164052609 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102902829 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06448544 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099405623 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072201824 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064272866 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074836734 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070902408 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064517979 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072630733 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070214339 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064654281 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070051222 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070350024 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072025413 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064576719 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072323678 seconds)
  done (took 2.775806279 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.1018619 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.0939888 seconds)
  done (took 1.539673533 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.160877796 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105862213 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144699484 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.355328435 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165940266 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.12757089 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126596677 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127008199 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11603324 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123209493 seconds)
  done (took 2.892634597 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101635598 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155682283 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.265161544 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116413516 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071499306 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093985098 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117374691 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077344226 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079845408 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079588246 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079608725 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075559658 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098954134 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073003207 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072999174 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075581881 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103426862 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072367569 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074614538 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076863309 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10091981 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065810512 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072782063 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.0720757 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076604574 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076743321 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065347913 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064737705 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076244582 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074406866 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076161119 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092742924 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076935679 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105912754 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070053598 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107282927 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075810893 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072963656 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074093116 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073049004 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078189632 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077894563 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.0720613 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075779399 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064754687 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075610398 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065175796 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065386454 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077233397 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066346441 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077865252 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077725316 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106147148 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.0659164 seconds)
  done (took 5.946920679 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106632605 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110092569 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074379546 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112843338 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102381947 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071736952 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102498287 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095190827 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104423876 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069565845 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067545513 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069847761 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081799935 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082563771 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113899815 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107143883 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073094097 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071114179 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106052187 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104805187 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06842445 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097436493 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090882156 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103024342 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066922096 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069672278 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067338563 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070081587 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076240228 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077863869 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069463334 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080228418 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084069139 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077679428 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066473202 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067319171 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067731027 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07892109 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07928856 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078342229 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077268406 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067508309 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067474701 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068977113 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07000682 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06742155 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078207576 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07993602 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078154675 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069261811 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069594162 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067055164 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069195039 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079796768 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077889388 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080330073 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080274788 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068017106 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068304725 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072237917 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081094606 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079148886 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079169382 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068528564 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078376955 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067533228 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079805596 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084349759 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067624151 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069643274 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068277828 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06949971 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06912818 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077557558 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077715443 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069231208 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068794446 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067949709 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080297242 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077639556 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068031444 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076687955 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066946748 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067464629 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069084103 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068920151 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076819803 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079642888 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069348482 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067176202 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068639227 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067846937 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06644832 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076511614 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07982901 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078245844 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076692081 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068250803 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077254539 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07693322 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06853647 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07754614 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066967077 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068370254 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068050217 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07643601 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.204920264 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081727728 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070738021 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068657892 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078508847 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081562697 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068690868 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078660161 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08039108 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078941835 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068776034 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08104118 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068883434 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07941882 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070096218 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079645481 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069177782 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080004134 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068180634 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06817227 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068763308 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080029382 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072702427 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068459726 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069457274 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069927368 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079590332 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082595335 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069842669 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078071898 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078512159 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070176941 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078895295 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068629873 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079211891 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06995031 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069445951 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067386883 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081597683 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06814091 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068325669 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070079113 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080366544 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068842487 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081363837 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077961574 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068221182 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080885531 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080131476 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076772757 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080870962 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07064439 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068278958 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068141053 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070039673 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077851885 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079098367 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07114028 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068437881 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077989499 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079446332 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066050633 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077710537 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077811686 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078262198 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06843277 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069935235 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079897855 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08049485 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077834156 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077746548 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078001732 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068390476 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077700391 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077915179 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067912132 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084432555 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067658239 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082213994 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078530077 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076638245 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078659038 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080398599 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080566899 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079555082 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083342902 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068139605 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067823669 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079688583 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068483948 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069518178 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077964526 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069656211 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069245887 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084169308 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069184531 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079284979 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067151855 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077545793 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065816142 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068314339 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081407463 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066444802 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06765441 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077384425 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067876084 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075662268 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078576356 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.0759012 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.200367281 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072464476 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082537295 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082910809 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070916577 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068478944 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070480106 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078574286 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077543121 seconds)
  done (took 18.598855325 seconds)
done (took 37.427078615 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213552162 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15349084 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182948634 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118949187 seconds)
  done (took 2.114799289 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121781631 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104957532 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092786198 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064976618 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098833122 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064743483 seconds)
  done (took 1.929304272 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.317239572 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211869485 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189314605 seconds)
  done (took 2.095620448 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203945002 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191908686 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.423686142 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.265832651 seconds)
  done (took 2.576544343 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145528403 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089531361 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066926475 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083913444 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134333256 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161676768 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100836104 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126166017 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078509568 seconds)
  done (took 2.427965106 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149966713 seconds)
done (took 12.677635925 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094910801 seconds)
    (2/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.215613783 seconds)
    (3/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077264456 seconds)
    (4/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067004951 seconds)
    (5/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.198462578 seconds)
    (6/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112491413 seconds)
    (7/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.171249532 seconds)
    (8/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.188727634 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.123226996 seconds)
    (10/309) benchmarking ("sort", Int8, false)...
    done (took 0.153005726 seconds)
    (11/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.081769302 seconds)
    (12/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.216512924 seconds)
    (13/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.216430011 seconds)
    (14/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.203956856 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.109219054 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071978431 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.105089828 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.175335718 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077756525 seconds)
    (20/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.197074078 seconds)
    (21/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070662533 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073416156 seconds)
    (23/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.228546704 seconds)
    (24/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069193426 seconds)
    (25/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075021831 seconds)
    (26/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.088618915 seconds)
    (27/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072432612 seconds)
    (28/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.159967336 seconds)
    (29/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.160595166 seconds)
    (30/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.049876901 seconds)
    (31/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.182431671 seconds)
    (32/309) benchmarking ("sort", Float32, false)...
    done (took 0.13232614 seconds)
    (33/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.165596531 seconds)
    (34/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06889338 seconds)
    (35/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.116922252 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089209424 seconds)
    (37/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076399599 seconds)
    (38/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.181355257 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.184660484 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.090462683 seconds)
    (41/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.207684636 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.174844869 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071303363 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09746525 seconds)
    (45/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.149665418 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112794681 seconds)
    (47/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.153773819 seconds)
    (48/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075785069 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.174503622 seconds)
    (50/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072478646 seconds)
    (51/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072491499 seconds)
    (52/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06736807 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065310408 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073420104 seconds)
    (55/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073704709 seconds)
    (56/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07278793 seconds)
    (57/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.063618904 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087705323 seconds)
    (59/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.154917489 seconds)
    (60/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051404836 seconds)
    (61/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.144093565 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06660563 seconds)
    (63/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051586218 seconds)
    (64/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074521523 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066868539 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092276068 seconds)
    (67/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051639421 seconds)
    (68/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071229739 seconds)
    (69/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079889234 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093881863 seconds)
    (71/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066382822 seconds)
    (72/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.216888565 seconds)
    (73/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.154190107 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089517774 seconds)
    (75/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.193387949 seconds)
    (76/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075667569 seconds)
    (77/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069102911 seconds)
    (78/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.07409133 seconds)
    (79/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181444208 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065703715 seconds)
    (81/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.203703282 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.065358335 seconds)
    (83/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.07622365 seconds)
    (84/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187010592 seconds)
    (85/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.206106196 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.095452054 seconds)
    (87/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07871102 seconds)
    (88/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072360579 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066438202 seconds)
    (90/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050765096 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.127362003 seconds)
    (92/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104955301 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067871133 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072119288 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.118308645 seconds)
    (96/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.102039068 seconds)
    (97/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079773894 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.143488606 seconds)
    (99/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086506326 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.09060488 seconds)
    (101/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.113535834 seconds)
    (102/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051243404 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.087061733 seconds)
    (104/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089801911 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140806624 seconds)
    (106/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083310161 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.123505461 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173859575 seconds)
    (109/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071014623 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076978876 seconds)
    (111/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.103071298 seconds)
    (112/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051489764 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089412213 seconds)
    (114/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066416844 seconds)
    (115/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050591164 seconds)
    (116/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07672852 seconds)
    (117/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075854614 seconds)
    (118/309) benchmarking ("sort", Bool, false)...
    done (took 0.147541041 seconds)
    (119/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073348271 seconds)
    (120/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073209354 seconds)
    (121/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.099310926 seconds)
    (122/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050738226 seconds)
    (123/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072343163 seconds)
    (124/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100695346 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067465832 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073880058 seconds)
    (127/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074425609 seconds)
    (128/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.153729902 seconds)
    (129/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.159089151 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.07869808 seconds)
    (131/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074782288 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074096279 seconds)
    (133/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07411821 seconds)
    (134/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.211066887 seconds)
    (135/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.211741264 seconds)
    (136/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051582555 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065200507 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065727717 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090234589 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087672683 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064509885 seconds)
    (142/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176209716 seconds)
    (143/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072233456 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.133818544 seconds)
    (145/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.062703366 seconds)
    (146/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065679098 seconds)
    (147/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070470998 seconds)
    (148/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.116800414 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.100000661 seconds)
    (150/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.16141683 seconds)
    (151/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073019115 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090147851 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065366119 seconds)
    (154/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.07377368 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09236915 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066857052 seconds)
    (157/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.188936536 seconds)
    (158/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.154329181 seconds)
    (159/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05017943 seconds)
    (160/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052991132 seconds)
    (161/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067765958 seconds)
    (162/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073993065 seconds)
    (163/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071716411 seconds)
    (164/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051414435 seconds)
    (165/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079019368 seconds)
    (166/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050411852 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093817005 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.319731768 seconds)
    (169/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073558343 seconds)
    (170/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050245637 seconds)
    (171/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069037344 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.107596168 seconds)
    (173/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.161279418 seconds)
    (174/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.153265698 seconds)
    (175/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072393638 seconds)
    (176/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072125983 seconds)
    (177/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066789778 seconds)
    (178/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073626978 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091543329 seconds)
    (180/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066094727 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087813837 seconds)
    (182/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075149571 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064565227 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073301855 seconds)
    (185/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052355247 seconds)
    (186/309) benchmarking ("sort", Float64, false)...
    done (took 0.129417923 seconds)
    (187/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.099617944 seconds)
    (188/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074473087 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.12365354 seconds)
    (190/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.049580071 seconds)
    (191/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073007068 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.180344817 seconds)
    (193/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.049430672 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13842862 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.062469133 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.063596747 seconds)
    (197/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067273978 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.268062543 seconds)
    (199/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070486064 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089379554 seconds)
    (201/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.182743651 seconds)
    (202/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.163945729 seconds)
    (203/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080747962 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053496775 seconds)
    (205/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081466009 seconds)
    (206/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065455095 seconds)
    (207/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086579866 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074871591 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073212646 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065004555 seconds)
    (211/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07311396 seconds)
    (212/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064407048 seconds)
    (213/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.05261514 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067278143 seconds)
    (215/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075443627 seconds)
    (216/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050885855 seconds)
    (217/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050450567 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065973323 seconds)
    (219/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065371198 seconds)
    (220/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052197827 seconds)
    (221/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062237084 seconds)
    (222/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050163171 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07163908 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.141147684 seconds)
    (225/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066357045 seconds)
    (226/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.111757211 seconds)
    (227/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061722012 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064648901 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176976736 seconds)
    (230/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067189463 seconds)
    (231/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089037402 seconds)
    (232/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065313562 seconds)
    (233/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078996527 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136945088 seconds)
    (235/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068709378 seconds)
    (236/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061080008 seconds)
    (237/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.073559233 seconds)
    (238/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064725551 seconds)
    (239/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050892691 seconds)
    (240/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071682554 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065359452 seconds)
    (242/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066976525 seconds)
    (243/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.096982296 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050233909 seconds)
    (245/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072723894 seconds)
    (246/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052508587 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131172596 seconds)
    (248/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051175945 seconds)
    (249/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051230826 seconds)
    (250/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064379132 seconds)
    (251/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.107912454 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064282063 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182929137 seconds)
    (254/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068375253 seconds)
    (255/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087358927 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141000291 seconds)
    (257/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064341134 seconds)
    (258/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065365043 seconds)
    (259/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050516554 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071865727 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091550755 seconds)
    (262/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051259411 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073241821 seconds)
    (264/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.050901039 seconds)
    (265/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051016531 seconds)
    (266/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072914495 seconds)
    (267/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050219776 seconds)
    (268/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050366309 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171035042 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09222336 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090404579 seconds)
    (272/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051238448 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064390599 seconds)
    (274/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051132635 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094984277 seconds)
    (276/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051515068 seconds)
    (277/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087924266 seconds)
    (278/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072633139 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135788539 seconds)
    (280/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120402731 seconds)
    (281/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050264582 seconds)
    (282/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066523706 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072850178 seconds)
    (284/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077969295 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063502989 seconds)
    (286/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068319753 seconds)
    (287/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053826068 seconds)
    (288/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103712393 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063299149 seconds)
    (290/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071491284 seconds)
    (291/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.050635752 seconds)
    (292/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050297421 seconds)
    (293/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.049954794 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072076152 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050188471 seconds)
    (296/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071002374 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07117819 seconds)
    (298/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.051763001 seconds)
    (299/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067478645 seconds)
    (300/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050489393 seconds)
    (301/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072135695 seconds)
    (302/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050679794 seconds)
    (303/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050599013 seconds)
    (304/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051322831 seconds)
    (305/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063050282 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088936268 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070320894 seconds)
    (308/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061048921 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.063906251 seconds)
  done (took 30.868665504 seconds)
done (took 32.256060324 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089531442 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09741628 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076480133 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094681895 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081633977 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075890886 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072485871 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078173332 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079694031 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081658232 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077958342 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054417832 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073405744 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074136619 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074493569 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091072168 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07777291 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072897442 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072715167 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064253383 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072651592 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064655146 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066698215 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053259813 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077824648 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07186532 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071923436 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073547665 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06506309 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065306433 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068603109 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073293734 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064907624 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077656972 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071983849 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072294422 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074224455 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076019117 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066762324 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065500148 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073852026 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065487245 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07228048 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073411066 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071698014 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071104147 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072823143 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077518575 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090635071 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067415167 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074053003 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075369394 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075639379 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072744908 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.06965767 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072674357 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070439674 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090704665 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073176463 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067513781 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07351027 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073670657 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070438669 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072324843 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072265576 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074421945 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074929046 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070505125 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073673718 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070952167 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064617691 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072110006 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06808493 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064541865 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075050143 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076194346 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063381742 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070523666 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072300686 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072255959 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066210561 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067333374 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066777674 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071324752 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066807639 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053489235 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068518893 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072529599 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065847244 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073163211 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071277326 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072399852 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066373834 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075265988 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064294635 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070512412 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064657449 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06508473 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06611248 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068849224 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063899522 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066728472 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073973627 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066088248 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071422593 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078313987 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064191156 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07151248 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063900771 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064201102 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079182028 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074392704 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065323201 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066983332 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064466702 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072458392 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063447232 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064573633 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064018716 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064358797 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070500937 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064315495 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066156972 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071390236 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076922756 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062749881 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067366927 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064934423 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063216091 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069870519 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063943089 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063336361 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065174877 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060245275 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065745883 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06324449 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071537779 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.202339292 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073474514 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067333446 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073590507 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07148541 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071855606 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070531599 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064440852 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058622766 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067408849 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067570701 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066526301 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065458747 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066132857 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06512427 seconds)
done (took 12.366459869 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068921292 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146278434 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098623887 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095419366 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08560976 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06627868 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075706598 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100535735 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066682648 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101117956 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086886703 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084520808 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111176749 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063979834 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065272194 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069311322 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066485308 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081218374 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100080182 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085907143 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115303549 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064564074 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093905372 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089290743 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086498503 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09178964 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068934053 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06925727 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068732551 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099435272 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086694748 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069040259 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065691118 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.096346276 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091890468 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082794752 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065596853 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081591811 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06579295 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065558998 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067209212 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09771033 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.07851999 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079326078 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06915658 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068333231 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066193995 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082097327 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088270196 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077638095 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085686035 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10211466 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067823474 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065506682 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064061169 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084443807 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064373036 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067808509 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065286257 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067395803 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065919041 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068300795 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080362817 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081184697 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068787199 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079580474 seconds)
  done (took 6.731904726 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087245297 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092964757 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083798279 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084057251 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064942946 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065387027 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065543835 seconds)
  done (took 2.018929874 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06901049 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09153337 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089486154 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08876807 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084741338 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087383372 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075424803 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065604104 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079977802 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067641191 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087275727 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101516964 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066048835 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072411842 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090024458 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065880107 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089909335 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06567518 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068659475 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08958805 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06769912 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08163074 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069012595 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065675598 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080151316 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066005808 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113203285 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069747186 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067110328 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06852353 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063990038 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107038228 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079880652 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074583654 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065841811 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079904319 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080131785 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06402248 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082207553 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071155123 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079786271 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066035327 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067137525 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063956489 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070222261 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076107848 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06675324 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066443653 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068749812 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086316611 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06792378 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082289627 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072071621 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071040107 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06962093 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072644784 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078500197 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067384728 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086502138 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067665462 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083072281 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082167107 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079688018 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082761648 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068371007 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079779463 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079798365 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068087222 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067136661 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069209973 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082109859 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06397984 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067266214 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076587981 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068201746 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089416102 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088705867 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067087303 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074708807 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066227381 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06609949 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065686578 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089524169 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068068483 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065702248 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070067166 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069404969 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064394036 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064797345 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069637909 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064183475 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067597932 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06896852 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069026421 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068558757 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082770605 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068114979 seconds)
  done (took 8.712137244 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070856108 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070227428 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069099125 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067498011 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06656513 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067554017 seconds)
  done (took 1.910368579 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096856019 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069851469 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080356411 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071986021 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104913049 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086113763 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086967735 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077485001 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083449942 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078421772 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086633957 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087589035 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092356817 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071906772 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085978251 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071073367 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086863054 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075507247 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078818154 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072278732 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086163523 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071961399 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072387438 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080727674 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075452606 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071488161 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066727054 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078905257 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078259728 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078357673 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072070945 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075444352 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070126602 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077421802 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086746028 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069850207 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071171747 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076847234 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071755864 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075363921 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087637472 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072494773 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073718842 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076692825 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077226857 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.06971196 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076671571 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075277081 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085807178 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076186908 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07655206 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070535083 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075456451 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076913051 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069900524 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077627096 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076958761 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08678645 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072328667 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070054876 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068764778 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075586562 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078573813 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075427609 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078174721 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076957529 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070469371 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072605861 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072779635 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071856774 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077226433 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06867716 seconds)
  done (took 7.037471584 seconds)
done (took 27.873944577 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543816938 seconds)
  done (took 2.004129618 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.61981495 seconds)
  done (took 2.104867785 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.558764003 seconds)
  done (took 8.043045472 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.406719431 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.497820822 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.719318708 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131504057 seconds)
  done (took 3.27637499 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.695175718 seconds)
  done (took 2.193518516 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.217288858 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.200668094 seconds)
  done (took 1.924505786 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.379991237 seconds)
  done (took 1.867245424 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.140107567 seconds)
  done (took 2.629478568 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.26144842 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175316634 seconds)
  done (took 1.927994319 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.482348558 seconds)
  done (took 1.972948683 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.87770679 seconds)
  done (took 6.373138056 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214529154 seconds)
  done (took 1.751622156 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243573312 seconds)
  done (took 1.738219833 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.702176215 seconds)
  done (took 3.196681108 seconds)
done (took 42.49464752 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083521829 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080493002 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080955488 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078379532 seconds)
  done (took 1.802873254 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079607851 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072620842 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076669637 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072546307 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076353239 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073531624 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074140541 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076643025 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072416679 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072852195 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072654684 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072619858 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074917616 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074354043 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071391474 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07518047 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075925189 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072296908 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075118252 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072463327 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070527715 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074912431 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074620291 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071375034 seconds)
  done (took 3.273478237 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080221192 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.0727376 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075195121 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072104743 seconds)
  done (took 1.806503038 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080974381 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095152776 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090346569 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077844777 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092334019 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086779329 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068804803 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068891674 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070059476 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077985822 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067774299 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096451299 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088409732 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077402531 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080183963 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065529166 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067707856 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087057228 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077537994 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078093481 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069811733 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077862221 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068151071 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089271083 seconds)
  done (took 3.40054456 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081054689 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105389384 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077536416 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088936225 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091604999 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065259024 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074754032 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090993175 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126812368 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065272135 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071048119 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065194435 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072873204 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065324926 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076763795 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106596921 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11077224 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068822731 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096642678 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065032235 seconds)
  done (took 3.1780999 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075055761 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069710247 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065385127 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069042607 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076831072 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07197942 seconds)
  done (took 1.939202743 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070088626 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068014453 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067442829 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066763016 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072105907 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067478546 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065620764 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067326045 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067218017 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066910533 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066286778 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065425197 seconds)
  done (took 2.316507368 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.205045191 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068644645 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068348242 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066017103 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070300651 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066172873 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080272984 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067645898 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091035121 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066248758 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065922033 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068124422 seconds)
  done (took 2.493423461 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213904431 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077432866 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239144824 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140405789 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112031261 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115296754 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104371257 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114182146 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142614076 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101550823 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169318148 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168142204 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107681719 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137940957 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0887793 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100212542 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155328441 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162893147 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105234996 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167303759 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14663854 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126279159 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149053798 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101103576 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111593213 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122764688 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070749373 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079579512 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171044614 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133505238 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145581028 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111843166 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093166942 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177509176 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173949562 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14214408 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137120011 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084354987 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104586776 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134268514 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204821942 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088563016 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162894892 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110291862 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220957087 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138723891 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122446355 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122333382 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106889102 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089458671 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147089434 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186935754 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139203726 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088404533 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114904838 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114328377 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116373492 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10426501 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183229699 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164023998 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130511609 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070947816 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099911022 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155001069 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134264244 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110764445 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126553518 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092943235 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135896933 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156491074 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120707167 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146985461 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.131345349 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088935824 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120291454 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14212944 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128841092 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162024249 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125080715 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073025802 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124754676 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102597552 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080880934 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14568666 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076216377 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178210487 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098421357 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110261224 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117863487 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112865374 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112506897 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162244489 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144720353 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102936295 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064847783 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249270344 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123412518 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147527749 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087331423 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109478069 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119132439 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078375902 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139434693 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075237687 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1246529 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077435675 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129415393 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130533406 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077405339 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12351137 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104639365 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101178802 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132960406 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162112407 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087689375 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081957208 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171435486 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125142996 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104996179 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145567057 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158095517 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102104025 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102722891 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150803295 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181277434 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092289838 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17033953 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111382778 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087258147 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087654875 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124120666 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111763841 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123841299 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081571014 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118699129 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169367169 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074650549 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09579946 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134816609 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07890534 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080728272 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106225728 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105150272 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09519603 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.09947558 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103347816 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136808204 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124721214 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104868901 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123403718 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097461212 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320936916 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091904987 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102838233 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104626463 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070162962 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137226431 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159660129 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080111053 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165475243 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124353159 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106410654 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119847304 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084533596 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14101607 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079797574 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069850166 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145968579 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110997364 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11053238 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153298553 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106590533 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127971921 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121063022 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135928307 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132043979 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130703928 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106001528 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088516553 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112374561 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127271664 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073622548 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09151589 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080041695 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104513303 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096745606 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082989486 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142915234 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124145061 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101185434 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112232401 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097127587 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148734977 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076017993 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128331937 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120171977 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096142036 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153484436 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15316145 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132141514 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098895373 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136767983 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069496256 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073458818 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088638731 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12257748 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082141693 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082046617 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26286698 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150391919 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131458674 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139845543 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114305792 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121078522 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15669827 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070949479 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119272766 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149242662 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121265852 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105577766 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091558927 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100166728 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143418292 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108455975 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18370855 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117935435 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12470896 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155376931 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101173293 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079582691 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10339006 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139108818 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105133223 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14551374 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099862779 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088804246 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110652855 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074369945 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099828203 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127711101 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122163273 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13547825 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115710228 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13325164 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07738147 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117191437 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121513417 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123186827 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06353361 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120962479 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162904784 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094377811 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118148916 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153314111 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078439397 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.126000977 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175516776 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143896154 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08412832 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255729364 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121833637 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130630051 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122166246 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143157434 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108795377 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139047672 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111192199 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086229479 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088146214 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097881143 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104777372 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094760815 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108755517 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114100877 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09571797 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133459702 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104588934 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110799163 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118797426 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099170995 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090997006 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096347612 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179188494 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119580125 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173980535 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100375092 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146351454 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164223599 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0747975 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078858432 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078060064 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139626187 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084313683 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130414497 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.099649927 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108764088 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126010878 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143385351 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095707571 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068194113 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109236699 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134547039 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114635474 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098985181 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104872385 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164525702 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10140457 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07916006 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113075807 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105384958 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102625557 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172066746 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061081209 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097838048 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075727335 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079992523 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127286869 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296235176 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081475799 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104247062 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12107061 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114214746 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129085083 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102248363 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100360422 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117261067 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151255763 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128950443 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089415949 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113404217 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130358751 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157989721 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106436782 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096255594 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175495291 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155049369 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161925371 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08926498 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115710731 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114664908 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108846143 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138627408 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083585939 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16378522 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081825186 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13720262 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104865245 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090194694 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130379506 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.100388274 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088147747 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148929375 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118153361 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08315684 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077538603 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119259144 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120365622 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106995552 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07490087 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139643729 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073504968 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132860544 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160328638 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080361516 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107514024 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096100719 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07927698 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106828715 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102095402 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086659174 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.238452803 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18080065 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089592417 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153480904 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135626355 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114228261 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139173689 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103278631 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641980861 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078332007 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155397855 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118437395 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174979269 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101246146 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120040468 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111469539 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125111013 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145847265 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106824546 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179697432 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13284991 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.119298353 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082370699 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103919089 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105411904 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088962301 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108065756 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114434628 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117925722 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093836514 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117369025 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12920146 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.084971572 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104249581 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163310085 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120424121 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143948277 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143861176 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087948779 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12014912 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139013469 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08043434 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122373942 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152182634 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105941058 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09895841 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080477371 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10096906 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158589857 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073010842 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16034232 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264771859 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113948884 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11571665 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113661822 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132392599 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108124334 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122325724 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094350499 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111462518 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114193665 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08293052 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078011816 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105555286 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111527478 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098699879 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098668497 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09968617 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153330825 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072384715 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100851794 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105114192 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145971169 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175777085 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089295315 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0826824 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120618026 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113862079 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.116125904 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126719331 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081476948 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082210382 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081466178 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077930735 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.114414265 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117539694 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109065844 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115981085 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1684202 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.086075323 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.233780924 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095810959 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105338563 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069580553 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078139943 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096292582 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099095296 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108022432 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102013252 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160184413 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095403469 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089932517 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093001756 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074579257 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086099529 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133799008 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112066277 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121198179 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102138893 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064739151 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111485127 seconds)
  done (took 59.211006034 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113454159 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082946046 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096666055 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144706313 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12392418 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20334348 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153685537 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189254544 seconds)
  done (took 2.740483871 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070566863 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099639497 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105847401 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.0877673 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070979912 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072760895 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.24092798 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.085918659 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069970098 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.093385392 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.083541164 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.073038906 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.429524969 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068414662 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071616479 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066069429 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06704069 seconds)
  done (took 3.456977048 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.391617408 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.612436353 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.383490409 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073304504 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.451944271 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092684024 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.134691115 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.132254041 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07550161 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.542893235 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701748095 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123898375 seconds)
  done (took 18.329494677 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079282532 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071949754 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.086898555 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086546165 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.076566112 seconds)
  done (took 2.010081256 seconds)
done (took 107.508862234 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083919354 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.387706375 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053903375 seconds)
  done (took 2.080432433 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086371289 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089561237 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.088189687 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086153199 seconds)
  done (took 1.967313709 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077432118 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079476235 seconds)
  done (took 1.76507991 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.240684321 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175130193 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091584243 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086407451 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083084223 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083055647 seconds)
  done (took 1.868587465 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075857856 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078411086 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075226723 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079977936 seconds)
  done (took 1.91890015 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080283504 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054036779 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057261721 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060367167 seconds)
  done (took 1.862926082 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.09062421 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083319066 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082729782 seconds)
  done (took 1.868026655 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106373035 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.089791342 seconds)
  done (took 1.808966677 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086165975 seconds)
  done (took 1.698322818 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102863091 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.10883725 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.137587477 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115648452 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14510143 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.113439585 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088857942 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089646115 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079868194 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090420017 seconds)
  done (took 2.685122444 seconds)
done (took 21.721921907 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082747004 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.374734591 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363467277 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094258815 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673859724 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358931133 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.990000062 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098127664 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120630169 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0705862 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089105415 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652926772 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.013700985 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.321756691 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.999362572 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.3267001 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653066918 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071464891 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071031751 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071026944 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973191965 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070737318 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071011488 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071506605 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652093535 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375660796 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070642194 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326026522 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0706459 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072744711 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357973881 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068932566 seconds)
  done (took 16.273154062 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074237938 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125685475 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076974162 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08863017 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073198815 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072530605 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074269171 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071619681 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126461438 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070673022 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089495359 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07034872 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074414143 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071481907 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091792971 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071182226 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.088465633 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068843858 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068012302 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068004947 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086441913 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067415873 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068485022 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067950276 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067731873 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080697998 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068089904 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067749594 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068382163 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069834199 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070683502 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068192855 seconds)
  done (took 4.091746002 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122737109 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.132649426 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076242736 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106534917 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11460788 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069927934 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147499928 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093110983 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130264553 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06860129 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085706736 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.0677487 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102541019 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070619188 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088449613 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068612593 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069302447 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068836906 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068834998 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06879016 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087679756 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068419606 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068711573 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069407137 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068812193 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08178119 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068468105 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06853343 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068648723 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069951091 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071522779 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069382387 seconds)
  done (took 4.310373999 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075623642 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078881701 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087476443 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087496684 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072175249 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075073298 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076198866 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072742964 seconds)
  done (took 2.255390346 seconds)
done (took 28.548377965 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082484736 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071844467 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075463715 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086179769 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076684058 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081621688 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069535853 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078367249 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075736315 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076010302 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078633426 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070423548 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073728463 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069615807 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077559147 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070803438 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082946324 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074716968 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083077608 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082934647 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072722039 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07622532 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078725512 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082862542 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081354654 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080199822 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078213779 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074527091 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071464929 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072865898 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076883581 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085346133 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068092855 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079461783 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068079821 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067802297 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072395491 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067926475 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080389437 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077964041 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070208518 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076711876 seconds)
  done (took 4.80166268 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092070183 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09721626 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088865287 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064592287 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.070644003 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068241285 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091192422 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062283485 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.06045249 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089911325 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055566001 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.05963659 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063234876 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053096124 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062755595 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056080598 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061957095 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05558638 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060141745 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059852341 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089205223 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053479607 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.0778226 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063123763 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055611964 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061628423 seconds)
  done (took 3.410260809 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078617547 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.090179359 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093715412 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132903047 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105962485 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079354145 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080716619 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096230732 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.089453488 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067291576 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071364484 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092667755 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09226401 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074652263 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067553557 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086812824 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084245016 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069229991 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073822533 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09627204 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087484711 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087002434 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099148846 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084136227 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066770814 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070287307 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071199798 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082234419 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073611595 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077489711 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07347141 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074708886 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072769825 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083212525 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07407125 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072478035 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.097663317 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081503406 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082243381 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071450115 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074500223 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072356671 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096913238 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.137658857 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070182606 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077729737 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.079719129 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080318691 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070207227 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091054351 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082532499 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069457651 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073440141 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069830196 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069873768 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084263314 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072077888 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072797926 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079814584 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.0717966 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.09197242 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072065527 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083900399 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067215615 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075363768 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066076438 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068120946 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066184095 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095501162 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06855929 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111347668 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068897242 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067923169 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076346898 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075061165 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073197943 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067611897 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082714547 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080610353 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073661617 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078876802 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073309279 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072950279 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093399331 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069747294 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06958849 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070737998 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076062544 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071071421 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068224929 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080339489 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066970891 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070046216 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084991864 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068354684 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068310052 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073299176 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072119486 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066597803 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078311652 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072040323 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067767997 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076607232 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067097143 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069973013 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079800286 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073514904 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06607685 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07163798 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073462964 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068105733 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068515483 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070470803 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.0689134 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076116988 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073730452 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071517689 seconds)
  done (took 10.764194026 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169784917 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.161055446 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070682448 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149758145 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076382323 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079470057 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151684296 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095141485 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068038773 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068501551 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068343632 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110878644 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106535987 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11679623 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079127684 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067593244 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084538404 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11519462 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153141037 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147848923 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084627045 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077061161 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069936754 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068799197 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070419989 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078554677 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085282192 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076864482 seconds)
  done (took 4.416851228 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084667516 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10411293 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075147916 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091552091 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091635233 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067341389 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070398626 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069322366 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081287198 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078596753 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06756339 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073053881 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074301197 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071046084 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068526572 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074890465 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075239953 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06945805 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07129125 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073289676 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077970763 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092593241 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072050622 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.0670625 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072806237 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066906302 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063364022 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085037523 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068192291 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094920977 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065886517 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075725813 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082393687 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068402455 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067430844 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067261793 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06782218 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.0673038 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07132534 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068029171 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068504526 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059125336 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069033256 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082013014 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076984072 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056541335 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072303129 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072407282 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07264433 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064883635 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069877601 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070373266 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072009933 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077687593 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07483787 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072765689 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068417125 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.07376838 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076400868 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067155825 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064394079 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06586924 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072294463 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065344223 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075922966 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072450095 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065634088 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067080486 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.06894703 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074206213 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066970698 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070583381 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064654085 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068967329 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071918831 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069122936 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070313231 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068489185 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069794412 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070046371 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057073143 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069539482 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055300698 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072892308 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068404713 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068209901 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069728807 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074965723 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.082324019 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071065862 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074714589 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06908335 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066571789 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070432798 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059794125 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069765956 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082962034 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082115106 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066864491 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065463937 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082389159 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072311558 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066300406 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055777315 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074633902 seconds)
  done (took 9.203019065 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095204069 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072654111 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086853328 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094026504 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08816217 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075907126 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077678963 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07022567 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083956904 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074341801 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077406374 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068166102 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078707211 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077850473 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070136288 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078209888 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072026154 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085411364 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083041495 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068622399 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076055615 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080359254 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090950021 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08279448 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081343469 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082278105 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090297212 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072396387 seconds)
  done (took 3.909723223 seconds)
done (took 38.128057865 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.70929036 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.875594455 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.699160184 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.084323835 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.967897552 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.726290981 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.858609171 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.701173037 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.835243019 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.732962738 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.915431524 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.86226918 seconds)
done (took 64.609138178 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.723532123 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.84952738 seconds)
    (2/2) benchmarking "String"...
    done (took 1.96635684 seconds)
  done (took 5.453552023 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.031565972 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.259459254 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.943521799 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.698363351 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.701402811 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.034239701 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.520803169 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.227690455 seconds)
  done (took 30.023314075 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.784335145 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.927173075 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.362741443 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.39348134 seconds)
  done (took 15.150326703 seconds)
done (took 62.103686582 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.691708031 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.750385307 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.701289138 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.681338465 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.753737943 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.70547343 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.056094573 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.698273109 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.696804678 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.688021306 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.697681008 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.136498126 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.702247605 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.963478153 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.697789343 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.704496727 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.745781343 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.183022803 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.855391343 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.710925144 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.699707706 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.756930118 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.697306517 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.701877558 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.697795219 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.696856366 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.140816499 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.702398841 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.323851668 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.702392808 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.732624787 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.094887953 seconds)
  done (took 201.403726197 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.701149741 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.803502118 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.861540043 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.739315566 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.247629429 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.880247164 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.822775707 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.280485052 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.704271617 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.724463998 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.022221867 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.697335183 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.049992394 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.647614911 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.729523047 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.801279394 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.845709832 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.052270191 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.732476432 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.874251313 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.717225729 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.835523497 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.793312478 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.005108575 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.698559517 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.771093989 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.721902169 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.847942069 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.897079059 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.832607869 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.701018131 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.707049769 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.920997552 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.570991988 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.72222617 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.720819878 seconds)
  done (took 168.322138645 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.083686502 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.703029329 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.702045303 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.701814142 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.71435661 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.701567458 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.822661764 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.826982496 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.312179143 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.147433972 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.750198964 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.523198368 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.699564443 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.769494183 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.71376094 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.70478001 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.718895205 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.729196886 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.702856317 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.703678186 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.826245675 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.712938434 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.840340793 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.706188409 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.703597696 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.708613998 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.07806311 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.702229673 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.711127244 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.967328689 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.703027354 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.704305808 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.605726275 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.349538497 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.789468835 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.702276709 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.709742349 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.704132458 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.925330518 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.703115905 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.70394289 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.706017403 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.882170991 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.700292365 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.826481793 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.700735529 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.213733386 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.701811563 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.704395228 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.413904225 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.40250575 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.700846303 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.704603095 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.707031789 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.705263329 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.704945207 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.704202221 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.710560001 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.347472794 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.77667518 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.703369373 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.7081686 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.710203768 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.705161201 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.976819296 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.701403473 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.407813561 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.759638006 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.826452098 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.82730944 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.70515075 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.773574801 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.798035648 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.702665265 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.704685334 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.705791017 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.705429655 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.785888994 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.701860766 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.836154692 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.701236392 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.712609166 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.706487127 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.757556313 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.706097633 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.776941613 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.703417242 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.602940826 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.702406144 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.706347789 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.014098689 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.771407605 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.702697327 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.706595493 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.705999529 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.840484948 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.82600945 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.489090673 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.704745764 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.706309185 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.392143223 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.707164727 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.851369953 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.704230731 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.8900818 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.707285902 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.788781797 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.709151806 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.708521174 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.707321654 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.739427611 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.70761981 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.766495353 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.7060051 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.082101757 seconds)
  done (took 394.630044428 seconds)
done (took 768.130954719 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.372430535 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.32717017 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.439577429 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.349974221 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.327346263 seconds)
  done (took 13.45948844 seconds)
done (took 15.103215311 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.794715129 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.798461823 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.728810317 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.79628108 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.725368475 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.798884971 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.776739568 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.729381902 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.763930692 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.733908327 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.764226836 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.729609068 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.721556946 seconds)
  done (took 24.504466319 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.953400587 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.948234749 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.77987051 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.952353799 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.756622095 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.949490073 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.875879929 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.863690473 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.864385166 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.727037186 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.721253892 seconds)
  done (took 22.038672472 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.94944141 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.954637272 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.787788386 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.950441105 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.75844497 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.949623394 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.878620928 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.865719362 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.867504987 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.726551365 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.723323231 seconds)
  done (took 22.05736355 seconds)
done (took 70.245848705 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.718416969 seconds)
  done (took 3.363119165 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.744392734 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.900337361 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.72152853 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.72172108 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.718244781 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.718276668 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.721585451 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.717541265 seconds)
  done (took 15.610935367 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.714477022 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.715189532 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.715378942 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.716523419 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.713945754 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.716175761 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.715586937 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.7198982 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.717925244 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.717425871 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.717837026 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.718947492 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.718856483 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.715809689 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.714905373 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.7185656 seconds)
  done (took 29.11463819 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.718585426 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.716913674 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.716222428 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.715692384 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.716723171 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.716924593 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.718293449 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.716360766 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.715955266 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.716536563 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.717772838 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.716556143 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.717732496 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.717293666 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.716823684 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.715328344 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.71703599 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.716160135 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.722352171 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.717371888 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.718458445 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.716444737 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.716996068 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.718262538 seconds)
  done (took 42.863825945 seconds)
done (took 92.595997824 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.574121198 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.090642713 seconds)
  done (took 8.312408538 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.723432399 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.71992831 seconds)
  done (took 5.125601898 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.719814949 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.720019973 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.719165844 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.72102448 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.719018618 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.719793538 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.721492966 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.721070344 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.721197309 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.721352306 seconds)
  done (took 18.85322906 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.7203954 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.720210414 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.718301109 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.721513546 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.72110986 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.717082426 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.722012643 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.722696529 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.720672307 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.718346605 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.721696212 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.719962047 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.723034549 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.720447531 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.721567809 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.718274136 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.719288932 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.719559105 seconds)
  done (took 32.616338738 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.721900219 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.721417368 seconds)
  done (took 5.093352989 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.718590267 seconds)
    (2/7) benchmarking "second"...
    done (took 1.720158203 seconds)
    (3/7) benchmarking "month"...
    done (took 1.719875147 seconds)
    (4/7) benchmarking "year"...
    done (took 1.718044379 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.719781103 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.720443857 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.718761477 seconds)
  done (took 13.685719289 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.723689332 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.879831864 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.95172056 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.395536004 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.723954176 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.726166135 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.655437782 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.726460796 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.72730338 seconds)
  done (took 19.160464567 seconds)
done (took 104.493217378 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.552179992 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.714914089 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.077885272 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.803929747 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.731513879 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.062393109 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.736514929 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.029626663 seconds)
done (took 42.359604217 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.7296375 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.283185958 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.309909086 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.268463129 seconds)
  done (took 12.514137741 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.702606387 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.247199171 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.746891638 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.307002633 seconds)
  done (took 19.677302806 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.098631606 seconds)
    (2/2) benchmarking "read"...
    done (took 2.059504718 seconds)
  done (took 5.816150564 seconds)
done (took 46.390061573 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.723818101 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.723600406 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.723074239 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.721216771 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.723300242 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.720270108 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.720841907 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.725493788 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.725978 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.724601967 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.725594764 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.726084329 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.723949098 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.722481414 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.720950266 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.724807663 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.721933871 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.722392196 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.721744389 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.724131602 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.721960398 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.721902925 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.721935355 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.721164916 seconds)
  done (took 43.004785838 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.726002246 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.724568917 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.725637007 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.725299024 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.722590403 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.725398038 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.725871644 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.723517384 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.725483202 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.72672987 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.722679369 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.724107125 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.727329062 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.723841607 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.725736422 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.725158434 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.727698922 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.723117222 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.727082663 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.72358597 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.726408826 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.72348218 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.723735601 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.728162711 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.723119741 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.725860078 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.725975645 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.724210584 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.726530329 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.723414052 seconds)
  done (took 53.406059359 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.731390031 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.736025429 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.728536307 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.727865252 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.727385439 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.728025536 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.726038242 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.726834977 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.726628687 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.728411983 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.728129891 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.727161843 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.72749274 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.72626065 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.727924088 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.728770596 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.727942747 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.728217766 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.726805284 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.727867014 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.727464825 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.727861714 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.728574585 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.727895619 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.72790761 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.727639586 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.727791042 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.727649206 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.727096262 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.728063344 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.727861088 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.727301786 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.729716556 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.728498979 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.729561663 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.727277492 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.733785345 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.737577836 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.728570519 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.729420615 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.729934776 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.72887389 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.73042017 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.728916653 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.729209072 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.728553567 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.729267739 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.729732516 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.729443103 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.730110638 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.728813274 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.730508277 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.72914297 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.730398755 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.730658857 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.732219645 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.732665095 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.733387872 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.732223305 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.732195693 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.731634465 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.732377993 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.730100247 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.729268807 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.729927592 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.730124442 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.731168406 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.72968152 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.729191989 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.731313687 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.730950008 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.730996702 seconds)
  done (took 126.173481395 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.730157107 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.729718453 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.728485766 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.727859165 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.727607554 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.731449125 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.728915068 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.73129506 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.726606711 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.730938911 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.731057677 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.728417262 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.727356065 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.731873122 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.730386415 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.728545848 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.731506347 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.728544859 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.732138948 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.732356102 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.731906127 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.728625191 seconds)
  done (took 39.714454922 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.731418008 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.732895891 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.728485393 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.731373377 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.728601966 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.733668271 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.732343747 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.732463146 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.731696494 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.72741202 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.729524014 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.732595222 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.7293415 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.730802458 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.731290108 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.729625792 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.732909007 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.729254964 seconds)
  done (took 32.816420146 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.729458716 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.730818005 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.732516534 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.728728919 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.730090473 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.733780611 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.729130531 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.732214229 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.733043078 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.729915052 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.733102516 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733395292 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.733584915 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.729854653 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.733747198 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.729807374 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.732582789 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.731843877 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.733597372 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.730149539 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.731127405 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.733096303 seconds)
  done (took 39.756925421 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.73360745 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.735429156 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.731056903 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.730596782 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.731592928 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.734167184 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.735410638 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.73157636 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.735315313 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.735237411 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.73110617 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.735776376 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.732359313 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.734045466 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.732651155 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.731848554 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.735006382 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.731947371 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.734114424 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.732028151 seconds)
  done (took 36.326300097 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.736234998 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.734660121 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.73595873 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.735116871 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.735912626 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.734724838 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.735149159 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.734897471 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.736499862 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.736297448 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.735228622 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.734976859 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.735579109 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.734957307 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.735712256 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.736642621 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.736996379 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.735543893 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.735138417 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.736653389 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.736411366 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.736388728 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.736942339 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.736736803 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.736546475 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.736739847 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.736484067 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.736043937 seconds)
  done (took 50.269711764 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.735810774 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.736446491 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.733717804 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.73260431 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.73375171 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.733608911 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.734444443 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.7331215 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.735339627 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.733380671 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.735972645 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.737715602 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.734628541 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.737936908 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.737173142 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.735465877 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735167158 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.734182209 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.733841726 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.734857057 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.738249392 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.737520918 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.736923837 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.736202123 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.733162502 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.738819918 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.734826899 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.734181703 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.737970006 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.734569788 seconds)
  done (took 53.726380641 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.755390855 seconds)
    (2/2) benchmarking "in"...
    done (took 1.756167527 seconds)
  done (took 5.176187222 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.734593264 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.73719961 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.73879887 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.735780282 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.73553366 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.738742433 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.737951867 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.736434915 seconds)
  done (took 15.56121761 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.736571523 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.739236626 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.738125329 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.738765329 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.738580006 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.737441345 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.743879163 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.739648545 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.737753811 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.739998236 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.745396548 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.748791251 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.73987186 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.739379759 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.736568819 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.739360194 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.738105619 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.739163314 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.73946269 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.738909958 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.738973815 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.73925928 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.740314006 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.735577056 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.742109996 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.750434448 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.743607872 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.740486666 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.739752613 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.742132682 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.738098665 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.735945291 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.740615042 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.740398957 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.739400913 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.740578574 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.746700952 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.739672193 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.744201477 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.741359506 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.74014149 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.737849628 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.739853409 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.741768462 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.74078037 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.740243342 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.740418809 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.7373086 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.739940555 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.74386843 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.747056776 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.740925261 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.739556642 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.742429984 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.741366557 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.746882452 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.742362217 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.743205493 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.751705086 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.751802648 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.754085337 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.751416886 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.741640453 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.74183538 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.750361634 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.769172707 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.746097693 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.739274584 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.738921065 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.743111773 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.747032316 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.755658376 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.752687142 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.741549463 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.742224979 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.742567585 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.741940161 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.741286338 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.748159801 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.744223132 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.742533001 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.743835274 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.753008593 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.768184211 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.740732265 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.742388207 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.74331895 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.743517163 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.74295847 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.75191157 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.743028129 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.742994027 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.742003509 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.741561035 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.7431082 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.743743697 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.742258538 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.743743742 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.740217437 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.744646109 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.744329907 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.74653488 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.752054247 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.744603239 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.745428322 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.750518052 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.743664387 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.742778436 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.749168441 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.745217408 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.745040139 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.745391197 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.750617811 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.741624545 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.747518506 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.753477119 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.744910401 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.744243478 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.744845599 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.744647227 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.753774468 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.775167201 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.743918702 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.744482164 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.750042261 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.759963304 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.745416584 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.746211379 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.745693167 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.74212358 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.742126927 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.746530164 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.744729205 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.745078665 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.746207324 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.746110474 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.741770355 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.744603944 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.74605606 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.746434824 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.745739883 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.744413469 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.74606435 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.747606462 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.745049956 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.747423497 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.751517782 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.746179825 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.746970522 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.746805514 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.742543669 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.7450718 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.746306396 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.746422864 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.74556208 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.747699611 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.748239481 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.746489688 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.746418663 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.747233907 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.747094371 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.748649126 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.750432704 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.747189117 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.750702039 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.746081354 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.744465534 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.746450648 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.746821516 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.746646818 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.748021218 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.744674922 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.749693498 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.757629993 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.745972853 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.746981227 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.750560911 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.749011998 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.746961354 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.747461975 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.751325364 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.757159005 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.748015414 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.752343556 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.747666159 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.746826985 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.749218175 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.747060458 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.747359155 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.749285439 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.749689762 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.758773831 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.760738387 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.756896486 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.74925325 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.753186056 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.7487673 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.753582947 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.753085187 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.749334125 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.749397779 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.749480203 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.748212921 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.748521759 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.74998354 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.75031399 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.746455629 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.74898812 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.749037428 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.75045461 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.749791502 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.749270157 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.749228136 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.746962868 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.751020156 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.750123564 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.748811374 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.746962765 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.748836857 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.750088897 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.749579778 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.751536912 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.755948606 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.745842028 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.750342502 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.751216552 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.749440655 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.748294131 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.751569183 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.751868342 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.748817291 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.754096615 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.749793374 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.751011866 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.755829324 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.750350458 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.750050349 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.752379665 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.74936396 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.747225573 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.752234038 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.759519709 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.750607775 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.75122852 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.749926113 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.750898565 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.750812097 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.757255252 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.748441895 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.751148003 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.751961626 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.752141638 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.747812723 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.752083661 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.752145684 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.752333488 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.75216341 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.751791518 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.752053092 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.751165072 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.751775044 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.751920023 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.751155555 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.75446246 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.761314913 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.755064555 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.751858862 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.753945591 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.752014163 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.756124281 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.752036715 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.753539321 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.750360279 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.766504811 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.763609388 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.757274755 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.754215317 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.753348906 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.755675238 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.754356769 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.75864873 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.753296691 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.753269252 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.754607471 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.752617819 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.750594135 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.753545607 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.752942887 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.754302979 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.754786786 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.75886269 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.75355255 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.752367613 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.754966095 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.754587624 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.754343985 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.752298986 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.753190254 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.755525526 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.754745432 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.753094062 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.753211199 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.759792123 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.753613081 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.755210053 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.75382576 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.750964761 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.753983335 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.755317298 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.755377968 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.757295818 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.764566066 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.757440029 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.764505727 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.755479657 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.763995326 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.756070647 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.757039755 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.765346027 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.751603979 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.754380422 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.755945313 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.754338415 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.759351468 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.754541344 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.756080993 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.760948124 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.755405766 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.756491707 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.756843378 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.755896796 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.75601107 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.755737624 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.762478858 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.757216195 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.758492342 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.757423739 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.752239536 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.755309896 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.757078278 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.754604497 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.758708488 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.756711138 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.754423405 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.755929015 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.756542943 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.756236609 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.756255041 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.757197608 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.753423352 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.757974762 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.761970495 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.757219339 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.762853563 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.756304334 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.763702868 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.757295444 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.763620458 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.757085988 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.758748011 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.756180098 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.757658429 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.757750534 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.756293499 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.756103119 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.75701452 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.758917675 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.761508858 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.758426273 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.758472512 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.758908247 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.75945701 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.756353791 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.769481075 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.785115979 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.758731391 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.76369053 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.754954336 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.76017155 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.762316384 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.757759885 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.758400529 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.761534651 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.770538023 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.768252569 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.758252045 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.759310162 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.75803445 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.759472995 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.758086453 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.758882075 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.760250915 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.760149995 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.759175881 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.760038572 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.762173327 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.759144302 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.760014691 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.759862372 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.760695481 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.77068021 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.759981976 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.759874261 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.75951698 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.758477884 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.759646791 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.759129104 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.759752156 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.758680329 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.76048617 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.760691077 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.767089452 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.769323689 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.761798834 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.75939455 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.760291841 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.760736709 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.758781787 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.761881618 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.761058961 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.760231828 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.760011955 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.760028657 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.7592863 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.759243118 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.760862735 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.761177118 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.760920879 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.763615975 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.768666629 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.760571983 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.758807055 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.760278789 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.761614412 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.759174248 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.760252355 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.767946423 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.764182408 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.772857948 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.771053321 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.766758426 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.760762245 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.764758472 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.77101738 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.761200572 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.763786521 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.762817714 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.762922272 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.763923823 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.766050462 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.762535647 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.766835658 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.762169598 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.760394913 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.767524521 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.762387315 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.763041932 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.763980426 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.766984473 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.761821629 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.758763179 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.763006147 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.762264308 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.768163814 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.764376516 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.76437104 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.763452652 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.760841077 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.763402353 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.766683988 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.762440468 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.763486052 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.759135442 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.764488564 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.762415501 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.763512402 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.759325299 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.761341739 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.762911568 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.765966854 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.771770419 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.760605928 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.765478586 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.763447904 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.764067576 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.764242055 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.764531544 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.760328837 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.760458846 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.763271789 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.764109043 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.765107747 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.7658868 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.763205446 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.764479507 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.766523608 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.764424305 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.767424499 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.775764089 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.774642559 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.762548025 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.764509285 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.763728585 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.76722899 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.765781805 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.765545062 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.764597528 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.76634834 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.763455495 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.76592733 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.764933061 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.767317781 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.781437266 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.765960052 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.764236742 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.763959395 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.767964487 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.766198121 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.762457399 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.765845997 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.766939786 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.767653835 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.774270834 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.765981293 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.772084762 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.765444867 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.766581941 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.77224856 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.769017412 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.775931195 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.767897093 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.766287901 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.766617305 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.770674564 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.785100223 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.767419325 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.777554043 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.798543864 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.766721767 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.766699804 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.767259638 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.766243666 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.766153572 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.766990196 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.767266854 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.767816919 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.767886669 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.767508121 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.76680653 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.773471291 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.768202345 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.768011915 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.767874448 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.767762926 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.76714641 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.763588421 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.767595538 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.768233375 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.768944622 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.765745293 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.768934427 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.768241008 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.780446503 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.779758751 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.768144551 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.768839448 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.767434339 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.770864462 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.770483351 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.781165682 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.778928494 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.767878749 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.768928441 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.769479063 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.768335597 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.766383789 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.768605786 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.769117572 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.768134498 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.764356644 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.782140606 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.779374441 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.772804039 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.768125071 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.770482864 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.769771761 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.769902634 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.768237095 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.767776169 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.770578658 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.769779279 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.77321817 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.769400597 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.768264867 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.771745511 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.779668645 seconds)
  done (took 1048.046512545 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.76782343 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.76793373 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.767207119 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.767829914 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.767791617 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.765919549 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.767525823 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.767209125 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.767024098 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.767833254 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.768347502 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.766814581 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.768148092 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.76669761 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.768178152 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.767307152 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.767956277 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.768791572 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.768821684 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.768716267 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.768987457 seconds)
  done (took 38.817976401 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.770151199 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.767420438 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.768718261 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.772158938 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.768322089 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.772291036 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.768676544 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771235534 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.772706534 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768131639 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.771840375 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771891869 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.768323355 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.769076523 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768431673 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.771993678 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.770551826 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.768520761 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.77078582 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.768922584 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.770637612 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.768499604 seconds)
  done (took 40.638078015 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.77107045 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.774579676 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.770179212 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.768157042 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.771542174 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.767736225 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.77233054 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.770993417 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.77235459 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.772611602 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.771334867 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.773689681 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.781102166 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.779214503 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.775904059 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.771903206 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.91616052 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.773001335 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.772890197 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.772717702 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.769919853 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.775394733 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.769680001 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.769910602 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.770388285 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.772907984 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.772315691 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.773478332 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.774156762 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.774405863 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.779427299 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.772761737 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.774248279 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.774610547 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.773036591 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.77470605 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.778563775 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.775239839 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.770586811 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.773615788 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.78454747 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.798305941 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.774840582 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.780343291 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.774352631 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.773957766 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.777861082 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.785408688 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.770699183 seconds)
  done (took 88.789177226 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.776870338 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.772003992 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.77113159 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.773639614 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.773848204 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.773993011 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.775028907 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.772730364 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.770075158 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.770127184 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.773228897 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.77173051 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.769856196 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.772660321 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.77404749 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.768914013 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.769327683 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.771088017 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.770055911 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.769890835 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.770486097 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.771958152 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.773168068 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.770900441 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.773504003 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.7704581 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.769787594 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.773103092 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.771767692 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.771492086 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.773253065 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.77203637 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.774950656 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.770918768 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.78034257 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.774505122 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.774027203 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.770107222 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.774066518 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.771471006 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.776742274 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.772223133 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.773046145 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.773331128 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.769804536 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.771770068 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.770582957 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.770688097 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.771567791 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.772744147 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.772905921 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.769829105 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.767700334 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.764015588 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.768494559 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.767643522 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.765266025 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.769952379 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.765469969 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.764633739 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.763540907 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.767295465 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.765987448 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.76598992 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.766651922 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.76466499 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.763022827 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.766796827 seconds)
  done (took 122.117806446 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.766874796 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.767197931 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.765815685 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.765475819 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.765123888 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.768676521 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.765698244 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.764810209 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.765335716 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.764911042 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.769299237 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.765170552 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.763163328 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.763792348 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.765663569 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.763897106 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.764241637 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.765794848 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.7638778 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.765024617 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.76668482 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.765219875 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.766404967 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.765502669 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.765368017 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.766782513 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.765822784 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.766748562 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.766587879 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.766241431 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.765403484 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.766001942 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.765532451 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.766581099 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.766595215 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.766389908 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.765943871 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.766240872 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.765909044 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.767073626 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.766065294 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.766181453 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.767041305 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.76748332 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.767006856 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.765590793 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.766141197 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.766178907 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.76746362 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.76511176 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.767334917 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.767526115 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.767004622 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.766148643 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.766173766 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.765651063 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.76637607 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.766912941 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.766507566 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.7667588 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.766965892 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.769409101 seconds)
  done (took 111.19604289 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.766841599 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.766364924 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.763340264 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.763940347 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.768113406 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.763436124 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.765908122 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.766963776 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.766612062 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.765052251 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77081031 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.764675919 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765062447 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767925353 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.764913723 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768829004 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.764746806 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.763696158 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.766918674 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.763062516 seconds)
  done (took 37.011823792 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.767042773 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.767384565 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.763687054 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.764868157 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.767870622 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.764203024 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.771947317 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767311185 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764723205 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767811146 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.767925307 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.771599297 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764813828 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.76449938 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.767800972 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.765914073 seconds)
  done (took 29.96265111 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.765374362 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.767061396 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.767897121 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.768409885 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.765174768 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.764076119 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.769009763 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.764733036 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.765362612 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.768865434 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.769695679 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.77458808 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.764783191 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.766220383 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.762383722 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.765727939 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.761644772 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.764043247 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.764928943 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.763638982 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.761018605 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.762644627 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.765626816 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.767207864 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.758776889 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.758562624 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.758481495 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.758689831 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.761392138 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.761053781 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.758313087 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.75812145 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.758519439 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.758554343 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.763354364 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.757886358 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.761138034 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.760462636 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.760214023 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.759936183 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.760832193 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.756948361 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.759522009 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.760639482 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.756868112 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.763805872 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.757248823 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.756864603 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.755479362 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.756869858 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.759812604 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.763343505 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.760589807 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.759520321 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.760179548 seconds)
  done (took 98.616965833 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.759774491 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.760864263 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.756474192 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.760274547 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.762083159 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.756230811 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.760384147 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.75730118 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.75789743 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.759182214 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.758480697 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.758906928 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.757473796 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.75931061 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.756575735 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760186644 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.75609257 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.756540193 seconds)
  done (took 33.341742718 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.757348056 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.756646984 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.761009034 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.75647679 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.757822286 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.760238441 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.758765814 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.760123241 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760762507 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.757485914 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.756080146 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.76165152 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760591365 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.761455685 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.757885939 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756486863 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.7615642 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.759723703 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.757553355 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.758603436 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.761961635 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.762006468 seconds)
  done (took 40.389224222 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.761656056 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.759950491 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.776660138 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.783875915 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.786102392 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.797602828 seconds)
  done (took 12.357188421 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.758066444 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76149736 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.757964069 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.763452049 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.759760062 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.757043292 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.757351996 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.756170694 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.760530316 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.760525093 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.75693397 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.759455194 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.759406001 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.756774586 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76230594 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.758408723 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.756635856 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.755506286 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.756917302 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.758701983 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.759975117 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.758824924 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.756133435 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75507144 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.756031144 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.755562359 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760590432 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.756728063 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.754969427 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756680818 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.757283518 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.755594101 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.758416588 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.754045475 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75619855 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757244002 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753801137 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.761302634 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.756218343 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753600242 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.757016767 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.75663683 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.755992178 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75680742 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755666781 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753741091 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7531546 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75380991 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753771107 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757896206 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.754586857 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751114033 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.754380391 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.755851288 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757305128 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.753979748 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750213507 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747976971 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751398693 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750331663 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750120691 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752832493 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.75040143 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749631449 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.752485577 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750106758 seconds)
  done (took 117.582250335 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75010019 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.75114495 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750716132 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.74859661 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748216169 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.74971591 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751157334 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749566235 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750453563 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749942719 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.754809506 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750427565 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750369246 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749546627 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750840559 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749237642 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.752567171 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75032285 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748872859 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753567041 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749926981 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750742201 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.753310103 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750462422 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750601504 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754060033 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751504322 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.752857235 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.750086711 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749469811 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749717983 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.74965891 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749713212 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.750816795 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.74924187 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750259107 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749653377 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751326139 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750382666 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754144453 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750246931 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753435256 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749737185 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750768107 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749722751 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751811164 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750872981 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749994446 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749275443 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749902348 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.752825686 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750243276 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750125649 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750967632 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.74934395 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749294653 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750263664 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750417763 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749532702 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.752027964 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749588483 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.748394012 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75751463 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749611858 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748585288 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748441836 seconds)
  done (took 117.224101849 seconds)
done (took 2433.675002181 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.775673157 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.798311157 seconds)
  done (took 15.254188525 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.914030579 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.866078185 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.755339518 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.792234834 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.749584919 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.77325767 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.758313567 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.74866469 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.753157808 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.75042774 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.751093053 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.938632247 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.75560196 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.752791127 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.750557275 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.844922407 seconds)
  done (took 50.475073405 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.753947271 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.756700947 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.77024446 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.75376879 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.753952433 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.772945448 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.788878524 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.758503737 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.814942705 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.766238155 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.882198041 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.760904077 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.752831366 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.818544682 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.765148196 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.765966954 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.847447626 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.827500446 seconds)
  done (took 33.790807849 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.835603275 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.764725973 seconds)
  done (took 10.288638734 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.766656715 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.77201186 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.746084262 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.757262585 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.764057494 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.771499029 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.754822641 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.765398797 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.746178694 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.767322479 seconds)
  done (took 69.294264181 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.758275647 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.753576408 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.752170331 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.747958494 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.744579093 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.746967057 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.752336099 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.748574864 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.437794305 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.784502357 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.75407218 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.756368705 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.751381439 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.751879434 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.749639942 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.773494903 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.864235315 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.748177121 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.746299681 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.759518285 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.750940111 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.809449236 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.763530019 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.751811489 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.781391149 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.438960488 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.756585946 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.755275902 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.861248733 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.748669166 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.753541464 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.75075367 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.753762866 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.140739449 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.025360378 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.748008883 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.755746815 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.756983105 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.747367165 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.874082656 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.752858331 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.754893817 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.74311308 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.001215367 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.846260445 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.796051301 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.171235614 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.752483139 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.751726603 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.783432658 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.753737451 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.752002721 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.767988189 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.264918939 seconds)
  done (took 126.181640893 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.74462403 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.015748356 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.903058378 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.74714546 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.03378778 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.956259358 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.745518964 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.793647731 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.747390465 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.976660853 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.967142129 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.855153319 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.752205911 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.744603818 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.745438811 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.742492098 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.911453005 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.819007101 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.748955806 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.74541017 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.777491955 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.994452911 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.880767395 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.748420384 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.768968476 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.960317976 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.884864922 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.855369662 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.234483693 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.745548676 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.812582392 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.748325986 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.74835994 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.746063276 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.904475385 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.843801023 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.841976522 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.746215124 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.747682896 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.745435239 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.42299106 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.945348064 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.848254779 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.893877171 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.995937833 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.951274469 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.537327724 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.745249197 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.485752734 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.909197446 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.981204604 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.983935252 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.87145498 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.746680049 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.256957399 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.746909783 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.745479031 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.983533637 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976951457 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.8496101 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.747067839 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.747839697 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.74849083 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.996225276 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.747737848 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.842616195 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.748337647 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.745794113 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.846089803 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.850959766 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.976815978 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.960201414 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.782481748 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.067858939 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.227296676 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.997679125 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.820933217 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.98325632 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.751917782 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.745115401 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.835291248 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.711242768 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.950493111 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.997484757 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.005015921 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.789504578 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.471779098 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.747786392 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.981529505 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.972889161 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.047245845 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.990339014 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.899144834 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.057016594 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.746923639 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.74787139 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.982125431 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.885371161 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.749824219 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.110665141 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.985318335 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.31455285 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.780049741 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.092240405 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.88180592 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.748475751 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.393616023 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.747491325 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.977516001 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.79362531 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.749880283 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.748512642 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.971323915 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.824777381 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.746718073 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.382636481 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.814403539 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.750007204 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.985900143 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.747824653 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.018485324 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.749478789 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.99109337 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.01163255 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.789808897 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.981693435 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.990738605 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.74902949 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.997967191 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.995970751 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.867872361 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.973270492 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.37430547 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.749595041 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.042907223 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.749640394 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.750219966 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.921981139 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.75350721 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.926826139 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.751985863 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.086937735 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.777493067 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.908988805 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.752067732 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.009117592 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.790406485 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.803676143 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.754147302 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.884280055 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.753069663 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.675238662 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.905175257 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.75367937 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.747143447 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.462188789 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.751338249 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.91082606 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.986851497 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.774679028 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.826416712 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.422466862 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.753848719 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.841672229 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.775792885 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.09676941 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.751278904 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.969450001 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.750637464 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.296720857 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.751891251 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.994726411 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.935243494 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.756196671 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.750137421 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.664170714 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.752046131 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.750924848 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.914125052 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.202809544 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.751468821 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.957360401 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.753712578 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.895597691 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.75324767 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.83384434 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.108539658 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.752278315 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.751470046 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.753954755 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.753899065 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.752870236 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.019448047 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.786740889 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.285654417 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.893008805 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.026466846 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.074971268 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.006118417 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.798631373 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.755588422 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.002295092 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.756139119 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.81768834 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.755738021 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.780967158 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.987872926 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.75687889 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.96720379 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.038269049 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.673282912 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.805122121 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.756328612 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.756124652 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.709964511 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.911985503 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.847081231 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.756326043 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.755146041 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.880317815 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.888105847 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.970353367 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.75721815 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.088230486 seconds)
  done (took 877.917567028 seconds)
done (took 1184.879773991 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.754878941 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.754681599 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.744720448 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.753440495 seconds)
  done (took 28.696342287 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.762382605 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.760746117 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.762703581 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.76451877 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.764674966 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.761228149 seconds)
  done (took 12.264973668 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.802245159 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.756263655 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.759401232 seconds)
  done (took 21.007262884 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.828403988 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.172203479 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.871130273 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.197727148 seconds)
  done (took 9.759880715 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.764419534 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.766549516 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.763913532 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.764724986 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.765464496 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.765930496 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.763376217 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.76581101 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.766201824 seconds)
  done (took 17.578008242 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.184180621 seconds)
done (took 95.178583759 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.787622929 seconds)
    (2/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.372864274 seconds)
    (3/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.878903795 seconds)
    (4/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.841411595 seconds)
    (5/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.850251955 seconds)
    (6/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.788849608 seconds)
    (7/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.920567775 seconds)
    (8/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.964714449 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.760580623 seconds)
    (10/309) benchmarking ("sort", Int8, false)...
    done (took 4.779192563 seconds)
    (11/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.759815651 seconds)
    (12/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.141390661 seconds)
    (13/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.233743037 seconds)
    (14/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.23463946 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.759065826 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 3.311751893 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.8544237 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.75808432 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.800975268 seconds)
    (20/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.74339544 seconds)
    (21/309) benchmarking ("perf_sum", Float64, true)...
    done (took 3.257509888 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.779991134 seconds)
    (23/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.741441472 seconds)
    (24/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.826817875 seconds)
    (25/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.133606676 seconds)
    (26/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.867196893 seconds)
    (27/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.783128596 seconds)
    (28/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.290453353 seconds)
    (29/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.225968602 seconds)
    (30/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.957333704 seconds)
    (31/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.058534742 seconds)
    (32/309) benchmarking ("sort", Float32, false)...
    done (took 5.526235585 seconds)
    (33/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.0767912 seconds)
    (34/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.821828594 seconds)
    (35/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.741453886 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.786234934 seconds)
    (37/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.775174638 seconds)
    (38/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.069629441 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.759521873 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.137048347 seconds)
    (41/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.058169678 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.778538055 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.886890469 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.819081074 seconds)
    (45/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.778130005 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.833227377 seconds)
    (47/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.85024966 seconds)
    (48/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.871249565 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.679598263 seconds)
    (50/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.784987701 seconds)
    (51/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.875262736 seconds)
    (52/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.840267654 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.084393614 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.871030212 seconds)
    (55/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.780524526 seconds)
    (56/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.145559619 seconds)
    (57/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.199733123 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.014850187 seconds)
    (59/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.011321434 seconds)
    (60/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.249152136 seconds)
    (61/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.118500897 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.76019208 seconds)
    (63/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 8.118553935 seconds)
    (64/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.76232951 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.848136786 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.137115564 seconds)
    (67/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.220485077 seconds)
    (68/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.896707839 seconds)
    (69/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.900118832 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.401611439 seconds)
    (71/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.852061809 seconds)
    (72/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.74545485 seconds)
    (73/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.752596796 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.954795635 seconds)
    (75/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.363541776 seconds)
    (76/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.874133548 seconds)
    (77/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.311132705 seconds)
    (78/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.735064186 seconds)
    (79/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.757888916 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.862529254 seconds)
    (81/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.10687928 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.412635763 seconds)
    (83/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.761232818 seconds)
    (84/309) benchmarking ("sort", BigInt, false)...
    done (took 6.798400738 seconds)
    (85/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.870491498 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.39737481 seconds)
    (87/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.776594332 seconds)
    (88/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.783573298 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.149270321 seconds)
    (90/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.858155171 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.750286645 seconds)
    (92/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.589346365 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.763064006 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 3.668647241 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.865348989 seconds)
    (96/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.914001818 seconds)
    (97/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.847785768 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.85650008 seconds)
    (99/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.584714908 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.060528932 seconds)
    (101/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.96404732 seconds)
    (102/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.903570313 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.981076932 seconds)
    (104/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.952615228 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.853554312 seconds)
    (106/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.660285569 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.838992442 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.761190861 seconds)
    (109/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.783463516 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.056100968 seconds)
    (111/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.09414114 seconds)
    (112/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.747941401 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.903233689 seconds)
    (114/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.763998368 seconds)
    (115/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.104797981 seconds)
    (116/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.433035973 seconds)
    (117/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.013766827 seconds)
    (118/309) benchmarking ("sort", Bool, false)...
    done (took 2.207921233 seconds)
    (119/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.78338675 seconds)
    (120/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.034504863 seconds)
    (121/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.890539584 seconds)
    (122/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.087970564 seconds)
    (123/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.025293877 seconds)
    (124/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.905083449 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.844716673 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.981185868 seconds)
    (127/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.026774098 seconds)
    (128/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.040853844 seconds)
    (129/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.998984018 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.104027807 seconds)
    (131/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.794412681 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.035453143 seconds)
    (133/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.875169721 seconds)
    (134/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.047050456 seconds)
    (135/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.00803507 seconds)
    (136/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.826348437 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.501556923 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.037131877 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.140568564 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.657761451 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.008504527 seconds)
    (142/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.766741594 seconds)
    (143/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.788310274 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.873513895 seconds)
    (145/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.142751662 seconds)
    (146/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.925528615 seconds)
    (147/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.983251153 seconds)
    (148/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.30237898 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.83652667 seconds)
    (150/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.944131178 seconds)
    (151/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.787144328 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.543088397 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.458773349 seconds)
    (154/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.95927162 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.668639601 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.008227759 seconds)
    (157/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.068443545 seconds)
    (158/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.92494916 seconds)
    (159/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.07336913 seconds)
    (160/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.754184526 seconds)
    (161/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 3.314845757 seconds)
    (162/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.822655476 seconds)
    (163/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.163685168 seconds)
    (164/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.89224452 seconds)
    (165/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.277491903 seconds)
    (166/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.37227868 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.759295881 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.874238001 seconds)
    (169/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.77848645 seconds)
    (170/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.936561896 seconds)
    (171/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.225699839 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.856462408 seconds)
    (173/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.445411084 seconds)
    (174/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.956749909 seconds)
    (175/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.794590125 seconds)
    (176/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.871000433 seconds)
    (177/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.845191293 seconds)
    (178/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.77592141 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.450712533 seconds)
    (180/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.773838971 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.71950211 seconds)
    (182/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.883552726 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.009309331 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.798851752 seconds)
    (185/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.764331004 seconds)
    (186/309) benchmarking ("sort", Float64, false)...
    done (took 5.529389901 seconds)
    (187/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.900946535 seconds)
    (188/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.768999977 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.827252708 seconds)
    (190/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.835772904 seconds)
    (191/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.702666471 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.246810821 seconds)
    (193/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.12590924 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.767672803 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.826439612 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.097870316 seconds)
    (197/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.606937167 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.445549159 seconds)
    (199/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.961677138 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.675532671 seconds)
    (201/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.960493751 seconds)
    (202/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.964460035 seconds)
    (203/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.444056842 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.755388919 seconds)
    (205/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.417008211 seconds)
    (206/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.187767044 seconds)
    (207/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.782961707 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.568517372 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.971049093 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.066098961 seconds)
    (211/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.798104852 seconds)
    (212/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.849011737 seconds)
    (213/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.228427168 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.15807709 seconds)
    (215/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.867432761 seconds)
    (216/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.067591566 seconds)
    (217/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.157850507 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.063760517 seconds)
    (219/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.327507156 seconds)
    (220/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.864193586 seconds)
    (221/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.018384079 seconds)
    (222/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.867235965 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.793487064 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.769435264 seconds)
    (225/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.767094046 seconds)
    (226/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.095018995 seconds)
    (227/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.943518735 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.813542226 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.768010676 seconds)
    (230/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.715718393 seconds)
    (231/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.95102967 seconds)
    (232/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.989719734 seconds)
    (233/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.441400004 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.652869157 seconds)
    (235/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.836598041 seconds)
    (236/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.271018053 seconds)
    (237/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.011748596 seconds)
    (238/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.857335419 seconds)
    (239/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.135485079 seconds)
    (240/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.782773208 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.102716511 seconds)
    (242/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.752358291 seconds)
    (243/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.867380129 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.150052563 seconds)
    (245/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.854843093 seconds)
    (246/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.945151444 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.880793043 seconds)
    (248/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.903095098 seconds)
    (249/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.127387578 seconds)
    (250/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.716971073 seconds)
    (251/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.937103385 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.860115406 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.770346101 seconds)
    (254/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.153601376 seconds)
    (255/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.922265358 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.770204492 seconds)
    (257/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.858457598 seconds)
    (258/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.770974992 seconds)
    (259/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.884262939 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.803148805 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.405465032 seconds)
    (262/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.98883384 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.133073274 seconds)
    (264/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.899085543 seconds)
    (265/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.723471448 seconds)
    (266/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.873127185 seconds)
    (267/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.067800197 seconds)
    (268/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.954694933 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.877447864 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.834911057 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.558897902 seconds)
    (272/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.167519739 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.099559834 seconds)
    (274/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.35038373 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.755167613 seconds)
    (276/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.77501453 seconds)
    (277/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.780029895 seconds)
    (278/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.821186946 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.770807998 seconds)
    (280/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.772759551 seconds)
    (281/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.965131395 seconds)
    (282/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.879292675 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.856768698 seconds)
    (284/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.283289828 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.861494801 seconds)
    (286/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.836502663 seconds)
    (287/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.755416342 seconds)
    (288/309) benchmarking ("map", abs, BigInt, false)...
    done (took 8.231127683 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 3.349380867 seconds)
    (290/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.806959145 seconds)
    (291/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.917149191 seconds)
    (292/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.93909247 seconds)
    (293/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.97356261 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.501768402 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.165890161 seconds)
    (296/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.857932771 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.805743269 seconds)
    (298/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.756921111 seconds)
    (299/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 3.473248037 seconds)
    (300/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.696199454 seconds)
    (301/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.798173319 seconds)
    (302/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.868727523 seconds)
    (303/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.852243489 seconds)
    (304/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.338137903 seconds)
    (305/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.993280659 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.09022442 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.792831362 seconds)
    (308/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.057370122 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.112502837 seconds)
  done (took 983.091013635 seconds)
done (took 984.857271413 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.808335661 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.800673082 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.784729337 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.807137696 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.896594444 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.813785417 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.795976942 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.785960455 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.832162669 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.837769504 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.784865544 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.812321149 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.787112761 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.785462328 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.785743467 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.800161479 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.085914115 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.804288662 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.801122909 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.79324966 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.802951853 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.783443911 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.835799363 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.812265731 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.789453666 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.78823259 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.788920093 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.805071421 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.896880304 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.788273007 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.787668126 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.798171926 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.087025355 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.803451326 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.780943087 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.80699692 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.800503915 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.794783255 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.789229704 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.818980798 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.217802675 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.789408724 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.789640348 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.787406123 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.786559054 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.791375787 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.787945826 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.79550096 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.799817158 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.801832205 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.216370813 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.8038439 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.79431777 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.78983204 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.797703435 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.787550282 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.793619607 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.804147416 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.809243494 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.803501106 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.07731834 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.810109431 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.789404943 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.808491601 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.795251177 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.252545583 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.784921186 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.792016437 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.218074774 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.793858462 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.252497639 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.799319794 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.7891031 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.801858005 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.821674832 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.089604896 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.800552558 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.787361915 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.795865607 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.790076771 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.796966948 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.802006347 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.793877577 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.790222265 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.80356917 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.820560408 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.799837377 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.789423049 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.797302027 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.809499725 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.798203824 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.80040135 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.792988263 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.783417634 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.798701455 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.795664787 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.791895819 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.793535046 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.794045989 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.799848196 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.216227787 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.810666153 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.787046452 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.786424546 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.787874863 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.804176378 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.215252451 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.793994131 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.812397839 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.837558211 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.792946617 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.080240571 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.814050838 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.805310116 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.79961488 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.795619875 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.786269584 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.080680056 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.235375478 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.807578341 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.792445087 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.790038276 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.806593254 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.794842488 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.788299048 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.093458322 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.81169469 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.805175341 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.912184116 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.801256738 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.822440959 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.789481776 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.795478164 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.820249782 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.807415183 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.823225444 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.793678488 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.806645041 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.807182704 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.788515571 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.802623983 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.802270423 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.793416479 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.800030984 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.785541475 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.821901294 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.805055858 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.804224742 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.81312517 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.914731237 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.792036427 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.081832528 seconds)
done (took 281.343415162 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.858712342 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.780417748 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.887352357 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.788046794 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.874148607 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.886181629 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.785867405 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.785878921 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.786290753 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.184468678 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.788302521 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.788074266 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.781401631 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.78576563 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.87190887 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.789020539 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.786186472 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.166231377 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.791620498 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.862305002 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.789178219 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.786409216 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.789389844 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.211978373 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.787386099 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.789612558 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.870678197 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.790185413 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.170820213 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.786595627 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.790215641 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.172344181 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.891703796 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.808733733 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.800332335 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.797172461 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.885989767 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.793608976 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.882596186 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.872308551 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.891490057 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.831516567 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.791267391 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.786448042 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.793361391 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.791311949 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.789559621 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.818880444 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.785051195 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.788865188 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.145621356 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.800871432 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.790637488 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.788472404 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.789511941 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.821088742 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.788786161 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.792362481 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.885162605 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.792283071 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.856315717 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.212200464 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.214145063 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.790593397 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.792530387 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.789523833 seconds)
  done (took 179.326973691 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.856890453 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.863176245 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.860522582 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.790329617 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.840418878 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.856224465 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.792414535 seconds)
  done (took 14.576121786 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.7982798 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.792124846 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.842375444 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.840609429 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.792124366 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.94139446 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.793750003 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.804049442 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.789160658 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.844128484 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.794533915 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.792600088 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.798872229 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.789532419 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.841881404 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.803362527 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.907708266 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.795007363 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.792162695 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.944570474 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.790863763 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.799435144 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.846894623 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.803936015 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.793168149 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.799303463 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.377857897 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.793087092 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.789978565 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.794330782 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.790450963 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.835172195 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.793287534 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.78715106 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.791497638 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.908830455 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.792508721 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.791301775 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.794547822 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.790768566 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.793915314 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.793951312 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.794282478 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.790145913 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.7939567 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.816640177 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.794881425 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.79484797 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.793731701 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.794855335 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.844213153 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.793830432 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.790951994 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.790858788 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.848606015 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.801261954 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.794777716 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.791969509 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.795640995 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.792415997 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.94646082 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.84256054 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.794104706 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.843062564 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.793975061 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.794811337 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.795867716 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.793823179 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.892997068 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.796635532 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.843723281 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.792031501 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.953841779 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.822495811 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.79798752 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.797647359 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.798611951 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.798037858 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.790789663 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.802357941 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.793745368 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.79637103 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.801720209 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.792630321 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.792877813 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.907503245 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.903129813 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.796378892 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.809752897 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.803728847 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.793026784 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.84922412 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.79665502 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.794578989 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.850604028 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.910945117 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.851813022 seconds)
  done (took 198.426763251 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.803784149 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.806003435 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.798595303 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.812474326 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.796254897 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.796219626 seconds)
  done (took 12.533560163 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.7980277 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.797348476 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.796096663 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.796194934 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.798408165 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.797701401 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.799244234 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.799538504 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.801347407 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.797228351 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.803122482 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.798088957 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.799816666 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.796995601 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.799971659 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.795837993 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.799730507 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.796346287 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.79752362 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.79971583 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.94232101 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.799071595 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.799427119 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.79864713 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.803469275 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.797754858 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.810378928 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.797209156 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.798560844 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.804653775 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.803510779 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.798517351 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.801706318 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.802752753 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.803367057 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.800738291 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.801919818 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.80468472 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.796287546 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.798389746 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.798314881 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.798676451 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.798105726 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.803447692 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.800181754 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.802739871 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.80244678 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.805699471 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.801605744 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.800044274 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.798498249 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.797862983 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.798164963 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.798960227 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.802899163 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.803300212 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.803251382 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.800220263 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.799471837 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.809344849 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.800250281 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.799566692 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.800706667 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.803900755 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.80736438 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.807144909 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.799598981 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.80317364 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.801383628 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.799962783 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.802553656 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.797810355 seconds)
  done (took 132.506296746 seconds)
done (took 539.094902109 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.934508221 seconds)
  done (took 8.658181252 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.844683778 seconds)
  done (took 8.672878875 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.140417753 seconds)
  done (took 9.867785559 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.798974472 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.813204652 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.795842565 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.799032046 seconds)
  done (took 28.943004012 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.833880865 seconds)
  done (took 8.559466903 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.80573008 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.791661307 seconds)
  done (took 15.360138514 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.795693782 seconds)
  done (took 8.525501713 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.858609322 seconds)
  done (took 8.593853957 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.799016833 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.832590215 seconds)
  done (took 15.372303316 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.78018575 seconds)
  done (took 8.505388009 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.511918924 seconds)
  done (took 11.248419245 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.795038322 seconds)
  done (took 8.536353719 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.847409845 seconds)
  done (took 8.574791996 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.80267521 seconds)
  done (took 9.528747895 seconds)
done (took 160.670349846 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.796804612 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.791938047 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.792321792 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.791395341 seconds)
  done (took 28.898421716 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.835179236 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.835322481 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.839215853 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.847006443 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.837619986 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.835755132 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.828009238 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.827049658 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.846024398 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.83954772 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.836990872 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.838110328 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.837310075 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.828229758 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.839187658 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.836924222 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.846093138 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.838045202 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.829133972 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.839236258 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.802505788 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.846270161 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.839299544 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.802161128 seconds)
  done (took 45.759344252 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.003158964 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.873950765 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.955716114 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.854965708 seconds)
  done (took 9.41304443 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.854050931 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.858311267 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.867520254 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.907854824 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.92982446 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.865388483 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.828623939 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.823327862 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.81044756 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.855428027 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.93189139 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.851936005 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.950106221 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.804210667 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.990626776 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.80369375 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.803041096 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.855051716 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.906020108 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.937010516 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.803612824 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.855550241 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.859365824 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.851588895 seconds)
  done (took 46.53183051 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.80194347 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.811149731 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.810077546 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.805556774 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.803492327 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.804724082 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.808703746 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.805995542 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.823375598 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.806314142 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.8026959 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.803533129 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.803261209 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.805046351 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.803159157 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.817487931 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.817948517 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.803361977 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.806572459 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.809605144 seconds)
  done (took 37.882361281 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.795900551 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.684384889 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.149426896 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.053880082 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.798134897 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.795682915 seconds)
  done (took 31.007744484 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.815415903 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.808256242 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.804641358 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.860841377 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.939276084 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.812840699 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.806564751 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.813978726 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.845812177 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.864803473 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.819031745 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.827705324 seconds)
  done (took 23.748725061 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.797722589 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.796709403 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.798742211 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.814007769 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.814312764 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.812751495 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.813169245 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.798775466 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.816224471 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.820633606 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.81112961 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.820411024 seconds)
  done (took 43.448022673 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890514236 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.691808144 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.82790846 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.486888433 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.267668409 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.009578613 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.337422898 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.137486556 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.806775374 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.074699688 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.878166608 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903912784 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.053814302 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.797143744 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.830811294 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.294230537 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098766117 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034893584 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832131302 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.618093437 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852069672 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.23209609 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.671028587 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.860144027 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.013467192 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.936075041 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.063138996 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.766316889 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942505861 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.838815397 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813031489 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.802225642 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.075162446 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185760721 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910678189 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815509484 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.423146374 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.522132246 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.844259738 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.613837074 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.64484553 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.931025244 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810811594 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801203453 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.738961622 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.189986964 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167565196 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.806731258 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.513985634 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.805272135 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.813807828 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892378702 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.808847817 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.617963123 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722559346 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.075421433 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.799700869 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809152455 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.372113174 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.965267244 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.225858866 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.768348972 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.995862469 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.625360678 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19942265 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.95452362 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.807852528 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.807339288 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739199026 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.616893929 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855024695 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.950856456 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.821161837 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.45422833 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11051947 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.0090521 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.744910627 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092159525 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.466497883 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 4.186202072 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032629339 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.762675778 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739992963 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.667340533 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.739999641 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.078990577 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840618186 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.451674083 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84478258 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.140928057 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.81719613 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822422124 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81184082 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.028725501 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.68913805 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.804989349 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.701168703 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.955459119 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82477743 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.140591341 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.741113929 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.806888657 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062249089 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.016184651 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.914847228 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.317442222 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964381979 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815865587 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.820155631 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.600732185 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.846601197 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.084713132 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8679731 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.952100467 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863822632 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.758074038 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111676355 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840359555 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.90603427 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.976594593 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.929407531 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.14156783 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.103015071 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871040075 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.808022982 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.808077068 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.709872671 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.356878134 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.074283638 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.808664464 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.193785571 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.848784662 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.807599127 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.743070429 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.400155384 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.899649582 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.774417242 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.031744926 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.646766405 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.113794071 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.743414879 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.953781768 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.91878833 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.027628793 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.462279259 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.888151234 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06690772 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.172729335 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.941254949 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849274579 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826930962 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926419838 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831213137 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.10171541 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.093847329 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.811026466 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.815769709 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.668917494 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.801680802 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.810512392 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.813280367 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.557529011 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085507834 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.832275757 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.81174654 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.70002054 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.822293438 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873909982 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.815844282 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.818746861 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.349103158 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.524980281 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.815347824 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.428083905 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035002881 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818700366 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.619050999 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921192107 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.892948832 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091786817 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870043549 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.744304291 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.520400089 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.502341947 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.809811237 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.746192932 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.811060376 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819659165 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82138806 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.191275082 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.090252095 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855118934 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.700022174 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.852925435 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82289691 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.814721856 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811624048 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.350005494 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.957934025 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.230118559 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.851120781 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945742333 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.824618366 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.74785046 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.814211001 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.815461219 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.810967235 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.779156897 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86377489 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.623002524 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194127407 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067098508 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.459176347 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825072377 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.645351657 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.868318697 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.831519329 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.696035546 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.638028134 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.942714647 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824059409 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.823803676 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.628393367 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.519895934 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.37850943 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129413759 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125388379 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261758705 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.167463747 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.111511956 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.151585901 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048033312 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.342106265 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.871348091 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.167085602 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758817961 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907547395 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.466479907 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166666389 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826341737 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043193924 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.204046934 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.596813876 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982528631 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.025830283 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848328749 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.626863281 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.76992876 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.018546871 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957108111 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.621445397 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018202036 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149682202 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.565962401 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.909283378 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.812063192 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.505168226 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902041574 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.528455861 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.17649801 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.249679106 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.78553907 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291060295 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.817337722 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.261172692 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170155333 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.026059996 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.92984709 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750695052 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.824676869 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.825459704 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.813699739 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.807603348 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.665581793 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.068264946 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.825857471 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051537645 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.966904246 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108763644 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.726898648 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.820915863 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815728553 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11825771 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.485123989 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981602791 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.127657739 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.327980722 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818353955 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.750765219 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752119706 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.510239267 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.823511515 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.790954354 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040306217 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.007390766 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.735703749 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.211403455 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05476451 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.070545108 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.831282313 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.093733709 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093691084 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.535925769 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842040803 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.917083204 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.544004298 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.928250968 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.08771536 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.052357473 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.570487068 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.043447433 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.85375025 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.639386642 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.815291812 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031828444 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.086120197 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.765344972 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052425536 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.541394008 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.940062719 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131961514 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875576487 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.814953966 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.974230941 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.011798561 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.82756701 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902465692 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.82758964 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.828574255 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.829300917 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86392034 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.82850968 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.944492211 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.832886318 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908567907 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.972737078 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.339774674 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.821137529 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10056233 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181096865 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.152591819 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879691676 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.820414022 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819458003 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.753367083 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955126906 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.267445307 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.09277758 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.951426131 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.116932141 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842235822 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.543936319 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.084509706 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053538748 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.094385136 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.71533985 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.810659782 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.853851839 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.088393058 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.832196105 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.031436685 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051565782 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138392854 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292915658 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.940216444 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.179748895 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.094041373 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.189689037 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.821031816 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410897726 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.944072744 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.513136988 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.862107747 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.758045466 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088164138 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.831751005 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208379657 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.840635317 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.021415013 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.337137722 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.657403121 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.110847486 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.816293377 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.884349845 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.101799593 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.220685231 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131838756 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891174721 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.83309157 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.583674534 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959063785 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.672861915 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.09272854 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.82377078 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034901938 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.532705111 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.830800741 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104747113 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133982751 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.81732545 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.68231608 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830333191 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.832792561 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.04830175 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095464663 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.07367896 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831639213 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.833820115 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.63974469 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.101596346 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884285131 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758962853 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.823570162 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924227232 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.071889393 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.845088532 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.33956899 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.534446115 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125221055 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.743824305 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845929882 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.256125096 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.187225278 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154142595 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.360504858 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052921506 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.384238632 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.676315198 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.120061412 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.828797873 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.217451039 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131443306 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.83022999 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.324340297 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857367154 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.099638949 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145502078 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.968462221 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.631498391 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.793562859 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048354003 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.387268837 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.764691103 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.824668649 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.888642206 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.826245665 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.956118 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.834120368 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.685493808 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.646418882 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.566160681 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318588319 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.827870121 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.812788659 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.582281896 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.349050451 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854393647 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970983462 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833084106 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.536771488 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.116733233 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.080079678 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.333958018 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.829693189 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.829787825 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826100015 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.756174538 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.024333397 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.206033676 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124510004 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.14365637 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.859996172 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.830194095 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.041260739 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037623239 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.808810667 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965172759 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.198778758 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.858332998 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.56332762 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.509021126 seconds)
  done (took 1656.75967412 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.853160953 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.842018179 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.832161807 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.866430897 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.872747402 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.899514304 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.856648503 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.908759324 seconds)
  done (took 56.688695999 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.825438248 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.024131204 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.83586947 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.827107983 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.833476151 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.826757356 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.991933259 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.833069102 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.832465228 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.838121632 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.829055681 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.82153602 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.131639001 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.848245451 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.827505343 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.81207055 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.834649117 seconds)
  done (took 73.552643359 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.826962903 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.028778058 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.866120147 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.847187213 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.76273052 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.840919964 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.765971282 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.8786802 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.82865197 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.042872218 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.460696658 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.834715082 seconds)
  done (took 89.744471199 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.839134412 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.836240877 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.834336884 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.835794328 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.835593589 seconds)
  done (took 10.943686994 seconds)
done (took 2156.130695186 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.08117257 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.063088606 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.074572735 seconds)
  done (took 5.897711484 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.978865373 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.027440005 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.146767261 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.153988117 seconds)
  done (took 10.070406724 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.125416722 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.201142084 seconds)
  done (took 6.08686369 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.226335126 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.837587566 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.223686339 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.831174908 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.831351505 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.830890296 seconds)
  done (took 22.261591571 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.834109813 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.838128407 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.834464137 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.837545207 seconds)
  done (took 9.106019457 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.815958318 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.503462537 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.814719563 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.825389418 seconds)
  done (took 20.721324058 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.582999137 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.268686589 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.580319453 seconds)
  done (took 9.193222411 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.380964991 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.732695659 seconds)
  done (took 8.876818916 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.104205168 seconds)
  done (took 3.866897853 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.981458834 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.11272593 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.353160119 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.362423288 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.457672731 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.667852018 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.132858371 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.062683592 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.244354698 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.260222674 seconds)
  done (took 24.400162375 seconds)
done (took 135.609189612 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.207516358 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.065006488 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.031349651 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.177673694 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.076318765 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.035100494 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.051977869 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.160643417 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.671157717 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.669054233 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.172512372 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.078080421 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.203410467 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.067508904 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.198717274 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.066934744 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.05294972 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.222112025 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.865915315 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.105582048 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.05521473 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.80561563 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.015485705 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.814301273 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.049959289 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.983911279 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.38010717 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.065031861 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.023008901 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.386849908 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.98349261 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.264285678 seconds)
  done (took 171.772044803 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.564451392 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.832332955 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.830365135 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.830327715 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.019311439 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.8290799 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.832488388 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.8306717 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.970540213 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.955033168 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.831150692 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.007959887 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.828826003 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.83152652 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.831010572 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.829106651 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.143868542 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.623544754 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.842833583 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.846759069 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.854492653 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.931662818 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.854833461 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.989883382 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.201639434 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.858180881 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.814458192 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.85590112 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.835721578 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.800264933 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.842619216 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.830899499 seconds)
  done (took 205.548580012 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.835701255 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.831126804 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.830817831 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.831767406 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.829213967 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.829601138 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.83235183 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.831613799 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.499287715 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.495951107 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.839884598 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.838208471 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.83819157 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.832910379 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.841256678 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.83054214 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.840637204 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.840615711 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.836006135 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.837629426 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.838335248 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.619962995 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.836593738 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.646380749 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.838702895 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.837567577 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.832238562 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.841993469 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.842440132 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.842439967 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.840574635 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.831446745 seconds)
  done (took 219.450834688 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.028101162 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.841078074 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.844780648 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.785451825 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.838640236 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.838726084 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.799785869 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.028168908 seconds)
  done (took 18.78371308 seconds)
done (took 617.325078571 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.262200346 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.113035832 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.995084679 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.853072368 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.101601568 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.883988655 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.851803024 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.916492898 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.580793393 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.912930119 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.52888104 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.861405025 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.62177336 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.864153958 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.971567008 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.906120857 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.386981593 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.469399845 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.021423894 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.915339541 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.015288668 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.79183655 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.918384388 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.592921362 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.637878458 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.829546805 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.006938037 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.386260114 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.848319455 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.002786527 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.55548473 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.216794113 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.847260201 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.837046664 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.893868709 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.873498858 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.180933842 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.842496649 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.959868542 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.597394395 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.906149639 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.450522051 seconds)
  done (took 100.970963383 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.811168176 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.808162145 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.811990801 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.809803111 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.809375831 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.808173394 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.807322696 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.807734804 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.809837226 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.807856043 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.809819887 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.808582152 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.809946756 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.807980623 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.806382034 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.807372958 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.807068772 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.809640254 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.805712609 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.808762095 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.806632706 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.807116598 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.822021421 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.809648959 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.808130133 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.809584316 seconds)
  done (took 48.793792963 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.819857754 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.983597936 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.069054365 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.83454846 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.819843393 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.82480321 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.83690388 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.823455933 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.822206328 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.822832609 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.926615351 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.825446758 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.839881372 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.068553485 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.831208339 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.820377038 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.82135083 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.821094064 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.988922528 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.832360277 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.837474953 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.823026384 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.838046749 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.8328284 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.82219707 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.821693995 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.823822209 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.274331891 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.827287073 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.923645036 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.859941005 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.839204219 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.244684212 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.079676531 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.866181264 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.825206207 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.820838581 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.929131935 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.82298176 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.820437768 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.839222799 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.825654007 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.072156943 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.289013166 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.828907873 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.823107701 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.285620408 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.933366148 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.857430201 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.829943802 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.074184134 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.83418578 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.822263615 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.822119881 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.856898772 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.827158328 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.821453308 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.160068291 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.830976004 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.839502462 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.826747768 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.82391931 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.996098185 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.827013378 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.983204313 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.826481924 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.831313902 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.822322125 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.076397913 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.830361037 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.304927491 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.833345669 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.823687829 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.927137809 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.987149112 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.308869243 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.83235689 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.999277697 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.257859753 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.844969555 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.829035306 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.266324349 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.847242839 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.829273306 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.824668445 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.824356084 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.824028686 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.868709885 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.838841369 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.232514148 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.301045263 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.170256318 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.847497655 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.837613808 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.823153329 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.162917382 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.828672931 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.825143251 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.069625637 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.313198306 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.835046944 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.833626699 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.286321163 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.836280467 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.843363679 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.831874494 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.081122965 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.832588502 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.870738003 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.823675768 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.832117028 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.828210666 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.843388832 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.831463452 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.825008053 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.272975449 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.945290338 seconds)
  done (took 226.366137085 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.81896508 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.816581867 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.815630993 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.831962685 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.816700754 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.825621336 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.818228045 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.818491898 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.825158953 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.81907908 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.820814504 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.823309654 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.818314131 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.822108772 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.309626903 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.833668802 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.483288335 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.826210165 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.825611255 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.821249065 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.504186635 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.831451395 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.824870686 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.822256785 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.824452201 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.828480998 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.827239668 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.870386367 seconds)
  done (took 166.678007979 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.833896245 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.00965825 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.848985639 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.86613096 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.840195578 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.828007524 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.853179702 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.848500885 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.835508043 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.82943084 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.830087457 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.892924334 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.842073362 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.967830231 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.860741564 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.862300025 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.935424542 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.838112128 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.832461965 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.830166402 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.861168591 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.823402209 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.891938208 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.960314075 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.850947285 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.948101313 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.837727706 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.833534056 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.831127513 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.948729844 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.841592475 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.891019453 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.859241455 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.851437284 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.946250296 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.945681453 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.932718919 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.855087943 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.834326771 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.826706588 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.826846979 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.815245269 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.941932574 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.848248014 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.828946611 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.934270879 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.843960414 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.829408875 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.836559982 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.826530917 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.841379943 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.843133853 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.891507518 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.956144521 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.858257258 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.851144596 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.85384748 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.11113403 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.834111242 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.928958214 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.817996313 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.942647574 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.845903335 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.815332984 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.82786616 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.835435328 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.857370377 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.856279414 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.932031412 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.833470072 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.929373262 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.860233645 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.831743828 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.827748827 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.829274624 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.946759928 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.946251958 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.861006904 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.861768887 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.857624422 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.821026417 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.827174736 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.819833755 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.845595611 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.831904889 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.942277305 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.943476191 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.834884936 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.831951316 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.832343542 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.832590652 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.853797839 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.94961241 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.862148854 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.924551661 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.893426625 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.900584864 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.841249217 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.843414094 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.830056562 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.894973545 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.840730987 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.840992928 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.163840091 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.898106254 seconds)
  done (took 198.336509827 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.286968295 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.880796457 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.886429354 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.141591443 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.255778966 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.672539822 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.873995304 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.876317757 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.90091227 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.073170092 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.95404096 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.901012506 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.862500265 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.850773374 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.879689542 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.897547165 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.886206704 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.212371536 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.001620059 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.96248868 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.863227011 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.173718885 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.197776751 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.298002397 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.916774324 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.242840975 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.560245694 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.128994775 seconds)
  done (took 60.401364136 seconds)
done (took 803.306290234 seconds)
SAVING RESULT...
DONE!
