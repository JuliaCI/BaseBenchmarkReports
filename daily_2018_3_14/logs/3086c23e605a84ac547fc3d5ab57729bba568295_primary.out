cset: moving following pidspec: 13063
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.977960957 seconds)
loading group "string"... done (took 0.517072101 seconds)
loading group "linalg"... done (took 9.420473259 seconds)
loading group "parallel"... done (took 0.172712318 seconds)
loading group "find"... done (took 4.126452229 seconds)
loading group "tuple"... done (took 2.066614024 seconds)
loading group "dates"... done (took 1.407295345 seconds)
loading group "micro"... done (took 0.197844918 seconds)
loading group "io"... done (took 0.521111049 seconds)
loading group "scalar"... done (took 57.15226524 seconds)
loading group "sparse"... done (took 13.921847511 seconds)
loading group "broadcast"... done (took 1.310071804 seconds)
loading group "union"... done (took 10.459552975 seconds)
loading group "simd"... done (took 3.620015038 seconds)
loading group "random"... done (took 13.570429176 seconds)
loading group "problem"... done (took 2.215554415 seconds)
loading group "array"... done (took 24.259829674 seconds)
loading group "misc"... done (took 1.156335984 seconds)
loading group "sort"... done (took 3.817278737 seconds)
loading group "collection"... done (took 22.14382649 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.694632007 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145227924 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.200606642 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.206463758 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.27863599 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165800077 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156083595 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.177143988 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.68397665 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208331086 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138210271 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.416033374 seconds)
done (took 6.210981693 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.262391376 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.060684113 seconds)
    (2/2) benchmarking "String"...
    done (took 0.17024986 seconds)
  done (took 0.91897045 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.092214876 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.160035302 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109208887 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094472592 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094364866 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109066164 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.155369989 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109098251 seconds)
  done (took 1.519893082 seconds)
done (took 3.487680406 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.494381646 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.884821815 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.5173526 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.181932326 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.311044418 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.312354677 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.269591774 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.219561769 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092225631 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085682506 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173893445 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.427129747 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.40042171 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.958951911 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068865095 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.109149598 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.13698204 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.7887113 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078468279 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110292642 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.536350638 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.213989096 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11583321 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106242113 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185841217 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133943593 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.143542485 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103747907 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.668639345 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131379535 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.214853014 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083113345 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.14050885 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.164477616 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.224055245 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110107059 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675170239 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198489872 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100284096 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100565569 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.677966655 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118580826 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.208412532 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105093974 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.067655794 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.161256732 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.101073961 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093622284 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093425283 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085763496 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.164459434 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.450107278 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104758267 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.192574446 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092196403 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.688939337 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096681899 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.272032768 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.12602623 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094631758 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089959121 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089488697 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.153992722 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096608113 seconds)
  done (took 20.123232669 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.173247633 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.190099522 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077289375 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.161200275 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.126412323 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097940216 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.088668325 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077154045 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.131148307 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.18135052 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.142000551 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.192707114 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075714649 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.088975931 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.168148345 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.237201967 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12612255 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103033045 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088026712 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.111250625 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.127288569 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095364572 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112095821 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.098697383 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.172345898 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202889138 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108116465 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121835776 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.088791419 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099417733 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141627959 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148744886 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090726399 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087906542 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176153847 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120942382 seconds)
  done (took 5.34283233 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.233387283 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104889143 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.246788848 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.196020682 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.133324866 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.199521784 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.175514356 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.301428187 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.298382191 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160108736 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.197774131 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110520098 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112048482 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078630862 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079183925 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097074794 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.816611831 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.169153194 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.164749209 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163974101 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114118352 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097229772 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363502719 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099314149 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085968949 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094918631 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.080991094 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.221797729 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094495944 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.486273671 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083573636 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.11566388 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112581698 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207497146 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.121784105 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120510621 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110436671 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.08497014 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.213710637 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083042285 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117634449 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077945288 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.077703613 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133000267 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114816085 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.107034956 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.123432649 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.133774106 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08611595 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110054266 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.027516582 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.193928602 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.144955722 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.102393604 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.267862538 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.126743201 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101285005 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.10834731 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082892454 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.791935904 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.121184781 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099566662 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079684127 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094738178 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.094250279 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.452508661 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10784131 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.134144871 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083041999 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159932134 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095979246 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.118019511 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085259943 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099013913 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.109377864 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.086254195 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095218954 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086337812 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07885873 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.104470841 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113225559 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082569803 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099558923 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079275507 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145845605 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.109342974 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.108266853 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122068365 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.089265562 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.085034731 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127190538 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080959457 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.103051042 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.167382937 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.115384898 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113408962 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113872795 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141864608 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.088951404 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.269779147 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094004159 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121490639 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09815041 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112368081 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112644179 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08220927 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083370779 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094008981 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080850919 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146638428 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.100899779 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080745477 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.08831451 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108974239 seconds)
  done (took 27.039718884 seconds)
done (took 53.194368528 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.410242178 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08190743 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081581403 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101906333 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083192498 seconds)
  done (took 1.52359006 seconds)
done (took 2.261357199 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.301477032 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.201397981 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0866139 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.1886295 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086213783 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.196619801 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.182297338 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100497763 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206659935 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085493695 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.19133939 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08500278 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10450607 seconds)
  done (took 2.780132304 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103758266 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105606348 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10153946 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117744355 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085128018 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101892344 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118408496 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109227813 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100718338 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112468998 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086055411 seconds)
  done (took 1.881473208 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09852418 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103657373 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091131076 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11647079 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085255524 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096642263 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115257579 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10616267 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098746409 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112771892 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085981023 seconds)
  done (took 1.851001644 seconds)
done (took 7.24994122 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.222541851 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.799202771 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.190555498 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.245052529 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.343072388 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.296986703 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.614847693 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.200084195 seconds)
  done (took 15.781882138 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.117283744 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089423741 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.187560729 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095018979 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.109380753 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.091859976 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089475878 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090800478 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.115799054 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095115677 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090927679 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.107961297 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.094540379 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.09451726 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.111463541 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094280052 seconds)
  done (took 2.484255258 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.136239816 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116068172 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.114607318 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098474587 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093794518 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.116605393 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100844356 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.097261382 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.111941398 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094829339 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100289762 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.114302569 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097056721 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.092588611 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.113844744 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117791677 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.093391615 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.114936945 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117255074 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.097610567 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.11561203 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09634408 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.095482699 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.114776515 seconds)
  done (took 3.393081573 seconds)
done (took 22.401211864 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.146661935 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100568645 seconds)
  done (took 0.997889356 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.162453471 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.180574832 seconds)
  done (took 1.096691211 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112858453 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090121564 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136794577 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102622601 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090665302 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108007362 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116731639 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.107226236 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.090692034 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091088599 seconds)
  done (took 1.80639953 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094852793 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094934255 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.121169369 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.169851698 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117113614 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092531634 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094456583 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.112202086 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.095988486 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089380849 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.112289243 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.108305048 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095013991 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127178174 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094030782 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094170491 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116120931 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093953252 seconds)
  done (took 2.683051353 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090184959 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091042428 seconds)
  done (took 0.943210784 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093225912 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089167648 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092292305 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109377517 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089684752 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089785836 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10559611 seconds)
  done (took 1.430362048 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.526603983 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.238777463 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.370932809 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074056981 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.12381949 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.319342501 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.106143662 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073939607 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092135918 seconds)
  done (took 2.722090141 seconds)
done (took 12.437543361 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090973833 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.432587447 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.623612489 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.130385352 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089989077 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.146153674 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.3317331 seconds)
done (took 2.611894491 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.350792833 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.164999301 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084273935 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090963117 seconds)
  done (took 1.450964488 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081970878 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098428111 seconds)
  done (took 0.9485752 seconds)
done (took 3.168255196 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091465536 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.089349311 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.128305139 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088729774 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.088289891 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087720461 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.107984981 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.088861987 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087629907 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087964853 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.107854731 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.087590586 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.088278525 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105289788 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088022601 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.205695324 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088096096 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.104466886 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089020372 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087429085 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103938483 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089099601 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087254833 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087934597 seconds)
  done (took 3.16693445 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111595459 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090707669 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109805431 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092885983 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092748587 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109829118 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093973141 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090493734 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109727255 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09099455 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093503961 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.093925864 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.107905891 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094430916 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08982385 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.11080147 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094278276 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090156685 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107197038 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093286307 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091970408 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107762051 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095504731 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091748797 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110103762 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093651822 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090314876 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.107669366 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094244868 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093740299 seconds)
  done (took 3.716305329 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.09564174 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.08571505 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088145138 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114262132 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086634084 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090333355 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.10300421 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090691788 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089957736 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088181976 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.107937534 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089226778 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.08834292 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107232972 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092738217 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091677529 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115403299 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.090136957 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088586487 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089174987 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109163311 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.08969776 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088866958 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.087444194 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.106807968 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087022947 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.0898322 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107159335 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090961981 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08922561 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.090583 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.109871399 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088997529 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.098396979 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.108457915 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089319532 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095123117 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.10256051 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.090909331 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086135406 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.087001868 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.105402822 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.088840849 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.094546282 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.107684315 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090936215 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.088831869 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.089922081 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.106250883 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092694277 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085704275 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.106548569 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091759339 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090662145 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.110051478 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.086897407 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090513297 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.085627366 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.107335655 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088910584 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085136215 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.086047564 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.111530406 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089677378 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104184308 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.112352644 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089323557 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.091109442 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.107448621 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096541296 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090925728 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.117174352 seconds)
  done (took 7.653075744 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.114165418 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097751012 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109333356 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091812137 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089900104 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088455562 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111540021 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090252308 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09126025 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113992082 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090598341 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090633221 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108160893 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091206526 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089597712 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090417651 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112940819 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090298731 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089476153 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108846729 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090911584 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094182777 seconds)
  done (took 2.924227127 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.239272399 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097647662 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140570856 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120994789 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108228151 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.122229025 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095775449 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095662755 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111905676 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100455441 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099819098 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111152678 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110694526 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099132705 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118392584 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100569232 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113087471 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103628085 seconds)
  done (took 2.868820727 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104234762 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.091943734 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.152558713 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091642447 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090717522 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.110030906 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097367002 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110129136 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.111135327 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092174347 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098680728 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108825776 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.092804413 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091260492 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109276375 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.092467393 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092669129 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092396082 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117120685 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098327993 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097292529 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116502014 seconds)
  done (took 3.040470719 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105233732 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093034579 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.127343211 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096335958 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090047082 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090762731 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.115201528 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091375792 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09885547 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.109420603 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093552384 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091072529 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.124669403 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093164499 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097776325 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110241032 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094053421 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09213568 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111223912 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092142918 seconds)
  done (took 2.799643018 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.194407709 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126971818 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107950358 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115746693 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126544077 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108182152 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134393879 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108112827 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110558058 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13644622 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108388264 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106568938 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133305819 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113770252 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125486763 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118840985 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115772628 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133276964 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109005959 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125342142 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120368023 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106825676 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134306759 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108843194 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107227228 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125825964 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107794123 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131295015 seconds)
  done (took 4.185989605 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09082443 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090733469 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089429905 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.108615377 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091602971 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089978665 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08879667 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108903577 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090353398 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090658208 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107911914 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09082643 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089493004 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.089817988 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107758919 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09063436 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09095388 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.10711009 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090910876 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090278236 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090382297 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108645188 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092655315 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089119869 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089768699 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.109249491 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089935063 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089897626 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108543546 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091985474 seconds)
  done (took 3.638966493 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103907283 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100693157 seconds)
  done (took 0.990933303 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098619891 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106870151 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.089897595 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108805496 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098052544 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090845508 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117549614 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09784017 seconds)
  done (took 1.596814769 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.16528311 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.187111479 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095511772 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.120967861 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.167465589 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.178528292 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130281403 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.115599584 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090792064 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084120414 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.181899229 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.086203843 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109431413 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089457601 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09133166 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117118692 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.092614846 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10105781 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.117390908 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09379279 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097111435 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114490383 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095109019 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101775566 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103889122 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095589749 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095291492 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.122779037 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089429873 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093947438 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.10814054 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093464061 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.094655808 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096014754 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.110645259 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.168225188 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118365782 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08738108 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091445998 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116236083 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124463532 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092409937 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.112995866 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090837303 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095597585 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.114462864 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.096525735 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092318072 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.102659786 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088649314 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092448915 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104998216 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09269324 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09274978 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.109651352 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099308325 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094151383 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.106202669 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089225336 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088626603 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.107885597 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088409608 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094626962 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094319949 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111638584 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092225091 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090678816 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.110551995 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09453625 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.092528366 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109504105 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107180802 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092704512 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.114519934 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097169617 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.091949119 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107566028 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096936288 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090034615 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110315932 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096813303 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121520067 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112092422 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089710308 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088474705 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.115707329 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.094420203 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095480409 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083706526 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119218506 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095296209 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093118116 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.103659885 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091316969 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087682726 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.113920228 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086533889 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09280209 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.108031966 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.097427332 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097907221 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090968819 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114263063 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096776192 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097029508 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110238553 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.155149335 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108220813 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089465657 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095641853 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117032921 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08704804 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091114784 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.109621143 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090506118 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087189503 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096551164 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.11153598 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.095081613 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.095179904 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112695583 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094059998 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.093884573 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.111680937 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089453129 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.095098687 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11845872 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09542171 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.093423893 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.110985916 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093648362 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.09285126 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.11411052 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091028677 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098049366 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089414256 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.110358622 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.093240927 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.096704327 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111416589 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088827403 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.092272147 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112443697 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093176472 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.094877658 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.112986644 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088982123 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084627242 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.111180913 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089900697 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.09317639 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.12053421 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089792503 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.094455673 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087663901 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119516816 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089501743 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.096904989 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.114394086 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099669999 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097310111 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.103728143 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091505105 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.093778615 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112617696 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090814334 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.09236718 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092215724 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.118634568 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086411795 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.095574078 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.10374822 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091551918 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.097511457 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.113024479 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.097169345 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089099392 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.148833761 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105884259 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097202645 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109932289 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093295136 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.096883181 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.11041689 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098662928 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099671959 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.096842451 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.11060312 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091338745 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097776147 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.107986649 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096778245 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090956435 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112972555 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086397688 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.092833629 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103886267 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.098469435 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094303516 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.095916554 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.116361613 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094391123 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092246408 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119368861 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089531535 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.095745214 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.104389484 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.099346237 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.102339499 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.117834368 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098952821 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094579998 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109713156 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095436919 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101649641 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09470753 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.112327773 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094960114 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085780715 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.105031654 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.098614485 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096334383 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.109829116 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093558806 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094632002 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11318569 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.093245888 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084973868 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097691691 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115269302 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088846071 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093083667 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.108366564 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09137726 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100468995 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.105262758 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089551763 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095210844 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.116885981 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093038742 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092557113 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.115546824 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100251723 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096170307 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.113000974 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093096746 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101001296 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091057199 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.113020756 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089494712 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096341609 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.105014522 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095366632 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092879393 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.118679209 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089360145 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096560383 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117493947 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.098360198 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090982903 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097758677 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.118418753 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.098583945 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09117977 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.117363199 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089260465 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08551569 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.108194933 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08635485 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09476487 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.108714781 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099546607 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091196783 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111734717 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.097785727 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095685881 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.109476442 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.098386648 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103277382 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.105000669 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087155794 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090714104 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109918315 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091079903 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08880066 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.093879422 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113305256 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.097444089 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104010828 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.108670856 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09378736 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.098522049 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.108585168 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.099962709 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.09846482 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.118623984 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090686489 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098248038 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089789755 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11687122 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086706078 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091911338 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111878005 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093352878 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091186826 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.11189548 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089674788 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086335167 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.108895681 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100541678 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093451112 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.115155734 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094252609 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091399803 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10852649 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090783349 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100503846 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.091184776 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.119895077 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.093209132 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086620552 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.105930309 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10049899 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094106555 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.117479758 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089676829 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.096304898 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118039794 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.097702231 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093137892 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.100818752 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.12127397 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.098596238 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0988126 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10585697 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090622371 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097900204 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.1125031 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097186168 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095167676 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.10589899 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096608959 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.098952366 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112630554 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.09209733 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087069933 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095407309 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.118399956 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097025885 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097161029 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.113772417 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095687309 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088299744 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116059619 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100566316 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.093815422 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099634882 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112862576 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.0972886 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.09022208 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.118155214 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.094531337 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088395105 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.106405389 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091209068 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100090693 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.107354421 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100287771 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.097528693 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090150301 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112515333 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.097602961 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.09005014 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115978103 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099178621 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091937054 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122601868 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.094628792 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091858846 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.117059889 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099972004 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087052567 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092405542 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111925686 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099819357 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091803737 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.118456476 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093687425 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099251577 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.115230561 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.099336274 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.098484759 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.118058715 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088466103 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.100115854 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115267914 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.096742515 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.0909267 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091945378 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.108678005 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093115296 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.098800743 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.11093272 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101979547 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100753702 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.111222792 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092012445 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.098207257 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112098337 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102061423 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.09024462 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114889172 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088896046 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097136519 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092133259 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.119884859 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089962952 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087712468 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120681342 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.098131529 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098052836 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.116271447 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.100706964 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087596092 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.107056333 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097119538 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091013064 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102615 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117117278 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.09216432 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092719849 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.116635558 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.095294868 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099997587 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.108325314 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090877386 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095456701 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116212744 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.09335505 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089013352 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.118114788 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094358863 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095338722 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.113199568 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.090822423 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093328332 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101858961 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.114039948 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090446597 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.090866756 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.12171236 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094400842 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090627766 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.108448265 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10088809 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095400712 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120824519 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092521119 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094344008 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.11203607 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097002885 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101276029 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.112122629 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095368376 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092637597 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099961486 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120296302 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087194531 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091759021 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.12482366 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099009367 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096419252 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.116948222 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.093626539 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101627116 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120983049 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098029841 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088234348 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.109266343 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094868125 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087961616 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097544027 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120231662 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093522922 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092484376 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119851376 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098794197 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.095813679 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.117716948 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090039726 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102449466 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092286521 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118748705 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088864618 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088120524 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.11849337 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101063337 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092587939 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.115021054 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097557959 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097544891 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.108790753 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.094585451 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098164965 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098600204 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.121940548 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096502092 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.09209288 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.120944674 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104710487 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.095014262 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.114564818 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102289227 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.099931781 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116236405 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094738717 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098299003 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.121859369 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097810997 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.100516787 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.112730998 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095115047 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.101319362 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101833804 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125742647 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09365311 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088959138 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.119263739 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092432947 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088441832 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.119223357 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101163659 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.100688745 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.115510221 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093090527 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103110125 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.12002157 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096019552 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092799385 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.11253319 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099393622 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092516071 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098075245 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.112622312 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102443404 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.100829293 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.1205657 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.103672282 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088897877 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120959571 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09822557 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.10226244 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.116614185 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.091986202 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089105713 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098496952 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.123575285 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100455883 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098599948 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.119077754 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.099486023 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.094767917 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115623593 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094047184 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102305452 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.120064006 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096336099 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.096664992 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09373518 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116697839 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.095771528 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.10004454 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.121874587 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09709238 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104373749 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.121602739 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095071679 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091925536 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115618142 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098222389 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095420607 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119637836 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.094305008 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089705746 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10121683 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.123113916 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094518262 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103092107 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.122580919 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.093927614 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097688772 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.122805977 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101204333 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096918948 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.116615334 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099764392 seconds)
  done (took 61.471864434 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144110027 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103303979 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11741044 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098147482 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11619126 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118933946 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098321958 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09788625 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.117782762 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107443904 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096982931 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116574568 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113768793 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117727883 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135201738 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107083382 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116593206 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099651948 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096355535 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099382581 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132913693 seconds)
  done (took 3.192060747 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114917904 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109985619 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128550321 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111878391 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104412874 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.12938787 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109107215 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129457391 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111845624 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105712928 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132607038 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109131296 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.124884338 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108000883 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105521857 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126482716 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111648731 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104449356 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130303926 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109631451 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107102814 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.129000902 seconds)
  done (took 3.391952294 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127265359 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099878705 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095015326 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.11765799 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100489996 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097444263 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121399589 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098045647 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105909671 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092525937 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109350032 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09277648 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096741221 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118109892 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094234985 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097718015 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126593944 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102376466 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10148853 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.09785292 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109436007 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098387141 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097725531 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.108217629 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104525814 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.101297898 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.09688413 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.121195175 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089305978 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10020709 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.117293234 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092520188 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089435867 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.109158204 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.089582701 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100636964 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101033832 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.118176676 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098505326 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08796498 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.1173359 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103604256 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088987672 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098035349 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.118169291 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092784642 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100509029 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.117863576 seconds)
  done (took 5.805031611 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127121274 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.155016813 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102229099 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125784779 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133196409 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107709051 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.100087629 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.129458146 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.098957447 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.122116528 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.11448309 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.111736321 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124793882 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105134648 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.103103223 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124769241 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104469761 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100769609 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.126570742 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.1018096 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106046216 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.1250133 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.112205772 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131086642 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105634824 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101276183 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121555864 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106501372 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110634747 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.127092626 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106189914 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106443329 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.132355189 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103441151 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100995119 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123821975 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113685245 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.338319615 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123420919 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100495141 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.103323358 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126224181 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103372775 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.133337839 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103230228 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102785592 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101390038 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.121352105 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112666994 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.122623933 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109399368 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.112652224 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123745724 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102319702 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105132986 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.132228345 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102211174 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100144681 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.123315445 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110733299 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100614608 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.126064999 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.112354597 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103535894 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.129171018 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.1134615 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.123715861 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104480719 seconds)
  done (took 8.955038596 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.131524024 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.1055891 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134083512 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112414382 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104656796 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126494851 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104695902 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.104928424 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126626606 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111043941 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12615611 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.223266478 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123496636 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110631909 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105025194 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.12697687 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105102892 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126635836 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106360399 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10600578 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.124752519 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114463916 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105694613 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134694953 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116832611 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102901041 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125732166 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104762106 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133582988 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106435686 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116872219 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125533772 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10875088 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11501268 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.137187897 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105137531 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.120855159 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107736476 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105868711 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126631213 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103442907 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113826683 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.127015199 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102443636 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106214035 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12617673 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115205929 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116652428 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.133006748 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111735002 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.126900908 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114357912 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106831622 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.125991037 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115174873 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140360937 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115132252 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112965529 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127902064 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115067227 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134961278 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121660844 seconds)
  done (took 8.226679195 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099182598 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098735238 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098892768 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.11890709 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100145187 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097788916 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09799281 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.119200107 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09819776 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098186481 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119369937 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098869209 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098671703 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098160605 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118725957 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098281178 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09842114 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118554601 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09955363 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098527043 seconds)
  done (took 2.930087472 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.109810518 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115593178 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122532969 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107568374 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101183383 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127246797 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101562015 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10101185 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100596873 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122883383 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110075631 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108126861 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123741332 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107344385 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129010752 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108946186 seconds)
  done (took 2.655570462 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.117736947 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117147382 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.206708428 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102813758 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.123330625 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108284562 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101348633 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126025342 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100303387 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106606798 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.126341412 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.104549077 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102305984 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101576653 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123053402 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.10564626 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100635007 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.125412989 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103855884 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.212740549 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105504731 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103550917 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.12471462 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105481159 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102828398 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128215391 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108057585 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101368714 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.12494487 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.102599513 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10301795 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.128068959 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101874077 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105866162 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101884249 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.123755445 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102076824 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103378973 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125656686 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.101977214 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104320601 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124413134 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102524976 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104472129 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.120891935 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103236174 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099601751 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.107296429 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.124048074 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.10446178 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101403898 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129051256 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106955004 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110668199 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.129467403 seconds)
  done (took 7.152642508 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113300604 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102725976 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134167689 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100368528 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101951116 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103920859 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125103145 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.10421601 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102808568 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122142001 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103925082 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103488408 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.12376225 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104734202 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103051297 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.123092849 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100983871 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103003852 seconds)
  done (took 2.836534375 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10805178 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101879524 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106102842 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.122999074 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101878916 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101228601 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122496203 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101277496 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10069898 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101260599 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123126615 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103263226 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100794044 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122729261 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102283899 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101841916 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.122291782 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101504586 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10186013 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100606856 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123882261 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102285168 seconds)
  done (took 3.239495665 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113537691 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.210808366 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107930253 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.220049603 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098182923 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.119588109 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.109092489 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098772395 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.137874236 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.098489668 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097633994 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.117769837 seconds)
  done (took 2.395744555 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129076321 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139221925 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123549444 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102435725 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111426675 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128871014 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108688613 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107746423 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137319024 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120756054 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129719411 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115732985 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115002203 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136939309 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111456386 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132511765 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108778809 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10781417 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12379178 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122988038 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107408928 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136741415 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106976596 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106917904 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129423922 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116095466 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136496557 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118657197 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107522653 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136971552 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111650037 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127776086 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117187143 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118472669 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126455201 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11460671 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107196235 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143302437 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113177844 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137536264 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103352243 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111997958 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137372288 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11237458 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136916299 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108499399 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111964392 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127391828 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107014612 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127273386 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133626854 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115285838 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1326428 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116133869 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11558514 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149444743 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118392275 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138317393 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112093548 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139914941 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115897666 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113438327 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137008875 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11944567 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132564046 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116048097 seconds)
  done (took 8.892269917 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141790969 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103609081 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13056407 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120702554 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135619085 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109645104 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108225375 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129203841 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110073878 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104332186 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172340691 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108416198 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11548302 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139492564 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108894258 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129330638 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108243612 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114193181 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125431883 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130084373 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129670204 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116759792 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116073363 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137427738 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119452491 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1328148 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108255001 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108382549 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128391482 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107697903 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112309181 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128450591 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117110584 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103753235 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138101609 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10867324 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108121164 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133724334 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107178976 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132586592 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1158759 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123211886 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129081768 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108697515 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139887907 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111512822 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10808425 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125322564 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109170785 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104903538 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140929431 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119969941 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139576828 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116971403 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108036121 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129953433 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108025828 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107645664 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129606119 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112503273 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115495089 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129169655 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130654457 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130044336 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108770651 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117203527 seconds)
  done (took 8.835521803 seconds)
done (took 167.330976967 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.173416241 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.212525762 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.194452897 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.157480856 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093453456 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.151671098 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.127209929 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.194333622 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094032633 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.093699693 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.092843491 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.118791354 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.161587446 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.09295171 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.116517146 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.096719012 seconds)
  done (took 3.0394173 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.196140965 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.34185111 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108676768 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.121112307 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100825162 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098417031 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121735356 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100405747 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.09868906 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128622533 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100092127 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095461169 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126905042 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09608248 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098838466 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.119374192 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106593121 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098615632 seconds)
  done (took 3.139413087 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119082023 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14053831 seconds)
  done (took 1.144041941 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129865649 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.215078596 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.292802918 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170280811 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.12054695 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138869806 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149401529 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133695391 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.190104191 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133517918 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111356903 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096914938 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146090654 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.10495532 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.135317646 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097368383 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127074295 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.133732323 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113494308 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100693459 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144049074 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.101884457 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104642225 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135560486 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180244314 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134615072 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102848484 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102476106 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123307492 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112413329 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105471801 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13743213 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111643614 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178575388 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101971799 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175365753 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106064872 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.121445197 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11283328 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098898349 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124137782 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103975003 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133842098 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097613719 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103368553 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.127907919 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104192116 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103148497 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.129945771 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107310372 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107657249 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.127791053 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.172867147 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.107781468 seconds)
  done (took 7.867396687 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.876448214 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.14570857 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098344034 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.01447005 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142900675 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113145158 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.865418251 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147217914 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253739882 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.887920601 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115107843 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106327068 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260236422 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256533999 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.284229077 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359648015 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.731846169 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112298706 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.130524147 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162802566 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104293822 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137766535 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114677349 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.518804166 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099428365 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098497066 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126854547 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109031685 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177505982 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100016194 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103217333 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194965443 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293007274 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20998121 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099313236 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.119016586 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099453415 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185443973 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271368013 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221886425 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.171651285 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118023146 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099536537 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104177914 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135544357 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096783984 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177862515 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188056218 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167519399 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.12503129 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10822006 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.106724907 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124888857 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.154074766 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.118273159 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.356763053 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360165071 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098088778 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127486784 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110590666 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265579728 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124162541 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238956 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122856068 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216996494 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120648441 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.827508226 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.163705955 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11972119 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105758007 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104388746 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126664356 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103270943 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.188355054 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.480204646 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127642525 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104741996 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098031886 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234010817 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.098699359 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121090228 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180568538 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101537318 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104150041 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128669707 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106997975 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187840444 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.247830662 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127923701 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.105915875 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125126365 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111329526 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100080883 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.233791381 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230211463 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.175573647 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228539893 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105100155 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178294117 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.162188891 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126374006 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186669484 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104479127 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110912529 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124889135 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227255453 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133996245 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123401128 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104633008 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.105104554 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.158627592 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103831396 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128084945 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.1656526 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.558541913 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185426017 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097735493 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12531445 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107462316 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.178622654 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106407743 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265424154 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106708978 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184070894 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106398275 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.119746904 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.104983311 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.178565938 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107533083 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128214109 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104621842 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109510011 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.278147982 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222345127 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13017153 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254709681 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.175829004 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126145744 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169784756 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128260501 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165367781 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131601517 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103553221 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100964295 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.840078091 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111952336 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105666336 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126253929 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183367987 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100159706 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12421123 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100263324 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099230237 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807552132 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126352092 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097620219 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101538645 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125884752 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106105811 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104962978 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126232309 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.155232219 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266391066 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10981609 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105116473 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.121444167 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158477887 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.123393393 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100669765 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100572278 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.121113381 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107654184 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105122985 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123788051 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167680143 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.17558922 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.228642251 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.637154618 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.121296852 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101008252 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240233248 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099691352 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.345147091 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106371438 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.236163764 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183079571 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097940691 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359286613 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185001417 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205076979 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104242819 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189676628 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097613108 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.106373409 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.176637694 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100385352 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128698199 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.153617346 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.13088315 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.106571005 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.277501429 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.122749236 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228138907 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.118897504 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.187130094 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103461126 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105080068 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.326645291 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.122037519 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112075589 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.177641661 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105622376 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.100011043 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.67562845 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.123846247 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110073487 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105033685 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.254474792 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162419404 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12803328 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107052408 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109150836 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.178202584 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.23072504 seconds)
  done (took 47.338423026 seconds)
done (took 63.406380508 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.254901029 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.167804186 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.369436911 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149861894 seconds)
  done (took 1.913003883 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.267754096 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.165680879 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.251401035 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097252682 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.25680163 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097263111 seconds)
  done (took 2.043880709 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.17629346 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.16739957 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.146410904 seconds)
  done (took 1.39940458 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208805653 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.205670847 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.343085999 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.255747658 seconds)
  done (took 2.006124463 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.279876062 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115283942 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.123974736 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.233200858 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.250235532 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.20508191 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12256077 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.173510724 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128652117 seconds)
  done (took 2.577707772 seconds)
done (took 10.842896446 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.374267474 seconds)
    (2/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.403405925 seconds)
    (3/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.335082151 seconds)
    (4/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.332220583 seconds)
    (5/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.132007632 seconds)
    (6/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.329764032 seconds)
    (7/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.306521229 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.193314848 seconds)
    (9/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.109446759 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.139915561 seconds)
    (11/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.224841871 seconds)
    (12/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.219012147 seconds)
    (13/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.2944992 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.112268442 seconds)
    (15/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.234880189 seconds)
    (16/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115126781 seconds)
    (17/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.169729321 seconds)
    (18/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.295403291 seconds)
    (19/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.317123113 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.118586118 seconds)
    (21/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.289025622 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.101668996 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.151837296 seconds)
    (24/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.081342159 seconds)
    (25/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.223847235 seconds)
    (26/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.174548211 seconds)
    (27/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.084077069 seconds)
    (28/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.138048314 seconds)
    (29/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.150492532 seconds)
    (30/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.264653369 seconds)
    (31/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.157281337 seconds)
    (32/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.240549487 seconds)
    (33/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.108805365 seconds)
    (34/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.081213437 seconds)
    (35/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.131424406 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.130112993 seconds)
    (37/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.134273431 seconds)
    (38/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.165181562 seconds)
    (39/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.110550162 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.124701717 seconds)
    (41/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.078371207 seconds)
    (42/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.162168961 seconds)
    (43/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.077587098 seconds)
    (44/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.168696148 seconds)
    (45/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111194769 seconds)
    (46/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.105405612 seconds)
    (47/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.1294531 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.119839309 seconds)
    (49/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.079268613 seconds)
    (50/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.17854524 seconds)
    (51/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.194979319 seconds)
    (52/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.175367718 seconds)
    (53/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.279973924 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111551966 seconds)
    (55/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.10440263 seconds)
    (56/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.263972989 seconds)
    (57/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.116643733 seconds)
    (58/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.135614551 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.121917607 seconds)
    (60/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.221194292 seconds)
    (61/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.225953487 seconds)
    (62/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.10845882 seconds)
    (63/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110843842 seconds)
    (64/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.085046648 seconds)
    (65/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.304486268 seconds)
    (66/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.088024063 seconds)
    (67/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.214857864 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.102764457 seconds)
    (69/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.078268786 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.119639306 seconds)
    (71/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.199869563 seconds)
    (72/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.085357985 seconds)
    (73/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.212698708 seconds)
    (74/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.190747663 seconds)
    (75/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.146279882 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.127163268 seconds)
    (77/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.078494814 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.102041951 seconds)
    (79/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.140911072 seconds)
    (80/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079153267 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.118731798 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.101511388 seconds)
    (83/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.146516786 seconds)
    (84/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.146812773 seconds)
    (85/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.080559601 seconds)
    (86/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.265879771 seconds)
    (87/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.081396923 seconds)
    (88/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.08436392 seconds)
    (89/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.196947112 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.128948634 seconds)
    (91/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.086472287 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.130067976 seconds)
    (93/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.123373451 seconds)
    (94/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.108511898 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.128798241 seconds)
    (96/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111903793 seconds)
    (97/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102995833 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.121279353 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111459905 seconds)
    (100/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.129378941 seconds)
    (101/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.085612724 seconds)
    (102/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.104116551 seconds)
    (103/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.103731037 seconds)
    (104/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.087873383 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127020395 seconds)
    (106/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.194553428 seconds)
    (107/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.086413836 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.103176357 seconds)
    (109/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.11051363 seconds)
    (110/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.085935935 seconds)
    (111/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079533678 seconds)
    (112/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.079066472 seconds)
    (113/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.197292004 seconds)
    (114/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.14116847 seconds)
    (115/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.134235685 seconds)
    (116/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078332004 seconds)
    (117/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.133415028 seconds)
    (118/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.085837566 seconds)
    (119/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.116651731 seconds)
    (120/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.077812842 seconds)
    (121/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.232637599 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.110565106 seconds)
    (123/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.10995548 seconds)
    (124/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113244985 seconds)
    (125/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103354869 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.132561556 seconds)
    (127/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.138269839 seconds)
    (128/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.099969369 seconds)
    (129/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.080764833 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.125971947 seconds)
    (131/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.083036509 seconds)
    (132/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.111811168 seconds)
    (133/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.112090837 seconds)
    (134/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.107574015 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103184797 seconds)
    (136/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.080214445 seconds)
    (137/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.127514655 seconds)
    (138/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.080721679 seconds)
    (139/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.101329447 seconds)
    (140/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.131771362 seconds)
    (141/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.133377149 seconds)
    (142/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124610821 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.122825589 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.124069976 seconds)
    (145/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109862454 seconds)
    (146/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.132330418 seconds)
    (147/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.078943181 seconds)
    (148/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.130556482 seconds)
    (149/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.131978107 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.109689387 seconds)
    (151/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.109110482 seconds)
    (152/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.103699071 seconds)
    (153/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.138023685 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.12469463 seconds)
    (155/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.084766309 seconds)
    (156/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109386452 seconds)
    (157/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.08496431 seconds)
    (158/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.08409648 seconds)
    (159/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.105368881 seconds)
    (160/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.110520047 seconds)
    (161/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.100711401 seconds)
    (162/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.081562066 seconds)
    (163/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.101164718 seconds)
    (164/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.131806759 seconds)
    (165/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.100564259 seconds)
    (166/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.122541455 seconds)
    (167/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.080399345 seconds)
    (168/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.087456721 seconds)
    (169/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.103216323 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.132173854 seconds)
    (171/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079875667 seconds)
    (172/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.084919219 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.123462305 seconds)
    (174/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.081525737 seconds)
    (175/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.102604404 seconds)
    (176/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.086657849 seconds)
    (177/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.080026525 seconds)
    (178/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.099807136 seconds)
    (179/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.126667745 seconds)
    (180/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.081837259 seconds)
    (181/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.081324035 seconds)
    (182/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.084454862 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.145347649 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.105284329 seconds)
    (185/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.081581869 seconds)
    (186/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.085609144 seconds)
    (187/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.08606328 seconds)
    (188/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.103470662 seconds)
    (189/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.080086251 seconds)
    (190/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100425015 seconds)
    (191/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.081238314 seconds)
    (192/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.134148907 seconds)
  done (took 27.065956637 seconds)
done (took 27.979995601 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.22214597 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129089624 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110820147 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.10977139 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.229213458 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117175651 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.151285448 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111974436 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120083025 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.134089708 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100468615 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122995978 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.133559117 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.202966642 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.137942264 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.103402122 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101144284 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.144820209 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.125810715 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126439926 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.230324981 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102758668 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.145034451 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.10280605 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.231442067 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104759935 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110928808 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.136643824 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124552472 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110845761 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.134587016 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.102879401 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.128087348 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.14855338 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103308645 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111516923 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100849154 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.108807147 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113097427 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111693168 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.145643525 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113185189 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111194444 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.125478168 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114018593 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11114258 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101014031 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.138513321 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101079624 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110775519 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126588786 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128251827 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109032071 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.122653667 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101440327 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10219602 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.144701334 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101833621 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123034843 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.123988635 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.104307681 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101601586 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.134562969 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102324684 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110105974 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101622173 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.134253539 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.113302534 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109917674 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126423272 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102769127 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.109814809 seconds)
done (took 9.949191532 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107361661 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146577759 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.231151792 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.234778395 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130706617 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.143408451 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116774375 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125721613 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.139192099 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122243286 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.140326901 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.157935013 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.235341031 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.11862522 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11846027 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.138309354 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114119347 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110808746 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.233596137 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.12897474 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.152802843 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.118414127 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.152378395 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.120502157 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105460153 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.154922598 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.110833546 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113521453 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129418949 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.125970345 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126069665 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.128364124 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111176369 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123805822 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.146721374 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118081796 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117293188 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.139568395 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107837775 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106249076 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.138557054 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122250935 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106052085 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.143382777 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114265157 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122664849 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.136595285 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118620029 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107111062 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.136612751 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107347842 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.130883919 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.142004 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123636276 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.140468868 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.119604485 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.118726805 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118275041 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.132570552 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119534782 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.105778734 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.12981105 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110026705 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.1512446 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.111021608 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119545945 seconds)
  done (took 9.677096795 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127054486 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136533326 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.139493276 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117644541 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110840026 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123951455 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099742178 seconds)
  done (took 1.814923267 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.10165877 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.241704848 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.215113367 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.240445382 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.237748672 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.252098969 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125648947 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100407837 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.163595527 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.112654365 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.24204344 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.271043287 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.112818211 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.11704514 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.244515358 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.127278624 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.220619037 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.12817292 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116739569 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.2453618 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119151117 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.158031571 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116834054 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102309411 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.236771584 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.10393055 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.289450478 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145880329 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112780639 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117314406 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.141753921 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.184615982 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.236815383 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116296245 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.135460367 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.217156025 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.238585436 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116914572 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.256901008 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.133654246 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.213337062 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.142800328 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.119066875 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.117131756 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.14224757 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.204108271 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.148490691 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.117340425 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.114201598 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.247018949 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.139444966 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.215529529 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.140672267 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117719945 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.11281314 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.144088547 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124777527 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117329575 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.246645418 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119477675 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.241969566 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.24330161 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.242431997 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.242689821 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128541249 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.242463691 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.203071812 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.142083432 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112545653 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117761278 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.244156699 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.141323549 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115739026 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.235191917 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120874923 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.247987954 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.243308047 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11534596 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.115668109 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.130874561 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116970846 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103567317 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.235373778 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116401314 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115094151 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148481682 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115874626 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.142109699 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109110425 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125734052 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.140446673 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11679538 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121292853 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.140671043 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120831201 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.249351137 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114107647 seconds)
  done (took 16.862779901 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106622728 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104821671 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107811756 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128814214 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105438642 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104439569 seconds)
  done (took 1.645126084 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141635281 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117913993 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.149684983 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119006013 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166541999 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.246758861 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.256457635 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111305969 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.165032095 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128807751 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.252005118 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.252027242 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.251643437 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122236415 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.255178853 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120808644 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.258378854 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116997755 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125359392 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141264323 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.117843393 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120858707 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142372057 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.241215986 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119583102 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.118699693 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.136851764 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127782761 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.125104282 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.137948729 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.122512947 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117589319 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.134660534 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.11301374 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.255062663 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.110947513 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138237153 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121828699 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.120805707 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.143709395 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.229673517 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142501019 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125293125 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.119941962 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.13847606 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111109482 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120380133 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.137322849 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.25654158 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121983871 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121490239 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.145842813 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.138635606 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119992456 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.136771336 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113392315 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.120721777 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.254438231 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.147074663 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.11231756 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119334474 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.143631466 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114400499 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122594337 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.144025688 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122517841 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111659435 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.142484636 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116457994 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.11873957 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.144913394 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121362935 seconds)
  done (took 11.688493893 seconds)
done (took 42.644746063 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.649250636 seconds)
  done (took 2.628204068 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.089751169 seconds)
  done (took 2.072133686 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.357960845 seconds)
  done (took 18.372947807 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.433812865 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.46950877 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.161276107 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.147478451 seconds)
  done (took 3.197846987 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.839415263 seconds)
  done (took 1.847423696 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.342658899 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.256502544 seconds)
  done (took 1.590324375 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.700710718 seconds)
  done (took 1.702891616 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.546384349 seconds)
  done (took 2.536569881 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.289733976 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.2457662 seconds)
  done (took 1.538254734 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.641179988 seconds)
  done (took 1.644377199 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.8720239 seconds)
  done (took 19.881092969 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.261929946 seconds)
  done (took 1.272405878 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.292983293 seconds)
  done (took 1.303434701 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.494042442 seconds)
  done (took 4.501857725 seconds)
done (took 65.083389722 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.118577031 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.121414582 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.120715888 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.14372046 seconds)
  done (took 1.500415714 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123694664 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118260968 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.145719131 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.117914955 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123901862 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.1175308 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.141811367 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.121995228 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117839941 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14525343 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119020869 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11700035 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145468416 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117944465 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115005059 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.146122598 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122348341 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119047966 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143772249 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120382018 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118586663 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144430487 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122372911 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120685803 seconds)
  done (took 4.054670364 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114619692 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108092039 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110359938 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132275942 seconds)
  done (took 1.479159855 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127174071 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129290859 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151546836 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125542556 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129569233 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152556825 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117259235 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.11407321 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141292228 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127040646 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133970199 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155250307 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.1312632 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119342469 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.152586131 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11321901 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118525897 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154652298 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124610523 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12760573 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.142783393 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124402953 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.124057427 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.151348149 seconds)
  done (took 4.19944315 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.193374001 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.130091987 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.174569229 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.1621842 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.177440508 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.11700664 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.145927753 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.148384407 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124858708 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.119558864 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.145317053 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.164283097 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.148330918 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120280035 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118544447 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.149133476 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.130362103 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122360451 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.19032095 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.123601358 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149182914 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130326505 seconds)
  done (took 4.197938516 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120765471 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108335669 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.129408923 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.107344343 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120708531 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.109869526 seconds)
  done (took 1.714398027 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10757728 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.10374713 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103170539 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126026824 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106699604 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103310731 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.100275562 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.127859775 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102797374 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101750925 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127194495 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102033458 seconds)
  done (took 2.330865113 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204083074 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143483527 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254989069 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.392655498 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186318275 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1604299 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.309337496 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188241164 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.17880883 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163456994 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211156829 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162048583 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178804482 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186714805 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163137784 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.160070756 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190676008 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208143591 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166377703 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211885446 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183796735 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199039543 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188354676 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174859837 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141446922 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18692525 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118465452 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127625497 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194099531 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190289499 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177814009 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174651089 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140403483 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218829925 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259661344 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177998301 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294161941 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133550434 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.194542609 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.191829932 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258468516 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165385968 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193022759 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17945711 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128143033 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213254621 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152455221 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.213018064 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133477001 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16974941 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210031857 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18105405 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.196854247 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13627538 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.325992456 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133101319 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166894995 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177340695 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213857765 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226378556 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203216883 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12278238 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197069738 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188971414 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23984907 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.166687103 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.165273793 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122226977 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191780979 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.230491669 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181924119 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187324207 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.239331493 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129491377 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198382598 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168586463 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182835865 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235706458 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170140983 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.145597399 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151800545 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15813178 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125376053 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.187747753 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146362364 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216060243 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157224858 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.339520311 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178583181 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181543387 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160067188 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186696449 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18916018 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148879699 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.10095589 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170529125 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.159715751 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186219248 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127766205 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180551521 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13930496 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125159781 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180026242 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.120539274 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195123924 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.134431911 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191708066 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1723716 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.15758199 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177662959 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173295338 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.161467067 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196463544 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191815729 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159389035 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130971024 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244389464 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195059519 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136215159 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198400052 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194165811 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.177506834 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133379611 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191786463 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192591322 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169591429 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224065811 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137447281 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132925198 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.168438005 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169690475 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186926104 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.185010613 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126887646 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.164553388 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218397091 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.151444373 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138983559 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206657675 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132872087 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121912403 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162850134 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135408528 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.166779251 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14836236 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137911612 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181093759 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164517659 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190936474 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182457655 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13537081 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197848741 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130898604 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.166865413 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175135173 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.1181361 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.20254916 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222435717 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129780268 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17970979 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.188664141 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206753531 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170703096 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154744919 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181207493 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154906004 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119280066 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18922915 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168668409 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191264662 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.186020449 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204113419 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.190523448 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.162039414 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176411799 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196476006 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.18176939 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183606684 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141684621 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19962476 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16926647 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.14670881 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122922911 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126783487 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16257125 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129734508 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135701653 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20697693 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19174194 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200805173 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166386255 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163476983 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189431244 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.149987025 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161073915 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.20076266 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137516236 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.214759971 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18861071 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206172552 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139828785 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188654829 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119629431 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152058618 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.133392018 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186258225 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136081949 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134037603 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167627333 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188453228 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199620484 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17505747 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213336715 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165525213 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227590291 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119111547 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.158807909 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197257071 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194316251 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182289018 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132466671 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.186171157 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.218343466 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141652768 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219153102 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168267187 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205612228 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222374872 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.164850771 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1285469 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174146785 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160412064 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16629738 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16165094 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172818751 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129646305 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179451987 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.138155481 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138190772 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214533512 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170697174 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179674949 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.183920277 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198731518 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124313781 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140256175 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199941491 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144976085 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.131168436 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17038585 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222875586 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14795378 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183050663 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197498492 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131479157 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.313621888 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212838137 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205156116 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134925389 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164843819 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172478748 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186383176 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162506063 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210924751 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140713015 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23362944 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20066194 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141616431 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128794115 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174692067 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149979611 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.167908419 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151239872 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.189566809 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.143518362 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215844813 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136430203 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19702175 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20185887 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144967206 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.149227855 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165437795 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252081999 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168766954 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201846383 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.163981414 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191143273 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181954999 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150848912 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125512864 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131345938 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212735343 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127437655 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204743193 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.18922972 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206711018 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175120302 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189559215 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139663638 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.125668318 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193105999 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14779182 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210236213 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159729712 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137971042 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21723196 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129882728 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128665848 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188092672 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310664849 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148901962 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199877476 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107296407 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.305741212 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129791088 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133398186 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188075557 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168888221 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.159282249 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182442279 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200621601 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139046612 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188270949 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133594285 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204562466 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183206992 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194163917 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204108843 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.144719711 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19040269 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159542488 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201480806 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143624467 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.174671416 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158907426 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220264267 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.173790652 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.158435083 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167533431 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196695396 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169305116 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203345195 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162974728 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182774902 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125413963 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19482536 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136199696 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15197176 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160040526 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.19325166 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12849473 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203384921 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197826034 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130414392 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125692169 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174416487 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163839015 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166314422 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128994739 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215740638 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127990223 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20817541 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238693506 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129777341 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163639013 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173634232 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128918886 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166775923 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143224583 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129849678 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.199314832 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181251549 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.156882178 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176753493 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190587147 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163757153 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185230313 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141616412 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.292599756 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127282342 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216895294 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150874167 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225753804 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148830676 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203544641 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196480353 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151739933 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192055806 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148437026 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.246100464 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165360648 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.194335931 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130664615 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16785491 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139711117 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.132236501 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179337076 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168597591 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169352025 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.136347605 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.193480105 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144679597 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.17521226 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141822975 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22759009 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15252759 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217366043 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186003213 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164651256 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17473682 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205324412 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127246886 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.193538635 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200949681 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144432073 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178424363 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133696443 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135480986 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242403891 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.12439935 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187876036 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173107478 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195909326 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169718339 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.161251268 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175192976 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16802196 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174714775 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155783418 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152434554 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195546037 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132829532 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.124167977 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198393912 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187929523 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.164558436 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168141307 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.173587426 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221174126 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123266395 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132170323 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310960929 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161259898 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221525744 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135364316 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164132828 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14466178 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188305374 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.165760297 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199490923 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.128988829 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154723471 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.145902279 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.180137941 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141932691 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193896521 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182721806 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188476254 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186151287 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132649142 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280895793 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140984641 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200350126 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.11739638 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.155057454 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142061687 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133068365 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169986606 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204489943 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215161517 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.189099037 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.147120071 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16246657 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126020733 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129173262 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192636739 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150198285 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196120601 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145228395 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.130978171 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141635997 seconds)
  done (took 84.930568257 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160835248 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151359397 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167723761 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221664806 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195222203 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.28984527 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.22918521 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.245115119 seconds)
  done (took 2.762652457 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119946842 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158041071 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141690578 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.1434417 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109491036 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.485170647 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.159568726 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120381674 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.160287338 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.150369306 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.13411264 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.574812876 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116133296 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144092456 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120584288 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.134084732 seconds)
  done (took 4.064378194 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.111015923 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.532378143 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.808326064 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.280525236 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.267077112 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.212604278 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.755058698 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.208928043 seconds)
  done (took 12.274552545 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.173636095 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.170620983 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.452505705 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.311979024 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.184239854 seconds)
  done (took 2.401009691 seconds)
done (took 126.911263502 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.12477033 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123584413 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123054124 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15390439 seconds)
  done (took 1.620595659 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.193766224 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.09181206 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093752654 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.118802188 seconds)
  done (took 1.603405455 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.467519888 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091600231 seconds)
  done (took 1.694736942 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.148513706 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.141187254 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.165987882 seconds)
  done (took 1.578972595 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.135680959 seconds)
  done (took 1.246429656 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.124633746 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125275783 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.273123779 seconds)
  done (took 1.637862351 seconds)
done (took 10.496648312 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120187056 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.92164748 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432606668 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133553651 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.713927815 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427634043 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.420177339 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175764222 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17576998 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136670339 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131701802 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.691816726 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.437720084 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.879477828 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.388881334 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.903093292 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.693529432 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112393339 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145882068 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113161169 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.399689401 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135731045 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112256274 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111885701 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.715677403 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421027206 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109470825 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.915689123 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110198159 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112799433 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.425983562 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113301369 seconds)
  done (took 20.938410849 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.112859223 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.167407739 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145862963 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111282219 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115039398 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.138051121 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123241955 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12335998 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203580473 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109343156 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159761339 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110674556 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.116028078 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.139196109 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136216013 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111294369 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.13966091 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113743692 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119646747 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111093279 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.16194949 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109839539 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112882047 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140877808 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110477223 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131531932 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138084104 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12345416 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109752605 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142162373 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115877215 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111838578 seconds)
  done (took 5.233362118 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.160840645 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176777278 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14683457 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149897135 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.187600983 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112804625 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.223548688 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150763162 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205021313 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111949415 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132667389 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.137079892 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152337654 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111474452 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.164657364 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11138952 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114019465 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140288386 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118742759 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112394759 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.160065981 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109943741 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11208422 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14034999 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111491387 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132946803 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139208254 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124052374 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109784877 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142478461 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115904498 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111018067 seconds)
  done (took 5.550918634 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.125453498 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125770559 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133454207 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.161495604 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119337058 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124928508 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.152993667 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122284056 seconds)
  done (took 2.188130559 seconds)
done (took 35.023665658 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136233808 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129012966 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130133749 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.153647872 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.251565123 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.11917923 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127648091 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116896252 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.154236313 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132215146 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.112402937 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.146578393 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.131508705 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121359697 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.253574466 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125488026 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.258195432 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.255580775 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.118535447 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124645872 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.147459796 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.22908921 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.153097395 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.118577944 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.253265745 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.113715476 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.247854771 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122430965 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.120788735 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.109980017 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.256111546 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.152639287 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.121195414 seconds)
  done (took 6.354290079 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.238384886 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.149664447 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.120578391 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118184688 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120248269 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.148749809 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.242226447 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.148489933 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.12005903 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118174594 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.147697635 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.225375221 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.153962029 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.115424091 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.119918863 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.110095181 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.273776366 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.12002483 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.141286114 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.094770548 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115114094 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117289264 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.28560174 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.143879291 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.119478107 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.118962502 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120167184 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.153892286 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.121498416 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120381042 seconds)
  done (took 5.572073034 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125446261 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132606129 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137494077 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.216132447 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.148571453 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160720657 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13881852 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132886498 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.16961047 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112811373 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128524957 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.178730664 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130430527 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.123628009 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.141222434 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131018404 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134915306 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.143002879 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121945946 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13109035 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.161243638 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131368478 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.135950826 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.150011154 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.112501623 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120689434 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.150960232 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.124640677 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121914691 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.127550404 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.144340105 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.11742074 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.114662197 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.176360519 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115369311 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.154172911 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139886868 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12544937 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.154660665 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.146700211 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.11680895 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.143219971 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141114277 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168731977 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.143396996 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12666581 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124870302 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.126671999 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.139898761 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130324134 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.18211287 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.113761276 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133834087 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.111644005 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.138846717 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122017592 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.11251893 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.14486869 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127456151 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.115187456 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.167568836 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121377186 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.123933249 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.143282039 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125876301 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.112539506 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.112200528 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.146576435 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140760583 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.120348137 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.178215467 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.11312819 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124909998 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.15494008 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125453364 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125818878 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.139668806 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125609484 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123521485 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.148014104 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127761794 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.116103383 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116053197 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.159210636 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.134061593 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127734257 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.155601856 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.126748743 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.116547329 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.143675234 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132037426 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115028028 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.147369639 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.12665757 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.113651739 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.145714268 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128089066 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124464627 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.137609334 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141112617 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.116503596 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.112577286 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.169085512 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.117339288 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.118351282 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.151824941 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.156276354 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.112427647 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.154279704 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.12795445 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.113464096 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.150549963 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.11686529 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114087357 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.160059316 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129377257 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.120395217 seconds)
  done (took 16.916005714 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.352856563 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.340627121 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.189230841 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.42706166 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.127691592 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.270996875 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.337878938 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.341608144 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112617363 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.177352615 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176432027 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.308729482 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.144288599 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.143054773 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.343267316 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.398132605 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.174189711 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150175076 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.17858207 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127687163 seconds)
  done (took 5.968767753 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.136045881 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148406501 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165268182 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141484885 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124395633 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.159709162 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114048368 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137234654 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.153691046 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124545915 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116432839 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.157680585 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127700036 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130144815 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157795864 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148837836 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.120711212 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148296664 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136388827 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118494484 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.130819073 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144131241 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122620231 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.164282915 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134076007 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124561704 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.141958082 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119982105 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.120608966 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.149845268 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120358689 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132308242 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.148559505 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106775415 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126842618 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.128697803 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.149079741 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119053191 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119864909 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.144756887 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129600093 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127649 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121356051 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.128331105 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.134258013 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.110286213 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.127049231 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.155158819 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107120952 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.133204607 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.154995684 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128833548 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.121418697 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.163676233 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121224309 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.130350997 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.153947911 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.129040331 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.11810687 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.140050882 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.112941315 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.117543493 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.121774613 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.15671914 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125479617 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.132700562 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.157520617 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.114369669 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.117867408 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.145848885 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118415698 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.127514105 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.163450416 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.123555149 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.120510366 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.154253756 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123087476 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.095218381 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.122404443 seconds)
  done (took 11.661523532 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139449505 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123810737 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131759259 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.178173655 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.12827128 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119605728 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.153019566 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.13559422 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127902267 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.165277685 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130326256 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127190402 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164961375 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125743963 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123583879 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.158392612 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128714961 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152196396 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.16108984 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142493538 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.128813952 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.149948453 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126840348 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.125176484 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.171669372 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126174772 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140100721 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.160099696 seconds)
  done (took 5.106884747 seconds)
done (took 52.703319514 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.282084241 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.462066145 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.252674986 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.248750609 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.250491337 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.255018951 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.249916388 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.251415913 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.677328108 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.219517834 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.250565747 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.248303965 seconds)
done (took 28.798105994 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.31770412 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.387162995 seconds)
    (2/2) benchmarking "String"...
    done (took 1.530068977 seconds)
  done (took 4.057475726 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.239518634 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.240850179 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.48508261 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.238871855 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.240097685 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.239039317 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.245517244 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.24268208 seconds)
  done (took 16.070843999 seconds)
done (took 25.826509127 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.244871182 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.42088339 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.470265707 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.217711426 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.241523744 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.239662101 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.244484519 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.255601318 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.241800156 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.21725343 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.629707512 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.494706589 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.241198352 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.602998347 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.219780134 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.266400283 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.251440142 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.468278138 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.254049314 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.266291835 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.229001941 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.218950237 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.272596971 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.237956307 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.243244155 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.24412711 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.231033494 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.239794331 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.420875535 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.279129407 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.267237741 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.24631455 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.233257717 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.242776586 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.250769278 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.254700414 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.421606483 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.242548438 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.218676414 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.260976897 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.423296036 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.256468186 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.249772486 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.241917131 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.219220918 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.253211004 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.23450624 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.349475568 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.259709877 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.257340589 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.261638854 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.616891218 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.251482367 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.265543044 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.245957602 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.469757974 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.246225343 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.28134743 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.265258352 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.266769585 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.248331682 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.241726811 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.295360062 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.259438359 seconds)
  done (took 145.845955995 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.242175736 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.248981629 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.247719159 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.309435835 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.247586957 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.247489761 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.242536123 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.241428276 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.248237779 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.278077692 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.250014955 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.248174373 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.248308978 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.202297659 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.254231065 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.26364443 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.248051961 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.245215638 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.25635998 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.244918336 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.269748847 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.248284527 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.263178038 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.248070105 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.28093344 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.315309091 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.256693002 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.262782318 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.258607223 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.242424384 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.280064368 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.293908833 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.818393134 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.116729333 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.248017228 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.25108636 seconds)
  done (took 81.810882921 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.24232577 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.243918889 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.242706346 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.272225628 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.243559577 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.768261816 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.775620441 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.216757476 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.784118878 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.434373696 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.245357795 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.396757437 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.241650887 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328978819 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.254441811 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.244512485 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.331112761 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.267703032 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.246492214 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.241822124 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.761080357 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.259395247 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.378045153 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.409341257 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.25589836 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.270740596 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.629807452 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.240695542 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.270372839 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.562047119 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.285865096 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.242441355 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.516223853 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.406537358 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.353619756 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.242966132 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.269316076 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.242008319 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.514810135 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.242072887 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.241348724 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.241966425 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.244961663 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.809004974 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.247390962 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.750308945 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.245157343 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.12273522 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.244175823 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.241431207 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.143303216 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.773467961 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.246292815 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.240807027 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.243456581 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.241181921 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.240399407 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.269916082 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.241129603 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.100410011 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.026749834 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.241726753 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.244235046 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.268134463 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.241398966 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.312080459 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.240653204 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.223466159 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.303668972 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.457928711 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.735093566 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.244589299 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.331113991 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.350543354 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.240406698 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.237843897 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.238822032 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.239820898 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.346543587 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.238971991 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.868170489 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.240749728 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.403816041 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.252814372 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.336502284 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.337074528 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.240356503 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.487360594 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.244495929 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.240917471 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.852978181 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.329790119 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.239519088 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.237931539 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.241795032 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.871486133 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.731580986 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.399995245 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.245211888 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.783938442 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.244616538 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.037582367 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.722479322 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.804331134 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.244868742 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.345583913 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.402985113 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.25478064 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.240252473 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.335684246 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.243984605 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.292474893 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.241086716 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.637181432 seconds)
  done (took 378.050078547 seconds)
done (took 606.84696736 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.078633486 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.031054552 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.171139548 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.045364341 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.027768071 seconds)
  done (took 11.492900304 seconds)
done (took 12.633845846 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.41517126 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.41781354 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.296456053 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.419037309 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.271295295 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.431060876 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.402692514 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.259408977 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.342373658 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.315085183 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.342693004 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.288494824 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.273477849 seconds)
  done (took 18.614867148 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.526702923 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.251834943 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.308142056 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.487824686 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.291350185 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.512081765 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.554953013 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.251915274 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.426010398 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.295193625 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.262700855 seconds)
  done (took 18.310380011 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.512477156 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.252169474 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.326667695 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.501150266 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.289849906 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.529018737 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.550831337 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.254829803 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.410148157 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.266434396 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.264381823 seconds)
  done (took 18.300337459 seconds)
done (took 56.368429168 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.279537054 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.334678858 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.275211062 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.26104068 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.260384585 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.262027545 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.263565369 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.26126591 seconds)
  done (took 11.338621701 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.260254048 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.259007208 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.259414071 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.259024976 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.260714424 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.259481463 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.260942283 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.259630962 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.262965739 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.261769463 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.258052839 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.262006924 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.26057737 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.260604735 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.258618246 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.261158189 seconds)
  done (took 21.307423362 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.264623846 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.261768914 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.260761056 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.261009832 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.26229089 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.260616263 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.260987911 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.259798596 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.260007136 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.26064854 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.262893946 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.259552851 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.261454542 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.259921082 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.261613775 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.261699063 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.261499996 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.260190285 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.266570073 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.262683861 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.261173196 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.263457439 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.260362666 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.261434709 seconds)
  done (took 31.420447585 seconds)
done (took 65.210696346 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.245872294 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.266467975 seconds)
  done (took 5.655466571 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.319477018 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.320052256 seconds)
  done (took 3.786434138 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.262623387 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.263520554 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.261962003 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.263440902 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.262687669 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.261848049 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.263234031 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.264019615 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.263861771 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.261211555 seconds)
  done (took 13.771809139 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.263919518 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.263050318 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.261901905 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.263474426 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.262978875 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.263367364 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.264772878 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.2621497 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.263606801 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.263249347 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.264169763 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.265779781 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.264505055 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.262798755 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.26314203 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.264317023 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.265644572 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.262939437 seconds)
  done (took 23.890049012 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.278671039 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.282065217 seconds)
  done (took 3.70511124 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.391262812 seconds)
    (2/7) benchmarking "second"...
    done (took 1.304158361 seconds)
    (3/7) benchmarking "month"...
    done (took 1.369800474 seconds)
    (4/7) benchmarking "year"...
    done (took 1.360483964 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.305310145 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.285690757 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.306170891 seconds)
  done (took 10.468729868 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.255644045 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.54129465 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.716380378 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.400721589 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.243497356 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.266656829 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.226153221 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.268124747 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.270523488 seconds)
  done (took 14.334653198 seconds)
done (took 76.758152387 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.253421428 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.26996403 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.275801727 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.268607964 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.603230656 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.280680994 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.254955602 seconds)
done (took 16.355816072 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.229419297 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.233108899 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.243875902 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.237973215 seconds)
  done (took 10.093242275 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.242371539 seconds)
    (2/2) benchmarking "read"...
    done (took 1.578505043 seconds)
  done (took 4.968849968 seconds)
done (took 16.211570361 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268228703 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.266649694 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.264873221 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.267055577 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.266843191 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.268017874 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.265686129 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.267366239 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.269101742 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.26522091 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.267868885 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.26745106 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.266136712 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26460861 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268775296 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265268349 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267679396 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.266090294 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266536497 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.26762562 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.266998762 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.269696444 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.267831964 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.2666202 seconds)
  done (took 31.556200162 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.268376633 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.268442627 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.26644291 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.267059244 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.268472818 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.270100644 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.269083839 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.265661412 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.268226315 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.268050355 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267168023 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.268095437 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.268620458 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.267445121 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267454941 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.267896397 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.268642084 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267528331 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26909903 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.26852291 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.269647148 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269509463 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.268928601 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268113706 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.268534184 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.267553648 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.27005241 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.268318327 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.268710197 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.270492975 seconds)
  done (took 39.201306557 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.273636168 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.27362049 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.269076732 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.270034848 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.270548331 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.270300497 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.269532441 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.269519602 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.270124611 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.268298922 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.268544195 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.269926598 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.270060802 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.269399371 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.270509724 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.269080286 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.270313934 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.26908529 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.2704605 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.270233389 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.269173039 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.270172191 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.270358111 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.268961876 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.269704554 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.268359418 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.268860769 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.27140718 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.270279033 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.269906288 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.268814468 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.270914838 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.269962695 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.273122016 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.269953474 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.272089393 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.273194323 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.274146979 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.27282742 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.271749977 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.27167571 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.271748387 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.270527319 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.26932717 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.271449469 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.272765433 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.27162084 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.270460364 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.272161552 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.271705052 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.271147449 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.271439216 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.27336655 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.272381227 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.272871773 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.272687939 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.272764241 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.273052795 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.271402164 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.273642157 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.272089234 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.271117022 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.272420373 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.272925515 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.272351941 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.271662512 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.273129046 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.270772185 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.272143427 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.273032952 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.273990334 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.272908342 seconds)
  done (took 92.674756863 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.274159526 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273455661 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.272342421 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.274117812 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273457418 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.274469257 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.273537621 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27224576 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273362862 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.273164263 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273244314 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.274566753 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273243689 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.273788555 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.274216565 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.274794473 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.273703214 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.272378791 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.274817474 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.274789459 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.274549378 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.274214793 seconds)
  done (took 29.1766025 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274473207 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.274806189 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.275095563 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.273467022 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.27654679 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.277379353 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.275137477 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.276863061 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27621214 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.275256463 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276947667 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274762387 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.277312123 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275853295 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276027344 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.277803653 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276025211 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.277138095 seconds)
  done (took 24.122762151 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.27559679 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.275234687 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.275870037 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.275784912 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.275936425 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.275169955 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.275157891 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.275031359 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.275526782 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.277011133 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.275883244 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273894466 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.27589863 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274475421 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274145375 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.276525598 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.277044719 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274562478 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276753458 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.275864883 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.275893447 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276291171 seconds)
  done (took 29.220144624 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.275539402 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.277774297 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.278139883 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.27731824 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.276553369 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.277162788 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.275779696 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.276441599 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.27675784 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.278385992 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.274541268 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.277735462 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.278585145 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.276805954 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.278421111 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278185492 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.280124378 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.277526892 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281136698 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.277566537 seconds)
  done (took 26.707597188 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.27906425 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279537198 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.279031661 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27840492 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279470005 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.278533044 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279740989 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.278594974 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280422507 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.279652841 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.280765968 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.278757184 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279368278 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.279874112 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.279681219 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280135423 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278545346 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279886282 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.280709883 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278977411 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.280769525 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280885554 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280317722 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.280801593 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.279192964 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278983707 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279584381 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.281632313 seconds)
  done (took 36.99010208 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28043793 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.281196263 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.280305531 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.279784775 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.281892442 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.280797694 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.281285864 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.280761089 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.279250524 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.280439017 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.280071281 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.280608303 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.280261232 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.280841889 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282496012 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.272920126 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272210407 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.273120482 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272195471 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272598654 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.2715195 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272538711 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.274287893 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.261075365 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262919042 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.261230938 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.262115629 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.262634804 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.263739986 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.261229615 seconds)
  done (took 39.38683549 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.273152276 seconds)
    (2/2) benchmarking "in"...
    done (took 1.273098383 seconds)
  done (took 3.693005617 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.255484712 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254476802 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.255345642 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.254552794 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.256299976 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.248422197 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.248336713 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24761432 seconds)
  done (took 11.158820456 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.241314197 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.249229999 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.250035071 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.249966212 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.238649374 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.231605404 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239599485 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.24583215 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.233966273 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.232410062 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.237543787 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.240056753 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.230239552 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.22975816 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.229445028 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.230203065 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.239065385 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.23600776 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.234132493 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.23448664 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235416041 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.22784757 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.229362674 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.235187191 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.225370141 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.234263659 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.234521293 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.237060862 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.227091404 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.228824038 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.225749581 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.233639188 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.231434507 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.231678219 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.231448261 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.230520312 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.229919817 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.22989132 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.231271284 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235213491 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229268129 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.229129004 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.22447524 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.226040224 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228062056 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.230599958 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.228406069 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.227334414 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.219999659 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.223328419 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.233364696 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.217795483 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.231144647 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222376348 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.224339698 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.230179192 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.233758531 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.219997337 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.221990785 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.228462618 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.235734519 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.230708493 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.223108755 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.229968999 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.224234847 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.233943774 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.230595248 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.232586 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.224741828 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.225675279 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.226845577 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.234920579 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.23373929 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.229250497 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.225385647 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.22651327 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.21924076 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228377144 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.226224809 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.230521194 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.232994526 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.226664775 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.224696058 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.231779074 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.220265345 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.230310265 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.226998559 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.228510263 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.219249451 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230594909 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.235917431 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.22846578 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.219327562 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.22208863 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.224221452 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.228443524 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.218814171 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223145467 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.230875459 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.226743469 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.225120284 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.220894229 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.225521359 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.231265389 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.227695336 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.230011356 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.233579631 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.221141595 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.231438657 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.235800416 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.229984147 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.221373448 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.22566708 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.233359279 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.221334568 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.227308542 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.234139182 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.225427802 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.234446953 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.230552063 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.228885055 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.240850775 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.234675904 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.228711344 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.223249383 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.235500764 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.228442902 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.226469813 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.235123107 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.228300922 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.228271853 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.22597226 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.234627602 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.223094591 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232281579 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222112834 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.233563144 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.23011137 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.229097411 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.225715957 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.229348831 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.225392885 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.228266821 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.230831668 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.234772857 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.227012071 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.236807347 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.22856079 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.229246641 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.231172871 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.235455353 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.231036506 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.224489937 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.233032571 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.221812974 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232632177 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.222667193 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.233634157 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.230310801 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.229832227 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.230798 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.222419555 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226428539 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.235093347 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.229336019 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.230669889 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.234410924 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.230804753 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.232352723 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.224620979 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.232446106 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.222574442 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.226497407 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.234826592 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.232087069 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.231966853 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.229735531 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240078455 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.231076984 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231984552 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.224291337 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.231970632 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.237118922 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.234464971 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.240284309 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.23334365 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.232713155 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.22537491 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.227200082 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234358307 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.225267548 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.240194726 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.239042647 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.243007029 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.228371046 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.236430482 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.224277767 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.235856251 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.232326674 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.240075259 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.234134742 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.232476841 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.226769454 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.23794317 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.227588494 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.23593784 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.224532491 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.23589979 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.236615241 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.233387989 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234047419 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.228190545 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.231808598 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.23756615 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.234356142 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.233421897 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.222675444 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.233592677 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.221330243 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.225907228 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.233595638 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.229452025 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.232069028 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.236838402 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.225705491 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.231889963 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.225699321 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.221115438 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.228740532 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.225130076 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.2259362 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232718016 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.227865839 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.222537548 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.231301669 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.23055979 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.219425217 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.2263526 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.234124611 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.227014041 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.220087779 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.229965271 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.227057062 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.226359777 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.225682441 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.217105402 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230196041 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.230753239 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.234874041 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.220112668 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.229683139 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.22023674 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.230209607 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.221521362 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.226931954 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.225862056 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.229270383 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.235958614 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.225790305 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.219871672 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.230706047 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.227633486 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.227308969 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.218832411 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.232000839 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.227915135 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.22805288 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.225446586 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.22326188 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.229684071 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.221171976 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.230262909 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.221662879 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238153386 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.24519979 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.231360476 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.232439166 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.232505215 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231508881 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.229956598 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.22250213 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.224873269 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.225496579 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.223144422 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.223491511 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.232244214 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.222879183 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.231766434 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.227562 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.22942314 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.230948087 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.229814427 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.221657807 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.232866426 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.229484355 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.230186221 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.220411729 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.230528884 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.224084265 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.232515267 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.22973373 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.225611694 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23587849 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.234614015 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.227805892 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.224847394 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.22410411 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.222255522 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.226534949 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.235629234 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.223664224 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.234134737 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.223843001 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.229811603 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.224776624 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234307728 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.240282225 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.223939849 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.237192038 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.229871336 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.221303947 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.224800972 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.233082889 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.235803998 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.242082594 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.22193496 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.232847967 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23282079 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.231347498 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.231692182 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.230513827 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.231379504 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.230882304 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237326912 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.237309263 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.226065685 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.232936785 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.241874162 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.231175505 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.231825834 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.222837732 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.234048157 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.240864442 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.228001828 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.230222532 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.226989394 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.234457014 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.234323966 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.232502049 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.233187518 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.230867022 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236248917 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.236895071 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.235973425 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.232861674 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.237371099 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243532908 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236002814 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.247777453 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.228148609 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.238288031 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.233006785 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.227151826 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.228291173 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.229641226 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.237240828 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.226020116 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.238875546 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.232728187 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.230207549 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.234048585 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.241173693 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.226258778 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.236035274 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248150965 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.226638197 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.236398974 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.235313356 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.22451487 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.237572456 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.233591417 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.22742725 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.228590895 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.232554164 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239566048 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.22823385 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.239577162 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.229296819 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.238177439 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.235506449 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.237648779 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.234886494 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.235276825 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.229315892 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.23729091 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.237231629 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.244306162 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.230265816 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.233801191 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.230425506 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.242217521 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.246492459 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.230621378 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.241842166 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.235585773 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.229076304 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.233953301 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.242270485 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.229404723 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238863472 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.227175341 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.231303802 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.231252456 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.239194964 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.238522634 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.240551219 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.229454423 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.231101375 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.239201381 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.236388467 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.237984612 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.232008566 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.242692741 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.229059655 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.228838234 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.239582708 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.231529617 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242396902 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.230838342 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.234110556 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234530973 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.240868348 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.238729399 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.237145947 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.230370039 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.231209146 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.244070135 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.241620609 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.23444856 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.233526657 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.241402194 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.23036531 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.235002378 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.236148442 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.234353666 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.234746704 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.24322359 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.233553603 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.233381698 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.233438842 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24091374 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.243644406 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.243291801 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.23290875 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247384106 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.24802213 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245817528 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.233863686 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.235463574 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.236953832 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.243951318 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.24050452 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.233228983 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248978374 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.246354725 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244917602 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.239747648 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.241386444 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.233624856 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24206833 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241280286 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.236157931 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.246247049 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.237479772 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.2474337 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241582104 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.24029936 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.232546987 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.23544726 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.236308213 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.236009231 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.242479846 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.241020828 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.242467551 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.239321141 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.245471915 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.24192832 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.241301413 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.241325661 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.233392478 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243795565 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.234621693 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.243972031 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.242399206 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.235704135 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.244758502 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.241061565 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236239401 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.240051684 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.247100262 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.242398784 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.235666312 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.240486639 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.246970389 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253519807 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.243500546 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.235150726 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.239904323 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.248051523 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243982248 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.243393664 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.236433591 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.253725984 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.256423139 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237890098 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.241346158 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246323063 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.253912641 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.243780776 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.244980507 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.23863415 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.241680954 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.248023538 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.244399646 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.247378365 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248564873 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.238489284 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.247131564 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.236542324 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.241451112 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.245066772 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25495758 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.245029201 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.239911645 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.253038215 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256078066 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246201709 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.262880506 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.251940907 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.245528019 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.251287142 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237062836 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.247727054 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.240653263 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.250117324 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.24533472 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245674168 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.245002625 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.237938206 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246183896 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.252544005 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.254995136 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.24711451 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.238241282 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.240785593 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.246472626 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.246297696 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.247176026 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.247054831 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.246915394 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.247726503 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.240228781 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257295961 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.261038831 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.252209137 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.248362382 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.246863543 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.247948196 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.249798312 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.244878783 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.25127545 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.249259964 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.24848852 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.245134514 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256135925 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.248637663 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.241064843 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.241641873 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242325795 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.251052771 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.255044401 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267693552 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.250527163 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.249981088 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250803128 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.248912768 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241015726 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25286273 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24764001 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.241256942 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.244826517 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250183771 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.248684854 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.249452352 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.241617145 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.253599279 seconds)
  done (took 736.83624195 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.248316965 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249265908 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.248520104 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.250108038 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250589988 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248517241 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248770476 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.249043097 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.249084745 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.25094278 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.251367813 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249880128 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.249015888 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.250862774 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250236906 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.249335703 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249641147 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.250047001 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.24979606 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25017789 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.251154311 seconds)
  done (took 27.379678019 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.249737747 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.250443402 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.250643536 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.25254798 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.250526842 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.251641681 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.250634797 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251227286 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.252347203 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251480999 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.250923752 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250751459 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.251411211 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.25035711 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250830784 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251883686 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.252789889 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.250540668 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.251171215 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.252555802 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.251602932 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.250635357 seconds)
  done (took 28.661681757 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.251543862 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.252322895 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.244314238 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.255852416 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.251580265 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.252236548 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.251804972 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.25201984 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.253094982 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.245099471 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.246350528 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.24472636 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.248631174 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.255916396 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.2470736 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.25785116 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.253234646 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.254120497 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.253938732 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.253310634 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.257754663 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.265624756 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.253955472 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.245131888 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.255006623 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.253956727 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.253574498 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.253490588 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.244841702 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.255013993 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.253387293 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.246423789 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.255672413 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.255662413 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.247356025 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.257057121 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.25392248 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.254326562 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.255165781 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.253917998 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.26787296 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.254908853 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.258149539 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.266767748 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.255137922 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.247284954 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.258835377 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.253865666 seconds)
  done (took 61.295731661 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.254023776 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.255401291 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.25599944 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.25416777 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.255646095 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.25424037 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.255477438 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.254704419 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.255695474 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.255994004 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.256196485 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.255223786 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.255445556 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.255610746 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.256065075 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.25677768 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.255935725 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.255271173 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.255811682 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.256080136 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.25571643 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.257384294 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.256396175 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.255611664 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.256196988 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.2560057 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.256312626 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.257612062 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.256473107 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.257044417 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.256090064 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.255967307 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.257836299 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.256573059 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.256694505 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.257772965 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.256606373 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.258482593 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.256807377 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.257096754 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.258061845 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.256746012 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.25805928 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.258414209 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.258918062 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.257800012 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.257852525 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.258651612 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.257284592 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.258367168 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.258013208 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.25963216 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.25778912 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.259083566 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.258443424 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.259324983 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.258955461 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.257078886 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.257864298 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.258196174 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.258929038 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.259677313 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.25803605 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.257471904 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.260696447 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.258107727 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.258858894 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.257830778 seconds)
  done (took 86.620127693 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.261241178 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.260385105 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258381735 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259722392 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.260222957 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.259657318 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.259558165 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.258514539 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.259566706 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.261006819 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.26032912 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.261696296 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.259984552 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.259157834 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.258896131 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.259995 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.260197459 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.260765238 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.260830962 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260314748 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.260074467 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.261298198 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.260944677 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.261047705 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.260618126 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.261713081 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.262778708 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.25957451 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262104538 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.260587268 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.260432307 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.260348302 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.260602298 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.260943589 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.26187191 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.261518179 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.260833498 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260884822 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.260926328 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.261266145 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.261802015 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.260403645 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.26264407 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.2624253 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.263547861 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.262215362 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.262744647 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.26280985 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.261186628 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.262532346 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.263458269 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264245816 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262502356 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.262362907 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.262711013 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.263201634 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26282204 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261935666 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263556754 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.262541881 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.26305981 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.263281531 seconds)
  done (took 79.344260777 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.263055612 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.263145139 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.263351766 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.262543105 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.264058621 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.262685838 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.262934535 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.261058302 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.264271767 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.263123986 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265195421 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264329669 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264534022 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264939976 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.263254474 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265714342 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.264381634 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.263908182 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.264666641 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.266212427 seconds)
  done (took 26.423661357 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.264071024 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.264544425 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.266432807 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.264672279 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.265315972 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.264892045 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.26498191 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265006041 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263778765 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265245762 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.264228113 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.265005139 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265197977 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.265648639 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.265294072 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.266602873 seconds)
  done (took 21.387139518 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.265384516 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.263887773 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.266158414 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.265382779 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.266704663 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.266146174 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.265589616 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.266533905 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.266085874 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.265765671 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.26680129 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.266235171 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.266321558 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.266584183 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.266799721 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.266584859 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.265352922 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.26653769 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.266322791 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.267023568 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.267520471 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.266685513 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.266488037 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.267614456 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.267120898 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.26694568 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.266240978 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.266516366 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.265448045 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.267134635 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.26687815 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.266698138 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.268012695 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.266375028 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.266974493 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.267036884 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.265538158 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.26745185 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.266585048 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.267968493 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.26769366 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.266904783 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.267761033 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.26699737 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.26826039 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.267565187 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.268915875 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.268399319 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.266396199 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.268350384 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.267350795 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.268020086 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.268616061 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.268199033 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.268023065 seconds)
  done (took 70.826658495 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268649568 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.26785687 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.268189603 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.268022916 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.269082145 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.269575231 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.26927352 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.272125971 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.269317728 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.268627329 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.268575022 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.269815514 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269826412 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.270283848 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.268645668 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269099173 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.270314709 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.269385302 seconds)
  done (took 23.997266711 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.270223292 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.271321778 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.271627842 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.270247568 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.270376064 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.269724943 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270837042 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.269922871 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270994476 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.270023805 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270491495 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.272202178 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270563932 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.270894139 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.270444797 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270936364 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.27189875 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269387751 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.270506371 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27063909 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.272025811 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270447364 seconds)
  done (took 29.108145767 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.261406448 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.261836996 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.261196948 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.276056432 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.273373464 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.260746319 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.262137852 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.261513799 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.28132136 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.299396783 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.294144015 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.274188615 seconds)
  done (took 16.418977347 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272823557 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271200353 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271980574 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270588381 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272198164 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273145868 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272891903 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271366148 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273053124 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271560634 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2725105 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272278955 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272035822 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272405894 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273268934 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272627614 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27168273 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272707266 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27295218 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273313809 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273057369 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27299405 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272070908 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272974399 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271684636 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273501484 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273590444 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274730194 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274354704 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273394083 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27343772 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272915257 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274806939 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274072904 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272806828 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273268968 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274350259 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274414844 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274921219 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274333986 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274522509 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274179074 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274896271 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275230732 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27356083 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27357396 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274371782 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274654637 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273117593 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275640514 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274587649 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274825492 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275968678 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275036939 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275463025 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274520744 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275045428 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27554125 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274887842 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277336116 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275064677 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275539497 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275268944 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276457367 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274910017 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27494652 seconds)
  done (took 85.223442115 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276006693 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27609364 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27570607 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275803518 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27549892 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275565073 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276050142 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276064642 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275855463 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27646452 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276840243 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277175596 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276349076 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278158584 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276112773 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275926571 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277703976 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277248654 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276943446 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277113448 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276610136 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278527175 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276791047 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27875667 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278149914 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277550119 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277862259 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278490097 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278233257 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278010589 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278926414 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277185864 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278858991 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.27774192 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277680723 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277846112 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279029138 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277919739 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277771712 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278716018 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27890049 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280997158 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278249407 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279278873 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280343323 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279583893 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277841361 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278563322 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279515789 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279925205 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280175493 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281031428 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280618807 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278575608 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279394637 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279832083 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27933436 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280032301 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279999691 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280185756 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279327804 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279664286 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280929046 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280269897 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279951427 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280866383 seconds)
  done (took 85.522310004 seconds)
done (took 1744.084037907 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.436819244 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.388177937 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.268927622 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.282811786 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.271693707 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.266816609 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.284363989 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.270198947 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.268862324 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.270521207 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.271356872 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.463213203 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.305280173 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.269439264 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.271895028 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.368016746 seconds)
  done (took 26.119287031 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.294554511 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.283741477 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.386873372 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.28435273 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.302719653 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.457961603 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.338021797 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.284021673 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.440105549 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.298778207 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.271331154 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.302045034 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.28896086 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.275120847 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.298719176 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.45855248 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.536519686 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.275909521 seconds)
  done (took 28.239860326 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.692423021 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.307112443 seconds)
  done (took 5.1667425 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.300415108 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.282874233 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.281969418 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.281580061 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.279419357 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.272899676 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.282086577 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.284066659 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.274163447 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.404297636 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.282954838 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.296050314 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.297655401 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.28430481 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.291772189 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.32772962 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.437079559 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.292085656 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.290096146 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.288931387 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.281147453 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.370840216 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.321551346 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.292583441 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.401368192 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.28542832 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.290280749 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.289412119 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.397313013 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.292693557 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.283947925 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.284941732 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.285461897 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.269797482 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.82094336 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.277962985 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.305913565 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.292719025 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.291425218 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.415137651 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.284907191 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.29214538 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.277225783 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.810715666 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.3826641 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.396865157 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.295562932 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.291590042 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.285787472 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.347686783 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.285650761 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.287555051 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.345958744 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.083837982 seconds)
  done (took 82.620937544 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.312808847 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.277792855 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.46212064 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.293217306 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.279738252 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.278737899 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.278284139 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.546411677 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.279451708 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.279954017 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.626397431 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.877161233 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.277131521 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.34425595 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.314209589 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.328338496 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.282531189 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.279595196 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.279348898 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.284116836 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.831085816 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.282445621 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.279847834 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.368995754 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.318860949 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.814130287 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.279825896 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.281229162 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.280983409 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.279408531 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.853917727 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.284991389 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.330659786 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.281931491 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.559399827 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.660385498 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.621395224 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.284768881 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.28335564 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.28117475 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.312032721 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.815326372 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.641830126 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.280629563 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.28121844 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.814106863 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.28077479 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.287165243 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.289172062 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.550633997 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.280317171 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.283131371 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.280403875 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.278561505 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.281994584 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.326519896 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.328488997 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.817417088 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.281066075 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.280543907 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.323530319 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.282416613 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.287740825 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.288552528 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.281445701 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.647320478 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.509976767 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.291454799 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.648154738 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.84413484 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.28179971 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.940134146 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.286374183 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.306415909 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.32980264 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.28285397 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.296045333 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.808182926 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.292212848 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.282871367 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.62617571 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.284055361 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.613903612 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.298959756 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.283681792 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.848939766 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.288243377 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.322861094 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.283467819 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.291322947 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.282624209 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.284566562 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.567719612 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.323390585 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.284805036 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.284236615 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.319164867 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.28349525 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.300937396 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.283735792 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.922638779 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.293406618 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.284489184 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.30032137 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.284973876 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.287582821 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.285686864 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.283235726 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.566789516 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.2853311 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.306971051 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.287484937 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.283864075 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.296999134 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.377774091 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.290560486 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.58017423 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.289530625 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.284548482 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.285312698 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.289851346 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.295995977 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.285956679 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.302320307 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.284896209 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.642932611 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.300430472 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.300388979 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.286518503 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.286211803 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.305304189 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.288076829 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.341194035 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.290056167 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.049877323 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.29369821 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.303878288 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.28673783 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.296406205 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.287016766 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.293195857 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.289408027 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.587219994 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.572213255 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.51376722 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.291475039 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.288560275 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.076059622 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.289971222 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.473630091 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.303760775 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.28721272 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.588757201 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.501131338 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.288444274 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.288028014 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.290708568 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.568118499 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.290913069 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.604188272 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.881538506 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.287388125 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.293875456 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.043031438 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.10437507 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.292199005 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.288828412 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.615797166 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.305211345 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.287597123 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.288427058 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.288027154 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.289915614 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.290085046 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.294218462 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.288624262 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.288366857 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.581812589 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.485640674 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.305058764 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.300688813 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.817664271 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.311307993 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.289697039 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.292035344 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.293313819 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.289288946 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.340804604 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.29442604 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.34037898 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.292452169 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.299158082 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.889967863 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.291170106 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.294845112 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.485309727 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.010503023 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.296856094 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.28967837 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.29095917 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.346213394 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.85071062 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.308462227 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.590124033 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.3046429 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.330240076 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.291544299 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.301472813 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.848676648 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.2962743 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.292128821 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.021668089 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.295119576 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.772202998 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.292228514 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.306927373 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.92627243 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.293693311 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.292513714 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.299123526 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.290065964 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.6227075 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.293458055 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.340000857 seconds)
  done (took 488.078075279 seconds)
done (took 631.385502322 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.291774488 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.291590217 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.298418459 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.297789443 seconds)
  done (took 10.363659384 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.309860116 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.297783088 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.309341395 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.297665562 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.308503415 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.299003193 seconds)
  done (took 9.005162943 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.292795165 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.296717387 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.298504405 seconds)
  done (took 8.071631326 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.496301869 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.318586018 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.636390524 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.298813595 seconds)
  done (took 8.93388544 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.309696155 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.308521162 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.30943364 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.311588668 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.311397433 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.312529261 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.311255198 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.309262269 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.310770496 seconds)
  done (took 12.977818192 seconds)
done (took 50.536378896 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.270464883 seconds)
    (2/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.275872862 seconds)
    (3/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.304395556 seconds)
    (4/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.275760514 seconds)
    (5/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.341221813 seconds)
    (6/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.323969132 seconds)
    (7/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.464622179 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.362110076 seconds)
    (9/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.272176995 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.404318591 seconds)
    (11/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.27197241 seconds)
    (12/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.563760132 seconds)
    (13/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.303918568 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.335433386 seconds)
    (15/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.272197184 seconds)
    (16/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.335660811 seconds)
    (17/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.271662262 seconds)
    (18/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.404722115 seconds)
    (19/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.459258363 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.428668144 seconds)
    (21/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.408950804 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.408181319 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.376495489 seconds)
    (24/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.285140561 seconds)
    (25/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.48599576 seconds)
    (26/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.502482324 seconds)
    (27/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.27536831 seconds)
    (28/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.32549819 seconds)
    (29/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.369853348 seconds)
    (30/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.699647842 seconds)
    (31/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.591616831 seconds)
    (32/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.282921369 seconds)
    (33/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.278782659 seconds)
    (34/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.405448412 seconds)
    (35/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.403284208 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.379634153 seconds)
    (37/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.387148883 seconds)
    (38/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.373328954 seconds)
    (39/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.337009145 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.416503815 seconds)
    (41/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.274883633 seconds)
    (42/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.515497614 seconds)
    (43/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.275778412 seconds)
    (44/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.502576906 seconds)
    (45/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.37495314 seconds)
    (46/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.379279831 seconds)
    (47/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.408432869 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.448253906 seconds)
    (49/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.277096338 seconds)
    (50/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.540145609 seconds)
    (51/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.783446062 seconds)
    (52/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.279860303 seconds)
    (53/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.539269897 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.399551144 seconds)
    (55/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.504324879 seconds)
    (56/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.507599536 seconds)
    (57/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.609912634 seconds)
    (58/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.47438136 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.322678903 seconds)
    (60/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.305088682 seconds)
    (61/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.567588731 seconds)
    (62/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.506571312 seconds)
    (63/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.343213274 seconds)
    (64/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.570306796 seconds)
    (65/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.494233533 seconds)
    (66/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.411435541 seconds)
    (67/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.641064452 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.405222142 seconds)
    (69/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.275095212 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.318021048 seconds)
    (71/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.281423705 seconds)
    (72/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.576854964 seconds)
    (73/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.381926597 seconds)
    (74/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.451855154 seconds)
    (75/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.277041816 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.42189788 seconds)
    (77/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.356594575 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.439823009 seconds)
    (79/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.313781801 seconds)
    (80/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.288524248 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.539825504 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.538258955 seconds)
    (83/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.390886598 seconds)
    (84/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.537518154 seconds)
    (85/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.451501428 seconds)
    (86/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.639416047 seconds)
    (87/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.596777412 seconds)
    (88/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.640982471 seconds)
    (89/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.482793228 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.39279379 seconds)
    (91/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.291950246 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.407989498 seconds)
    (93/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.385645754 seconds)
    (94/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.33352294 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.365590552 seconds)
    (96/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.331500757 seconds)
    (97/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.336816868 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.42579774 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.334745439 seconds)
    (100/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.385379221 seconds)
    (101/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.640302805 seconds)
    (102/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.539234311 seconds)
    (103/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.305444502 seconds)
    (104/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.284913405 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.38597545 seconds)
    (106/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.290284931 seconds)
    (107/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.549553185 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.549849167 seconds)
    (109/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.277246351 seconds)
    (110/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.450871795 seconds)
    (111/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.392695181 seconds)
    (112/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.370863863 seconds)
    (113/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.450741396 seconds)
    (114/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.364924176 seconds)
    (115/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.47102981 seconds)
    (116/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.280495759 seconds)
    (117/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.342410026 seconds)
    (118/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.781377844 seconds)
    (119/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.309313129 seconds)
    (120/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.290820015 seconds)
    (121/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.380407365 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.450713375 seconds)
    (123/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.51160354 seconds)
    (124/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.33565489 seconds)
    (125/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.301117006 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.372477937 seconds)
    (127/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.374181465 seconds)
    (128/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.391045326 seconds)
    (129/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.279393682 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.429376743 seconds)
    (131/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.476876653 seconds)
    (132/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.370867246 seconds)
    (133/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.457751848 seconds)
    (134/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.51069622 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.411849613 seconds)
    (136/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.289531265 seconds)
    (137/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.410236392 seconds)
    (138/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.279913031 seconds)
    (139/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.419130761 seconds)
    (140/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.569863219 seconds)
    (141/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.340844726 seconds)
    (142/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.432569472 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.393930864 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.460707622 seconds)
    (145/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.335825996 seconds)
    (146/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.400064826 seconds)
    (147/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.30687534 seconds)
    (148/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.412994883 seconds)
    (149/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.39433757 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.37006615 seconds)
    (151/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.45571132 seconds)
    (152/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.302939652 seconds)
    (153/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.372204767 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.460555631 seconds)
    (155/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.463768012 seconds)
    (156/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.340017572 seconds)
    (157/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.456189367 seconds)
    (158/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.41641684 seconds)
    (159/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.572639711 seconds)
    (160/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.343939145 seconds)
    (161/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.419598365 seconds)
    (162/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.481247496 seconds)
    (163/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.283119165 seconds)
    (164/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.456440477 seconds)
    (165/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.419464656 seconds)
    (166/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.362624539 seconds)
    (167/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.436331418 seconds)
    (168/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.281981516 seconds)
    (169/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.342062017 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.355305484 seconds)
    (171/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.280694984 seconds)
    (172/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.418844152 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.422169096 seconds)
    (174/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.449129598 seconds)
    (175/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.332411004 seconds)
    (176/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.61341292 seconds)
    (177/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.400569061 seconds)
    (178/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.366204885 seconds)
    (179/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.325497557 seconds)
    (180/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.288538173 seconds)
    (181/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.4004789 seconds)
    (182/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.506599135 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.511050486 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.454326312 seconds)
    (185/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.40134766 seconds)
    (186/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.648166207 seconds)
    (187/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.306764864 seconds)
    (188/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.378452085 seconds)
    (189/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.286373624 seconds)
    (190/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.503425487 seconds)
    (191/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.579009614 seconds)
    (192/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.382030249 seconds)
  done (took 319.465687227 seconds)
done (took 320.650960308 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.335220968 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.411359528 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.313704615 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.313542846 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.316912987 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.315372387 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.340425958 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.316366191 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.329177703 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.329631749 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.314452068 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.327907575 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.330169066 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.325114941 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.349534783 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.316286078 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.315015649 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.32595354 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.330718481 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.332109282 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.316282069 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.31531313 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.342708255 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.314112722 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.323284135 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.322507591 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.321779226 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.316879493 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.326876583 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.330302351 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.306974019 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.32706249 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.333946138 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.327200729 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.318162783 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.326437815 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.31610191 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.411633806 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.337283589 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.328014723 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.324859608 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.332792112 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.321345189 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.322989821 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.327881532 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.344617053 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.324984165 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.33195114 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.308507849 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.312413879 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.342919737 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.330729749 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.325744247 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.308972571 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.318184612 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.338988388 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.327253942 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.338089265 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.325081618 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.319793712 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.351748689 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.338271642 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.330596265 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.326592883 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.325680035 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.335000796 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.32932391 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.335558281 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.327116158 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.320424918 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.319429138 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.325386059 seconds)
done (took 104.842290877 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.440503031 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.316085545 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.474633388 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.325349078 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.480282829 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.438111732 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.324784817 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.326667532 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.325069564 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.118116399 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.325594412 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.325053741 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.315164037 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.326244299 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.437026594 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.326811563 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.32619355 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.017764063 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.327114827 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.453826477 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.317439685 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.325794934 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.328161097 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.122436218 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.314347739 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.312700151 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.455298724 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.326740486 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.020329246 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.311859368 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.313124713 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.020366641 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.454574101 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.346222287 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.337693859 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.336499883 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.48423324 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.328845384 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.444108158 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.443484522 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.476888173 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.366378555 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.312077542 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.317503327 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.331326683 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.328277296 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.329056858 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.355370121 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.315911794 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.326891094 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.021967676 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.33847858 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.339465147 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.32892414 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.329025906 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.349549983 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.328665438 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.330393798 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.45602048 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.331556417 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.444311606 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.124167883 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.120830618 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.331076213 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.317529158 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.332154279 seconds)
  done (took 107.579318292 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.392497273 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.393715675 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.430340385 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.321050121 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.369396946 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.430484716 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.320702917 seconds)
  done (took 10.859601389 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.328173943 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.330178029 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.368705631 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.369848017 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.328565214 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.493381442 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.329585378 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.333759419 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.330609595 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.372284795 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.330172351 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.33111828 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.340124374 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.319806078 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.369003664 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.334705679 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.442587124 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.323539077 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.331940081 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.47764967 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.329989935 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.340240561 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.373926212 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.334059763 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.333287108 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.330684497 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.104686349 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.333006558 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.330955935 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.331407273 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.331570676 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.388517759 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.331275959 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.322122867 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.332359901 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.436344079 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.333214959 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.334435929 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.333007393 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.316646022 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.334527001 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.33061407 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.332940773 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.33264052 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.333447946 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.34940853 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.333098639 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.333219788 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.33248 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.333237344 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.373487581 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.332911897 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.33229284 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.333405015 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.37802766 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.342763862 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.33418047 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.334235601 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.333955544 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.333820811 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.480505911 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.372177631 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.333265261 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.371869435 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.333817727 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.335271346 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.334570241 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.332712204 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.417644316 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.335130662 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.37395803 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.333535546 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.505851237 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.350210312 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.335701098 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.327741258 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.328445905 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.334586709 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.323722344 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.331747205 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.334634699 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.326485085 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.332291067 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.334916917 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.335205463 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.485420586 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.434169946 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.334828682 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.343605303 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.333829043 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.335799869 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.379097697 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.330476576 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.330557976 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.371973677 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.441234679 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.374240652 seconds)
  done (took 137.119646461 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.33391498 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.334811337 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.322564278 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.347548565 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.321642935 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.319683811 seconds)
  done (took 9.184870163 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.32122194 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.330085388 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.325641325 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.325551497 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.32671139 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.326625099 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.326923265 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.319776734 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.329165363 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.326661709 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.327173333 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.328374743 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.327169654 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.326542819 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.326281665 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.326516624 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.327675808 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.325342532 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.327333913 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.326851508 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.313670477 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.328546783 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.327138006 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.319405502 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.328926806 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.327213739 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.342357854 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.327262791 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.326492179 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.325457762 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.32975896 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.327678247 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.319552694 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.321688337 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.33167128 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.318284668 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.329236372 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.329039373 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.328177805 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.328596744 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.327863929 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.329856339 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.327712823 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.328595917 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.321773123 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.32226787 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.332176624 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.344370934 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.3280955 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.330063965 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.330018268 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.327463281 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.328986033 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.330215533 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.322638739 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.322792939 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.33174457 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.329256001 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.329215795 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.320549721 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.331920579 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.330913171 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.322194776 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.333210196 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.328969255 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.331003499 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.323166207 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.332209474 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.330114965 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.330295468 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.330463292 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.329792037 seconds)
  done (took 97.782301152 seconds)
done (took 363.724715937 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.556727165 seconds)
  done (took 3.759427326 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.319094192 seconds)
  done (took 3.526494509 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.707867493 seconds)
  done (took 21.917311545 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.33788961 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.336776295 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.320851379 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.326630386 seconds)
  done (took 10.529853481 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.611505358 seconds)
  done (took 3.818756878 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.330453149 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.336471498 seconds)
  done (took 5.875074109 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.485571674 seconds)
  done (took 3.692997243 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.594211362 seconds)
  done (took 3.802720917 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.355574889 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.330887977 seconds)
  done (took 5.900226116 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.297755599 seconds)
  done (took 3.506095633 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.279177103 seconds)
  done (took 20.487916586 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.342091729 seconds)
  done (took 3.553130321 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.365608093 seconds)
  done (took 3.573122071 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.749894206 seconds)
  done (took 5.957895869 seconds)
done (took 101.104540744 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.320226658 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.326404857 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.321722119 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.320988257 seconds)
  done (took 10.496795712 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.398835875 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.398722865 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.408902196 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.395047482 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.39566124 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.403093714 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.362481951 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.361610175 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.391220494 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.386958736 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.403698302 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.394791978 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.403260957 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.363454545 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.388793622 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.406013278 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.392205225 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.410233288 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.363904847 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.394655629 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.337782539 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.394781129 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.388774688 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.337684513 seconds)
  done (took 34.492246484 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.82328076 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.397971865 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.484994769 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.378798609 seconds)
  done (took 7.295362576 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.441444734 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.443203232 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.460010754 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.494404151 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.539541313 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.455691474 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.36493523 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.360064046 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.345559053 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.442004702 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.519919481 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.443314466 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.656159314 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.33765809 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.655814251 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.337907173 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.338889441 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.441990989 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.490149082 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.520973584 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.339714942 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.441601834 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.446614812 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.44168036 seconds)
  done (took 35.969773097 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.346677475 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.355260661 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.339781851 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.353989963 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.340488295 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.340104917 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.342217021 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.346798762 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.339498383 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.340063971 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.340910674 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.354141592 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.33972365 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.341626396 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.350011758 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.342493716 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.34207187 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.34749943 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.349663546 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.339391125 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.340606984 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.347397835 seconds)
  done (took 30.792246524 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.325328551 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.324782723 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.676094606 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.578517546 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.32414189 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.330814734 seconds)
  done (took 13.771406663 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.399279896 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.533862602 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.333678481 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.667837966 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.750263836 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.332637208 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.331948304 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.566677488 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.853035289 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.840607388 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.391613463 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.398530081 seconds)
  done (took 19.613052664 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416863757 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.33496685 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.336713707 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424469423 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339733271 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.336502549 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.344613373 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.039728112 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.347863293 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611837078 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343620177 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422961214 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.585319458 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336369551 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.340748644 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.300939452 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.569705121 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805009787 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338324162 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342969113 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373003241 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342431018 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.339297858 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.535427636 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.344344399 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338083985 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.600549109 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.337089924 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610478165 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589756902 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.591793339 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346536378 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615120005 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975578886 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448899557 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529830536 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335067567 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.345496574 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.344053556 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.342925892 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345527831 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.344218912 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585789348 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347789077 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340870226 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354581934 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042875776 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.352734131 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.339931164 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.341528889 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5883681 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434830668 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.345560747 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339733153 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359031283 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343592403 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.346193665 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466258839 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977251584 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340053346 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346227987 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.342401431 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335524653 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342486601 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99617848 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.353241047 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.346796105 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.346163596 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34008554 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.354825875 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367605044 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342478946 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.361375448 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341129761 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092187151 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358029516 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347704724 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867090382 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359224979 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.340988625 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.568325899 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34206564 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342695619 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.342221437 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342344595 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064102512 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350059305 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.308013352 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406401307 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.0393701 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.539128607 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368920682 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369794347 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.563472431 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.309991429 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342668718 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.344738873 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347958103 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364951718 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.041779544 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345906104 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.348536535 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591226587 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.554186934 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341816626 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.321043981 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794725013 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348458037 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.369016781 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.354734972 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.539376342 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.948612475 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603880152 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350037771 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38244525 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.344773809 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125274716 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360962658 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.353503953 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356510638 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62269676 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.142511849 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344940722 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416689584 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345637301 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.344494689 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344578622 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365593204 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.344158197 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.514171467 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354995032 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598028697 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.350156172 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345740149 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.351623636 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363456199 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.351116596 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.566463994 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355656467 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624982893 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346842065 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346817756 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346359583 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.56522827 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.35887975 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.356593029 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.685788558 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345643131 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352331282 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599727657 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38393457 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457570723 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378655187 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.347785568 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.614877073 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.352984921 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.354907095 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360674954 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.353330089 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352120618 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.355015392 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345538874 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967267527 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327945851 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352640121 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.348331219 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.364135789 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423189361 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.355824873 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.540143825 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.366551102 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363202108 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.358576421 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.347098504 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575764162 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596130719 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.35559987 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.52499127 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.795445168 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.954045045 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367547962 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.348335499 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.349033016 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.348203605 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350023913 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348434743 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.350653754 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541882003 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609744473 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349992752 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.962064264 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357065203 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.355302708 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.361742184 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597553019 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.364618752 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350286724 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.354611316 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352299972 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36306126 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.603282816 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575748683 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.36680081 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.350438329 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.912438734 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.357942525 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35225127 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.349183815 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376082235 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.354351168 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222936278 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.696133305 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361139537 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603989296 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.357254849 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.372213201 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.349406807 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356710069 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370392137 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.371398724 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381199882 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.545048313 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.3586847 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358308201 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987705603 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11428756 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905024141 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357432073 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.37806018 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356357432 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.055735229 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3561039 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350644273 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593055038 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061536189 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357757548 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.802276687 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.369679167 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.094789506 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60757883 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582402569 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366020423 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.364212177 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60840758 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.569696528 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380529515 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352388921 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357667618 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.320112647 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873254136 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36266884 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537376072 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062538653 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364330176 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.359660086 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.422581346 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.35775132 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.731185068 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357685 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354043626 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360673432 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358838571 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187272244 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359959383 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354780411 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984017278 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.36253633 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.809239122 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35854649 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.548131943 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.611886534 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.584842558 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.360495799 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.382695165 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.602023524 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606532294 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360887256 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360935061 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905968696 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.212072295 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.363227945 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355849851 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142797658 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36850021 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63799298 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.361614221 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.372364344 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363853443 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357648954 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3575921 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.357178771 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.363225483 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330267226 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827247983 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.353230292 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366687877 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359050715 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362214986 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.605601566 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.371362092 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.961971818 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590986552 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369422817 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389908595 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.363925494 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370138175 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.330699315 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.357891868 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.35753423 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386441825 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.58277726 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.366697464 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.329324754 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364699119 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572868751 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356553088 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357183972 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567189555 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.362491335 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.369861734 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163730148 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391257565 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358914033 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363562945 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356710931 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396164371 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432047229 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551834495 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.616868565 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.616620528 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.73536469 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362030335 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366691256 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.374571034 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440667567 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358756151 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.378458318 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.363347521 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964573834 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134089673 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.976626258 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.619341026 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365401102 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369469257 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358405327 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599820449 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358865057 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63524015 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360128871 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.355038125 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380684558 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372105853 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368910399 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575751308 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635056203 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359276519 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372642874 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366539692 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.361144964 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617915546 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.573657002 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832316739 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885241434 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362876631 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361763634 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.07272704 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641088758 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360053974 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362553413 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362143233 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.384006227 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.37862355 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.374829541 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362115691 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591827421 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612665109 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000766692 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.616819964 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.398222861 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.28459298 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361085513 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.608913492 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.195114505 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.554997456 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980145483 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.074996418 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619360002 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436613352 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.559138405 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.367729331 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.601786083 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.368130642 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368185896 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363462738 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363900731 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.363307169 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.613394376 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978495808 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622361244 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.368977694 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.368943947 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393989732 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.557008674 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.589916117 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084683612 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586493859 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621098823 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37535347 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.36393644 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980275746 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62510057 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370393274 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.370043326 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573928916 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370667213 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401368915 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.239983423 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.363733102 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890829138 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.577487564 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386567194 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370533223 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.081294385 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986991292 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.3704032 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844076619 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366427914 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366475392 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646442698 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.373114223 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377663917 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6508553 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.372064875 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.376322895 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.567384844 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.976995765 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.113539023 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.371855829 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387502416 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.384051891 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366599611 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443965718 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371692942 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368072027 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.742588975 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.372144097 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366840187 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380658799 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.373900276 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382321804 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.37247344 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367569972 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.37588271 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.346703547 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.35765975 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379860693 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497804209 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887892577 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369616301 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.982704286 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.702883334 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.61556318 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376886947 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.340249716 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.374455568 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368650419 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367675912 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368452475 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359692409 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89794778 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.375795607 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.628214881 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37886716 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.580677123 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580901909 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370539182 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.570906144 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383695716 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394003822 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.336919858 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369139715 seconds)
  done (took 970.744349838 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.368309047 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.371802241 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.381900438 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.425483745 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.372555543 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.370547536 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.373466317 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.432557925 seconds)
  done (took 20.338482992 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.359688848 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.368747663 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.373264732 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.369011354 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.367172617 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.840976337 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.372583584 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.369359277 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.382073079 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.373760892 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.375451588 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.982391805 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.375467237 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.370111397 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.381376155 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.375786894 seconds)
  done (took 32.281236052 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.052961711 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.38034445 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.872395351 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.390782868 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.389505099 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.367708636 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.493306995 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.366689014 seconds)
  done (took 25.558511832 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.376246861 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.377188856 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.376147826 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.378015321 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.376531841 seconds)
  done (took 8.127706028 seconds)
done (took 1210.690478784 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.376399536 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.377111839 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.376624309 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.377011837 seconds)
  done (took 6.751897091 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.339122307 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.33950861 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.341374273 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.352926925 seconds)
  done (took 9.618136403 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.02714829 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.876111977 seconds)
  done (took 5.148363814 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.880323177 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.869635374 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.871118629 seconds)
  done (took 6.865152591 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.66806139 seconds)
  done (took 2.912953313 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.311048416 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.369186415 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.369734735 seconds)
  done (took 8.296790679 seconds)
done (took 40.837248559 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.364320806 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.125353358 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.520908454 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.362654779 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.527861725 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.519987229 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.615095761 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.376163224 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.363228779 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.363115254 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.363500443 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.528223282 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.602106243 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.125839339 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.603394023 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.12874955 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.526923717 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.369328027 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.374090913 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.368513983 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.61551871 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.364407745 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.389398577 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.365532099 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.52770964 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.509823372 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.377434154 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.130318717 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.372233784 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.365274528 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.528791263 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.365737522 seconds)
  done (took 82.28818346 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.364062474 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.368474727 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.37320767 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.36524076 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.394472763 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.371394134 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.368021613 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.365681504 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.365411768 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.365343056 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.366279156 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.39048235 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.366498124 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.366446234 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.380245642 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.364974801 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.382193541 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.365500209 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.366542187 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.383114781 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.367000826 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.364509474 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.372524421 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.366566383 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.377356226 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.380452529 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.365948954 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.382919228 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.366573684 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.366767651 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.395817547 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.366520399 seconds)
  done (took 77.155621289 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.368951626 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.367374381 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.388179992 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.368601711 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.368360506 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.376687965 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.369114726 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.382828157 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.367806551 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.370453659 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.366682055 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.36826693 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.367312378 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.382831446 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.371438964 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.382475694 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.36896266 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.372331148 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.387527925 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.368743614 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.37112848 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.368592662 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.36865737 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.368644126 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.372634544 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.369767105 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.380072732 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.369961667 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.367888851 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.369740437 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.392443456 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.372975296 seconds)
  done (took 77.18795194 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.61090479 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.384566349 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.387176927 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.37906143 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.388265443 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.384490329 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.379492146 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.6170621 seconds)
  done (took 14.781000972 seconds)
done (took 252.658474964 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.38706858 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.852303163 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.404842711 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.378549011 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.396827493 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.406417151 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.575665901 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.405632655 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.565848484 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.390908873 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.395933341 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.383736002 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.154788689 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.512163415 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.19175279 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.327953286 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.233599571 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.376633929 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.921362779 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.596900004 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.406785708 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.376568359 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.201668262 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.244537512 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.348422681 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.439910122 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.440301535 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.530524793 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.494993332 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.44027855 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.854427476 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.387478094 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.3827604 seconds)
  done (took 63.660953291 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.378539887 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.389108367 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.386158727 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.388740517 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.386934198 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.387726532 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.377212927 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.387788914 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.389561261 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.388048795 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.388075355 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.388175666 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.387737627 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.388185496 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.388402715 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.360350738 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.378640287 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.388059856 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.378145408 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.360827448 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.387917267 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.388738204 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.388623656 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.388189211 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.390767989 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.389226348 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.389928273 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.390164146 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.388607711 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.38824783 seconds)
  done (took 42.81147363 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.389333042 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.919668446 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.102686188 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.391305697 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.381338629 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.384277842 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.660429021 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.39068472 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.384886672 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.386000704 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.825757619 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.394751884 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.413394601 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.115026243 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.38418069 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.39117685 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.390870649 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.382816332 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.934443934 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.391832997 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.658641043 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.39226374 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.658782907 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.391517159 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.386001222 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.383090612 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.387681721 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.167170382 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.402765541 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.830052399 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.123382084 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.659448327 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.11834375 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.164471223 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.120832904 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.398543198 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.391623308 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.835264095 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.390869011 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.384227513 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.65905395 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.384066286 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.118432572 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.062001128 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.400116804 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.392220785 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.200102554 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.831462713 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.618791092 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.390136433 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.153222373 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.388042896 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.39484096 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.385568448 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.618307315 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.386797458 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.383585325 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.213855001 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.390235323 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.660002999 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.394581348 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.38543558 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.932358561 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.385564946 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.927521574 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.386861475 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.394155375 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.388032522 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.121520716 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.388169481 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.082169087 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.406621111 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.394361922 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.83517754 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.927944082 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.246976678 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.387731129 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.939341852 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.150006762 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.676910186 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.391410625 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.146931702 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.679032124 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.391247857 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.397094266 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.397226958 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.395191336 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.457186339 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.659474357 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.000889041 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.083674879 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.229332339 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.66386904 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.394051902 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.387761377 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.218620583 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.395726155 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.397013303 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.118662984 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.080235797 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.404513755 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.395713861 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.071035459 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.405842361 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.666186871 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.393368714 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.163454435 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.387898762 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.507867155 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.397090816 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.396282197 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.393210038 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.664624136 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.391719632 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.396163027 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.065040731 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.861660906 seconds)
  done (took 193.148522232 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.383503518 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.382359491 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.381584685 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.382349968 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.383173886 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.390704489 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.383851641 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.383335376 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.389465353 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.382727638 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.384489622 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.392224626 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.390057546 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.384301348 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.383068589 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.38316492 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.38229841 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.388554433 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.383554551 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.384575999 seconds)
  done (took 44.962812577 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.399769681 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.927875139 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.902854354 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.401584331 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.39884783 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.389984466 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.443636619 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.401441437 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.399130436 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.677528604 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.55804257 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.400955416 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.400023148 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.398665607 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.902847643 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.371134283 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.67689441 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.92798982 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.401177492 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.927344961 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.373452487 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.400222116 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.388730394 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.92772654 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.687732228 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.665743498 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.447086114 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.930287206 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.402207703 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.401989726 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.929561853 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.403103855 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.392471848 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.914146263 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.403239811 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.414599068 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.401864773 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.4483943 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.449364527 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.67866203 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.935571984 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.675689671 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.41190882 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.557688345 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.403380954 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.372119325 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.939990488 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.402666904 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.373495445 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.403893629 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.407438227 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.916096659 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.394188721 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.916057033 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.402685091 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.402202178 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.931008053 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.916280305 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.906521668 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.558540579 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.39414763 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.66957694 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.402355253 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.941253393 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.403792487 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.40317647 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.403191834 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.562818847 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.934373961 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.672524152 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.683117548 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.681483987 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.402469332 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.462608682 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.404738056 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.684021233 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.458889559 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.789270898 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.682836726 seconds)
  done (took 125.898630231 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.668325079 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.506378552 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.759403873 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.960719746 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.885706502 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.534212304 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.504442547 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.637293847 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.412204919 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.505825685 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.019070779 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.487354034 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.148494527 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.459676384 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.501529499 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.515769005 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.779376043 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.367361538 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.043149525 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.994940821 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.409590808 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.496289918 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.924623915 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.598630856 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.391625098 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.97089902 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.298267873 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.905897376 seconds)
  done (took 52.955766308 seconds)
done (took 524.689065811 seconds)
SAVING RESULT...
DONE!
