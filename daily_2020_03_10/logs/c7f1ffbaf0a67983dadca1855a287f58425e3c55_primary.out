cset: moving following pidspec: 20797
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.272339177 seconds)
loading group "string"... done (took 0.717361694 seconds)
loading group "linalg"... done (took 7.810186461 seconds)
loading group "parallel"... done (took 0.165121338 seconds)
loading group "find"... done (took 1.162298441 seconds)
loading group "tuple"... done (took 1.899868346 seconds)
loading group "dates"... done (took 1.294256016 seconds)
loading group "micro"... done (took 0.22422635 seconds)
loading group "io"... done (took 0.913763593 seconds)
loading group "scalar"... done (took 39.287435443 seconds)
loading group "sparse"... done (took 12.668666867 seconds)
loading group "broadcast"... done (took 0.955358957 seconds)
loading group "union"... done (took 13.037626621 seconds)
loading group "simd"... done (took 4.967965227 seconds)
loading group "random"... done (took 9.771344275 seconds)
loading group "problem"... done (took 1.730259868 seconds)
loading group "array"... done (took 23.058841106 seconds)
loading group "misc"... done (took 1.868947729 seconds)
loading group "sort"... done (took 3.746795914 seconds)
loading group "collection"... done (took 19.158237644 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.53904251 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129334508 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13618971 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12352217 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.150245624 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119183385 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.129146076 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.088852043 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.847006877 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.15110665 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11953188 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.423051986 seconds)
done (took 5.407081751 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.180042585 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088558382 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087915791 seconds)
  done (took 1.288390397 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.071923949 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128820327 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070992366 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.072000671 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073075709 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.071461485 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.071516039 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.070919465 seconds)
  done (took 1.668414638 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078248544 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.074012708 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071650063 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073204712 seconds)
  done (took 1.40907214 seconds)
done (took 5.738976342 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.779567887 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.215080418 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191208478 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.407800884 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133297758 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.176113163 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.648152285 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.326825143 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.19833008 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081935219 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11337037 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.350621278 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126671918 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.639361975 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081489044 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094910668 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141058924 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.434553323 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072015414 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086796456 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094025771 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13275887 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.093641579 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078657603 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.1503133 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072640221 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138806547 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084544406 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071152544 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.222965265 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176990475 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663064405 seconds)
  done (took 10.426657058 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.106080953 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.104849035 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072981276 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12974375 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103531 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073788238 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079831077 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071655227 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094248536 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.135509512 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096398551 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110960427 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.070682659 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.073492215 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088543898 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213426929 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084394174 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086329142 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074840604 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.082764897 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.113056722 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082268127 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085010322 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085259382 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133356676 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.185427266 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102082018 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.102489034 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070609158 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087580347 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118701058 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133187491 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.071172404 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070150617 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.133784029 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.099541945 seconds)
  done (took 4.786376517 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.999986612 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.147625234 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093736592 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136859522 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069241904 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112507932 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.07101446 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085741256 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.212690017 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.445026356 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.611724613 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115799735 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109996799 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072136855 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073198156 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.115971043 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.073430222 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.518970633 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.104394074 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111809671 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085620476 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075947753 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073236217 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36252421 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072272331 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068738669 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072611378 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061949353 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128091219 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074915775 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.069090564 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.07697401 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.172660539 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070320547 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.198501783 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105725925 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094343529 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145994048 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073661669 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069261796 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162039342 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073922286 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071142498 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088999659 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107664467 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124933501 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070331639 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072310373 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169502867 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069845443 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083185794 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.162219638 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.159671331 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.084890419 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071748091 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.275836063 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09330643 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076362871 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06978185 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.179980189 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133136426 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.072474093 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.071657253 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072967771 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.069274242 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07347467 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364499663 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070196762 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.849205595 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.076339771 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.083020477 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07380223 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076131934 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077183108 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077572583 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092354318 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070543879 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078917319 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070526708 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.070881682 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071297749 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087323395 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.373446431 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070985626 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071580825 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068891807 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.198302652 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100560725 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072176858 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.070081509 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106395816 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073114944 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.07076124 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.11432246 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071847083 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087964746 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.074937911 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116704163 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071155328 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.081404022 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069376601 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068752763 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100262089 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073699661 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102859545 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084825951 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072809586 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.418615951 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069262681 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.073414194 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.071805757 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06920179 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072219872 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071238643 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083631682 seconds)
  done (took 22.160495342 seconds)
done (took 39.485023426 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.256090154 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082946852 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083252949 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.082509294 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079233049 seconds)
  done (took 1.786895997 seconds)
done (took 2.973577564 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126020347 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102982064 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069036389 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10046114 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068954901 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107699535 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104291306 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081476463 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103180886 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068935566 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101626212 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069735545 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069384618 seconds)
  done (took 2.372830163 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088638047 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088387774 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074201218 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087812255 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068011774 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087615542 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086644605 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093107571 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088390271 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077061617 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068644559 seconds)
  done (took 2.091750131 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087973275 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088574783 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073603338 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086662365 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068235232 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086424433 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086709937 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09000546 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086757895 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077812625 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068214679 seconds)
  done (took 2.081793827 seconds)
done (took 7.717840395 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082658784 seconds)
  done (took 1.248057103 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.576896217 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.956664726 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085633094 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.114179772 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.1939368 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.12331059 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.271205111 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.091726278 seconds)
  done (took 8.762855291 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.107245355 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.073067931 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.077676314 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.076289969 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074475243 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073774329 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075964833 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072942715 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.076139226 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074094086 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073232932 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.073721476 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075376678 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.075364364 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074891902 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073318252 seconds)
  done (took 2.474394219 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096854722 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095540924 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.078040693 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079820029 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.077011906 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075748251 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078243609 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077511289 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07487969 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076414225 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.079346027 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077223276 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075622855 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06830319 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077864955 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080361142 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075025232 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078860204 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078749407 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079575299 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078871465 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06920371 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076141835 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078018163 seconds)
  done (took 3.155499269 seconds)
done (took 16.823348311 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.108601562 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072811153 seconds)
  done (took 1.351262792 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085874319 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087022736 seconds)
  done (took 1.35625271 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.087279932 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.070383093 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093592478 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081897519 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069999146 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069964388 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090935599 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070239664 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069800827 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070585196 seconds)
  done (took 1.957088665 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.073730962 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081093938 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074388513 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085197286 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077394628 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068166283 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076204322 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.0723573 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081088486 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067008858 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07727172 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.087252122 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075269232 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088064114 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.076682576 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.073077201 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.075486577 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.073538811 seconds)
  done (took 2.567607433 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.070730864 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070680433 seconds)
  done (took 1.331320809 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.072054845 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067444726 seconds)
    (3/7) benchmarking "month"...
    done (took 0.071029132 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070731834 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067877165 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.067178186 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067548842 seconds)
  done (took 1.671244924 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.382190395 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11964172 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.320542022 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.078163213 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.088707271 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263274009 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.071666302 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076463746 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.075601136 seconds)
  done (took 2.707177303 seconds)
done (took 14.133218314 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.085187059 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091391326 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101135583 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.387999898 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095585334 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.071071959 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.118135912 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190150505 seconds)
done (took 2.340447218 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215513235 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.678978822 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.436522675 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.20993308 seconds)
  done (took 2.520333138 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343857923 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.095671612 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066483044 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.07410433 seconds)
  done (took 1.782126363 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072775797 seconds)
    (2/2) benchmarking "read"...
    done (took 0.074356409 seconds)
  done (took 1.346072197 seconds)
done (took 7.063594955 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073539892 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.088768 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.071117656 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.0681363 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071200864 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.068122622 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.068043668 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070637219 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070693523 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.070751189 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.070919667 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071008275 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067679914 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06805151 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.070485193 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07034146 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.070317411 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067730709 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.176726259 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067729509 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067842947 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070047259 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067821903 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067879212 seconds)
  done (took 3.025820005 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.091361888 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070966134 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.077876169 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075947646 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.074183511 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075670449 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075693646 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.070564859 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075759186 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072692147 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073782581 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.074296336 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.073215147 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.074021712 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072591463 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.074022934 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075900801 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070282599 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07220217 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.074216983 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07637 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070644908 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.074162691 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075952797 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.074050716 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073794518 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072855153 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.070350413 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075504263 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.074144802 seconds)
  done (took 3.441837746 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.076914671 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067701036 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.067943874 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.075142375 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068002315 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068600078 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068115428 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06825172 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068287897 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.068184244 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069115092 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06743187 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067412315 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.0683478 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068582414 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.07103392 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084133485 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068375428 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.068482915 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068873517 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.071496697 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.069637754 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06957134 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.0681703 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068018274 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067375174 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.069282944 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06800569 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06832578 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067841035 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.071112726 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.071431297 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067571854 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074913553 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.071814543 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067743043 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071733011 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067466672 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068882236 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067420394 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067543232 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.068136492 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067664879 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.075473552 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068821909 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069693722 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068027755 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069420084 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06869146 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070595458 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.068055862 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06766896 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069835262 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068880006 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072012736 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067582239 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069371423 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067449642 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.069700879 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067588859 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067851057 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067795849 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.070463282 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068410788 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.083207488 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07518608 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067893527 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069754669 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06891173 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070335257 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069502156 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.082294378 seconds)
  done (took 6.24112105 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.096723887 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091801062 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07050932 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069827773 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066373 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06841792 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074959136 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068282482 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069839455 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085853668 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068365862 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069778068 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069874279 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07184101 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068332916 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069840645 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07654238 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066540044 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068641551 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071505686 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068572033 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074731979 seconds)
  done (took 2.827059146 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155525885 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074946963 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109093847 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079751076 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074597055 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078959516 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074277566 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073896933 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073942249 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0721638 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071989227 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074369918 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074173467 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071908538 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072178529 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071881527 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073998726 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072734173 seconds)
  done (took 2.662210529 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082616189 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.070607709 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.091908474 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070008797 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.070407671 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072692528 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074268768 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07853428 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.072886337 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070597679 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078179086 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072390523 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.072713985 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0703776 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073417381 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070361149 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.073021399 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070356192 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077778532 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074918926 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074487561 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077748677 seconds)
  done (took 2.852177705 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085896467 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0727225 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085772977 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073252186 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066188516 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068829473 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.074672941 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070193341 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074164202 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071808136 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070228809 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068516198 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073044369 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070188334 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072885334 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070281123 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072396747 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07023275 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072321575 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066080416 seconds)
  done (took 2.660680389 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091030076 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072255116 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07177299 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079128845 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071472554 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072071143 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078856225 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071819954 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071646752 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092078417 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071410298 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072346441 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078526403 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076051531 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073766145 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079070787 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078657235 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079128191 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071811871 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072099793 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092565751 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072233512 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078908259 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071935928 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072022251 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0723406 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071805498 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076473504 seconds)
  done (took 3.348726527 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072927239 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070961657 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.068101127 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.068774638 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.068569212 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.068171352 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067773487 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067989398 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070326803 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068507918 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069944575 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070088861 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070029408 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.072278609 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070030121 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.070246304 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069898927 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067896075 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067721795 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067995739 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.070374017 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07056196 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.070184858 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06787087 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067650575 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.070432774 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067656643 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068080156 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07094879 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067741862 seconds)
  done (took 3.299709793 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080629484 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077424489 seconds)
  done (took 1.374218579 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.069985131 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084618824 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067548819 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074886411 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073969719 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071122113 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077338727 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07439256 seconds)
  done (took 1.805452213 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.088533262 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081719227 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071221412 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083173169 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080762668 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087964435 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138508538 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070796065 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076821605 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068939747 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084101106 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070970443 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076570752 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071213509 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076011376 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077380381 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068129436 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075612527 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072327882 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068793144 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071361464 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079738459 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073039005 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065888469 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071954245 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092721032 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081318345 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069937382 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0733546 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077968575 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076470734 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06476452 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.071095312 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.071079128 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.069122136 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080117711 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085355935 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07429491 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079166123 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071290682 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080026314 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065864704 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075671909 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077678417 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081033553 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071206778 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071192768 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066045942 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.069831973 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073157735 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066010973 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071082865 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.066327225 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077709507 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074367114 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081683026 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069392407 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072485148 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.074487826 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.076218225 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077424778 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072626011 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073354795 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070293172 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08069291 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075606237 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079597722 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065816067 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064757542 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06873523 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080674803 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094149861 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076610953 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070978872 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071436719 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068845812 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074475401 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071987372 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07684319 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077049675 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070415831 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075828517 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0782077 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071415147 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073397946 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.078065321 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068318941 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072863603 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068844173 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086414046 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069679761 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068155491 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068526441 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.083756021 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073890963 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069229799 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068235006 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077606637 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064262977 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069490246 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07003792 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071021723 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.080360552 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073752447 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073824886 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078278201 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076754428 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069816391 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071934088 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065888311 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.194971144 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.071219892 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.079201519 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.066253196 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07551425 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.073457082 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072286329 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080172309 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069415369 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071531678 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078497183 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077532447 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069463789 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067550975 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073939609 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070809674 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073325595 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.0798358 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069808625 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.067162727 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06641729 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075474991 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.071098777 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074457835 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075713358 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074824423 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065129709 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068955377 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075560162 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079602605 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071216423 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072241121 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076909823 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072699888 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070015971 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078343134 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.074065156 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.070230516 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076298847 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.072097211 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065811364 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073839564 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073420516 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068945403 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074755059 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073033041 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072918125 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071947494 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069101432 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077017226 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072314046 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.070107844 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071158069 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069173497 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081657825 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072960355 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065959299 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067887441 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078639726 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068828056 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069829385 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.070148757 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072930322 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071444803 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068474914 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070400678 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072787221 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080093254 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074489924 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071196327 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076201903 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082427608 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.07028642 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073380032 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070305726 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0716759 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071294522 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079793003 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077680413 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075372368 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.0744436 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.067952437 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076924525 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078661394 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.070445838 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.069073096 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.070528897 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074687721 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076419318 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074378465 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070840654 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068450518 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071146108 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072777744 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07292207 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069642265 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070091898 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076017446 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06874919 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076015738 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070794012 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080877618 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072698097 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065242809 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071841622 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067557588 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076627463 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065097555 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068008356 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069155647 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069944276 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068901485 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.073146156 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.066244491 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.206661568 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079130924 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.072937728 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.071222434 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071991805 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07907672 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.073558619 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075519008 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.075201772 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.077712885 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082296538 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071651404 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074744916 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082557779 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070865385 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065224272 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.079094364 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.070920414 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.071655386 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.072321189 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.072568895 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07699579 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082009679 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.081870935 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.067546829 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.076353077 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.072025171 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.072200896 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.068732943 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.077895282 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.076722712 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072023561 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078402888 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071218216 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071486991 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075144484 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069974771 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.072285237 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.072668198 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073989584 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071256462 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072890472 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070308543 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.07402208 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070389829 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068845104 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072400775 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070808541 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.072407799 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075826421 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070231679 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071360916 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073435948 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070937369 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071804636 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071695594 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070688634 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07374636 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071618426 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071109852 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073651933 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065970243 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078088641 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070127251 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078857967 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071606634 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067588853 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076633567 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073515992 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07549959 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071244052 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.07132923 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.07246512 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070623108 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073451215 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078647448 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068915034 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081760714 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079142809 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071848813 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074080846 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.07129222 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072524772 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.070605004 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.07226849 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.07106858 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.07184742 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070699764 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.076361434 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073863369 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071400145 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072760797 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070721356 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070832059 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071191991 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065435001 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.07012527 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070496256 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070247844 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080399502 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070529079 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070411596 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069536774 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071002088 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069399435 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067000723 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077360405 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077145582 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069396566 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076774275 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069225503 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071670907 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080074913 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064464399 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067821713 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.198094494 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.07002677 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079164485 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.071423068 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.081727133 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.072046821 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.071270485 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.069154004 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071671527 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069221165 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.066029218 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.069732058 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074859115 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.070654855 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070864458 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.071976616 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07380732 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071557017 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080773016 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070543364 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.07310748 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070702384 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068260229 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070421182 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.07096832 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.0739897 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.072771904 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069427447 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068041594 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070764188 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072522698 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073268682 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.071507951 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073491106 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078259684 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070552388 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074095616 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073504079 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065783855 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07339784 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070391072 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070424281 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070357749 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07506343 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074983986 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072365677 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080277063 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070583282 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074158465 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070399325 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068887717 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070331344 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070171805 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070570585 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070227914 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071646336 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078261667 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068627671 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07385601 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07093336 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.07128968 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077192006 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.07102788 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074047957 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076259326 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.071178525 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.073181424 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078931814 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07507791 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073986111 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071169167 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072832714 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07693166 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070315523 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077137537 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071362137 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070922788 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072331822 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068842393 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070464761 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.071326805 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070322887 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077318731 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071103114 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070329076 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070302434 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068860537 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072256625 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073941435 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078719604 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073652463 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07456235 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066021611 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068608506 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071413352 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068538366 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072237775 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07299504 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075944316 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072752138 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071330074 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069516447 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080391621 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076180885 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074449119 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068155113 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.07426777 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070145904 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072575912 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071299023 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070230117 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06998216 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073331674 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071385488 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.0693285 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076026618 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073426282 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070004805 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.202625453 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.073677111 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.072659763 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.067111622 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.072422213 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074025829 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077766118 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073778347 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071830385 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082401758 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06922982 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.07198046 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073631778 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071024812 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.076081493 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066549077 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.073328586 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071699105 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071835832 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066012839 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071162171 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069766178 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074772006 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070773514 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065709152 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082384778 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081116487 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.075142633 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070053938 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070464467 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066034913 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066927955 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070290557 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071585135 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073082344 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.082041322 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070210888 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070156561 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066603262 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071277095 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074508346 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074002237 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068089 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066088877 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070224698 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074648943 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076461379 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070163762 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070623769 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073777182 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073028554 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068486314 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073523409 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067562749 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075114998 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083828129 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070718748 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07194198 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077515649 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07866415 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071202152 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065888551 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070943607 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073801172 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.072097726 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.072093166 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.07170895 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086075767 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074671047 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.07029144 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.070211677 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073801492 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071077901 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079564778 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071794413 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071116697 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.078396687 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07306676 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079323917 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074026247 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078510091 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074363504 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074518329 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.07017836 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071486801 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069000854 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.070785087 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.072679911 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071161934 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.076112627 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.078359368 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070475708 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081887786 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079714163 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072175476 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067305131 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069583775 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070730361 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066086966 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070817613 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068643565 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068770076 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068418538 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069259026 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.07173792 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075022664 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071551678 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070842803 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070120141 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06474157 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072076505 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072085286 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070862774 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066771259 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069078703 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069707114 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.205293321 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075189543 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.069484763 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073603793 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.073746938 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072702909 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.067081893 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078127934 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070466398 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073622288 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070459662 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071233184 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.072009842 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074804807 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076113149 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072724898 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.074240641 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075665893 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073527225 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068277892 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068359671 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076984228 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069117609 seconds)
  done (took 45.366458513 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107247626 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067885688 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066697713 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066601863 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076909113 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067690952 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065829473 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067218797 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067143414 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069014922 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065693635 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066187488 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074552107 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081269209 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077517051 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070624848 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06665607 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067397474 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066380097 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067424306 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074733014 seconds)
  done (took 2.798161189 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.079922264 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.084343013 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083120625 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086642078 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075652833 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074082911 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.080083838 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074123022 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081808936 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076522326 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081976152 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073876492 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076409147 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076769004 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07682229 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07423516 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082418477 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075222532 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074062879 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079912016 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074735543 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079700403 seconds)
  done (took 3.013138743 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.073675876 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069534631 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072323511 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065373057 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.070548576 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065456608 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072580032 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067789629 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072860961 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069659494 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069267451 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069554549 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07234696 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065514502 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071172943 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067879685 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.112478393 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07390514 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070407951 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071321155 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065668405 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072151678 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065838243 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066039949 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069417645 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073091868 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.07125724 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068314969 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069838521 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069349481 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070151523 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067845663 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071789523 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070400432 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069424482 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069381096 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.0694168 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069688086 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065809362 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068213487 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070578958 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.068035029 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070193132 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071445707 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.069434525 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068608168 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.07214925 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070554964 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06613651 seconds)
  done (took 4.743923355 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085965156 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113478296 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.0725421 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093163663 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083892278 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07621689 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073940797 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093491525 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067408247 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068539108 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084984159 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083170238 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069797189 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074100148 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07673668 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069413106 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070808742 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069032293 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073352623 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069594288 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073480147 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076764482 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.084192603 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082765854 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073353063 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068654544 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069049713 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073813485 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.082514842 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073968363 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074265193 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074722933 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08476373 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.075882782 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069078182 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071581914 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08561827 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.07003746 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071897025 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067649746 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071727082 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073711066 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076897823 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085737878 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070393541 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.075683246 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069953432 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067291447 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082272314 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071676552 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076902525 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.084695903 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073638154 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.07000156 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073979051 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.085125476 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069840519 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068681064 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072414972 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.082172323 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.068371714 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072989452 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083323497 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071974662 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076232726 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083384302 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075866446 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073491113 seconds)
  done (took 6.612240184 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083428176 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.099852611 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087845209 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08701458 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07931136 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079470952 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079449797 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079265189 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079297078 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083635373 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079940541 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118760786 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.074747253 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081758641 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087221786 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079436162 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.080466143 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079978118 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079281659 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079155025 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079574551 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086233966 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07991088 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086176984 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083170437 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.074975985 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079192242 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079201565 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086492341 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079591763 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082959944 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07931847 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079659058 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086583511 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083108877 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079280399 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069773801 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079436493 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079452068 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079986102 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07470115 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086947911 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079556022 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.074809965 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079981487 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079257724 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086487397 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083246782 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081397186 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083263818 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079289726 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087030937 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079434936 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080580649 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086504334 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089034108 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086328918 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086751593 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079406761 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086308787 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086378822 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089179613 seconds)
  done (took 6.4418128 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089415753 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079912466 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.088376573 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.068177214 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070370072 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076652645 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069996604 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.069532915 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077443283 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.080061574 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080034129 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075988142 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078808713 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079827161 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076088096 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078663965 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076346414 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076528765 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077693323 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076303203 seconds)
  done (took 2.867295718 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.082098039 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089930286 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.073589982 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.078282238 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073865009 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075970064 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072658727 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073569913 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071324331 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073385374 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079676577 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079833483 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071028173 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0762567 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07962527 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076338161 seconds)
  done (took 2.537264957 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.092340704 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077703069 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084030068 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070195936 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070932978 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066726453 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069845512 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06599488 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066857005 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082355953 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069662442 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.079967382 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070025925 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.069156022 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.067161739 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075302951 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066409081 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.068082511 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069777307 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082438878 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07434536 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068743915 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.07383837 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070001979 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.07331283 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07489275 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069437206 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.070837444 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067980784 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070441678 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.074150371 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073733255 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067582456 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068616804 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069274601 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067416857 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070159164 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070342501 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.075245526 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069860619 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.069055915 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072226971 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070148491 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071223111 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066944297 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070329838 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066622829 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072061581 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068332068 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072884167 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070204663 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072460411 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.07062327 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077334489 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072988656 seconds)
  done (took 5.259550833 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086316309 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076814154 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068215406 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.070750582 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076532345 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.074169009 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075578819 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074011337 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074464573 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070496983 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072321632 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07301821 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071777238 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073293202 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071631491 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073642305 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066149083 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071883103 seconds)
  done (took 2.647468578 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078335394 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070502583 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.077537772 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070659445 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070779292 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072424459 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066703348 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.069001587 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068439034 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070512442 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07014222 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072825226 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068961499 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07255446 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070536361 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070476644 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072621556 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068827797 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070052452 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066680289 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072674992 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068701683 seconds)
  done (took 2.875207904 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.099249898 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085973161 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.145251396 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.083641606 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089012745 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075639127 seconds)
  done (took 1.897833024 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097204599 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104406763 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071417849 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073445718 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080144831 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074155846 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074283486 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074078955 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081571492 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079752211 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074357517 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082024871 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082330026 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081253868 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079834295 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079501363 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073969381 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076336304 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070522474 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087101654 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074504055 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082020746 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074488489 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074001271 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074441607 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081361193 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081809647 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079913884 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074266119 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08222686 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079791599 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075383445 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082247987 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07970729 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074321275 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081903803 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074606488 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086893328 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079694447 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082082371 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073486882 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079748607 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082498114 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078892799 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08266645 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074724877 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079812476 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074801878 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074402536 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089105449 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079885466 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081221358 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080025325 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08284955 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082301019 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089446183 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079957757 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081516218 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079873243 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080382729 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081631706 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079592487 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081691383 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079950506 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0799549 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08132868 seconds)
  done (took 6.589227467 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110092761 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072003886 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074247341 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07972297 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081554035 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074338072 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074455437 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07448887 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076018646 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071640274 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112235765 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074781757 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081736062 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081315148 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074782496 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074275035 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07423776 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081594482 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071136224 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089408364 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074393586 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081509356 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08120156 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08112049 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080663835 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079744581 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074634402 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074763317 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07435897 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074588891 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078858538 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074797521 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081613812 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071330616 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081530073 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074746252 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07442756 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078864754 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074628866 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080078382 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081820376 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087729481 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07466326 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074467177 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080450477 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074317055 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074975865 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071687263 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074250054 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071846725 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080750197 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080178207 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08021241 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081515762 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074861926 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074688323 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074495088 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07520483 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074749991 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079897894 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081962395 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074945643 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089314984 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074476107 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074722835 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081772218 seconds)
  done (took 6.515696854 seconds)
done (took 134.904146907 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.199102368 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.174537875 seconds)
  done (took 1.686278745 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075717193 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102084061 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081215611 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133300449 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070976221 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104914556 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103218748 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082480612 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070969209 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070718966 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070867566 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073060288 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135230422 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072396699 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070494152 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073456621 seconds)
  done (took 2.717712728 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104014229 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163589426 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104838594 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069566178 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101629285 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076373399 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.07002223 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078693486 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074970284 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069605399 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076947728 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074809263 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069997846 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074591081 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.077489549 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076921379 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069783167 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07709537 seconds)
  done (took 2.84037463 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104270943 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.096816908 seconds)
  done (took 1.532526774 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159202201 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137039426 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.204034462 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34828761 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164172971 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.152100577 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.147101399 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146155731 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.123292998 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142028966 seconds)
  done (took 3.050630454 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105740323 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.157553716 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.274234104 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119576641 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076807292 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097588605 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121933302 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083895698 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085080677 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084203253 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084578006 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080528825 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103430853 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07721875 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078210971 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080865291 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106037496 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077156428 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078625903 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080615496 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.1039193 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071568524 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077353848 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076665538 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.082423304 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081267953 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070885433 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070004186 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080115993 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078843029 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081410409 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096331305 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081441349 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110006448 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074748854 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110536883 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080849534 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077710818 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079177296 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077441875 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082294748 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082964724 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077032313 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080265357 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070037112 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081191039 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070392303 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.07074254 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082004522 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07154359 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082511235 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081327142 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109421727 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071212427 seconds)
  done (took 6.186848221 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.115799273 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110802113 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075227454 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116814288 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107869588 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073692693 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109571014 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101407741 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.11256454 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074548277 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072154086 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074379173 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084383542 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085195802 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119547603 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111894439 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077173208 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074074058 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111359265 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.112076162 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072894155 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104748573 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100896746 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111240131 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071697526 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074215462 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072322614 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074062162 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.08054114 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082483727 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073060104 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083353619 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.0876261 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081642683 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071553001 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072546907 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072830668 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083396691 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083312438 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082557554 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080873001 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071853274 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073047131 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073218593 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073454448 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071706866 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081665596 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082839525 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081909307 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072711679 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073914627 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.072543345 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073920067 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082671827 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080448483 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.084325152 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.086521723 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072187352 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073145973 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075848036 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083400459 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083355003 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082385936 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073452982 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083062728 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072677025 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083972132 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086897017 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072652854 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073828584 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072920007 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072777319 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.075872289 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081127781 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081308844 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074675032 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072588079 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072687088 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083682789 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081955968 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072263336 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080384204 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071815845 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071921425 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073327425 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073638084 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080509734 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082696191 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074162637 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072046377 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071765195 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071417701 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070212091 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078957068 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081509967 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080662952 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080446957 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072211475 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080470949 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.210500287 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075045339 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.083133148 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07426369 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075407832 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075037699 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082717532 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081709972 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083716153 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073513934 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072704447 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.082145988 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084886959 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072578491 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.08186852 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083704954 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.082509378 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071952342 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084914699 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074292454 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083456608 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073303991 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084094801 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072492891 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083555326 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072343537 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071829045 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072263505 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.082563338 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073953738 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072548546 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074507465 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072624753 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.082257513 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085732889 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074366631 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081435888 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.081779446 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073982392 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082889009 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072623964 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083476103 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072424464 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073819383 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071348969 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085093184 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072753412 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072146393 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072595172 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083689895 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072813502 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082971938 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081265188 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072011653 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085012902 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083163143 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.08061022 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083594554 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074059214 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072194808 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072373665 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072311865 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.0812827 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082709767 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074018713 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072277931 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081041547 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083007118 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071462666 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081721474 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081703664 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081911089 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073303423 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072467995 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083473454 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083488233 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081894119 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.0814757 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082038685 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07272324 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081477422 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081573577 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072740389 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087050898 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077315174 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08604767 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081768744 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079303428 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081417503 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.083172427 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.083456483 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083598948 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084832383 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071380578 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072050239 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.08044569 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071468853 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071766574 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079884083 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072476351 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072363962 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083826538 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.205184235 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.084342247 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.073181204 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.083819737 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072362802 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075283018 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08691477 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073241358 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074982085 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082880511 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073003101 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082101231 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084157178 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.082727357 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072822729 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074022138 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082636117 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.08377558 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074552586 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072755712 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074649325 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.082768576 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.082389256 seconds)
  done (took 19.509138722 seconds)
done (took 38.869123932 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.214596048 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157462573 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.174731835 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118797256 seconds)
  done (took 2.098748033 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122539421 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.107376357 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.100329976 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.071815753 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.106056235 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.071796279 seconds)
  done (took 1.949914395 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.307018604 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208721218 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182993329 seconds)
  done (took 2.067545837 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.211613467 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.196151865 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.440653777 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.270791609 seconds)
  done (took 2.598656602 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.150825095 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.094474338 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.074647407 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.090869859 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138239283 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.166281366 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.105238629 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.132218593 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.086156556 seconds)
  done (took 2.462571504 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.154678099 seconds)
done (took 12.700397379 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.120442041 seconds)
    (2/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.182268296 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.159232689 seconds)
    (4/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.118751713 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.107339905 seconds)
    (6/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.188892912 seconds)
    (7/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.204625524 seconds)
    (8/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.217700927 seconds)
    (9/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.19310325 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.110899427 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.114115639 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.077058542 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.084762292 seconds)
    (14/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.23117899 seconds)
    (15/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.227683942 seconds)
    (16/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.090144199 seconds)
    (17/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07943255 seconds)
    (18/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.21645309 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.081381238 seconds)
    (20/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.230088987 seconds)
    (21/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.214607133 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.107309838 seconds)
    (23/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.133333782 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.073105784 seconds)
    (25/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.170900293 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.10551834 seconds)
    (27/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079985578 seconds)
    (28/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.084240576 seconds)
    (29/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.080409197 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.108995835 seconds)
    (31/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.075445476 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.212232037 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.084456065 seconds)
    (34/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.085938635 seconds)
    (35/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097158908 seconds)
    (36/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.289152788 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076208472 seconds)
    (38/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.225988198 seconds)
    (39/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.079801687 seconds)
    (40/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.211280344 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.096802692 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.079556933 seconds)
    (43/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.128715303 seconds)
    (44/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.183225756 seconds)
    (45/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.100037991 seconds)
    (46/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.106404807 seconds)
    (47/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.080688321 seconds)
    (48/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073398571 seconds)
    (49/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.116860375 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.096366311 seconds)
    (51/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.149789824 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.079109286 seconds)
    (53/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.168563938 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.191804878 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.079710217 seconds)
    (56/309) benchmarking ("sort", BigInt, false)...
    done (took 0.199026929 seconds)
    (57/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.08611677 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072330336 seconds)
    (59/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.208836685 seconds)
    (60/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.160202161 seconds)
    (61/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.082238063 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073963654 seconds)
    (63/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.076970187 seconds)
    (64/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.121781898 seconds)
    (65/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.058645892 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.099794613 seconds)
    (67/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.069273737 seconds)
    (68/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.078595927 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.180966389 seconds)
    (70/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.080459886 seconds)
    (71/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.163574084 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.146540469 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.096089115 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071973488 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.057771074 seconds)
    (76/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.057747362 seconds)
    (77/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.159789816 seconds)
    (78/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.079089695 seconds)
    (79/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.058047662 seconds)
    (80/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.162129925 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069563884 seconds)
    (82/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.248441001 seconds)
    (83/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.160904927 seconds)
    (84/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.189014043 seconds)
    (85/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.163274291 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.07253171 seconds)
    (87/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.108793829 seconds)
    (88/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.112097102 seconds)
    (89/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.055743841 seconds)
    (90/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.202214855 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094494993 seconds)
    (92/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.084658864 seconds)
    (93/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.080135223 seconds)
    (94/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.104865135 seconds)
    (95/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.07836229 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.187305397 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.093553996 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.179159178 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.119961204 seconds)
    (100/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.083406259 seconds)
    (101/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.081371772 seconds)
    (102/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.073650889 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.098568195 seconds)
    (104/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.113160232 seconds)
    (105/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.070476339 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.094638679 seconds)
    (107/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.082826723 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.096025824 seconds)
    (109/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.097250362 seconds)
    (110/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.184023795 seconds)
    (111/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.164186859 seconds)
    (112/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.187393012 seconds)
    (113/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.082144332 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07932285 seconds)
    (115/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073038546 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.072157065 seconds)
    (117/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.148696433 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.149370262 seconds)
    (119/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.084697325 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14781977 seconds)
    (121/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069740701 seconds)
    (122/309) benchmarking ("sort", Float64, false)...
    done (took 0.131735583 seconds)
    (123/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07534195 seconds)
    (124/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.075149709 seconds)
    (125/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.056372879 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.157858188 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078847971 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.089029607 seconds)
    (129/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06591639 seconds)
    (130/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173988237 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.076145074 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.088875061 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.080712602 seconds)
    (134/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.077244051 seconds)
    (135/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.080549761 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.096226035 seconds)
    (137/309) benchmarking ("sort", Int8, false)...
    done (took 0.149695338 seconds)
    (138/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.056121 seconds)
    (139/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.162619512 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076438511 seconds)
    (141/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.075116813 seconds)
    (142/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.08082355 seconds)
    (143/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.081096157 seconds)
    (144/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.069447058 seconds)
    (145/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.056321738 seconds)
    (146/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.068916898 seconds)
    (147/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077826907 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.080519226 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070292544 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077911659 seconds)
    (151/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.079313002 seconds)
    (152/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.074822309 seconds)
    (153/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.196923825 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118469091 seconds)
    (155/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.086458144 seconds)
    (156/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.100482642 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.073015353 seconds)
    (158/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.060610944 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.081492183 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.10201252 seconds)
    (161/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.059595009 seconds)
    (162/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.084950667 seconds)
    (163/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.085659558 seconds)
    (164/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.194427805 seconds)
    (165/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.069968827 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.055740206 seconds)
    (167/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070424821 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.070081062 seconds)
    (169/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.166512019 seconds)
    (170/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05691631 seconds)
    (171/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.074822112 seconds)
    (172/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.05773092 seconds)
    (173/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079871883 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129644269 seconds)
    (175/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.058266451 seconds)
    (176/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.081496655 seconds)
    (177/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.082545717 seconds)
    (178/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.155847198 seconds)
    (179/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074121666 seconds)
    (180/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.193355656 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070582097 seconds)
    (182/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054770864 seconds)
    (183/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.218520404 seconds)
    (184/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.159969218 seconds)
    (185/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.069524777 seconds)
    (186/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.079540369 seconds)
    (187/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.058502672 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.1311806 seconds)
    (189/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.126930588 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077582383 seconds)
    (191/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082814272 seconds)
    (192/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.057474025 seconds)
    (193/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.079209158 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078833609 seconds)
    (195/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075537904 seconds)
    (196/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.072673406 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075771586 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.096508664 seconds)
    (199/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.056638148 seconds)
    (200/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.057011548 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125399352 seconds)
    (202/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.057482087 seconds)
    (203/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.116059037 seconds)
    (204/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.077345193 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068949257 seconds)
    (206/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.057640658 seconds)
    (207/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.058118801 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.150922278 seconds)
    (209/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.059717633 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05939261 seconds)
    (211/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.058503911 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.071935536 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080686456 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.080141918 seconds)
    (215/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.058696229 seconds)
    (216/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.10808055 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.099923287 seconds)
    (218/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072281532 seconds)
    (219/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094586646 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.124621615 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091262311 seconds)
    (222/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095063153 seconds)
    (223/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083498357 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075392305 seconds)
    (225/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078303738 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.069056303 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.112113097 seconds)
    (228/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084621997 seconds)
    (229/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05628571 seconds)
    (230/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.056027941 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141290611 seconds)
    (232/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.113539991 seconds)
    (233/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.072080656 seconds)
    (234/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.058745996 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095687284 seconds)
    (236/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.055878622 seconds)
    (237/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.067991787 seconds)
    (238/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070924811 seconds)
    (239/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071713982 seconds)
    (240/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.055560088 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138574316 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.069762383 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.122885524 seconds)
    (244/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.056854733 seconds)
    (245/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.056357636 seconds)
    (246/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.104029187 seconds)
    (247/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.056388655 seconds)
    (248/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.089328849 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.071542683 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.070085509 seconds)
    (251/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077106328 seconds)
    (252/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.159403123 seconds)
    (253/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.055523003 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13976914 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.07056647 seconds)
    (256/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.07160091 seconds)
    (257/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.057510841 seconds)
    (258/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077777558 seconds)
    (259/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.055454627 seconds)
    (260/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07198447 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097673035 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076338148 seconds)
    (263/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071909322 seconds)
    (264/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.057703905 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092264655 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069580951 seconds)
    (267/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.05723295 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077928951 seconds)
    (269/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.055389782 seconds)
    (270/309) benchmarking ("sort", Float32, false)...
    done (took 0.133536285 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116557153 seconds)
    (272/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077827889 seconds)
    (273/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073598789 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096824771 seconds)
    (275/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.073310963 seconds)
    (276/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07251987 seconds)
    (277/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.076315012 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.072390183 seconds)
    (279/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05816193 seconds)
    (280/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.070308288 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.078898545 seconds)
    (282/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.061176817 seconds)
    (283/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073612158 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.070064592 seconds)
    (285/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.056755316 seconds)
    (286/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.057189224 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.070007832 seconds)
    (288/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077470115 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092928342 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.078142451 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.070055874 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.056465493 seconds)
    (293/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.067963431 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093159376 seconds)
    (295/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076787617 seconds)
    (296/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.055313606 seconds)
    (297/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.0559833 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077245688 seconds)
    (299/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.072316548 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.116896581 seconds)
    (301/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.078950731 seconds)
    (302/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.059369229 seconds)
    (303/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07738338 seconds)
    (304/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071488702 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077028248 seconds)
    (306/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071615637 seconds)
    (307/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05726936 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.235427841 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.061490361 seconds)
  done (took 32.695535625 seconds)
done (took 34.078655567 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089893772 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101579145 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.083348767 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.101458762 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.088529175 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.08404954 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.079732977 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.084739352 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085668148 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.086227742 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083353433 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.059450928 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079124909 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078630803 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079045133 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095471943 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082656942 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.0781115 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077661641 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068871031 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077425103 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.07063277 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071404483 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.059304824 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.082440408 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077160292 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078722883 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078762322 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069869119 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.070230451 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073947562 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07858542 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069869688 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083735148 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077327517 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077729268 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079565788 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081056473 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071649864 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.070071183 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079676013 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069582738 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077241027 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078429803 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076063968 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07550894 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077815615 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.08179171 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095137949 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071987148 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.080101026 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080173802 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081304504 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.077064514 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073942201 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077366059 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074633879 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095575517 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077784059 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072043743 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078556588 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078178618 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074946553 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077708941 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078190587 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.080378349 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080935915 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075338624 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079311146 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076132321 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070223068 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077389636 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073394319 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069318479 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080143995 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082380746 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068662728 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075818523 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077218003 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07867567 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068981121 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07135274 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.071114357 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076545245 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071621972 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.060944772 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073901967 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076710705 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068677966 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078017765 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.0772039 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.078173117 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.073624118 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.083855891 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.072137261 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076351401 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.070214068 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069958753 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071411925 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074144652 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06925564 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07145254 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.080120721 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071641239 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075714168 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082810427 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069929517 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076044258 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068336538 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069084008 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083175803 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079173548 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069816778 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072091712 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068158081 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076775412 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069737959 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.071705811 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.071353797 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.071384885 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.077370965 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070830276 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071198716 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075485117 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.21997455 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.070581622 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.074852169 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073413788 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070001592 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075816455 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.070647913 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070048424 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071224806 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066359989 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072093512 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070468285 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077341819 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072275501 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077971946 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071986164 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078343071 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075551389 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076500741 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074569159 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06916673 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.064023184 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071932751 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072212634 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071500206 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069945674 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071875926 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.0698819 seconds)
done (took 13.126874719 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.073698599 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144221496 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.104450515 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.10276101 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.091471644 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.073032281 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.082699481 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105346477 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.074350745 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.105339893 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090595805 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088351168 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115900175 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06890533 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070401553 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.074035806 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071457375 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08526008 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101776359 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089389151 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117354319 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069996318 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095404452 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092576414 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091637572 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.097081409 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.07132104 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073749617 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073619045 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.105967599 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092007207 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074392569 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.071169477 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103841337 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.097660585 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086892885 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070671072 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087850908 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.072506798 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070635559 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.073005169 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.102622049 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.083811714 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084209948 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075433668 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.079728451 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.07131964 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086750332 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09337265 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082534682 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089263779 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103880575 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07342855 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.087123151 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068838135 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.089520784 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081057599 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.07238161 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.071235937 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078056683 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070234892 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.074167394 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084161174 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084625133 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074529395 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.088753333 seconds)
  done (took 7.084927151 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.090984729 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096966383 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088531476 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088085271 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069996577 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070817558 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070808358 seconds)
  done (took 2.053136328 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.073663508 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.095263204 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.095765507 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094482977 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.087825973 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.095032157 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084549971 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071979568 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.094318862 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.072043557 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092157004 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.107728548 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.076299536 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079131423 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.097243249 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072683874 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09633747 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.073424982 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074547829 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093904674 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072886002 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100066133 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074644143 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070983356 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084557065 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070824644 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116831327 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074712336 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072794067 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073844775 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068847197 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.110882297 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.086364519 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080115877 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071318927 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08657278 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08676104 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070859061 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.089756573 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.081112911 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.087366913 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.074192741 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.074008773 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069928686 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076285079 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081242009 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072691659 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071537996 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07362047 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090558441 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.072167428 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.086926202 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.076311019 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.079790456 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075918652 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080434616 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083723901 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.074565243 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.09304198 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.075522668 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090690385 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090579543 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.087662263 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090493333 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074605039 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.086740179 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.087535497 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.075954286 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07563635 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075377783 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088120317 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069738466 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072790897 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082009313 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072943844 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.095528453 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.096308801 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075060366 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.086236835 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072660022 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.07111496 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070924772 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093608718 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076212641 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070586078 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07510672 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074280895 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069353162 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070102134 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.076492857 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069958341 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073397934 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.075082971 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.074147714 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073678952 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087019505 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.074284238 seconds)
  done (took 9.32322484 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.076406652 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.074128138 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.074903492 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072013762 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072436047 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071947957 seconds)
  done (took 1.939387385 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.10069744 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.075323573 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085322268 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076166579 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106925592 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090167306 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091831556 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082110576 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086625095 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082379986 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090056396 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092141313 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095345795 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076314215 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091540872 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075680946 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.090792247 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078647233 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081658209 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076473402 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090043093 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075947715 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076181593 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085671605 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079271338 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075746283 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082114956 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082280678 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082300058 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082433661 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.075955887 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079024659 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07457022 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083067484 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091331214 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074518238 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075615018 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.080419911 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07563183 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079127341 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091393799 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078454351 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078370138 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080587054 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.082581849 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075523388 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.080567988 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082590368 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090717486 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081333388 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.082530857 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075138904 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079128005 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.08069457 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074590891 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082137838 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081113421 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.092054768 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075884453 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074888662 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072304408 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080138519 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08187934 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.079619764 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.082424455 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.080340904 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075070195 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076462678 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076829007 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075417269 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081473723 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072628512 seconds)
  done (took 7.351226075 seconds)
done (took 29.211188208 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.544382898 seconds)
  done (took 1.998940064 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.628002748 seconds)
  done (took 2.108342705 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.519398467 seconds)
  done (took 8.000466012 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.416013046 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.506604241 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.7405893 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139866739 seconds)
  done (took 3.329024863 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.724648343 seconds)
  done (took 2.218927184 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24499588 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22959873 seconds)
  done (took 1.977700316 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.392621902 seconds)
  done (took 1.873269548 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.127358213 seconds)
  done (took 2.609967322 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261073348 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180709546 seconds)
  done (took 1.935132895 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.478397027 seconds)
  done (took 1.96484343 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.864287038 seconds)
  done (took 6.351072368 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.227824378 seconds)
  done (took 1.759331334 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.245896313 seconds)
  done (took 1.732881549 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.76563184 seconds)
  done (took 3.254657401 seconds)
done (took 42.60666496 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.090061172 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090077129 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089345272 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086817233 seconds)
  done (took 1.827599194 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083682509 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077728837 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.080698057 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076791759 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080813185 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076925137 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078813098 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079870503 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076944162 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077129398 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076461333 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076629361 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079065817 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078207817 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075286279 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07974685 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080593306 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076871341 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.08067866 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076587609 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075002919 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079219477 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078961331 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.0757204 seconds)
  done (took 3.370526349 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.085422682 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078954838 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.079242484 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076196669 seconds)
  done (took 1.818078827 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.084682233 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.098574992 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094139996 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.083263792 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09683813 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090543001 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073777017 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073359443 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075223916 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.081735036 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072517137 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100381754 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093033469 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082280872 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.083997881 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070032389 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072835833 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092172492 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082739926 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.083070421 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075273133 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082642945 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072604686 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092744502 seconds)
  done (took 3.502260095 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.094709803 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.107723244 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085531303 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093730257 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097019814 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070057916 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.092235301 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096263358 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12824279 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.070072808 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075688868 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069999853 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.078456827 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.070312848 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085844596 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.111119196 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113684344 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072994692 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102616275 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.07020017 seconds)
  done (took 3.289332601 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078911405 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074517265 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.074259707 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07087954 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.080173832 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076459786 seconds)
  done (took 1.959790619 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.074788757 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.075892536 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071567196 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070958952 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076488583 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071346196 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070483414 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.07161412 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072157623 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071417803 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071517088 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070352634 seconds)
  done (took 2.365481372 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.210697277 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072146825 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07357196 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070046292 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074976472 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.071435245 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085874232 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072602258 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097103916 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071692116 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071205516 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072650861 seconds)
  done (took 2.54308536 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219964055 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082146681 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241448155 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157142644 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116597378 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121551193 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117100937 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117422938 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.150119854 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105956067 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170722659 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17136153 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11343083 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141229289 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094398969 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.104464561 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162254849 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169216728 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110479354 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169398688 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151560142 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129968753 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149840859 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106526166 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111206404 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126392852 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075822825 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084776113 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17359591 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138059906 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150500509 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116420373 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100820175 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180674633 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171648415 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146287239 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152955255 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088892408 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10917989 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135360157 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200682206 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093387164 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166997639 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257447109 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086459322 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138083483 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123051136 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.124965467 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.109846105 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095764568 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151947087 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188286004 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.143000704 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091720186 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128598191 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120206323 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.119947283 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119773663 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183187622 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163306892 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131710692 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075700792 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116372904 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154686328 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134129844 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.112742383 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.130153578 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096450305 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140898489 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157405059 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129150981 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149323126 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.121189269 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093096424 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122803781 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14542593 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135301417 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163639552 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128334033 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076866981 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131246596 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107073505 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084431248 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146719412 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080440766 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177899916 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103843347 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110063227 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126898053 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111927697 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113507137 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16521229 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.295202634 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110593986 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070722169 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110762183 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123864873 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155021709 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09263662 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111824094 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121677363 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082483369 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144381583 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079778054 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128230063 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080100446 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129072239 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133964479 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082665869 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126690404 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109359852 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.104053056 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138059475 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161485652 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092197751 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086746564 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167991857 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125387096 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107425693 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147205482 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158405488 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103413317 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105940729 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151928249 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175833501 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094788899 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165305471 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111007893 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088135772 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091903942 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127450952 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116348459 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12904987 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08542206 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122717046 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171636578 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079166405 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100543444 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13704553 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082636666 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084371473 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109782165 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11027029 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100840323 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.104622932 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.107415898 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141728137 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125676457 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.255704777 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131235476 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103235694 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171093194 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092863141 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106239156 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109099715 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.074112731 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139977191 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160623416 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083395482 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166027293 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.126859536 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120123336 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121846521 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087329367 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144210115 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083040159 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07631255 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146141173 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114391934 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114045313 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152442995 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120009783 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.129947837 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.122467571 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139012064 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135621953 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131298564 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110628035 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092175134 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1152645 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133311203 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077268831 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095293 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084415222 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109164601 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101228913 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087535375 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147758843 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129392279 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11598613 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114979924 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101258413 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148655871 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080533598 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132558437 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.122909039 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099696 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153811006 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153212086 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134507337 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102313701 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138355307 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.220695885 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079433604 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.096024368 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127958749 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088109967 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087846166 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12256004 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149749839 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136065448 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14452452 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126409247 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124905089 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157884402 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075563132 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.124058576 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150645213 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127563368 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.114076927 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098457717 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.105918184 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147085269 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114789385 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186345523 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116968162 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127449646 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156846661 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.104555846 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084098774 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107101832 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13971651 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10886729 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145722721 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102795741 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0923258 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112523459 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078982937 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103401039 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132153058 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125193795 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138488501 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.117588681 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13777405 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081129829 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120512387 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127149099 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128009314 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068141026 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123481019 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161893561 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098010109 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120965747 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15420638 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083081301 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.284886736 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17816566 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149310712 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089193813 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115404142 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122968187 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129819432 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123821138 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1428822 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112552542 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13849822 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113782286 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08819352 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091016639 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102718877 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108620521 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099916837 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110371627 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.117505987 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.100835262 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136959246 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108246593 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11377474 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120555234 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101712115 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095949031 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100503122 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175165768 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122177743 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17306075 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102501384 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145651989 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16569924 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078702564 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083790177 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082275322 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143715897 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089198128 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134090697 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.11736102 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121220291 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127084638 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147636582 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100393323 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072354796 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111655979 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139266711 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127213111 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101678419 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108183189 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165528265 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104314887 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0834823 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117266716 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117079782 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.254048045 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17567499 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.066536961 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110315203 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080829238 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085767925 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130613816 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156158307 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08464848 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10506003 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122768133 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11724705 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130160046 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106300242 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115501943 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129884567 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152398529 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133402355 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.094155061 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116431168 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131305456 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159122374 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106361664 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101819694 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175648979 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153668353 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162307137 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.093341729 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116870761 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116396972 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113817398 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141757196 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087425806 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165395393 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086797845 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138556836 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110920673 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095071597 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14010105 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.119389299 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095738955 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153554015 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121523297 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086324349 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081359896 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120643863 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122069485 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108907311 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079388266 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142327469 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07722391 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284411992 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165636234 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084884568 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109280382 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100189023 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084056136 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112601269 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107607584 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092083509 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103217132 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174913384 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091525522 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153138384 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13714816 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117119418 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13824247 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107224582 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.647838993 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081704314 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153394083 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124242177 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175074642 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103737387 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120243152 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112756541 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128670731 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148116751 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107954 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180045489 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134393268 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.120102225 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084012158 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105824089 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108276073 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.093182164 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111726111 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116785826 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120899931 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.097155821 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.120500762 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128773817 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08657504 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102421988 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158159151 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121281864 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148803358 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142456898 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08920266 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121268088 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140553009 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083922687 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.124115851 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.301340413 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110859162 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103060327 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085407552 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.105427204 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16145456 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078253017 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168319403 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124228896 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113666606 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116725614 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116576836 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135935665 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111867735 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124907302 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097448403 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111415039 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116359293 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084931817 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081543805 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108296398 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11471295 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.10012817 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10052533 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.102555987 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151892064 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076295702 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10302936 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119159209 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151169557 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175490597 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091480028 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086978445 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125168352 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120121094 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.116921076 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124956967 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083203395 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085047407 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084373458 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.083984721 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.1114653 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116154248 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11812119 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114319105 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166216982 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.086804759 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.228004236 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099815039 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107961369 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073876957 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.082170706 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099375648 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1015733 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109240396 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115020588 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306470905 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.0994313 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.095507856 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096386138 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078845586 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087557157 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130760311 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114779635 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122560431 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10726996 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066762214 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114733021 seconds)
  done (took 61.038298647 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111110828 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08922569 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100972755 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14824894 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126596815 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204665667 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160384015 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193228031 seconds)
  done (took 2.738972244 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.075725202 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099233073 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106805682 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.086048894 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071605241 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072562468 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.231845743 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084234517 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070500293 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09872275 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082289721 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072519675 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.438453947 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070391099 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071268102 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066726875 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071389021 seconds)
  done (took 3.465204965 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.403087567 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.620418548 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.349095224 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079927602 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.933379225 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093389003 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.134604041 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137205141 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082208095 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.526203083 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.411180546 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132450899 seconds)
  done (took 18.510737505 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.089060459 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079380917 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.092856642 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.094252407 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081463944 seconds)
  done (took 2.037823761 seconds)
done (took 109.988871116 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.089038344 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.62635582 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.058385704 seconds)
  done (took 2.316489381 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.0949703 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090874947 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089496551 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088032175 seconds)
  done (took 1.973626819 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.080862429 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080032116 seconds)
  done (took 1.764298412 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.237060247 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.170206233 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.099746783 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087989282 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082405411 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083120895 seconds)
  done (took 1.863618343 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.079440656 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080690248 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076805742 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079686903 seconds)
  done (took 1.921779173 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.084674317 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.059959561 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.061446498 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.063040182 seconds)
  done (took 1.876088425 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093759528 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085601139 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083548176 seconds)
  done (took 1.868071594 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107140863 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09036353 seconds)
  done (took 1.802056722 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.088184502 seconds)
  done (took 1.694569764 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10304422 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104532293 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135470004 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113582788 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142276022 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.11254211 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088456146 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089167331 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080150317 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090571527 seconds)
  done (took 2.666071523 seconds)
done (took 21.945348206 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.085941724 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.37177375 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365175135 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093708243 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672772641 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360248992 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.98085198 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096651692 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118361853 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07143425 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088429765 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651314254 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.974041364 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327115896 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.960708948 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326676303 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653972757 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072642556 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071455397 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072858252 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.969188601 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071461488 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071579717 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072437907 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65371224 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375839799 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072736951 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324610177 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07201596 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074891442 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359327905 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07287766 seconds)
  done (took 16.197414751 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078648654 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.139983864 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078034014 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088038069 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075786221 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073495586 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075398578 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072866049 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123736139 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07191693 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088743741 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071621471 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075308719 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072146429 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09133546 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072412527 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073178343 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072591733 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072584027 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072815984 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091539151 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071746786 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07278055 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073868159 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072564198 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08467262 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073076822 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072835943 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072958576 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074462389 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075564575 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073116846 seconds)
  done (took 4.170272394 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.125700631 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.131111087 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080894948 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106991913 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115516542 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07448739 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144615663 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097023152 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131868476 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072439514 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089122908 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072023951 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104981089 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073290111 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093099668 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072187421 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073044801 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072700254 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072435058 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072722252 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091856027 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072586782 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072575469 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073000685 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072784034 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085620611 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072899227 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073300593 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072849436 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074466673 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076042217 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073256364 seconds)
  done (took 4.411121109 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078986153 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.081574907 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.088329556 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089069457 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073832554 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076596093 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076639348 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.073506844 seconds)
  done (took 2.262326289 seconds)
done (took 28.658398879 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08585154 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.075006039 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.077679601 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.09195801 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076853809 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082478693 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071237412 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.079552574 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076881589 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076978643 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078603799 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071281363 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075181846 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070824052 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.078717512 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.07179532 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08371511 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075785275 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083864503 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083938308 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074179893 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077467133 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078779169 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083531238 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.085142831 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.087535005 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08437123 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.080123123 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.075818384 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.077290537 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.084279339 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.092533505 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.076018973 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.087458726 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.074539544 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072700204 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075827194 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072714547 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084681023 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080846434 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073800616 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080847584 seconds)
  done (took 4.925223826 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.096013201 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.099928306 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.092460807 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.068600328 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.070958951 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06904674 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092985659 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063554952 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063800115 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092083525 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.060129599 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063306281 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066590301 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058304074 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063617361 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.061237623 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065846906 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.060199526 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063860526 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063681846 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.09235616 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05863949 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08077141 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.067125664 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.060447157 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.066191125 seconds)
  done (took 3.494799869 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.081335651 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088827332 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093671019 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145568222 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115868393 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081522507 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082560933 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096126595 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.0967377 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071478481 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074943807 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096306563 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091188477 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077890509 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071673957 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088468751 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.088394205 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073498106 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077645408 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095188095 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089997068 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089189707 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095762589 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084550836 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070816376 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074114019 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075646708 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08568237 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07463807 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081348544 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075080026 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076305307 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074034366 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.08286969 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074561556 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073265997 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.097459026 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083693173 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081612023 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.07271525 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079074076 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072688002 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096489496 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126524774 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.072922743 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077809501 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075782968 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081637578 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071562596 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097019859 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082828337 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071168631 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074495893 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070856975 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070933973 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075178154 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073245868 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074060936 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080348126 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076748921 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094512953 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076064179 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087325932 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071237782 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079147244 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.071349582 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072311174 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070607988 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096139837 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073338602 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111700155 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.0734885 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072638054 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080821892 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079144789 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077999034 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071708026 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087618428 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082291172 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075556541 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081358379 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075665245 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074327116 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099206116 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074258027 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073680068 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.072744465 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077327419 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074773296 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073650451 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.096273942 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071172164 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074763927 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088802133 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071505163 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073368553 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077237443 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07613707 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.071141165 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083440327 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075365883 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07193774 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081270318 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.07168553 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073941211 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083645737 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07763898 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.07022338 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075911224 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07697462 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071913043 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072682678 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073836012 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072758598 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079426093 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077899433 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075535239 seconds)
  done (took 11.08470108 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.173030153 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.1601406 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075909982 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150339337 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.082448473 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084124365 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151543662 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09960021 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.073271327 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074175011 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.074047041 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115085786 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110997499 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.123437794 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.08380929 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073307096 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.09543418 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119996652 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154564034 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.15082004 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095998571 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.082158748 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075894332 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074343714 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075548449 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083261782 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.09037072 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082098971 seconds)
  done (took 4.645289983 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.088611677 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.109744473 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079094876 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094918929 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094667403 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072802109 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075219708 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074612283 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088954297 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08354865 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072580478 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078582736 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079847752 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076494843 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073589177 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07953276 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079324477 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074014119 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075842412 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078036484 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082808071 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096726739 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076572559 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071842574 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077733835 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072214282 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06908105 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088660445 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07328295 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097643449 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070612777 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077977938 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086153595 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073662954 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072578196 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072615808 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072326573 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.0723784 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074459922 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.073850791 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071363854 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.062627355 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071887581 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084138402 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.085152784 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.061591392 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077517799 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07745164 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.077453171 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070145606 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075742927 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075570447 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075768814 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080148631 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076577342 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07801101 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073902033 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.078876441 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.080991012 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072747655 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070207239 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071591557 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077067633 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070458833 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087237693 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.076999005 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.071233119 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072897456 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074610087 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.085734123 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072869601 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077242714 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070332254 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07506642 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077697119 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074722452 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074272215 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071500863 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.072785364 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073427049 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.060491635 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072597204 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.058928976 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075406573 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070852881 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.0711951 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072811669 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077370185 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084353264 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.073738663 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.080315211 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.07383575 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071616364 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075526922 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065508836 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075305105 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083369249 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087118498 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072669645 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.07054116 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085446682 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077286247 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071769317 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.061181357 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077036669 seconds)
  done (took 9.688263534 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.098653342 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.076148099 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087817293 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093738885 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092035779 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079498547 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082453316 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074205426 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.087810538 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.078109741 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.080715426 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.072671649 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082380914 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081548785 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07494304 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082459137 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077329408 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087686525 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087363668 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.072737857 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080573657 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084731123 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094092099 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084699773 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08357449 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085331282 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.095060833 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081528288 seconds)
  done (took 4.013759682 seconds)
done (took 39.468792903 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.74545174 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.893429706 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.707049203 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.067237415 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.016262474 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.72713476 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.798980552 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.704051133 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.927828098 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.739723208 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.963910226 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.761733469 seconds)
done (took 64.824381909 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.793971221 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.845735985 seconds)
    (2/2) benchmarking "String"...
    done (took 1.95148599 seconds)
  done (took 5.435282057 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.915406067 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.287951288 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.949164506 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.702659441 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.705640447 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.020045591 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.518095286 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.214640387 seconds)
  done (took 30.035218834 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.855997977 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.92231635 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.388531483 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.414489239 seconds)
  done (took 15.275328101 seconds)
done (took 62.18274058 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.699411659 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.718363706 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.737529908 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.687639135 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.759490458 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.710056485 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.814089394 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.952662443 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.697182717 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.693117106 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.705152533 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.11927266 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.706954383 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.827067095 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.698049837 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.7066798 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.757602962 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.14215102 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.858958014 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.706198377 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.715422037 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.745629704 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.698113621 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.843560477 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.757488185 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.706186171 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.112187226 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.7131861 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.32537421 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.704296719 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.735151288 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.009974952 seconds)
  done (took 202.401628729 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.710417095 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.513478326 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.590573402 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.736254885 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.101230077 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.883970916 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.809941566 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.146398167 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.706300928 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.721754292 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.892046036 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.707962308 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.880078369 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.660294945 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.736078123 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.820770827 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.871222623 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.897504845 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.7411504 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.863718477 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.734529544 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.68867948 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.632300921 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.867495659 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.714055187 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.712610731 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.733633201 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.724562904 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.904090001 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.825385777 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.745252452 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.749861817 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.900171314 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.582973409 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.718833269 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.713802317 seconds)
  done (took 166.580954151 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.904164852 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.714543508 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.71316214 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.70739183 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.715057854 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.710917878 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.831196646 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.832402119 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.327136137 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.322130102 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.760837679 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.519772022 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.707526406 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.778636491 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.72235092 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.707824192 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.713304674 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.727736215 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.741111887 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.705727116 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.706835894 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.840096298 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.723073616 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.74981502 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.717526715 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.710658931 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.718782464 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.084572795 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.70838621 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.715189035 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.723137099 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.959929075 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.711933442 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.713173103 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.714976601 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.563200732 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.791753587 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.712573565 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.720363958 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.711759087 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.92939369 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.705125675 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.710221204 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.7194056 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.857671086 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.7152181 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.836992779 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.709023886 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.191984138 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.708216434 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.70965867 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.652459227 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.299786654 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.711929832 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.714736747 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.713580221 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.71504231 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.712453831 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.716758527 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.722539165 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.946210916 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.712391811 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.718058072 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.728525243 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.714811673 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.716068418 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.808716935 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.712597203 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.017073139 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.774018381 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.93576132 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.843057126 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.710197144 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.78265816 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.807284192 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.71114916 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.715510791 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.716600865 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.71602736 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.797680962 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.712053207 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.883382098 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.719816928 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.717363801 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.770429567 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.787865608 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.713128745 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.55852911 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.717531698 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.716471352 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.991790128 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.779795799 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.713109524 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.715237549 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.716344157 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.860127612 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.835021154 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.427121624 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.716104342 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.647698247 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.722621971 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.71626438 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.865242141 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.714743898 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.865845726 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.716884973 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.799862773 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.717645231 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.718401356 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.717404009 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.751113915 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.7175559 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.772966333 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.718137682 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.090424714 seconds)
  done (took 395.256240024 seconds)
done (took 767.832328051 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.374482482 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.3380105 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.442640913 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.360522293 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.33377677 seconds)
  done (took 13.49514731 seconds)
done (took 15.142897875 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.810128365 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.810865001 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.739879674 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.807008263 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.735446832 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.810477378 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.790485648 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.739770502 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.778588709 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.741297452 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.777229546 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.739596606 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.732006168 seconds)
  done (took 24.661620456 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.957243758 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.964179769 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.793325627 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.965988176 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.766616667 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.951560258 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.894034372 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.875034722 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.872613534 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.733045808 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.733135437 seconds)
  done (took 22.155574244 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.985102675 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.968056677 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.796404808 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.961423268 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.771130841 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.964781196 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.891818565 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.879307979 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.875573809 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.736788162 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.732812039 seconds)
  done (took 22.21035298 seconds)
done (took 70.676179508 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.728019282 seconds)
  done (took 3.376396139 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.758001676 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.926632537 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.732281185 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.734229002 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.729936266 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.730055503 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.731801538 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.728135126 seconds)
  done (took 15.721080183 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.729123247 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.726307724 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.727804985 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.728616962 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.725742579 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.727105517 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.728370557 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.725328631 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.727030483 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.726661869 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.724980956 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.727002498 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.730604338 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.730164851 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.728302646 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.728100121 seconds)
  done (took 29.290488173 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.72883728 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.725854493 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.727766019 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.727655811 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.729151335 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.727290031 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.729474014 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.725435472 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.726402728 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.728594734 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.728229673 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.725417296 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.724176642 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.72496151 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.726815574 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.725728877 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.727213084 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.726354835 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.730106326 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.727497206 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.727527404 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.72799304 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.728389321 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.729415879 seconds)
  done (took 43.110461225 seconds)
done (took 93.147778571 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.47431948 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.372383824 seconds)
  done (took 9.496663025 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.73334904 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.73082552 seconds)
  done (took 5.180313109 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.729842723 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.729355427 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.73140074 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.730831811 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.729781429 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.728317782 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.730704073 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.730555927 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.731566378 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.730928881 seconds)
  done (took 18.954555798 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.730945112 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.729618903 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.728582206 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.728779641 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.730666609 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.729766481 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.731390019 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.731111346 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.730424595 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.727974901 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.731045122 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.728139901 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.732898256 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.729481938 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.731634396 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.729651008 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.729940998 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.728399286 seconds)
  done (took 32.793891051 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.731349569 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.732064213 seconds)
  done (took 5.116182813 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.731156532 seconds)
    (2/7) benchmarking "second"...
    done (took 1.728624303 seconds)
    (3/7) benchmarking "month"...
    done (took 1.73034139 seconds)
    (4/7) benchmarking "year"...
    done (took 1.728990643 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.730734215 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.729178578 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.728829561 seconds)
  done (took 13.761361562 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.734008747 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.888354304 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.963893685 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.383925976 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.73548688 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.73685671 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.706299275 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.736601232 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.739516257 seconds)
  done (took 19.279832512 seconds)
done (took 106.235502064 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.589439247 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.726471573 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.976906365 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.782236596 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.772319245 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.068417092 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.752873605 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.02866592 seconds)
done (took 42.352135724 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.806845638 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.506739496 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.503765683 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.749617937 seconds)
  done (took 15.413910808 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.718454668 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.253307211 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.765028658 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.305982551 seconds)
  done (took 19.754746064 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.097703582 seconds)
    (2/2) benchmarking "read"...
    done (took 2.081647782 seconds)
  done (took 5.839457653 seconds)
done (took 49.474196341 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.733914523 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.731762848 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.734544876 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.730454273 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.734423375 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.731434994 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.73108324 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.735495773 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.732794886 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.734521734 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.735150006 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.734588511 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.730795382 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.729731368 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.734143416 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.734683559 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.735683479 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.731447289 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.732050718 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.733130421 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.73296843 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.737207318 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.731337237 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.730472857 seconds)
  done (took 43.248885832 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.736275829 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.733271889 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.7408069 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.736635259 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.734095644 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.733915166 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.73609744 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.734400294 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.738855485 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.734915051 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.733206704 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.734599805 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.736069626 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.734865618 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.737629955 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.734184042 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.736549017 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.732420846 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.735707407 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.735551675 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.734835218 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.733591468 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.734496696 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.736069234 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.733004742 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.735770662 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.736686716 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.733980177 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.736453102 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.733132172 seconds)
  done (took 53.716448359 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.743743684 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.745630247 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.736792588 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.736892093 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.738272038 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.737970169 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.739201591 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.736262233 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.736828115 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.738183784 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.737484652 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.738226059 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.739012983 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.736307448 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.737307833 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.738727742 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.73843318 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.738417712 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.739531885 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.738743388 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.737751974 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.737994733 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.736048717 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.739281431 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.737676643 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.737695032 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.738603281 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.739823169 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.737167903 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.74006392 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.74004688 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.739502696 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.73799209 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.738427824 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.739566313 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.741090891 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.743114684 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.747153905 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.739660693 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.739444825 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.740636323 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.739674899 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.738987975 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.739485664 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.739448511 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.738609664 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.741719135 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.738391189 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.742936971 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.73881347 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.738944449 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.738749746 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.740513039 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.740293778 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.737476819 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.739889508 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.737623958 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.73710187 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.740097998 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.738433656 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.739853578 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.737829343 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.739245686 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.739430183 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.739730251 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.740762982 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.739217571 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.738143511 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.739195311 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.741877289 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.740152796 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.738084342 seconds)
  done (took 126.88227898 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.73892998 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.736865923 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.737065983 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.734934783 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.736368242 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.741184502 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.736785706 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.740948502 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.735873447 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.738836807 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.741773055 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.738443751 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.736877453 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.742464449 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.739021686 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.733059918 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.73902274 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.739009106 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.741194961 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.738440798 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.741616293 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.738535042 seconds)
  done (took 39.908467716 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.74080962 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.739883218 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.737533357 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.739452197 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.740060516 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.74222796 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.741195815 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.740424018 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.739503395 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.738460235 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.73741584 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.740705935 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.734804993 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7380446 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.737857627 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.739030186 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.741700329 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.736477907 seconds)
  done (took 32.966849787 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.73969373 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.739059913 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.741881792 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.740785979 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.736449368 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.742324935 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.741165954 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.7424997 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.74255413 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.740827283 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.743007338 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74188792 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.743132569 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738511731 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.742118972 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.739456603 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.742606847 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.737804694 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.741402943 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.739834402 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.740957103 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.73924072 seconds)
  done (took 39.959285165 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.742376409 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.742033873 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.738416595 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.737964149 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.740675633 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.740927038 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.745218991 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.740250262 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.744125169 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.743554423 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.740486664 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.744636943 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.741002769 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.739579607 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.736776537 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.741697237 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.743272293 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.740735855 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.742896445 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.739373541 seconds)
  done (took 36.488749766 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.742866151 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.742960521 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.745637942 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.74233562 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.741515003 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.74549698 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.745350633 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.744379435 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.745388061 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.744402863 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.744539611 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.746917568 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.744702911 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.744551623 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.74390896 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.743700171 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.744458754 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.746075573 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.746236102 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.743863433 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.742611669 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.743257266 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.742054402 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.744244437 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.746161264 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.74746611 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.743206592 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.746362835 seconds)
  done (took 50.512055217 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.74233163 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.745687095 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.741133618 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.74123689 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.743053286 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.741065619 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.742147074 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.739054772 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.746549125 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.741415974 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.743801089 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.743652217 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.742787463 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.745585756 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.743585898 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.742931847 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.745110992 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.739792285 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.741456707 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.745004679 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.744930528 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743841381 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.743091401 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.740679455 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742043366 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.747627026 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.741334588 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.74204057 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.746716939 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.745073973 seconds)
  done (took 53.956773517 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.764007415 seconds)
    (2/2) benchmarking "in"...
    done (took 1.76363807 seconds)
  done (took 5.195610953 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.743336487 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.747821422 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.74778582 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.74162981 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.739222173 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.748511197 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.746436345 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.742719172 seconds)
  done (took 15.624459597 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.743831013 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.746208578 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.745151795 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.745799956 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.745943229 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.749724627 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.753471394 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.744732614 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.747781309 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.747171311 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.754826381 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.756285415 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.75159518 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.749196532 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.747035784 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.749494564 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.749242255 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.74819452 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.749058147 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.745912115 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.748860973 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.752580359 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.750010069 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.742472677 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.748712811 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.759968205 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.751880253 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.748779455 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.7492883 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.751759201 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.747049546 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.745560978 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.749433042 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.749456964 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.746813271 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.748934361 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.754687927 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.748623056 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.753397518 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.75024327 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.749443721 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.747715138 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.746506131 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.75082808 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.750186644 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.749016188 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.750591799 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.748295433 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.749843011 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.751426148 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.755467614 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.746474209 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.7488131 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.751519785 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.751472447 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.756630351 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.750729836 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.751762367 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.759330785 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.759341119 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.764863688 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.758259458 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.752414462 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.747675903 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.761526831 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.772781533 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.755818456 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.749307016 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.74692785 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.749680041 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.754768421 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.761301473 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.755712265 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.751713603 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.7491103 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.748874311 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.748792896 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.749344942 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.756653692 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.751873641 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.751164394 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.748729712 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.756760237 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.773903666 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.749036478 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.748391942 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.747971301 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.747596433 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.751106206 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.760035407 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.754240674 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.74949745 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.750757377 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.747901406 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.751343566 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.75098692 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.74716787 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.749471812 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.747301245 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.749867569 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.74847188 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.753081787 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.763150175 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.751609388 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.750191167 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.756114576 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.748733846 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.749227558 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.758626521 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.749614651 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.749668196 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.753405969 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.757258888 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.746034112 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.751380293 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.760510761 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.75117442 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.749961023 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.751446538 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.748506505 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.759661019 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.777304025 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.749327584 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.749565379 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.755521586 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.762620098 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.751865852 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.752456621 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.751577265 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.749075195 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.750168176 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.753325112 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.749743628 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.7505117 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.752175975 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.754114289 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.750447374 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.753519464 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.754352994 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.753128942 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.752377169 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.751315085 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.756311753 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.756024664 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.752973309 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.75256768 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.75748754 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.750865865 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.754111804 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.752727288 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.745993437 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.751436631 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.753113726 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.753360349 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.750282004 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.752179525 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.749634965 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.75208772 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.75018516 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.752385761 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.752567361 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.752372097 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.757404629 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.754607372 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.759905932 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.752992593 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.750562922 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.754269588 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.752218458 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.755692706 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.755381766 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.751188462 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.755686735 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.761421393 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.751625566 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.752277184 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.758581533 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.752937407 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.75195114 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.754846521 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.758451358 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.76105912 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.754724747 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.760516799 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.753850751 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.754633905 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.753234202 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.754129623 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.751231043 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.754483377 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.759981451 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.762325914 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.768674066 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.764893413 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.759114483 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.760845029 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.755066895 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.75760127 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.759079561 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.758377716 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.754020119 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.754489389 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.755127355 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.757807133 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.758008398 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.755288327 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.756484195 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.75297497 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.756445881 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.758713385 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.758268698 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.755739234 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.755984001 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.75292954 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.754238914 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.757535777 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.754015748 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.753757555 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.755631841 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.755969547 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.757264639 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.756500667 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.763805412 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.752548056 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.754873528 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.759195363 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.758037953 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.753822912 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.75592582 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.760447927 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.757329671 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.762085548 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.754261991 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.755339941 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.762255139 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.756886034 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.755621592 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.758863046 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.754231349 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.756504036 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.758167929 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.763001532 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.756661874 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.75691477 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.75891238 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.75665023 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.759297687 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.763947048 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.752669249 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.755674587 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.75756424 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.761577169 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.755450389 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.758500275 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.756364074 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.756832774 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.763239172 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.757440514 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.755612416 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.758209525 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.758552908 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.75830615 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.756642472 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.760744432 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.766182647 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.763247547 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.7591352 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.76117505 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.759980515 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.762310164 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.759584513 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.758223349 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.757808505 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.772912823 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.766996564 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.7643947 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.761387279 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.758660105 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.764657065 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.762021436 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.763917795 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.76115663 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.758148248 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.760226247 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.761932643 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.757225723 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.762846772 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.761202387 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.762494759 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.763551186 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.762364284 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.761506035 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.759530373 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.759994144 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.759230216 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.75957767 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.756320992 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.762615154 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.764166391 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.76032205 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.761885488 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.761780938 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.767125234 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.759906129 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.758819152 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.760412613 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.76286351 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.758588941 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.760933037 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.760847288 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.765000716 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.767413601 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.761280197 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.771650158 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.762856631 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.771274917 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.759319938 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.763700213 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.771683398 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.75700758 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.759566445 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.759675239 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.763218801 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.771366096 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.760849649 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.758847097 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.764306169 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.762262816 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.763938817 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.760239422 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.764425206 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.765632535 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.760123515 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.771625784 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.763793085 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.765525326 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.766936249 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.759196641 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.762838065 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.762513072 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.761981936 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.767928864 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.763519998 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.763877302 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.763195696 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.763463491 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.764459722 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.763074784 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.763454381 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.762704663 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.76452163 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.769005853 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.767475681 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.766467983 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.763662084 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.770391157 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.764782068 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.769847525 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.765136324 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.763715979 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.766323075 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.763090612 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.763396258 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.766785297 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.766080637 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.763556019 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.767570136 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.767966684 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.762550289 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.77009197 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.764029567 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.763256663 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.764646723 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.776038216 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.78879059 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.766904007 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.770228987 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.760158933 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.766913241 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.770056736 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.767697007 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.767773513 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.76807898 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.777338119 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.773307859 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.766435532 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.766955871 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.766431588 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.76603715 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.769910769 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.766485526 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.765994876 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.766717154 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.767293359 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.768982635 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.772022474 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.765813661 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.766766499 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.769647748 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.767548764 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.775444147 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.768592788 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.769890407 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.768794717 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.769177777 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.768790577 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.769053528 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.770099548 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.767909738 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.765922051 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.770713395 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.775511683 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.774896974 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.772107709 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.768432188 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.76834289 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.767562639 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.768263947 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.772530704 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.770283068 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.770383304 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.771799548 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.769868844 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.772823319 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.769570319 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.769537825 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.769295735 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.771111929 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.769413772 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.779909011 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.770592801 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.764860887 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.769442802 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.77037786 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.769461957 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.770252068 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.779293146 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.773451319 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.782445364 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.778995887 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.772960294 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.769300762 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.771078624 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.779731099 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.771704858 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.772917852 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.772256882 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.773199417 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.769444393 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.776408297 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.768832268 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.77833131 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.770084973 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.770451003 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.776231663 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.770689778 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.770800883 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.773765633 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.778183414 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.771268617 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.767546562 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.767029197 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.773472051 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.776759033 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.772983499 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.772942298 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.771609627 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.767344109 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.772463987 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.777246775 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.773242371 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.76948679 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.76796757 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.771844398 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.772762372 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.771843989 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.770024514 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.772785861 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.772251383 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.775078808 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.7791014 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.769210764 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.775514234 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.771888262 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.773052274 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.773686089 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.770876414 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.768181184 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.770454168 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.773823738 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.771124612 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.774057248 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.7726359 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.771400614 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.774267312 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.774936893 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.771230354 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.775301936 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.784428591 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.782274897 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.771304737 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.772093386 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.772631904 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.775459919 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.774000424 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.775930154 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.774424039 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.77642797 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.772405998 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.770357089 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.772275244 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.776172575 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.787315787 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.773521534 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.77597949 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.773398949 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.777356529 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.771314863 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.768541715 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.77489577 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.77292975 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.774212805 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.779938378 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.774074356 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.780320225 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.770217832 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.77322867 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.780895189 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.777444178 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.783186509 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.775792567 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.775717239 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.775792342 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.776770672 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.790059565 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.772061006 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.78304081 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.803878838 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.775129836 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.774838532 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.773625306 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.77490413 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.77506503 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.775636769 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.77836192 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.77515 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.77511332 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.77562204 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.777407494 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.779440749 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.776318587 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.774991453 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.775105095 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.774109485 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.776777526 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.770465895 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.773350953 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.772926084 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.774816344 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.773308964 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.776426272 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.776619188 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.789473774 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.785372432 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.775280521 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.774817918 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.772053166 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.777813668 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.775454733 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.78747694 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.783178389 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.774632678 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.778166276 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.778144644 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.772318938 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.773350103 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.775759252 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.774567055 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.774603526 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.775801459 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.788163969 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.782760674 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.779568962 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.77816591 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.776020563 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.775966523 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.773393499 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.77438373 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.777541109 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.780198342 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.776971057 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.780615008 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.77580447 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.776238711 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.77787443 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.785420914 seconds)
  done (took 1052.440791722 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.773523458 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771271619 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.771876081 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.773731689 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.773122056 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.77498913 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.773680119 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.771661628 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.775016139 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.773510662 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.771009632 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.775252499 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.772340677 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.772619977 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.773347569 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.773145525 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.775324316 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.774392549 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.772065152 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.771340878 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.773610361 seconds)
  done (took 38.934693638 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.773307674 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.772800543 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.775005762 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.776552674 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.774725676 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.77693552 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.773948954 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774652309 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.776992414 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772668908 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.778501496 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776227076 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.774965713 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.773129873 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773016917 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777355661 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.776432373 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.775684548 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.7757069 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.775866839 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.77845351 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.776120757 seconds)
  done (took 40.754435743 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.777512662 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.777944432 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.776222194 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.775511569 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.776703992 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.774501665 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.776960531 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.779140498 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.777919808 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.782326612 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.776641072 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.779232639 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.78552322 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.784039068 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.779808173 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.778095598 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.918984152 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.778011153 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.779309953 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.77782436 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.776635155 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.782355737 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.774392832 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.775304701 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.777499003 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.778079268 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.781151833 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.779606745 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.781892602 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.779959906 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.78241261 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.779459021 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.77744247 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.781552815 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.77860384 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.781237501 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.78356921 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.780692809 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.775856814 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.779434004 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.787306943 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.800418149 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.781053151 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.789872487 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.778341795 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.778373015 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.783303705 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.787342082 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.776245193 seconds)
  done (took 89.060734921 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.779175791 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.779640875 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.775084542 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.777987048 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.779919864 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.779799462 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.781235797 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.779656293 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.777749936 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.776727229 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.780034542 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.777479883 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.779119747 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.780739713 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.781556941 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.776628024 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.776356242 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.777990208 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.777068899 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.777722666 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.778274863 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.781879997 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.779758466 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.77694722 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.781339066 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.778116184 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.779823226 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.781269041 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.780533817 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.780973029 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.784545572 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.781142552 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.781684632 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.7787584 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.77854324 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.780705937 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.783681228 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.779681805 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.782157517 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.777501244 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.78034128 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.780425733 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.780953854 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.781851741 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.778902619 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.778793646 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.78097912 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.778037378 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.778799069 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.782604841 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.781374431 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.778747179 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.781601765 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.780549729 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.78284149 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.782286945 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.778992106 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.779655422 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.784289558 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.780101396 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.78086151 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.782826493 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.779296301 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.78411489 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.782719826 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.784957713 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.780331022 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.783415416 seconds)
  done (took 122.749718325 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.786033372 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.782932578 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.785988025 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.783085952 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.785128971 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.785881593 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.784533355 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.783864467 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.786237968 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.785036557 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.78453467 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.784456277 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.787213787 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.784393785 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.785851364 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.787109014 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.786882089 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.789909181 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.785498059 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.785171302 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.783564491 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.786049817 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.785936154 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.786825879 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.789035382 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.78940713 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.787761011 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.786501269 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.786472329 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.784492991 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.786490463 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.786916141 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.78676672 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.788801831 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.789223458 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.788154042 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.786475396 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.788778466 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.787102 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.785357989 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.784899811 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.789056879 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.785621712 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.784180261 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.786250074 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.788077261 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.787077144 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.792558091 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.785707662 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.786225502 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.785321429 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.786351505 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787793453 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.787408664 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.789166121 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.785999999 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.787480648 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.787096627 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.786888808 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.787102272 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.788577447 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.786495521 seconds)
  done (took 112.469315291 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.786325866 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.786760095 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.784625703 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.78267584 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.786518805 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.783584887 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.787553134 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.786581312 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.787454998 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.78652517 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787979652 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.78355252 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784339678 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785335775 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.785371207 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784269007 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782102519 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.783112615 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.786621176 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.785051546 seconds)
  done (took 37.411489246 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.78511609 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.786563893 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.783870799 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.786238216 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.786336725 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.784802198 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.786850563 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787027425 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783929151 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787502949 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.787301032 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.787742875 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783822912 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.785215645 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.787394912 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.788382574 seconds)
  done (took 30.284468377 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.785622424 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.78826285 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.789400118 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.78997959 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.787253814 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.785136865 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.78824106 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.785039782 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.785809028 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.788359599 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.788966862 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.789120549 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.789383326 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.789634091 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.787581543 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.789688874 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.785225926 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.787421345 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.787490813 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.79100718 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.785506683 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.78661231 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.789672371 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.789676332 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.78619511 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.788008584 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.786537879 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.78737658 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.786395913 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.788364424 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.786817641 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.790090696 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.787223338 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.786702645 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.792509609 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.788403375 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.790659765 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.792896717 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.789203908 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.790956252 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.790001181 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.788392013 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.790948663 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.79265836 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.787923338 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.790400861 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.787746043 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.789844148 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.786423624 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.78733449 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.789987119 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.79060062 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.791906114 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.790853449 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.789810876 seconds)
  done (took 100.081050463 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.791449322 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.790789685 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.788307313 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.791032739 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.789652893 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.788774497 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.791337152 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.788245801 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.788472325 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.78891299 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.791552494 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.79112227 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787168818 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.791353244 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.789407617 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.791767378 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.788272936 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.788734551 seconds)
  done (took 33.926928299 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.78836065 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.79142344 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.792292963 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.788581308 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.789762781 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.793975334 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.790213561 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.79084091 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79265564 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.788903077 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789222837 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.794784792 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.792179851 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.793384332 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.790945671 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78887656 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.792810987 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.793241284 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.788424433 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.790156042 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.793430302 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.794238848 seconds)
  done (took 41.120502591 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.791903095 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.791867937 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.809866188 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.816858264 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.815013128 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.830380321 seconds)
  done (took 12.566571959 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789951176 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794074157 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.790769259 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794210296 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795945227 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792890814 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792984117 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791938749 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794252541 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790824912 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791006078 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794264774 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797052905 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79273615 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796239438 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794557876 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792357885 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792320186 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793263658 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793966317 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791729295 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79290624 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794505764 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791596906 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791290027 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792733168 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796945384 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792982277 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792024007 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797282999 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795659146 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792703597 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797122327 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794664411 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797606945 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794548769 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792403981 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795657936 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796263138 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793523487 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.794914443 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796210632 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796465186 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794130291 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796367548 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793827187 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794606493 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793603269 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79360574 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79823048 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796359855 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795676638 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795995665 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796200037 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795137588 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796419648 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793047239 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794066159 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795646065 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794953916 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791962209 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796567454 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794567401 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794369213 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796212944 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794791535 seconds)
  done (took 120.136827545 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794110096 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.793608735 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794321256 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79486908 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794759136 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79578373 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794731146 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79472963 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7944074 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794426622 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798102071 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794254789 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795109775 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794939239 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794328395 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794798147 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79484833 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795134339 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795462322 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798197902 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796564843 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795069835 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794965695 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795131337 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795222994 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797847593 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796954516 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795354639 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795370922 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796168852 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795215878 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794126485 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795829571 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.797768323 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796652815 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794810023 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794347277 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795096077 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796238922 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79892186 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794838843 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798022829 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.797357044 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795918478 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795999795 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795944399 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795285711 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796865444 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795023685 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795319082 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795637416 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795091152 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795786233 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.796625352 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796920489 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.796269722 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795721811 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793874291 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795871967 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799807451 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795062942 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793334856 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799260833 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79483515 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796210283 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.796074772 seconds)
  done (took 120.232635964 seconds)
done (took 2452.293399348 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.790991903 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.792758052 seconds)
  done (took 15.300323394 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.959565805 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.914482256 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.796855365 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.826127098 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.793763393 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.795343436 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.816196713 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.793354569 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.7962065 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.798209055 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.797542777 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.987347984 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.850359428 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.794498091 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.801496699 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.891948966 seconds)
  done (took 51.136048395 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.80194353 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.803217884 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.814446371 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.804623787 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.802435268 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.814763674 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.833995042 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.805573716 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.838163159 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.810861599 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.873996266 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.810913301 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.799996626 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.851228581 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.812847821 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.817925574 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.896762184 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.877450873 seconds)
  done (took 34.590353237 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.881269345 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.804829837 seconds)
  done (took 10.417200604 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.830418816 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.857509547 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.824750925 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.79847156 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.80292177 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.828357496 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.823106967 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.816756802 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.805288199 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.818182475 seconds)
  done (took 69.931834533 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.810772464 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.803431205 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.803733563 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.802856192 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.796529722 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.796930228 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.804734925 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.798462281 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.457173629 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.838329243 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.806392275 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.807818835 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.801047547 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.807096554 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.80340109 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.828581758 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.897829456 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.799317374 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.801726447 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.810505443 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.805913139 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.858695492 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.817800028 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.805105538 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.836591097 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.462776718 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.813465517 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.809709264 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.892760506 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.800831876 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.803480157 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.803042813 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.807301151 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.192469013 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.075379949 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.800779662 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.814177947 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.811246775 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.800506881 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.902870409 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.807114049 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.808863074 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.446911247 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.060801792 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.911993417 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.843007002 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.113550742 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.819306539 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.806392176 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.831077643 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.805115232 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.80730127 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.815425139 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.287579735 seconds)
  done (took 128.48446004 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.79985211 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.149476274 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.975193905 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.797204593 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.085389319 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.006200855 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.801726604 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.850411649 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.80427543 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.034680336 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.061870217 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.90632195 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.796939819 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.799677532 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.794497917 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.796067747 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.960253701 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.873252792 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.798120324 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.796972794 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.8313969 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.046191259 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.921842306 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.798421912 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.831487057 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.016975538 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.921631077 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.90790896 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.582396956 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.799850426 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.867610475 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.800804043 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.803145961 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.795405658 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.961627045 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.896688937 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.884376948 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.798403205 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.797951135 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.800906159 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.474123183 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.00719352 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.894880077 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.940475761 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.998922902 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.00527146 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.583857541 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.798732257 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.54547637 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.970761226 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.032853363 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.040720939 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.923560812 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.798374356 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.333799973 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.798234666 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.805078861 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.052453444 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.944589667 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.901942106 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.79887178 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.799817321 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.795582626 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.054799274 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.802903692 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.896854035 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.801288012 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.80042697 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.900697821 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.903235453 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.943140808 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.015064582 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.839758553 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.764199821 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.336972678 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.050710434 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.864616124 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.049006394 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.798489029 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.795171493 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.881178543 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.645309107 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.055040608 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.047151186 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.050400901 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.831314123 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.528001216 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.795636995 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.023043415 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.016484059 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.056519617 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.006828222 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.033823437 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.125390809 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.795011206 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.790618209 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.011051323 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.925696706 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.788099299 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.138896191 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.022163708 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.346645629 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.810703981 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.092970348 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.917579266 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.787896859 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.430111812 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.784564162 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.016809696 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.827318073 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.788685132 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.782036664 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.000370789 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.767660354 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.779607 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.42628919 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.849244827 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.778606419 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.01522869 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.776662178 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.050830535 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.778944066 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.017876325 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.827394916 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.800988907 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.000467813 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.977750835 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.768999283 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.017903431 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.013022422 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.885104657 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.992721912 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.460639784 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.768308011 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.062467695 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.766747369 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.769573063 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.946818581 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.773228836 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.923427645 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.771359746 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.066540056 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.794258231 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.009924631 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.769219774 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.029499753 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.804335351 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.825544338 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.770339759 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.908583386 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.769157483 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.613164994 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.935073175 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.771159535 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.769487813 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.655525402 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.775171251 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.926607697 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.012253488 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802131052 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.847253084 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.445956917 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.773269545 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.854391004 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.794283345 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.166944341 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.771217135 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.024620182 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.767862947 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.765382356 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.760917345 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.005742966 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.948006691 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.762947173 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.75914452 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.667083368 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.757063501 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.756714974 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.938696839 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.105710366 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.750981982 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.957065239 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.748570524 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.878009005 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.750653624 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.827975061 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.090214597 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.74340313 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.741603038 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.740102845 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.741190936 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.735181831 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.005020492 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.762033865 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.266806704 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.875654159 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.013321884 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.052142247 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.987498671 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.777399769 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.734077105 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.988567813 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.731708202 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.793960111 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.728511252 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.753006433 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.958616501 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.728329589 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.937932168 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.004861451 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.699945939 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.774419733 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.723589958 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.722930186 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.720507665 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.867851385 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.810190995 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.721435296 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.716843056 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.839586653 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.842242183 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.928942594 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.72094787 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.804516078 seconds)
  done (took 882.853950031 seconds)
done (took 1194.433044502 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.72076765 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.717345106 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.703532733 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.720543936 seconds)
  done (took 28.508507143 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.727505441 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.724992651 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.728122759 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.72528301 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.726757518 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.72621128 seconds)
  done (took 12.00761968 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.776152337 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.719054094 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.16597017 seconds)
  done (took 21.3106462 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.795014023 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.106266075 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.833328212 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.148253371 seconds)
  done (took 9.532456675 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.72936812 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.727425258 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.727685511 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.727903369 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.729602278 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.729002676 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.728543454 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.728787003 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.729788449 seconds)
  done (took 17.209132341 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.842146235 seconds)
done (took 94.059276816 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.88025267 seconds)
    (2/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.817733563 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.801117714 seconds)
    (4/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.09108867 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.722709366 seconds)
    (6/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.817308746 seconds)
    (7/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.843424499 seconds)
    (8/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.110695109 seconds)
    (9/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.275871971 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.962977803 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.114437793 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.88201478 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.835112062 seconds)
    (14/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.79838084 seconds)
    (15/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.235202103 seconds)
    (16/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.201704358 seconds)
    (17/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.90795547 seconds)
    (18/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.985294873 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.841650304 seconds)
    (20/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.13557355 seconds)
    (21/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.25534377 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.802557012 seconds)
    (23/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.453845538 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.106614683 seconds)
    (25/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.915720519 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.893605419 seconds)
    (27/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.83763287 seconds)
    (28/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.889632672 seconds)
    (29/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.201860126 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.170947679 seconds)
    (31/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.880924001 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.799797939 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.877869801 seconds)
    (34/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.021710067 seconds)
    (35/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.823696084 seconds)
    (36/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.843068732 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.914588265 seconds)
    (38/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.113883728 seconds)
    (39/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.994005579 seconds)
    (40/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.089721745 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.968364194 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.157023406 seconds)
    (43/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.059351449 seconds)
    (44/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.172913453 seconds)
    (45/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.848065463 seconds)
    (46/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.10607999 seconds)
    (47/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.978068135 seconds)
    (48/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.881288426 seconds)
    (49/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.803338737 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.159209145 seconds)
    (51/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.944390954 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.999356361 seconds)
    (53/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.948272311 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.158988813 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.068659243 seconds)
    (56/309) benchmarking ("sort", BigInt, false)...
    done (took 6.815679759 seconds)
    (57/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.81827378 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.165178916 seconds)
    (59/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.802855283 seconds)
    (60/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.135813366 seconds)
    (61/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.821055645 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.971242827 seconds)
    (63/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.296602408 seconds)
    (64/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.806101319 seconds)
    (65/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.930700268 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.529740888 seconds)
    (67/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.125029974 seconds)
    (68/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.040477894 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.821462702 seconds)
    (70/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.847294541 seconds)
    (71/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.448140097 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.819770172 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.143661106 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.963438538 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.00407251 seconds)
    (76/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.158564409 seconds)
    (77/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.800409302 seconds)
    (78/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.493844482 seconds)
    (79/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.087354895 seconds)
    (80/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.923072445 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.145359911 seconds)
    (82/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.921057337 seconds)
    (83/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.923839475 seconds)
    (84/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.100547411 seconds)
    (85/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.057484945 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.525845185 seconds)
    (87/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.719582174 seconds)
    (88/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.722248564 seconds)
    (89/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.921658986 seconds)
    (90/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.106042624 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.923520985 seconds)
    (92/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.522639194 seconds)
    (93/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.901109721 seconds)
    (94/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.881845522 seconds)
    (95/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.015722696 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.80624633 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.728299193 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.972142411 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.881205762 seconds)
    (100/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.882530599 seconds)
    (101/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.897962877 seconds)
    (102/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.79998421 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.55839066 seconds)
    (104/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.926711991 seconds)
    (105/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.046367505 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.961542311 seconds)
    (107/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.803778385 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 4.219007595 seconds)
    (109/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.829708456 seconds)
    (110/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.800421723 seconds)
    (111/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.874853816 seconds)
    (112/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.799381602 seconds)
    (113/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.800965134 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.089152304 seconds)
    (115/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.895239904 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.168851377 seconds)
    (117/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.130096097 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.801143136 seconds)
    (119/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.309769972 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.802518297 seconds)
    (121/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.946211901 seconds)
    (122/309) benchmarking ("sort", Float64, false)...
    done (took 5.548915182 seconds)
    (123/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.81448323 seconds)
    (124/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.194824681 seconds)
    (125/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.97916427 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 2.01694036 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.810883518 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.039087002 seconds)
    (129/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.240472009 seconds)
    (130/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.793839856 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.010444396 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.036575885 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.084252586 seconds)
    (134/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.786107212 seconds)
    (135/309) benchmarking ("perf_sum", Int8, true)...
    done (took 3.231470941 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.126324009 seconds)
    (137/309) benchmarking ("sort", Int8, false)...
    done (took 4.780269461 seconds)
    (138/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.146154021 seconds)
    (139/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.958857023 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.892909479 seconds)
    (141/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.301248013 seconds)
    (142/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.807387652 seconds)
    (143/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.787420467 seconds)
    (144/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.025972452 seconds)
    (145/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.772416815 seconds)
    (146/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.991241984 seconds)
    (147/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.794287179 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.115316378 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.00758615 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.813643527 seconds)
    (151/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.786093101 seconds)
    (152/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 3.298783121 seconds)
    (153/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.443157647 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.863757399 seconds)
    (155/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.375820819 seconds)
    (156/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.848811233 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.169704642 seconds)
    (158/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.029542782 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.942765069 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.787411158 seconds)
    (161/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.845203671 seconds)
    (162/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.006899016 seconds)
    (163/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.796611543 seconds)
    (164/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.772093682 seconds)
    (165/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.388821306 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.086713589 seconds)
    (167/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.793221138 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.524672866 seconds)
    (169/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.200454297 seconds)
    (170/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.777329421 seconds)
    (171/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.299779922 seconds)
    (172/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.172809595 seconds)
    (173/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.762654723 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.887277493 seconds)
    (175/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.044037729 seconds)
    (176/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.879556247 seconds)
    (177/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.946556423 seconds)
    (178/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.922962935 seconds)
    (179/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.876751009 seconds)
    (180/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.363889799 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.792823967 seconds)
    (182/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.96387592 seconds)
    (183/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.972532721 seconds)
    (184/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.882177022 seconds)
    (185/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.865577361 seconds)
    (186/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.890858539 seconds)
    (187/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.266650229 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.891271486 seconds)
    (189/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.790985635 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.816315096 seconds)
    (191/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.507104089 seconds)
    (192/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.782375671 seconds)
    (193/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.821437345 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.820131717 seconds)
    (195/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.810496355 seconds)
    (196/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.060468775 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.901860716 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.449551857 seconds)
    (199/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.04076474 seconds)
    (200/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.234821694 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.893089538 seconds)
    (202/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.7761998 seconds)
    (203/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.164401865 seconds)
    (204/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.051315577 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.851735447 seconds)
    (206/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.97036205 seconds)
    (207/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.194379369 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.037952364 seconds)
    (209/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.082575457 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.77419873 seconds)
    (211/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.356011202 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.174950827 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.620970699 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.992165977 seconds)
    (215/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.855980087 seconds)
    (216/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.908100009 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.617866904 seconds)
    (218/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.014559459 seconds)
    (219/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.810119599 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.820583221 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.771008668 seconds)
    (222/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.802924925 seconds)
    (223/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.403585567 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.820545133 seconds)
    (225/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.808162794 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.81058358 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.016609886 seconds)
    (228/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.619297122 seconds)
    (229/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.979463874 seconds)
    (230/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.861496931 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.685737252 seconds)
    (232/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.957323882 seconds)
    (233/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.935342292 seconds)
    (234/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.774866082 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.086177922 seconds)
    (236/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.990505536 seconds)
    (237/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.970628899 seconds)
    (238/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.922646977 seconds)
    (239/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.870579758 seconds)
    (240/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.053307903 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.794233846 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.035494922 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.810125796 seconds)
    (244/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.195324681 seconds)
    (245/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.889730558 seconds)
    (246/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.878019854 seconds)
    (247/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.961956379 seconds)
    (248/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.644686605 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.792546691 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.300803118 seconds)
    (251/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.820619917 seconds)
    (252/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.032653102 seconds)
    (253/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.973909637 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.797477273 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.889573724 seconds)
    (256/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.886154072 seconds)
    (257/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.891055148 seconds)
    (258/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.808410157 seconds)
    (259/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.090520609 seconds)
    (260/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.82206746 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.947138343 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.821178099 seconds)
    (263/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.932170703 seconds)
    (264/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.231332059 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.747473718 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.484007096 seconds)
    (267/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.256743357 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.142593025 seconds)
    (269/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.228581812 seconds)
    (270/309) benchmarking ("sort", Float32, false)...
    done (took 5.51349357 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.874762603 seconds)
    (272/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.818153108 seconds)
    (273/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.934218265 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 3.462822809 seconds)
    (275/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.945675238 seconds)
    (276/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.794138956 seconds)
    (277/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.987535367 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.06462292 seconds)
    (279/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.717686406 seconds)
    (280/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.981992555 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.91258111 seconds)
    (282/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.243169565 seconds)
    (283/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.916868326 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.883896306 seconds)
    (285/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.970118614 seconds)
    (286/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.090420258 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.963094576 seconds)
    (288/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.892765033 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.845216759 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.542236151 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.168724932 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.749807865 seconds)
    (293/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.029448697 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.15958603 seconds)
    (295/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.819100707 seconds)
    (296/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.887243015 seconds)
    (297/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.854561152 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.822168042 seconds)
    (299/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.776689326 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.84727291 seconds)
    (301/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.899873071 seconds)
    (302/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.881258987 seconds)
    (303/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.869414431 seconds)
    (304/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.104992146 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.797324516 seconds)
    (306/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.772233179 seconds)
    (307/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.991215426 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.020836119 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.760562517 seconds)
  done (took 986.208691479 seconds)
done (took 988.215576532 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.806971349 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.796059558 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.77952309 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.800722133 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.892026591 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.807967331 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.781375891 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.774050783 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.819294844 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.82059165 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.770185084 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.796611108 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.770273943 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.766955905 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.767541989 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.78172045 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.08593176 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.805106924 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.79194361 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.784878743 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.790647499 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.771708315 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.824228289 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.796844019 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.779630051 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.777888473 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.778556733 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.794213183 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.886154316 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.778967924 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.777637731 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.781963354 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.091876692 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.805121269 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.769698686 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.793361726 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.787448058 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.785636252 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.779153129 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.807719847 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.184715267 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.81751616 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.776607054 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.777621243 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.776775076 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.779339129 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.776634171 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.78180919 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.78915406 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.788989522 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.173286446 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.832261602 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.778369337 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.776365975 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.788478656 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.775831895 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.779293377 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.792694607 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.796009538 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.793698999 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.080525073 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.813477349 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.779039282 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.794025006 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.784311254 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.213414039 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.815677326 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.78028729 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.188223377 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.825876283 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.213467176 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.827245252 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.77960509 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.791861814 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.811589491 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.095280144 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.803305337 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.778177323 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.78502424 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.774457011 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.787601348 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.790504111 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.78298709 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.775173899 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.786951279 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.802349926 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.78708098 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.779498104 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.783059223 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.796456564 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.785297131 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.786377372 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.779843455 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.769943967 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.780241068 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.776568703 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.776684957 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.771525909 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.777450467 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.78045793 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.175018357 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.825491949 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.765336537 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.765826154 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.770197847 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.780317163 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.175230628 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.813135177 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.791753652 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.815186586 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.768440267 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.071589904 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.801307223 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.784103273 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.775598672 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.773617554 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.763839975 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.070165874 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.19935045 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.826030421 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.771394075 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.766078179 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.784924412 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.771450934 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.766421961 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.087851416 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.801548502 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.78599326 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.889020458 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.779434762 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.80267009 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.765073083 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.772768679 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.797166434 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.788168734 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.801567413 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.771808758 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.786885252 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.788229207 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.768037839 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.78196601 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.780432932 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.771292589 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.777211795 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.765712444 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.798302975 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.784383772 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.783453965 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.792502516 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.891121917 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.767411106 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.071390028 seconds)
done (took 279.398684226 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.835345348 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.758647228 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.856512574 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.754374392 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.835919043 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.841427492 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.749717942 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.753075031 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.752245212 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.124876113 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.750564908 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.750752663 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.75414343 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.750123998 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.836715583 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.751669161 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.747577562 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.08770448 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.752579984 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.82250257 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.748827062 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.747646233 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.751742887 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.146227063 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.74822466 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.752395785 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.824606241 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.752947971 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.089132529 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.745122209 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.749183457 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.089468107 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.844770167 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.771261764 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.762637972 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.761029221 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.834125147 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.753796538 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.835017671 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.833144119 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.853601573 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.792174749 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.74611092 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.752741106 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.752861405 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.753686629 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.751451851 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.781150378 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.745870121 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.749277307 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.08929461 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.762427106 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.759360035 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.752898069 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.752477074 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.777221619 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.749694693 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.756356068 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.846023192 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.7543076 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.815458601 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.146335532 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.126688148 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.75472926 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.754466204 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.753286213 seconds)
  done (took 176.527803446 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.820714442 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.831771439 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.818693832 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.758417414 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.804870947 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.821860627 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.758081737 seconds)
  done (took 14.288372762 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.760345441 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.753876176 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.806712186 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.807237461 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.754743938 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.902885594 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.754470458 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.765302197 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.753411257 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.808467569 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.75609011 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.754472779 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.762441028 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.755739138 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.806387379 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.765385699 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.872577329 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.756773632 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.757157362 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.907001456 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.75330408 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.76290233 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.81842599 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.767307735 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.756218512 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.761515003 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.347985137 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.757258296 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.752973858 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.756019655 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.753899998 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.797789963 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.757542522 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.754945868 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.753312843 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.872648454 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.758070963 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.755043718 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.757922925 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.752049238 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.757664661 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.757109109 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.754933982 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.75437753 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.756277997 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.778871506 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.757479734 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.756714735 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.757028406 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.758058199 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.810061168 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.757355623 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.754528317 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.755759983 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.812565278 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.76580955 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.759418746 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.754386718 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.758694462 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.755804943 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.908694767 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.808999404 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.757287599 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.809043735 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.75896258 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.758656335 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.758617017 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.756523196 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.857348824 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.75858235 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.808803815 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.754310689 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.917852603 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.782201028 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.760660437 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.761688707 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.761522758 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.758841915 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.756838092 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.765852051 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.756309978 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.760169359 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.764326168 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.756445872 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.755029154 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.874938124 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.86787264 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.756159437 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.771963832 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.766681886 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.757279302 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.812850428 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.760936348 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.753738158 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.815059053 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.876557515 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.815394578 seconds)
  done (took 194.842270784 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.763612836 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.768248959 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.761899074 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.777060302 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.760484199 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.759899764 seconds)
  done (took 12.270951468 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.762475197 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.761663395 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.759744928 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.761040918 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.761145253 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.761454192 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.761600595 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.76253574 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.765351655 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.761623476 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.760121608 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.761565258 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.761702726 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.759386025 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.761222657 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.759611736 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.762518697 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.758063629 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.758607578 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.761840793 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.909079175 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.760518394 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.76167712 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.761696414 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.7662772 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.760216583 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.769145963 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.76097361 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.76002935 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.769218113 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.765320838 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.76218732 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.761874613 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.768975722 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.765961209 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.763328249 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.765053249 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.762844297 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.759666315 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.762492307 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.763343986 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.762512396 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.762914587 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.763911842 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.762783419 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.769614215 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.768796353 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.76937048 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.764939369 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.763928215 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.764531798 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.763382014 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.76238989 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.761680488 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.765052499 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.768518701 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.769206892 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.764476639 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.765696991 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.763835653 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.763567268 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.764282438 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.765282757 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.768135666 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.769850752 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.765240834 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.764325483 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.767857417 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.763032736 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.763059552 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.764653657 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.76002388 seconds)
  done (took 129.803300983 seconds)
done (took 529.436712762 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.874338519 seconds)
  done (took 8.556414957 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.811923383 seconds)
  done (took 8.532189567 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.305577211 seconds)
  done (took 9.992782812 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.779931493 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.782535084 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.762101127 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.760876066 seconds)
  done (took 28.791404318 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.826409859 seconds)
  done (took 8.509830287 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.782406845 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.752096682 seconds)
  done (took 15.249031131 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.774312031 seconds)
  done (took 8.466426293 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.778178708 seconds)
  done (took 8.483681437 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.762392191 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.790393485 seconds)
  done (took 15.249390008 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.741361699 seconds)
  done (took 8.424969444 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.336399708 seconds)
  done (took 11.113700324 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.773030005 seconds)
  done (took 8.557098099 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.772534628 seconds)
  done (took 8.455869468 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.845316363 seconds)
  done (took 8.52906229 seconds)
done (took 158.595076942 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.761603468 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.756007005 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.756822505 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.758601955 seconds)
  done (took 28.715631517 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.799286178 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.798472994 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.799399593 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.808392528 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.801451864 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.795888826 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.790621509 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.790909907 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.809401973 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.802655072 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.799568581 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.799751361 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.79824741 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.791247243 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.801017727 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.800187457 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.807163711 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.798261361 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.790064696 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.801991673 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.765295411 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.809854733 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.801304629 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.767510722 seconds)
  done (took 44.811107921 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.962403556 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.837828793 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.918301701 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.817262672 seconds)
  done (took 9.219660589 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.815913517 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.819410902 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.82934001 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.869655439 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.893328916 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.828940967 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.793527811 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.78874261 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.773748972 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.818900205 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.895334551 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.81481629 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.913097938 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.767321272 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.95143568 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.767721867 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.766948206 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.818878312 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.87007217 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.88444176 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.768373983 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.818213769 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.821163035 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.815914878 seconds)
  done (took 45.589467618 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.764417189 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.774094704 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.772404211 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.767701823 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.765593473 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.766286395 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.772239408 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.766363134 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.788194829 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.767850982 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.765000325 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.765026057 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.766534252 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.766564914 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.765456778 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.779487713 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.779913001 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.766972487 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.769153447 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.772006349 seconds)
  done (took 37.085581924 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.760871313 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.61584468 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.112258265 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.015820996 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.760695278 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.761615737 seconds)
  done (took 30.712845417 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.781662679 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.770177472 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.768074658 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.825291141 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.906089706 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.772187535 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.767116085 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.780709279 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.815574893 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.829232438 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.792158828 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.79593068 seconds)
  done (took 23.289782107 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.764321403 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.772119296 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.760349561 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.789738662 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.778418041 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.77318204 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.773678815 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.760257848 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.780788169 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.782719349 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.773960999 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.781586972 seconds)
  done (took 42.98170225 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852121296 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.649746891 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.820247237 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.480815169 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.299977614 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.969602813 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.28870359 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.108061398 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.765390425 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.03794115 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.731675932 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005796151 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.017417854 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.762913835 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.827213947 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.236597228 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063922643 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995389386 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787651105 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.430761106 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897087167 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.398749143 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.485850954 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.906487646 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.991620592 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.913117465 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.04172371 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.74187063 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914716078 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.816588862 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790710691 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.783571664 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057385985 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157815922 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913439523 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791904543 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.43832805 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.502055853 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.813554916 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.459227723 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.725749124 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.915182992 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794883511 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786896532 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.715870846 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.268574894 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240705523 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.789416668 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.489513863 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.786092094 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.794764933 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874998383 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.789886439 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.604003718 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.742226152 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.065366739 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.783464025 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794368925 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.354344706 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863037267 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364756966 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.838506323 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.885201917 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.459959615 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257624842 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.941109722 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.790269911 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.789255982 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.724846192 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.458732022 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909651633 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.943837229 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.807017075 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439673752 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087661186 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.839991427 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.864506196 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080661947 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.525585029 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.838354477 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018119035 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.746447006 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.726850766 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.642017723 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.725895123 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062234728 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823962144 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.450773951 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830513133 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.132567888 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.802550809 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813315417 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79943602 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.016889602 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.673952768 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793619659 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.531966496 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.078311889 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810937387 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.13394717 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728363181 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.790609316 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048504475 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.002717569 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.985763104 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.393226265 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958202352 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.79503299 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.875758482 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.671487902 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.913611219 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.066371468 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85873051 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.860535856 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929730644 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.757712381 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10456417 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824778535 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.969937876 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.790742337 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.064178703 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.1311047 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.055961415 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882640656 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.804794519 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.80209694 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.558993554 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.419790909 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.027501988 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.80237694 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.256187823 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.921793974 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.802274034 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.737287397 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.49715231 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.774935848 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.910732314 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.026795544 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.720616169 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187279674 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.737109123 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.949244033 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.91411854 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.021135509 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.44929894 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.875775017 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06126857 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26610463 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.112191263 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925479185 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820820808 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921895577 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823437835 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.199628554 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.16917425 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.806387702 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.80671875 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.537161377 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.871661213 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.812382962 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.813473558 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.60910318 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094754019 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.839087247 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.803408177 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.746487237 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.822708314 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891346431 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.813944091 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.816213053 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.335850142 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.55807843 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.820516301 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.533205046 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055742924 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81893541 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.534271339 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994822567 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.889804399 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.084384453 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875152176 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.740796215 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.510283187 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.509350052 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.806617652 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.744370556 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.808836325 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818505962 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.820251495 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.007497501 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.087157745 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857320224 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.475100544 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.919892351 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822553197 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.816711039 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.813825429 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.316783905 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.893753988 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425928456 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.933471933 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948112215 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.826288592 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.747902889 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.817565621 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.818898236 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.814343794 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.774225493 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866831857 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.536283238 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269679581 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077942979 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.466468228 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832631513 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.568111959 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.939915214 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.839709033 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.560978925 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868039095 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.917744873 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937912321 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.873081965 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.533893475 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.632159988 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.428508231 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173929194 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.185941861 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309258003 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.339623516 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.196994584 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.204722681 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10022642 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.390500381 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.924879851 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.209569301 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809914161 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946784353 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.510863003 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.220861088 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879088081 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090542525 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251349031 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.66748551 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024063064 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.076283592 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896724288 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.75570565 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.902310521 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.387583373 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019687836 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.702702935 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086423151 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202945907 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.625055694 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.974465859 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.863768945 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.580125279 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946971154 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.576950534 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.223790906 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.337760983 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.9485218 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363178864 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.87536157 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.311594527 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219349583 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.153229749 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.065892653 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802991696 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.87554202 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.874682702 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.867613213 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.855400717 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.819370871 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.157139944 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874547539 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09907189 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.106677396 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.243708282 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.775232136 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.867610763 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864206854 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165451112 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.618758959 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108143618 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.288630258 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.486802229 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885792871 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.799558273 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799769442 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.565284832 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.874448091 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.842489727 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092610035 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.976962304 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.817757652 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322334424 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191149197 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.12016584 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.877375256 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.144512191 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153069505 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.601667963 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898185646 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.967152951 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.619035424 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.577027679 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.089757878 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.102966426 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.696838035 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.101668996 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.9271375 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.846032219 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.867220839 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083959513 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.090355278 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.861655263 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117087484 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.595190209 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.876702644 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248539561 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933851348 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.867043188 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.082459319 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.963026241 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878098682 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949040452 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879359384 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.87854675 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.878740885 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915039599 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.870444391 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.996646035 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.884799374 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959558794 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.950155703 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.499737892 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.889187472 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149203225 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225043503 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.206260032 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940352472 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.867307402 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877425699 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804296967 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006311449 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.311556394 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144598533 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.001627334 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.009965142 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892790794 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.609593025 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.219919513 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190730337 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145264094 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.763378639 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.869658353 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.955133469 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.095332744 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883361898 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.082176452 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105072972 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194042542 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34108436 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.073202792 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.322811798 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14665242 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.240718046 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.871926298 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.46275503 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.884170587 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.657296931 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.917646629 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.85091284 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157733014 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882066827 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252656794 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.895861767 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.072081706 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.325251723 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.595791392 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.233584223 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.864578569 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.933954661 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152108023 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.268180014 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195438208 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950965262 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884625146 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.572929681 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007813485 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.849640628 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.138230594 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.872794675 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085338965 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.58467759 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.8839663 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151629324 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192096549 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.867937241 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.86416838 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928829138 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.88619597 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.097777202 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145424132 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.125657041 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882659342 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.881172362 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.689686988 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.14994201 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936914836 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808113457 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.873498075 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97156048 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.119089466 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892515102 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.391118946 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.577227567 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176988946 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.793505192 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894804831 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365420155 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.320284844 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205531241 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.442217205 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.117294161 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.433718822 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.79383835 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.257323115 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.88111115 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.34801446 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.257871263 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.879348045 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.452157261 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997757394 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.148805402 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202903114 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.883769328 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.609377753 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.914466864 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099628906 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.471770331 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818089952 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.876841004 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.937367529 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.877165941 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.005263305 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885604112 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.890653868 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819298318 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.719923233 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.371023163 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.877370498 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.928793998 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.605271097 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.503332876 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994620401 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033879928 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886797719 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.582244142 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.166487027 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.132481313 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.452765522 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.951472284 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.881182865 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87903831 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.803604877 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.074272957 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.073047664 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178840805 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.299771979 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.997810809 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.878449596 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.094124265 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089315232 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.853961335 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030810399 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33057905 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995735316 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.804424802 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.591544884 seconds)
  done (took 1672.59637997 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.880673261 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.895475712 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.893344831 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.935318429 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.893284652 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.896176559 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.941205153 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.971197452 seconds)
  done (took 57.108400742 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.879148651 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.087491146 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.887811348 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.876884032 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.90215333 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.878511953 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.07525744 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.892512872 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.896201733 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.889212066 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.879864207 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.888878248 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.214294474 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.906423645 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.87830599 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.226772877 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.903398822 seconds)
  done (took 74.97657324 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.894014182 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.228161679 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.901528023 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.907192153 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.834108247 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.890226185 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.895113085 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.907965419 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.885623132 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.055132218 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.218764903 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.889474999 seconds)
  done (took 90.314579926 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.897704622 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.88707859 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.886964649 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.891017375 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.884985467 seconds)
  done (took 11.261455337 seconds)
done (took 2170.360161816 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.122762198 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.106712825 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.122181179 seconds)
  done (took 6.03430405 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.037367337 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.08287408 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.203967267 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.209457595 seconds)
  done (took 10.34647816 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.18146312 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.259026133 seconds)
  done (took 6.246938551 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.22680801 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.905790575 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.307523873 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.885364901 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.884164329 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.888190397 seconds)
  done (took 22.471420525 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.892600334 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.893692955 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.890819186 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.895132998 seconds)
  done (took 9.380972323 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.870577261 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.609351634 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.870679667 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.89128807 seconds)
  done (took 21.051071635 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.641805527 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.014280051 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.634746508 seconds)
  done (took 9.098202825 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.45368097 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.805853126 seconds)
  done (took 9.068092054 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.13324568 seconds)
  done (took 3.9413721 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.921711315 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.159127328 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.413767915 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.427878088 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.505411788 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.777766742 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.217142395 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.126645433 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.350359518 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.350275751 seconds)
  done (took 25.059001199 seconds)
done (took 138.068296874 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.24081874 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.914568655 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.08645776 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.250309098 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.126527964 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.087767307 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.17437642 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.239998109 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.769442444 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.763064207 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.247807059 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.118750221 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.107282404 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.908846912 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.116740328 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.905734644 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.119696493 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.254817165 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.931800904 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.152603822 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.176678021 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.897010467 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.084793727 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.909390009 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.122957866 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.042816733 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.439248364 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.906787189 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.07435608 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.452836694 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.076406757 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.294571431 seconds)
  done (took 168.805565734 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.89245561 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.887637362 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.889822636 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.888711088 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.447448598 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.887496118 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.889324149 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.888374294 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.110567397 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.09034361 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.889141154 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.435299842 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.890538196 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.888590648 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.893599082 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.889418508 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.28822861 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.895780403 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.897056879 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.898815126 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.901409692 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.301056528 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.901179486 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.346453184 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.298201244 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.906580778 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.888190326 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.907931986 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.908418683 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.908558841 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.912753132 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.892688154 seconds)
  done (took 209.625559639 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.889356911 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.890280796 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.892497366 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.890872203 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.900583497 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.900789126 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.891183578 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.890308779 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.472338214 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.474465753 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.905922418 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.901400417 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.900477945 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.889986306 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.89946812 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.888618978 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.903576245 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.902719188 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.905496597 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.903751948 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.907471378 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.566715903 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.924115476 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.601644147 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.906580512 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.911532734 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.888926557 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.910054952 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.911827012 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.905348574 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.910915926 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.892163358 seconds)
  done (took 221.171362813 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.086561247 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.899021358 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.900754623 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.809918533 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.900846965 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.900836585 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.908461924 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.084054387 seconds)
  done (took 19.32938433 seconds)
done (took 620.751088281 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.396864158 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.241100759 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.080077388 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.92380972 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.182738288 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.953420807 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.921857824 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.984307675 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.652785885 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.989952659 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.571836142 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.941156889 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.655887683 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.947723551 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.044443696 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.977621051 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.472307393 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.553849737 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.095322529 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.995592948 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.088544831 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.852879075 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.001795518 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.675447896 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.681076014 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.907974935 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.088184523 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.469581227 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.929756057 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.081875208 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.662202474 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.304639726 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.936136485 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.917485395 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.977891395 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.956699658 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.268454531 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.933474612 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.043953598 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.665731457 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.006290914 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.530290653 seconds)
  done (took 104.37898832 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.892286115 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.890728503 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.888901668 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.888955338 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.891441805 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.890376547 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.890256988 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.887291063 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.892029682 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.888998546 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.889836021 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.889325726 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.8887831 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.893055382 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.888997896 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.888959968 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.890566522 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.893697607 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.889360657 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.887462297 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.888419079 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.888027723 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.906291219 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.889278455 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.890953217 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.891132256 seconds)
  done (took 50.981708604 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.904300438 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.052787525 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.139975886 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.92292112 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.904247716 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.908379193 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.923335693 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.90966206 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.906005109 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.906363246 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.995449773 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.909644768 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.922096849 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.142531245 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.920087549 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.904841073 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.903802474 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.904929829 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.062033079 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.918816872 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.923276731 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.907714237 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.925025297 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.917054786 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.905659239 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.906853987 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.908931015 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.342437126 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.913976691 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.998071933 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.95063666 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.925098934 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.296399583 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.153168539 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.96164613 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.912021821 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.905676745 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.001274523 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.910461067 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.906602469 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.923524338 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.911655223 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.143424954 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.396699725 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.919538643 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.905652425 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.353865389 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.012161596 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.945692551 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.917004929 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.147535614 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.925011965 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.908591456 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.907885336 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.94372338 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.912614836 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.908469796 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.202036939 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.918337346 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.924525464 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.911691918 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.906857632 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.068569886 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.914980762 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.056786054 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.916698322 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.916418552 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.907384489 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.147386477 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.925088743 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.398073122 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.920719058 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.908980771 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.000174473 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.061236158 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.3809211 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.921083025 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.070939714 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.320037788 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.93224842 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.915568852 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.330631893 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.937069966 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.918030232 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.911211937 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.910989892 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.907288239 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.952368849 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.92242825 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.331004736 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.411731063 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.218870308 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.935479241 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.925191806 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.910510381 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.203377796 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.91873725 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.909639914 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.13791591 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.409023876 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.920994197 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.917188217 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.389308393 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.922158537 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.929711794 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.917437375 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.150522882 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.923320267 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.953112221 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.909262728 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.916247862 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.913740062 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.927918137 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.920063808 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.912291471 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.38055148 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.021956579 seconds)
  done (took 236.113978091 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.904178233 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.904965493 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.904776281 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.903653424 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.902149139 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.90961366 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.903966653 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.901379688 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.909229005 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.903038414 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.901147433 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.902321559 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.905039452 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.908106122 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.003770447 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.909900382 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.511146332 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.904110258 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.903947661 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.900716688 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.634724417 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.91198307 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.905228056 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.908884558 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.904612312 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.904118473 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.913042021 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.995703068 seconds)
  done (took 168.703564881 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.911342361 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.02643956 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.928157464 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.940333748 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.916281819 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.909792336 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.934894572 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.926113828 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.917183188 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.910876822 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.908609168 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.976567649 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.925050261 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.009649691 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.940232621 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.937650559 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.015178549 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.916161878 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.908687331 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.910337173 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.942393119 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.907865587 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.972161848 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.041790485 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.928268101 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.032440961 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.915818418 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.911645682 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.912282052 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.035033122 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.925079093 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.97437407 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.941958147 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.927073116 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.034972759 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.026104295 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.014545472 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.938952613 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.916845989 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.912021427 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.910303196 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.900824854 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.033278904 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.92954918 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.914172975 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.02279652 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.9294989 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.915122907 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.921226232 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.910348832 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.925649072 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.930346977 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.98217148 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.047822999 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.944101453 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.934315573 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.936238418 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.190252669 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.922380317 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.012885367 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.902445112 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.031526253 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.930815835 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.899935052 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.91365638 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.917257525 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.94085696 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.944606436 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.018195858 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.919108832 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.013963893 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.945634496 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.916306378 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.912433957 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.915655802 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.031321482 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.027301785 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.946560385 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.947837705 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.940553752 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.907513231 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.913018679 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.89996661 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.927967581 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.916003089 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.031461136 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.029588669 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.918022518 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.915328347 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.916050993 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.914721133 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.93747409 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.038463953 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.947794615 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.004560668 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.9794927 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.98951216 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.930390251 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.924681708 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.917409969 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.978153243 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.931044379 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.924831772 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.236547836 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.986218711 seconds)
  done (took 207.0559587 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.367883671 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.966319119 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.970618679 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.229181107 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.364748887 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.709213575 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.964074402 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.963811887 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.986482646 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.15564957 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.025184953 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.983287784 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.950119276 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.936520804 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.959590317 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.982611825 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.976637232 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.27161704 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.084696174 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.061461286 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.945930756 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.271299316 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.287143787 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.349695577 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.998922181 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.33007145 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.645275203 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.103739995 seconds)
  done (took 62.67826227 seconds)
done (took 831.730250349 seconds)
SAVING RESULT...
DONE!
